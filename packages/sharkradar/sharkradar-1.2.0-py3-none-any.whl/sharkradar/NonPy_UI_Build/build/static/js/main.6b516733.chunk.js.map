{"version":3,"sources":["Theme.js","Components/Header/index.js","Components/Header/style.js","Components/Footer/index.js","Components/Footer/style.js","Components/TabContent/index.js","Components/TabContent/style.js","Components/TableDiscoveryLogs/index.js","Components/TableDiscoveryLogs/style.js","Components/TableServiceLogs/index.js","Components/TableServiceLogs/style.js","Components/CardsRealTime/index.js","Components/CardsRealTime/style.js","Components/Panel/index.js","Components/Panel/style.js","Components/Dashboard/index.js","Components/Dashboard/style.js","serviceWorker.js","index.js","App.js"],"names":["MainTheme","colorPrimary","colorSecondary","colorTertiary","colorBackground","colorGreen","withStyles","theme","body","background","position","top","left","width","headerRow","display","justifyContent","padding","brandName","color","fontSize","fontWeight","documentation","border","borderColor","borderWidth","borderRadius","children","classes","className","href","bottom","contentMessage","textAlign","contentVersion","hyperlink","TabContent","props","handleChange","setState","switch","state","timestamp","Date","toUTCString","data","downloadData","updateTimeStamp","bind","downloadFullData","this","_this_","t","Axios","get","dataURL","then","response","catch","error","console","log","alert","limit","prompt","setInterval","Fragment","statusRow","timeStamp","boldtext","download","downloadIcon","onClick","filename","separator","onChange","checked","React","cloneElement","rowdata","Component","marginBottom","marginTop","paddingLeft","paddingRight","cursor","TableDiscoveryLogs","Paper","rows","columns","name","title","defaultCurrentPage","pageSize","defaultFilters","defaultColumnWidths","columnName","nextProps","TableServiceLogs","CardsRealTime","Card","Group","map","index","Content","extra","header","hostaddr","row","column","dataRow","dataKey","dataValue","paddingBottom","flex","fontStyle","paddinTop","margin","tabTitle","textTransform","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b516733.chunk.js","sourcesContent":["export const MainTheme = {\n  colorPrimary : '#eb7070',\n  colorSecondary : '#222831',\n  colorTertiary : '#393e46',\n  colorBackground : '#eeeeee',\n  colorGreen : 'green'\n}\n","import React from 'react';\nimport withStyles from 'react-jss';\nimport { IoMdBookmarks } from 'react-icons/io';\nimport { style } from './style';\n\nconst Header = ({children, classes, ...props}) => {\n  return (\n    <div className={classes.body}>\n      <div className={classes.headerRow}>\n        <span className={classes.brandName}>Sharkradar <small><em>[Service Registry and Discovery]</em></small> Dashboard </span>\n        <span className={classes.documentation}><a href=\"https://bmonikraj.github.io/sharkradar\">Documentation <IoMdBookmarks/></a></span>\n      </div>\n    </div>\n  );\n}\n\nexport default withStyles(style)(Header);\n","import {createUseStyles} from 'react-jss';\n\nexport const style = theme => ({\n\n  body : {\n    background : theme.colorTertiary,\n    position : 'relative',\n    top : '0px',\n    left : '0px',\n    width : '100%',\n  },\n\n  headerRow : {\n    display : 'flex',\n    justifyContent : 'space-between',\n    padding : '20px'\n  },\n\n  brandName : {\n    color : theme.colorPrimary,\n    fontSize : '24px',\n    fontWeight : 'bold'\n  },\n\n  documentation : {\n    color : theme.colorPrimary,\n    fontSize : '24px',\n    fontWeight : 'bold',\n    border : 'solid',\n    borderColor : theme.colorPrimary,\n    borderWidth : '1px',\n    borderRadius : '2px',\n    padding : '5px',\n    '& a': {\n       color: theme.colorPrimary,\n    }\n  },\n})\n","import React from 'react';\nimport withStyles from 'react-jss';\nimport { IoLogoGithub } from 'react-icons/io';\nimport { style } from './style';\n\nconst Footer = ({children, classes, ...props}) => {\n  return (\n    <div className={classes.body}>\n      <p className={classes.contentMessage}><em>\"Sharkradar\"</em> is an Open Source project hosted on <a className={classes.hyperlink} href=\"https://bmonikraj.github.com/sharkradar\">Github <IoLogoGithub/></a> <span className={classes.contentVersion}>[Current Version : v1.1.3]</span></p>\n    </div>\n  );\n}\n\nexport default withStyles(style)(Footer);\n","import {createUseStyles} from 'react-jss';\n\nexport const style = theme => ({\n  \n  body : {\n    background : theme.colorTertiary,\n    position : 'fixed',\n    bottom : '0px',\n    left : '0px',\n    width : '100%'\n  },\n\n  contentMessage : {\n    color : theme.colorPrimary,\n    fontSize : '16px',\n    fontWeight : 'bold',\n    textAlign : 'center'\n  },\n\n  contentVersion : {\n    color : theme.colorPrimary,\n    fontSize : '14px',\n    fontWeight : 'normal',\n    textAlign : 'center'\n  },\n\n  hyperlink : {\n    color : theme.colorPrimary\n  }\n})\n","import React from 'react';\nimport withStyles from 'react-jss';\nimport \"react-tabs/style/react-tabs.css\";\nimport Switch from \"react-switch\";\nimport { GoDesktopDownload, GoCloudDownload } from 'react-icons/go';\nimport { style } from './style';\nimport Axios from 'axios';\nimport { CSVLink } from \"react-csv\";\n\nclass TabContent extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      switch : true,\n      timestamp : new Date().toUTCString(),\n      data : [],\n      downloadData : []\n    };\n    this.updateTimeStamp = this.updateTimeStamp.bind(this);\n    this.downloadFullData = this.downloadFullData.bind(this)\n  }\n\n  handleChange = () => {\n    this.setState({switch : !this.state.switch})\n  }\n\n  updateTimeStamp () {\n    if(this.state.switch){\n      var _this_ = this;\n      var t = new Date().toUTCString()\n      this.setState({timestamp : t})\n      var limit = '50';\n      Axios.get(this.props.dataURL+\"/\"+limit)\n      .then(function(response){\n        _this_.setState({data : response.data})\n      })\n      .catch(function(error){\n        console.log(error)\n        alert(\"Error while fetching data 1\")\n      })\n    }\n  }\n\n  downloadFullData() {\n    var _this_ = this;\n    var limit = prompt(\"How many latest records you want to fetch ? \", \"250\");\n    if(limit!=null){\n      Axios.get(this.props.dataURL+\"/\"+limit)\n      .then(function(response){\n        _this_.setState({downloadData : response.data})\n      })\n      .catch(function(error){\n        alert(\"Error while fetching data\")\n      })\n    }\n  }\n\n  componentDidMount(){\n    setInterval(this.updateTimeStamp, 5000)\n  }\n\n  render(){\n    return(\n      <React.Fragment>\n        <div className={this.props.classes.body}>\n          <div className={this.props.classes.statusRow}>\n            <div className={this.props.classes.timeStamp}>\n              Data as of <span className={this.props.classes.boldtext}> {this.state.timestamp} </span>\n            </div>\n            <div className={this.props.classes.download}>\n              <div className={this.props.classes.downloadIcon}>\n                { this.props.downloadFullData && <GoCloudDownload onClick={this.downloadFullData}/>}\n              </div>\n              <div className={this.props.classes.downloadIcon}>\n              { this.props.downloadFullData && <CSVLink filename={\"sharkaradar-\"+this.state.timestamp+\"-data.csv\"} data={this.state.downloadData} separator={\",\"}>\n                <GoDesktopDownload/>\n              </CSVLink>}\n              </div>.\n            </div>\n            <div className={this.props.classes.switch}>\n             Fetch data from Server every <span className={this.props.classes.boldtext}>5 seconds</span> : <Switch onChange={this.handleChange} checked={this.state.switch} />\n            </div>\n          </div>\n          <div className={this.props.classes.data}>\n            {React.cloneElement(this.props.children, {rowdata : this.state.data})}\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withStyles(style)(TabContent);\n","import {createUseStyles} from 'react-jss';\n\nexport const style = theme => ({\n  body : {\n      background : theme.colorBackground,\n      padding : '2px'\n  },\n  statusRow : {\n    display : 'flex',\n    justifyContent : 'space-between',\n    marginBottom : '20px',\n    marginTop : '10px'\n  },\n  download : {\n    display : 'flex',\n    justifyContent : 'space-between',\n  },\n  downloadIcon : {\n    paddingLeft : '5px',\n    paddingRight : '5px',\n    cursor : 'pointer',\n    color : theme.colorPrimary,\n    '& a' : {\n      color : theme.colorPrimary\n    }\n  },\n  timeStamp : {\n    color : theme.colorTertiary\n  },\n  switch : {\n    color : theme.colorTertiary,\n    marginTop : '-15px'\n  },\n  boldtext : {\n    fontWeight : 'bold'\n  },\n  data : {\n\n  }\n})\n","import React from 'react';\nimport withStyles from 'react-jss';\nimport {\n  PagingState,\n  IntegratedPaging,\n  FilteringState,\n  IntegratedFiltering,\n} from '@devexpress/dx-react-grid';\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n  PagingPanel,\n   TableFilterRow,\n   TableColumnResizing,\n} from '@devexpress/dx-react-grid-material-ui';\nimport Paper from '@material-ui/core/Paper';\nimport { style } from './style'\n\nclass TableDiscoveryLogs extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      rowdata : this.props.rowdata,\n\n    }\n  }\n\n  render(){\n\n    const columns = [\n      {name : 'service_name', title: 'Name'},\n      {name : 'ip', title: 'IP Address'},\n      {name: 'port', title: 'Port'},\n      {name: 'timestamp', title: 'Timestamp'},\n      {name: 'status', title: 'Status'},\n      {name: 'retry_id', title: 'Retry ID'}\n    ]\n\n    const defaultColumnWidths = [\n      {columnName : 'service_name', width: 200},\n      {columnName : 'ip', width: 200},\n      {columnName: 'port', width: 200},\n      {columnName: 'status', width: 200},\n      {columnName: 'timestamp', width: 200},\n      {columnName: 'retry_id', width: 200},\n    ]\n\n    return(\n      <React.Fragment>\n        <div>\n        <Paper>\n          <Grid\n            rows={this.state.rowdata}\n            columns={columns}\n          >\n            <PagingState\n              defaultCurrentPage={0}\n              pageSize={5}\n            />\n            <IntegratedPaging />\n            <FilteringState defaultFilters={[]} />\n            <IntegratedFiltering />\n            <Table />\n            <TableColumnResizing defaultColumnWidths={defaultColumnWidths}/>\n            <TableHeaderRow />\n            <PagingPanel />\n            <TableFilterRow />\n          </Grid>\n        </Paper>\n        </div>\n      </React.Fragment>\n    )\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(this.props.rowdata !== nextProps.rowdata){\n        this.setState({rowdata : nextProps.rowdata})\n    }\n  }\n}\n\nexport default withStyles(style)(TableDiscoveryLogs);\n","import {createUseStyles} from 'react-jss';\n\nexport const style = theme => ({\n\n})\n","import React from 'react';\nimport withStyles from 'react-jss';\nimport {\n  PagingState,\n  IntegratedPaging,\n  FilteringState,\n  IntegratedFiltering,\n} from '@devexpress/dx-react-grid';\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n  PagingPanel,\n   TableFilterRow,\n   TableColumnResizing,\n} from '@devexpress/dx-react-grid-material-ui';\nimport Paper from '@material-ui/core/Paper';\nimport { style } from './style'\n\nclass TableServiceLogs extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      rowdata : this.props.rowdata,\n    }\n  }\n\n  render(){\n\n    const columns = [\n      {name : 'service_name', title: 'Name'},\n      {name : 'ip', title: 'IP Address'},\n      {name: 'port', title: 'Port'},\n      {name: 'mem_usage', title: 'Mem Usage (%)'},\n      {name: 'cpu_usage', title: 'CPU Usage (%)'},\n      {name: 'nw_tput_bw_ratio', title: 'N/W TP B/W Ratio (%)'},\n      {name: 'req_active_ratio', title: 'Active Request Ratio (%)'},\n      {name: 'success_rate', title: 'Success Rate (%)'},\n      {name: 'timestamp', title: 'Timestamp'},\n      {name: 'health_interval', title: 'Health Interval (s)'},\n    ]\n\n    const defaultColumnWidths = [\n      {columnName : 'service_name', width: 100},\n      {columnName : 'ip', width: 100},\n      {columnName: 'port', width: 100},\n      {columnName: 'mem_usage', width: 100},\n      {columnName: 'cpu_usage', width: 100},\n      {columnName: 'nw_tput_bw_ratio', width: 100},\n      {columnName: 'req_active_ratio', width: 100},\n      {columnName: 'success_rate', width: 100},\n      {columnName: 'timestamp', width: 100},\n      {columnName: 'health_interval', width: 100},\n    ]\n\n    return(\n      <React.Fragment>\n        <div>\n        <Paper>\n            <Grid\n              rows={this.state.rowdata}\n              columns={columns}\n            >\n            <PagingState\n              defaultCurrentPage={0}\n              pageSize={5}\n            />\n            <IntegratedPaging />\n            <FilteringState defaultFilters={[]} />\n            <IntegratedFiltering />\n            <Table />\n            <TableColumnResizing defaultColumnWidths={defaultColumnWidths}/>\n            <TableHeaderRow />\n            <PagingPanel />\n            <TableFilterRow />\n          </Grid>\n        </Paper>\n        </div>\n      </React.Fragment>\n    )\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(this.props.rowdata !== nextProps.rowdata){\n        this.setState({rowdata : nextProps.rowdata})\n    }\n  }\n}\n\nexport default withStyles(style)(TableServiceLogs);\n","import {createUseStyles} from 'react-jss';\n\nexport const style = theme => ({\n\n})\n","import React from 'react';\nimport withStyles from 'react-jss';\nimport { Card } from 'semantic-ui-react'\nimport { style } from './style'\nimport 'semantic-ui-css/semantic.min.css'\n\nclass CardsRealTime extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      rowdata : this.props.rowdata,\n    }\n  }\n\n  render(){\n\n    return(\n      <React.Fragment>\n        <div className={this.props.classes.body}>\n        <Card.Group>\n        {\n          this.state.rowdata.map((data, index) => {\n            return(\n              <Card>\n                <Card.Content extra className={this.props.classes.header}>\n                  {data['service_name']}\n                </Card.Content>\n                <Card.Content extra className={this.props.classes.hostaddr}>\n                  {data['ip']+':'+data['port']}\n                </Card.Content>\n                <Card.Content extra>\n                  <div className={this.props.classes.row}>\n                    <div className={this.props.classes.column}>\n                      <p className={this.props.classes.dataRow}><span className={this.props.classes.dataKey}>Mem Usage (%) -</span> <span className={this.props.classes.dataValue}>{data['mem_usage']}</span></p>\n                      <p className={this.props.classes.dataRow}><span className={this.props.classes.dataKey}>CPU Usage (%) -</span> <span className={this.props.classes.dataValue}>{data['cpu_usage']}</span></p>\n                      <p className={this.props.classes.dataRow}><span className={this.props.classes.dataKey}>NW TP BW ratio (%) -</span> <span className={this.props.classes.dataValue}>{data['nw_tput_bw_ratio']}</span></p>\n                    </div>\n                    <div className={this.props.classes.column}>\n                      <p className={this.props.classes.dataRow}><span className={this.props.classes.dataKey}>Active Request Ratio (%) -</span> <span className={this.props.classes.dataValue}>{data['req_active_ratio']}</span></p>\n                      <p className={this.props.classes.dataRow}><span className={this.props.classes.dataKey}>Success Rate (%) -</span> <span className={this.props.classes.dataValue}>{data['success_rate']}</span></p>\n                      <p className={this.props.classes.dataRow}><span className={this.props.classes.dataKey}>Health Interval (s) -</span> <span className={this.props.classes.dataValue}>{data['health_interval']}</span></p>\n                    </div>\n                  </div>\n                </Card.Content>\n              </Card>\n            )\n          })\n        }\n        </Card.Group>\n        </div>\n      </React.Fragment>\n    )\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(this.props.rowdata !== nextProps.rowdata){\n        this.setState({rowdata : nextProps.rowdata})\n    }\n  }\n}\n\nexport default withStyles(style)(CardsRealTime);\n","import {createUseStyles} from 'react-jss';\n\nexport const style = theme => ({\n\tbody : {\n\t  paddingBottom : '30px'\n\t},\n  row : {\n    display : 'flex'\n  },\n  column : {\n    flex : '50%'\n  },\n  hostaddr : {\n  \tcolor : theme.colorPrimary + '!important',\n  \tfontWeight : 'bold'\n  },\n  header : {\n  \tcolor : theme.colorGreen + '!important',\n  \tfontWeight : 'bold',\n  \tfontSize : '18px' + '!important'\n  },\n  dataKey : {\n  \tfontStyle : 'italic' + '!important',\n  \tcolor : theme.colorTertiary + '!important',\n  },\n  dataValue : {\n  \tfontWeight : 'bold' + '!important',\n  \tcolor : theme.colorPrimary + '!important'\n  },\n  dataRow : {\n  \tpaddingBottom : '1px',\n  \tpaddinTop : '1px',\n  \tfontSize : '10px' + '!important'\n  }\n})\n","import React from 'react';\nimport withStyles from 'react-jss';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\nimport TabContent from '../TabContent/index';\nimport { style } from './style';\nimport TableDiscoveryLogs from '../TableDiscoveryLogs/index';\nimport TableServiceLogs from '../TableServiceLogs/index';\nimport CardsRealTime from '../CardsRealTime/index';\n\nconst Panel = ({children, classes, ...props}) => {\n  return (\n    <div className={classes.body}>\n      <Tabs>\n        <TabList>\n            <Tab><span className={classes.tabTitle}>Real Time Monitor</span></Tab>\n            <Tab><span className={classes.tabTitle}>Service Monitor Logs</span></Tab>\n            <Tab><span className={classes.tabTitle}>Discovery Monitor Logs</span></Tab>\n        </TabList>\n\n        <TabPanel>\n            <TabContent children={<CardsRealTime/>} downloadFullData={false} dataURL={\"/monitor-real-time/current\"}/>\n        </TabPanel>\n        <TabPanel>\n            <TabContent children={<TableServiceLogs/>} downloadFullData={true} dataURL={\"/monitor-real-time/service\"}/>\n        </TabPanel>\n        <TabPanel>\n            <TabContent children={<TableDiscoveryLogs/>} downloadFullData={true} dataURL={\"/monitor-real-time/discovery\"}/>\n        </TabPanel>\n    </Tabs>\n    </div>\n  );\n}\n\nexport default withStyles(style)(Panel);\n","import {createUseStyles} from 'react-jss';\n\nexport const style = theme => ({\n  body : {\n    background : theme.colorBackground,\n    margin : '5px'\n  },\n  tabTitle : {\n    color : theme.colorSecondary,\n    textTransform : 'uppercase',\n    fontStyle : 'oblique'\n  }\n})\n","import React from 'react';\nimport withStyles from 'react-jss';\nimport { style } from './style';\nimport Header from '../Header/index';\nimport Footer from '../Footer/index';\nimport Panel from '../Panel/index';\n\nconst Dashboard = ({children, classes, ...props}) => {\n  return (\n    <div className={classes.background}>\n      <Header/>\n      <Panel/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default withStyles(style)(Dashboard);\n","import {createUseStyles} from 'react-jss';\n\nexport const style = theme => ({\n  background : {\n    background : theme.colorBackground,\n  }\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { ThemeProvider } from 'react-jss';\nimport { MainTheme } from './Theme.js';\nimport Dashboard from './Components/Dashboard/index';\n\nexport const App = () => {\n  return (\n      <ThemeProvider theme={MainTheme}>\n        <Dashboard/>\n      </ThemeProvider>\n    );\n}\n"],"sourceRoot":""}