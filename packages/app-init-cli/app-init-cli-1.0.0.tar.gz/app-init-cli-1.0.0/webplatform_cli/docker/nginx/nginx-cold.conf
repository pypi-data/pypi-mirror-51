user nginx;
worker_processes auto;
error_log /home/container/data/error.log notice;

pid /run/nginx.pid;

events {
   worker_connections 1024;
}

http {
   types_hash_bucket_size 128;

   log_format  main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

   access_log  /home/container/data/access.log  main;

   server {
      gzip on;
      gzip_vary on;
      gzip_proxied expired no-cache no-store private auth;
      gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
      proxy_read_timeout 240s;
      listen 8000;
      server_name webplatform-nginx;
      # listen 8000 ssl;


      # ssl_certificate      /etc/ssl/certs/server.crt;
      # ssl_certificate_key  /etc/ssl/certs/server.key;

      # ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
      # ssl_ciphers         HIGH:!aNULL:!MD5;

      # include /etc/nginx/default.d/*.conf;

      # root /home/cee-tool/frontend/;
      #index index.html index.htm;

      # location ~* \.(?:manifest|appcache|html?|xml|json)$ {
         # expires -1;
         # access_log logs/static.log; # I don't usually include a static log
      # }

      # location ~* \.(?:css)$ {
      #    try_files $uri =404;
      #    expires 1y;
      #    access_log off;
      #    add_header Content-Type "text/css";
      # }

      # Any route containing a file extension (e.g. /devicesfile.js)
      # location ~ ^.+\..+$ {
      #   try_files $uri =404;
      # }

      # Any route that doesn't have a file extension (e.g. /devices)
      #location / {
      #  gzip_static on;
      #  include  /etc/nginx/mime.types;
      #  try_files $uri $uri/ /index.html;
      #}

      # location / {
      #
      #    try_files $uri $uri/ /index.html;
        #  if (!-e $request_filename){
        #    rewrite ^(.*)$ /index.html break;
        #  }
      # }

      #location /api {
      #   proxy_pass http://api:8000/api;
      #   proxy_redirect     off;
      #   proxy_set_header   Host                 $host;
      #   proxy_set_header   X-Real-IP            $remote_addr;
      #   proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
      #   proxy_set_header   X-Forwarded-Proto    $scheme;
      #   proxy_set_header   Access-Control-Allow-Origin *;
      #}

      location /auth {
         proxy_pass http://auth:8001/auth;
         proxy_redirect     off;
         proxy_set_header   Host                 $host;
         proxy_set_header   X-Real-IP            $remote_addr;
         proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
         proxy_set_header   X-Forwarded-Proto    $scheme;
         proxy_set_header   X-Nginx-Port         $server_port;
         proxy_set_header   Access-Control-Allow-Origin *;
      }

      #location /upload {
      #  proxy_pass         http://flask:8080/upload;
      #  proxy_redirect     off;
      #  proxy_set_header   Host                 $host;
      #  proxy_set_header   X-Real-IP            $remote_addr;
      #  proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
      #  proxy_set_header   X-Forwarded-Proto    $scheme;
      #  proxy_set_header   X-Nginx-Port         $server_port;
      #  proxy_set_header   Access-Control-Allow-Origin *;

      #}

      #location /metadata {
      #   proxy_pass http://flask:8080/metadata;
      #   proxy_redirect     off;
      #   proxy_set_header   Host                 $host;
      #   proxy_set_header   X-Real-IP            $remote_addr;
      #   proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
      #  proxy_set_header   X-Forwarded-Proto    $scheme;
      #   proxy_set_header   X-Nginx-Port         $server_port;
      #   proxy_set_header   Access-Control-Allow-Origin *;
      #}

      # location /download {
      #   proxy_pass http://flask:8080/download;
      #   proxy_redirect     off;
      #   proxy_set_header   Host                 $host;
      #   proxy_set_header   X-Real-IP            $remote_addr;
      #   proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
      #   proxy_set_header   X-Forwarded-Proto    $scheme;
      #   proxy_set_header   X-Nginx-Port         $server_port;
      #   proxy_set_header   Access-Control-Allow-Origin *;
      #}

      # location /gogoyubari {
        # proxy_redirect     off;
        #  proxy_set_header   Host                 $host;
        #  proxy_set_header   X-Real-IP            $remote_addr;
        #  proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        #  proxy_set_header   X-Forwarded-Proto    $scheme;
        #  proxy_set_header   X-Nginx-Port         $server_port;
      #  proxy_set_header   Access-Control-Allow-Origin *;
      #  proxy_set_header X-Real-IP $remote_addr;
      #  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      #  proxy_set_header X-NginX-Proxy true;
      #  proxy_pass http://gogoyubari.hq.gsslab.rdu.redhat.com/;
      #  proxy_ssl_session_reuse off;
      #  proxy_set_header Host $http_host;
      #  proxy_redirect off;
      #}
   }
}
