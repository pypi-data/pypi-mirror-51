from openhltspirent.base import Base
class Networks(Base):
	"""A list of networks.
	Each networks object is a container for one and only one of the network types.

	This class supports iterators and encapsulates 0..n instances of the openhltest:sessions/config/device-groups/simulated-networks/networks resource.
	"""
	YANG_NAME = 'networks'
	YANG_KEYWORD = 'list'
	YANG_KEY = 'name'
	YANG_PROPERTY_MAP = {"FlowLink": "flow-link", "NetworkType": "network-type", "Name": "name", "NetworkCountPerPort": "network-count-per-port"}
	YANG_ACTIONS = []

	def __init__(self, parent):
		super(Networks, self).__init__(parent)

	@property
	def Bgpv4RouteRange(self):
		"""TBD

		Get an instance of the Bgpv4RouteRange class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.bgpv4routerange.bgpv4routerange.Bgpv4RouteRange)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.bgpv4routerange.bgpv4routerange import Bgpv4RouteRange
		return Bgpv4RouteRange(self)._read()

	@property
	def Bgpv6RouteRange(self):
		"""TBD

		Get an instance of the Bgpv6RouteRange class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.bgpv6routerange.bgpv6routerange.Bgpv6RouteRange)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.bgpv6routerange.bgpv6routerange import Bgpv6RouteRange
		return Bgpv6RouteRange(self)._read()

	@property
	def Ospfv2RouteRange(self):
		"""OSPFV2 Router LSA

		Get an instance of the Ospfv2RouteRange class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2routerange.ospfv2routerange.Ospfv2RouteRange)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2routerange.ospfv2routerange import Ospfv2RouteRange
		return Ospfv2RouteRange(self)._read()

	@property
	def Ospfv2SummaryRange(self):
		"""OSPFV2 Summary LSA (Type-3), generated by area border routers (ABR)
		and sent to neighboring areas, advertise area routing information.

		Get an instance of the Ospfv2SummaryRange class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.ospfv2summaryrange.Ospfv2SummaryRange)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.ospfv2summaryrange import Ospfv2SummaryRange
		return Ospfv2SummaryRange(self)._read()

	@property
	def Ospfv2ExternalRange(self):
		"""OSPFV2 external LSA (Type-5), External LSAs (OSPF Type 5 LSAs), originated by
		Autonomous System Boundary Routers (ASBRs), advertise routes to destinations
		external to the AS, including default routes for an Autonomous System.
		Type 5 LSAs are flooded into all non-stub areas of an Autonomous System.

		Get an instance of the Ospfv2ExternalRange class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2externalrange.ospfv2externalrange.Ospfv2ExternalRange)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2externalrange.ospfv2externalrange import Ospfv2ExternalRange
		return Ospfv2ExternalRange(self)._read()

	@property
	def Ospfv2NssaRange(self):
		"""OSPFV2 NSSA LSA (Type-7), NNot So Stubby Area (NSSA) LSAs (OSPF Type 7), are originated by ASBRs within NSSAs,
		but are flooded only within the NSSAs, by default..

		Get an instance of the Ospfv2NssaRange class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2nssarange.ospfv2nssarange.Ospfv2NssaRange)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2nssarange.ospfv2nssarange import Ospfv2NssaRange
		return Ospfv2NssaRange(self)._read()

	@property
	def Ospfv3RouteRange(self):
		"""TBD

		Get an instance of the Ospfv3RouteRange class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv3routerange.ospfv3routerange.Ospfv3RouteRange)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv3routerange.ospfv3routerange import Ospfv3RouteRange
		return Ospfv3RouteRange(self)._read()

	@property
	def Ospfv3InterAreaPrefixRange(self):
		"""TBD

		Get an instance of the Ospfv3InterAreaPrefixRange class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv3interareaprefixrange.ospfv3interareaprefixrange.Ospfv3InterAreaPrefixRange)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv3interareaprefixrange.ospfv3interareaprefixrange import Ospfv3InterAreaPrefixRange
		return Ospfv3InterAreaPrefixRange(self)._read()

	@property
	def Ospfv3IntraAreaPrefixRange(self):
		"""TBD

		Get an instance of the Ospfv3IntraAreaPrefixRange class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv3intraareaprefixrange.ospfv3intraareaprefixrange.Ospfv3IntraAreaPrefixRange)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv3intraareaprefixrange.ospfv3intraareaprefixrange import Ospfv3IntraAreaPrefixRange
		return Ospfv3IntraAreaPrefixRange(self)._read()

	@property
	def Ospfv3AsExternalPrefixRange(self):
		"""TBD

		Get an instance of the Ospfv3AsExternalPrefixRange class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv3asexternalprefixrange.ospfv3asexternalprefixrange.Ospfv3AsExternalPrefixRange)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv3asexternalprefixrange.ospfv3asexternalprefixrange import Ospfv3AsExternalPrefixRange
		return Ospfv3AsExternalPrefixRange(self)._read()

	@property
	def IsisRouteRange(self):
		"""TBD

		Get an instance of the IsisRouteRange class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.isisrouterange.isisrouterange.IsisRouteRange)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.isisrouterange.isisrouterange import IsisRouteRange
		return IsisRouteRange(self)._read()

	@property
	def Name(self):
		"""The unique name of the networks object.

		Getter Returns:
			string

		Setter Allows:
			string

		Setter Raises:
			ValueError
			InvalidValueError
		"""
		return self._get_value('name')

	@property
	def NetworkCountPerPort(self):
		"""The number of network devices that will be created on each
		abstract test port specified in the port-names list.

		Getter Returns:
			uint32

		Setter Allows:
			uint32

		Setter Raises:
			ValueError
			InvalidValueError
		"""
		return self._get_value('network-count-per-port')

	@property
	def FlowLink(self):
		"""Identifies which object in another container is the next hop from this networks object.
		The name cannot be one of the names in this networks container.
		An empty link indicates no flow link

		Getter Returns:
			union[leafref]

		Setter Allows:
			union[leafref]

		Setter Raises:
			ValueError
			InvalidValueError
		"""
		return self._get_value('flow-link')

	@property
	def NetworkType(self):
		"""Determines which detailed network container is active.

		Getter Returns:
			BGPV4_ROUTE_RANGE | BGPV6_ROUTE_RANGE | OSPFV2_ROUTE_RANGE | OSPFV2_SUMMARY_RANGE | OSPFV2_EXTERNAL_RANGE | OSPFV2_NSSA_RANGE | OSPFV3_ROUTE_RANGE | OSPFV3_INTER_AREA_PREFIX_RANGE | OSPFV3_INTRA_AREA_PREFIX_RANGE | OSPFV3_AS_EXTERNAL_PREFIX_RANGE | ISIS_ROUTE_RANGE

		Setter Allows:
			BGPV4_ROUTE_RANGE | BGPV6_ROUTE_RANGE | OSPFV2_ROUTE_RANGE | OSPFV2_SUMMARY_RANGE | OSPFV2_EXTERNAL_RANGE | OSPFV2_NSSA_RANGE | OSPFV3_ROUTE_RANGE | OSPFV3_INTER_AREA_PREFIX_RANGE | OSPFV3_INTRA_AREA_PREFIX_RANGE | OSPFV3_AS_EXTERNAL_PREFIX_RANGE | ISIS_ROUTE_RANGE

		Setter Raises:
			ValueError
			InvalidValueError
		"""
		return self._get_value('network-type')

	def read(self, Name=None):
		"""Get `networks` resource(s). Returns all `networks` resources from the server if no input parameters are specified.

		"""
		return self._read(Name)

	def create(self, Name, NetworkCountPerPort=None, FlowLink=None, NetworkType=None):
		"""Create an instance of the `networks` resource

		Args:
			Name (string): The unique name of the networks object.
			NetworkCountPerPort (uint32): The number of network devices that will be created on eachabstract test port specified in the port-names list.
			FlowLink (union[leafref]): Identifies which object in another container is the next hop from this networks object.The name cannot be one of the names in this networks container.An empty link indicates no flow link
			NetworkType (enumeration): Determines which detailed network container is active.
		"""
		return self._create(locals())

	def delete(self):
		"""Delete all the encapsulated instances of the retrieved `networks` resource

		"""
		return self._delete()

	def update(self, NetworkCountPerPort=None, FlowLink=None, NetworkType=None):
		"""Update the current instance of the `networks` resource

		Args:
			NetworkCountPerPort (uint32): The number of network devices that will be created on eachabstract test port specified in the port-names list.
			FlowLink (union[leafref]): Identifies which object in another container is the next hop from this networks object.The name cannot be one of the names in this networks container.An empty link indicates no flow link
			NetworkType (enumeration): Determines which detailed network container is active.
		"""
		return self._update(locals())

