from openhltspirent.base import Base
class Ospfv2SummaryRange(Base):
	"""OSPFV2 Summary LSA (Type-3), generated by area border routers (ABR)
	and sent to neighboring areas, advertise area routing information.
	"""
	YANG_NAME = 'ospfv2-summary-range'
	YANG_KEYWORD = 'container'
	YANG_KEY = None
	YANG_PROPERTY_MAP = {}
	YANG_ACTIONS = []

	def __init__(self, parent):
		super(Ospfv2SummaryRange, self).__init__(parent)

	@property
	def Address(self):
		"""IP address

		Get an instance of the Address class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.address.address.Address)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.address.address import Address
		return Address(self)._read()

	@property
	def PrefixLength(self):
		"""Prefix Length

		Get an instance of the PrefixLength class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.prefixlength.prefixlength.PrefixLength)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.prefixlength.prefixlength import PrefixLength
		return PrefixLength(self)._read()

	@property
	def AdvertiseRouterId(self):
		"""Router ID of the simulated router that will advertise Summary LSAs

		Get an instance of the AdvertiseRouterId class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.advertiserouterid.advertiserouterid.AdvertiseRouterId)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.advertiserouterid.advertiserouterid import AdvertiseRouterId
		return AdvertiseRouterId(self)._read()

	@property
	def RouteCategory(self):
		"""Route Category can be used to filter routes by type.
		   UNDEFINED The default category assigned to a manually created block.
		   PRIMARY   A preferred route that has duplicates (secondary routes) advertised by other ports.
		   SECONDARY Secondary route.
		   UNIQUE    A less preferred backup route.
		   ANY       Indicates that a single port in the test configuration advertises this route.

		Get an instance of the RouteCategory class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.routecategory.routecategory.RouteCategory)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.routecategory.routecategory import RouteCategory
		return RouteCategory(self)._read()

	@property
	def SequenceNumber(self):
		"""Initial value of the LS sequence number field in the LSA header.

		Get an instance of the SequenceNumber class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.sequencenumber.sequencenumber.SequenceNumber)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.sequencenumber.sequencenumber import SequenceNumber
		return SequenceNumber(self)._read()

	@property
	def Age(self):
		"""Age of the LSA, in seconds.

		Get an instance of the Age class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.age.age.Age)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.age.age import Age
		return Age(self)._read()

	@property
	def Checksum(self):
		"""Specifies the LSA will be advertised with a good or a bad checksum.

		Get an instance of the Checksum class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.checksum.checksum.Checksum)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.checksum.checksum import Checksum
		return Checksum(self)._read()

	@property
	def Metric(self):
		"""Route-cost metric to be used when advertising the specified summary LSAs.

		Get an instance of the Metric class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.metric.metric.Metric)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.metric.metric import Metric
		return Metric(self)._read()

	@property
	def Options(self):
		"""Summary LSA Options.
		   TBIT     TOS: Type of Service (T,0).
		   EBIT     External Routing: Specifies the way AS-external-LSAs are flooded (E,1).
		   MCBIT    Multicast: Specifies whether IP multicast datagrams are forwarded (MC,2).
		   NPBIT    NSSA: Specifies the handling of Type-7 LSAs (N/P,3).
		   EABIT    External Attribute: Specifies the router's willingness to receive and forward External-Attributes-LSAs (EA,4).
		   DCBIT    Demand Circuit: Specifies the router's handling of demand circuits (DC,5).
		   OBIT     Opaque: Specifies the router's willingness to receive and forward Opaque LSAs as specified in RFC 2370 (O,6).
		   UNUSED7  Unused: This bit is not used

		Get an instance of the Options class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.options.options.Options)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.options.options import Options
		return Options(self)._read()

	@property
	def SegmentRouting(self):
		"""TBD

		Get an instance of the SegmentRouting class.

		Returns:
			obj(openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.segmentrouting.segmentrouting.SegmentRouting)
		"""
		from openhltspirent.sessions.config.devicegroups.simulatednetworks.networks.ospfv2summaryrange.segmentrouting.segmentrouting import SegmentRouting
		return SegmentRouting(self)._read()

