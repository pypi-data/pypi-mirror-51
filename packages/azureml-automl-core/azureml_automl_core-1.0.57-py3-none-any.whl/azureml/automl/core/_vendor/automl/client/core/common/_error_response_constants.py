# ---------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# ---------------------------------------------------------

r"""
Do not modify; this file is autogenerated by azureml-core\scripts\generate_constants.py.

To add error codes, please refer to error_handling\readme.md in the Vienna/specs repository.
"""


class ErrorCodes:
    """Constants for error codes."""

    # Any errors due to the user. Whether its due to input settings, the environment they provide, etc.
    USER_ERROR = "UserError"

    # User errors that we can validate before submitting.
    VALIDATION_ERROR = "ValidationError"

    BADARGUMENT_ERROR = "BadArgument"

    CONFLICTINGSETTINGS_ERROR = "ConflictingSettings"

    INVALID_ERROR = "Invalid"

    MALFORMED_ERROR = "Malformed"

    BLANKOREMPTY_ERROR = "BlankOrEmpty"

    OUTOFRANGE_ERROR = "OutOfRange"

    NOTFOUND_ERROR = "NotFound"

    # Errors that occur due to user provided data.
    DATAVALIDATION_ERROR = "DataValidation"

    INVALIDDATATYPE_ERROR = "InvalidDataType"

    MISSINGCOLUMN_ERROR = "MissingColumn"

    DATASHAPE_ERROR = "DataShape"

    INVALIDDATA_ERROR = "InvalidData"

    SCENARIONOTSUPORTED_ERROR = "ScenarioNotSuported"

    NOTIMPLEMENTED_ERROR = "NotImplemented"

    # Code for implicit dependencies not on the user's environment.
    OPTIONALSCENARIONOTENABLED_ERROR = "OptionalScenarioNotEnabled"

    INVALIDRUNSTATE_ERROR = "InvalidRunState"

    AUTHENTICATION_ERROR = "Authentication"

    # If a user throws a keyboard exception.
    KEYBOARDEXCEPTION_ERROR = "KeyboardException"

    # If the run stops early. Should usually be a warning rather than an error.
    EARLYTERMINATION_ERROR = "EarlyTermination"

    # Any errors due to our systems such as services, SDK, or UI.
    SYSTEM_ERROR = "System"

    #  Error for bad predictions from models used within our product (not user models). E.g. AutoML uses an ML model
    # to predict future iterations, if that model fails to get a new model, it would throw a Prediction
    PREDICTION_ERROR = "Prediction"

    #  Errors for components outside of our ownership. E.g. Scikit or Pandas. This is especially relevent if we want
    # to treat some of these as warnings to the user and continue execution.
    EXTERNAL_ERROR = "External"

    # Errors thrown from the operating system.
    OS_ERROR = "Os"

    FILE_ERROR = "File"

    FILENOTFOUND_ERROR = "FileNotFound"

    DELETE_ERROR = "Delete"

    MEMORY_ERROR = "Memory"

    # If other process is unexpectedly killed by the OS.
    PROCESSKILLED_ERROR = "ProcessKilled"

    # Errors and exceptions thrown when processing data during training or inferencing.
    DATA_ERROR = "DataError"

    # Errors seen while creating the raw data snapshot during training time which is used at the inference time.
    RAWDATASNAPSHOT_ERROR = "RawDataSnapShot"


class ErrorHierarchy:
    """Constants containing full error hierarchies."""

    USER_ERROR = [
        ErrorCodes.USER_ERROR,
    ]
    VALIDATION_ERROR = [
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    BADARGUMENT_ERROR = [
        ErrorCodes.BADARGUMENT_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    CONFLICTINGSETTINGS_ERROR = [
        ErrorCodes.CONFLICTINGSETTINGS_ERROR,
        ErrorCodes.BADARGUMENT_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    INVALID_ERROR = [
        ErrorCodes.INVALID_ERROR,
        ErrorCodes.BADARGUMENT_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    MALFORMED_ERROR = [
        ErrorCodes.MALFORMED_ERROR,
        ErrorCodes.BADARGUMENT_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    BLANKOREMPTY_ERROR = [
        ErrorCodes.BLANKOREMPTY_ERROR,
        ErrorCodes.BADARGUMENT_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    OUTOFRANGE_ERROR = [
        ErrorCodes.OUTOFRANGE_ERROR,
        ErrorCodes.BADARGUMENT_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    NOTFOUND_ERROR = [
        ErrorCodes.NOTFOUND_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    DATAVALIDATION_ERROR = [
        ErrorCodes.DATAVALIDATION_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    INVALIDDATATYPE_ERROR = [
        ErrorCodes.INVALIDDATATYPE_ERROR,
        ErrorCodes.DATAVALIDATION_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    MISSINGCOLUMN_ERROR = [
        ErrorCodes.MISSINGCOLUMN_ERROR,
        ErrorCodes.DATAVALIDATION_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    DATASHAPE_ERROR = [
        ErrorCodes.DATASHAPE_ERROR,
        ErrorCodes.DATAVALIDATION_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    INVALIDDATA_ERROR = [
        ErrorCodes.INVALIDDATA_ERROR,
        ErrorCodes.DATAVALIDATION_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    SCENARIONOTSUPORTED_ERROR = [
        ErrorCodes.SCENARIONOTSUPORTED_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    NOTIMPLEMENTED_ERROR = [
        ErrorCodes.NOTIMPLEMENTED_ERROR,
        ErrorCodes.SCENARIONOTSUPORTED_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    OPTIONALSCENARIONOTENABLED_ERROR = [
        ErrorCodes.OPTIONALSCENARIONOTENABLED_ERROR,
        ErrorCodes.SCENARIONOTSUPORTED_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    INVALIDRUNSTATE_ERROR = [
        ErrorCodes.INVALIDRUNSTATE_ERROR,
        ErrorCodes.SCENARIONOTSUPORTED_ERROR,
        ErrorCodes.VALIDATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    AUTHENTICATION_ERROR = [
        ErrorCodes.AUTHENTICATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    KEYBOARDEXCEPTION_ERROR = [
        ErrorCodes.KEYBOARDEXCEPTION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    EARLYTERMINATION_ERROR = [
        ErrorCodes.EARLYTERMINATION_ERROR,
        ErrorCodes.USER_ERROR,
    ]
    SYSTEM_ERROR = [
        ErrorCodes.SYSTEM_ERROR,
    ]
    PREDICTION_ERROR = [
        ErrorCodes.PREDICTION_ERROR,
        ErrorCodes.SYSTEM_ERROR,
    ]
    EXTERNAL_ERROR = [
        ErrorCodes.EXTERNAL_ERROR,
        ErrorCodes.SYSTEM_ERROR,
    ]
    DATA_ERROR = [
        ErrorCodes.DATA_ERROR,
        ErrorCodes.SYSTEM_ERROR,
    ]
    RAWDATASNAPSHOT_ERROR = [
        ErrorCodes.RAWDATASNAPSHOT_ERROR,
        ErrorCodes.DATA_ERROR,
        ErrorCodes.SYSTEM_ERROR,
    ]
    OS_ERROR = [
        ErrorCodes.OS_ERROR,
        ErrorCodes.SYSTEM_ERROR,
    ]
    FILE_ERROR = [
        ErrorCodes.FILE_ERROR,
        ErrorCodes.OS_ERROR,
        ErrorCodes.SYSTEM_ERROR,
    ]
    FILENOTFOUND_ERROR = [
        ErrorCodes.FILENOTFOUND_ERROR,
        ErrorCodes.FILE_ERROR,
        ErrorCodes.OS_ERROR,
        ErrorCodes.SYSTEM_ERROR,
    ]
    DELETE_ERROR = [
        ErrorCodes.DELETE_ERROR,
        ErrorCodes.FILE_ERROR,
        ErrorCodes.OS_ERROR,
        ErrorCodes.SYSTEM_ERROR,
    ]
    MEMORY_ERROR = [
        ErrorCodes.MEMORY_ERROR,
        ErrorCodes.OS_ERROR,
        ErrorCodes.SYSTEM_ERROR,
    ]
    PROCESSKILLED_ERROR = [
        ErrorCodes.PROCESSKILLED_ERROR,
        ErrorCodes.OS_ERROR,
        ErrorCodes.SYSTEM_ERROR,
    ]
