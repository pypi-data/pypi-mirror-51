[tox]
envlist = py27,
          py34,
          py35,
          py36,
          py37,
          coverage,
          fix_lint,
          docs,
          package_description
isolated_build = true
minversion = 3.5.0
skip_missing_interpreters = true

[testenv]
description = run the unit tests with pytest under {basepython}
setenv = COVERAGE_FILE={toxworkdir}/.coverage.{envname}
passenv = http_proxy https_proxy no_proxy SSL_CERT_FILE TOXENV CI TRAVIS TRAVIS_* APPVEYOR APPVEYOR_* CODECOV_*
extras = test
deps = pip >= 18.1.0
commands = coverage erase
           coverage run  \
           --source="{envsitepackagesdir}/pytest_print" -m pytest \
           --junitxml={env:JUNIT_XML_FILE:{toxworkdir}/.test.{envname}.xml} \
           {posargs:tests}
           coverage combine
           coverage report

[pytest]
addopts = -ra --showlocals
rsyncdirs = tests tox
looponfailroots = tox tests
testpaths = tests
xfail_strict = True

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
              generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
deps = {[testenv]deps}
       coverage >= 4.5.1, < 5
       diff_cover >= 1.0.5, <2
skip_install = True
passenv = {[testenv]passenv}
          DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands = coverage combine
           coverage report -m
           coverage xml  -o {toxworkdir}/coverage.xml
           coverage html  -d {toxworkdir}/htmlcov
           diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml

[testenv:fix_lint]
basepython = python3.6
passenv = {[testenv]passenv} HOMEPATH PROGRAMDATA
skip_install = true
deps = pre-commit == 1.12.0
description = run static analysis and style check using flake8
commands = pre-commit run --all-files --show-diff-on-failure
           python -c 'print("hint: run {envdir}/bin/pre-commit install to add checks as pre-commit hook")'

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
line_length = 120
known_first_party = pytest_print
known_third_party = pytest,setuptools

[testenv:docs]
description = invoke sphinx-build to build the HTML docs, check that URIs are valid
basepython = python3.6
extras = docs
commands = sphinx-build -d "{toxworkdir}/docs_doctree" doc "{toxworkdir}/docs_out" --color -W -bhtml
           sphinx-build -d "{toxworkdir}/docs_doctree" doc "{toxworkdir}/docs_out" --color -W -blinkcheck

[testenv:dev]
description = generate a DEV environment
extras = test, docs
usedevelop = True
basepython = python3.6
commands = python -m pip list --format=columns
           python -c 'import sys; print(sys.executable)'

[testenv:package_description]
description = check that the long description is valid
basepython = python3.7
deps = twine >= 1.12.1
       pip >= 18.0.0
skip_install = true
extras =
commands = pip wheel -w {envtmpdir}/build --no-deps .
           twine check {envtmpdir}/build/*
