# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.


class ApplyTemplateSpec(object):

    def __init__(self, clientToken, dataCenters, resourceIds, serviceCode, templateType, contacts=None, ruleName=None, tagsArray=None, webHookContent=None, webHookProtocol=None, webHookSecret=None, webHookUrl=None):
        """
        :param clientToken:  幂等性校验参数,最长36位
        :param contacts: (Optional) 联系人列表
        :param dataCenters:  dataCenters，该资源所处地域，与resourceIds一一对应
        :param resourceIds:  资源ID列表，resourceIds数量为1--40，每一项不能为空或包含*
        :param ruleName: (Optional) 规则名称，规则名称，最大长度42个字符，只允许中英文、数字、''-''和"_"
        :param serviceCode:  资源类型
        :param tagsArray: (Optional) 标签组，模板下面规则对应的tags，与resourceIds一一对应
        :param templateType:  模板类型，1表示默认模板，2表示用户自定义模板
        :param webHookContent: (Optional) 回调content 注:仅webHookUrl和webHookContent均不为空时,才会创建webHook
        :param webHookProtocol: (Optional) webHook协议,https或http 注:此处需和webHookUrl相匹配
        :param webHookSecret: (Optional) 回调secret,用户请求签名,防伪造
        :param webHookUrl: (Optional) 回调url
        """

        self.clientToken = clientToken
        self.contacts = contacts
        self.dataCenters = dataCenters
        self.resourceIds = resourceIds
        self.ruleName = ruleName
        self.serviceCode = serviceCode
        self.tagsArray = tagsArray
        self.templateType = templateType
        self.webHookContent = webHookContent
        self.webHookProtocol = webHookProtocol
        self.webHookSecret = webHookSecret
        self.webHookUrl = webHookUrl
