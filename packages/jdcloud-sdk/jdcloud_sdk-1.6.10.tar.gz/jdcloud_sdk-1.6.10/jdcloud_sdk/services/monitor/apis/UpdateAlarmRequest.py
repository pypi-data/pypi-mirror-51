# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class UpdateAlarmRequest(JDCloudRequest):
    """
    修改已创建的报警规则
    """

    def __init__(self, parameters, header=None, version="v1"):
        super(UpdateAlarmRequest, self).__init__(
            '/regions/{regionId}/alarms/{alarmId}', 'PATCH', header, version)
        self.parameters = parameters


class UpdateAlarmParameters(object):

    def __init__(self, regionId, alarmId, rule, ):
        """
        :param regionId: 地域 Id，对于类似CDN这种没有地域属性的产品，regionId为cn-north-1
        :param alarmId: 规则id
        :param rule: 
        """

        self.regionId = regionId
        self.alarmId = alarmId
        self.contacts = None
        self.rule = rule
        self.webHookContent = None
        self.webHookProtocol = None
        self.webHookSecret = None
        self.webHookUrl = None

    def setContacts(self, contacts):
        """
        :param contacts: (Optional) 通知联系人
        """
        self.contacts = contacts

    def setWebHookContent(self, webHookContent):
        """
        :param webHookContent: (Optional) 回调content 注：仅webHookUrl和webHookContent均不为空时，才会创建webHook
        """
        self.webHookContent = webHookContent

    def setWebHookProtocol(self, webHookProtocol):
        """
        :param webHookProtocol: (Optional) webHook协议，目前支持http，https
        """
        self.webHookProtocol = webHookProtocol

    def setWebHookSecret(self, webHookSecret):
        """
        :param webHookSecret: (Optional) 回调secret，用户请求签名，防伪造
        """
        self.webHookSecret = webHookSecret

    def setWebHookUrl(self, webHookUrl):
        """
        :param webHookUrl: (Optional) 回调url，例如http://www.jdcloud.com
        """
        self.webHookUrl = webHookUrl

