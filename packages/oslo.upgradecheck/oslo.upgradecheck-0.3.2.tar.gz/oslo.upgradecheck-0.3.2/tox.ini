[tox]
minversion = 1.8
envlist = py27,py37,pep8
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install {opts} {packages}
setenv =
   VIRTUAL_ENV={envdir}
   OS_DEBUG=1
   OS_STDOUT_CAPTURE=1
   OS_STDERR_CAPTURE=1
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://opendev.org/openstack/requirements/raw/branch/master/upper-constraints.txt}
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
commands = stestr run --slowest {posargs}

[testenv:pep8]
basepython = python3
commands = flake8 {posargs}

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:cover]
basepython = python3
deps = {[testenv]deps}
    coverage
setenv =
    PYTHON=coverage run --source oslo_upgradecheck --parallel-mode
commands =
    stestr run '{posargs}'
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml

[testenv:docs]
basepython = python3
whitelist_externals =
  rm
deps =
  {[testenv]deps}
  -r{toxinidir}/doc/requirements.txt
commands =
  rm -rf doc/build
  sphinx-build -W -b html doc/source doc/build/html

[testenv:debug]
basepython = python3
commands = oslo_debug_helper {posargs}

[testenv:lower-constraints]
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt

[testenv:releasenotes]
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[flake8]
# E123, E125 skipped as they are invalid PEP-8.

show-source = True
ignore = E123,E125
builtins = _
exclude=.venv,.git,.tox,dist,doc,releasenotes,*lib/python*,*egg,build

[hacking]
import_exception = oslo_upgradecheck._i18n
