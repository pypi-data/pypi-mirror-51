################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.ejml.data

from jpype.types import *
from typing import Union

from typing import overload

class SvdImplicitQrDecompose_DDRM:
	def __init__(self, arg0: Union[int, JBoolean], arg1: Union[int, JBoolean], arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isCompact(self, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def numRows(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def decompose(self, arg0: javawrappers.org.ejml.data.DMatrixRMaj, ) -> Union[int, JBoolean]: ...
	@overload
	def decompose(self, arg0: javawrappers.org.ejml.data.Matrix, ) -> Union[int, JBoolean]: ...
	def numberOfSingularValues(self, ) -> Union[int, JInt]: ...
	def getSingularValues(self, ) -> JArray(Union[float, JDouble], 1): ...
	def inputModified(self, ) -> Union[int, JBoolean]: ...
	def numCols(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	@overload
	def getU(self, arg0: javawrappers.org.ejml.data.DMatrixRMaj, arg1: Union[int, JBoolean], ) -> javawrappers.org.ejml.data.DMatrixRMaj: ...
	@overload
	def getU(self, arg0: javawrappers.org.ejml.data.Matrix, arg1: Union[int, JBoolean], ) -> javawrappers.org.ejml.data.Matrix: ...
	@overload
	def getV(self, arg0: javawrappers.org.ejml.data.Matrix, arg1: Union[int, JBoolean], ) -> javawrappers.org.ejml.data.Matrix: ...
	@overload
	def getV(self, arg0: javawrappers.org.ejml.data.DMatrixRMaj, arg1: Union[int, JBoolean], ) -> javawrappers.org.ejml.data.DMatrixRMaj: ...
	@overload
	def getW(self, arg0: javawrappers.org.ejml.data.Matrix, ) -> javawrappers.org.ejml.data.Matrix: ...
	@overload
	def getW(self, arg0: javawrappers.org.ejml.data.DMatrixRMaj, ) -> javawrappers.org.ejml.data.DMatrixRMaj: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class SafeSvd_DDRM:
	def __init__(self, arg0: javawrappers.org.ejml.interfaces.decomposition.SingularValueDecomposition_F64, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isCompact(self, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def numRows(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def decompose(self, arg0: javawrappers.org.ejml.data.Matrix, ) -> Union[int, JBoolean]: ...
	@overload
	def decompose(self, arg0: javawrappers.org.ejml.data.DMatrixRMaj, ) -> Union[int, JBoolean]: ...
	def numberOfSingularValues(self, ) -> Union[int, JInt]: ...
	def getSingularValues(self, ) -> JArray(Union[float, JDouble], 1): ...
	def inputModified(self, ) -> Union[int, JBoolean]: ...
	def numCols(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	@overload
	def getU(self, arg0: javawrappers.org.ejml.data.Matrix, arg1: Union[int, JBoolean], ) -> javawrappers.org.ejml.data.Matrix: ...
	@overload
	def getU(self, arg0: javawrappers.org.ejml.data.DMatrixRMaj, arg1: Union[int, JBoolean], ) -> javawrappers.org.ejml.data.DMatrixRMaj: ...
	@overload
	def getV(self, arg0: javawrappers.org.ejml.data.Matrix, arg1: Union[int, JBoolean], ) -> javawrappers.org.ejml.data.Matrix: ...
	@overload
	def getV(self, arg0: javawrappers.org.ejml.data.DMatrixRMaj, arg1: Union[int, JBoolean], ) -> javawrappers.org.ejml.data.DMatrixRMaj: ...
	@overload
	def getW(self, arg0: javawrappers.org.ejml.data.DMatrixRMaj, ) -> javawrappers.org.ejml.data.DMatrixRMaj: ...
	@overload
	def getW(self, arg0: javawrappers.org.ejml.data.Matrix, ) -> javawrappers.org.ejml.data.Matrix: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


