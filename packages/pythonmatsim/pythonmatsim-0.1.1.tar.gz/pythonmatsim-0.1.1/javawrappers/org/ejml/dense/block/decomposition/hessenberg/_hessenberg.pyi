################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.ejml.data

from jpype.types import *
from typing import Union

from typing import overload

class TridiagonalHelper_DDRB:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def computeRowOfV(arg0: Union[int, JInt], arg1: javawrappers.org.ejml.data.DSubmatrixD1, arg2: javawrappers.org.ejml.data.DSubmatrixD1, arg3: Union[int, JInt], arg4: Union[float, JDouble], ) -> None: ...
	@staticmethod
	def computeW_row(arg0: Union[int, JInt], arg1: javawrappers.org.ejml.data.DSubmatrixD1, arg2: javawrappers.org.ejml.data.DSubmatrixD1, arg3: JArray(Union[float, JDouble], 1), arg4: Union[int, JInt], ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def applyReflectorsToRow(arg0: Union[int, JInt], arg1: javawrappers.org.ejml.data.DSubmatrixD1, arg2: javawrappers.org.ejml.data.DSubmatrixD1, arg3: Union[int, JInt], ) -> None: ...
	@staticmethod
	def computeY(arg0: Union[int, JInt], arg1: javawrappers.org.ejml.data.DSubmatrixD1, arg2: javawrappers.org.ejml.data.DSubmatrixD1, arg3: Union[int, JInt], arg4: Union[float, JDouble], ) -> None: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def multA_u(arg0: Union[int, JInt], arg1: javawrappers.org.ejml.data.DSubmatrixD1, arg2: javawrappers.org.ejml.data.DSubmatrixD1, arg3: Union[int, JInt], ) -> None: ...
	@staticmethod
	def tridiagUpperRow(arg0: Union[int, JInt], arg1: javawrappers.org.ejml.data.DSubmatrixD1, arg2: JArray(Union[float, JDouble], 1), arg3: javawrappers.org.ejml.data.DSubmatrixD1, ) -> None: ...
	@staticmethod
	def innerProdRowSymm(arg0: Union[int, JInt], arg1: javawrappers.org.ejml.data.DSubmatrixD1, arg2: Union[int, JInt], arg3: javawrappers.org.ejml.data.DSubmatrixD1, arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def computeV_blockVector(arg0: Union[int, JInt], arg1: javawrappers.org.ejml.data.DSubmatrixD1, arg2: JArray(Union[float, JDouble], 1), arg3: javawrappers.org.ejml.data.DSubmatrixD1, ) -> None: ...


class TridiagonalDecompositionHouseholder_DDRB:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def multPlusTransA(arg0: Union[int, JInt], arg1: javawrappers.org.ejml.data.DSubmatrixD1, arg2: javawrappers.org.ejml.data.DSubmatrixD1, arg3: javawrappers.org.ejml.data.DSubmatrixD1, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getDiagonal(self, arg0: JArray(Union[float, JDouble], 1), arg1: JArray(Union[float, JDouble], 1), ) -> None: ...
	@overload
	def decompose(self, arg0: javawrappers.org.ejml.data.Matrix, ) -> Union[int, JBoolean]: ...
	@overload
	def decompose(self, arg0: javawrappers.org.ejml.data.DMatrixRBlock, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getQ(self, arg0: javawrappers.org.ejml.data.Matrix, arg1: Union[int, JBoolean], ) -> javawrappers.org.ejml.data.Matrix: ...
	@overload
	def getQ(self, arg0: javawrappers.org.ejml.data.DMatrixRBlock, arg1: Union[int, JBoolean], ) -> javawrappers.org.ejml.data.DMatrixRBlock: ...
	def inputModified(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	@overload
	def getT(self, arg0: javawrappers.org.ejml.data.DMatrixRBlock, ) -> javawrappers.org.ejml.data.DMatrixRBlock: ...
	@overload
	def getT(self, arg0: javawrappers.org.ejml.data.Matrix, ) -> javawrappers.org.ejml.data.Matrix: ...


