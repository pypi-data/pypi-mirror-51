################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.jfree.util
import javawrappers.java.util
import javawrappers.java.io
import javawrappers.org.jfree.base.modules
import javawrappers.org.jfree.base
import javawrappers.org.jfree.base.config

from jpype.types import *
from typing import Union

from typing import overload

class PackageState:
	@overload
	def __init__(self, arg0: javawrappers.org.jfree.base.modules.Module, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.jfree.base.modules.Module, arg1: Union[int, JInt], ): ...
	def getModule(self, ) -> javawrappers.org.jfree.base.modules.Module: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getState(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def initialize(self, arg0: javawrappers.org.jfree.base.modules.SubSystem, ) -> Union[int, JBoolean]: ...
	def configure(self, arg0: javawrappers.org.jfree.base.modules.SubSystem, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...


class ModuleInfo:
	def getMajorVersion(self, ) -> javawrappers.java.lang.String: ...
	def getModuleClass(self, ) -> javawrappers.java.lang.String: ...
	def getMinorVersion(self, ) -> javawrappers.java.lang.String: ...
	def getPatchLevel(self, ) -> javawrappers.java.lang.String: ...


class SubSystem:
	def getExtendedConfig(self, ) -> javawrappers.org.jfree.util.ExtendedConfiguration: ...
	def getGlobalConfig(self, ) -> javawrappers.org.jfree.util.Configuration: ...
	def getPackageManager(self, ) -> javawrappers.org.jfree.base.modules.PackageManager: ...


class PackageSorter:
	class SortModule:
		def __init__(self, arg0: javawrappers.org.jfree.base.modules.PackageState, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def setDependSubsystems(self, arg0: javawrappers.java.util.ArrayList, ) -> None: ...
		def getDependSubsystems(self, ) -> javawrappers.java.util.ArrayList: ...
		def getState(self, ) -> javawrappers.org.jfree.base.modules.PackageState: ...
		def getPosition(self, ) -> Union[int, JInt]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def setPosition(self, arg0: Union[int, JInt], ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDependSubsystems(self, ) -> javawrappers.java.util.ArrayList: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@staticmethod
	def sort(arg0: javawrappers.java.util.List, ) -> None: ...
	def setPosition(self, arg0: Union[int, JInt], ) -> None: ...
	def notify(self, ) -> None: ...
	def setDependSubsystems(self, arg0: javawrappers.java.util.ArrayList, ) -> None: ...
	def getState(self, ) -> javawrappers.org.jfree.base.modules.PackageState: ...
	def getPosition(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...


class DefaultModuleInfo:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setPatchLevel(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getModuleClass(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getMinorVersion(self, ) -> javawrappers.java.lang.String: ...
	def getPatchLevel(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def setMajorVersion(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getMajorVersion(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setMinorVersion(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setModuleClass(self, arg0: javawrappers.java.lang.String, ) -> None: ...


class ModuleInitializeException:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.java.lang.Exception: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class PackageManager:
	class PackageConfiguration:
		def __init__(self, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def isLocallyDefined(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
		def notifyAll(self, ) -> None: ...
		def notify(self, ) -> None: ...
		def getConfigProperties(self, ) -> javawrappers.java.util.Enumeration: ...
		def insertConfiguration(self, arg0: javawrappers.org.jfree.base.config.HierarchicalConfiguration, ) -> None: ...
		@overload
		def load(self, arg0: javawrappers.java.io.InputStream, ) -> None: ...
		@overload
		def load(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> None: ...
		@overload
		def load(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def clone(self, ) -> javawrappers.java.lang.Object: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def findPropertyKeys(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Iterator: ...
		@overload
		def getConfigProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
		@overload
		def getConfigProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
		def setConfigProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def createInstance(arg0: javawrappers.org.jfree.base.AbstractBoot, ) -> javawrappers.org.jfree.base.modules.PackageManager: ...
	def initializeModules(self, ) -> None: ...
	def isLocallyDefined(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def getAllModules(self, ) -> JArray(javawrappers.org.jfree.base.modules.Module, 1): ...
	def getConfigProperties(self, ) -> javawrappers.java.util.Enumeration: ...
	def insertConfiguration(self, arg0: javawrappers.org.jfree.base.config.HierarchicalConfiguration, ) -> None: ...
	def notify(self, ) -> None: ...
	def addModule(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def isModuleAvailable(self, arg0: javawrappers.org.jfree.base.modules.ModuleInfo, ) -> Union[int, JBoolean]: ...
	def printUsedModules(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def load(self, arg0: javawrappers.java.io.InputStream, ) -> None: ...
	@overload
	def load(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> None: ...
	@overload
	def load(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def load(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getPackageConfiguration(self, ) -> javawrappers.org.jfree.base.modules.PackageManager.PackageConfiguration: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getActiveModules(self, ) -> JArray(javawrappers.org.jfree.base.modules.Module, 1): ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def findPropertyKeys(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Iterator: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getConfigProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def getConfigProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def setConfigProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...


class AbstractModule:
	def __init__(self, ): ...
	class ReaderHelper:
		def next(self, ) -> javawrappers.java.lang.String: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def pushBack(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def hasNext(self, ) -> Union[int, JBoolean]: ...
		def close(self, ) -> None: ...
		def notify(self, ) -> None: ...


	def next(self, ) -> javawrappers.java.lang.String: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setPatchLevel(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getRequiredModules(self, ) -> JArray(javawrappers.org.jfree.base.modules.ModuleInfo, 1): ...
	def notifyAll(self, ) -> None: ...
	def getMinorVersion(self, ) -> javawrappers.java.lang.String: ...
	def getDescription(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getProducer(self, ) -> javawrappers.java.lang.String: ...
	def getMajorVersion(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	def close(self, ) -> None: ...
	def getOptionalModules(self, ) -> JArray(javawrappers.org.jfree.base.modules.ModuleInfo, 1): ...
	def setModuleClass(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getSubSystem(self, ) -> javawrappers.java.lang.String: ...
	def setOptionalModules(self, arg0: JArray(javawrappers.org.jfree.base.modules.ModuleInfo, 1), ) -> None: ...
	def getModuleClass(self, ) -> javawrappers.java.lang.String: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def getPatchLevel(self, ) -> javawrappers.java.lang.String: ...
	def configure(self, arg0: javawrappers.org.jfree.base.modules.SubSystem, ) -> None: ...
	def setMajorVersion(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def pushBack(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def initialize(self, arg0: javawrappers.org.jfree.base.modules.SubSystem, ) -> None: ...
	def setMinorVersion(self, arg0: javawrappers.java.lang.String, ) -> None: ...


class ModuleInitializer:
	def performInit(self, ) -> None: ...


class Module:
	def getSubSystem(self, ) -> javawrappers.java.lang.String: ...
	def getMajorVersion(self, ) -> javawrappers.java.lang.String: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getRequiredModules(self, ) -> JArray(javawrappers.org.jfree.base.modules.ModuleInfo, 1): ...
	def getModuleClass(self, ) -> javawrappers.java.lang.String: ...
	def getMinorVersion(self, ) -> javawrappers.java.lang.String: ...
	def getPatchLevel(self, ) -> javawrappers.java.lang.String: ...
	def initialize(self, arg0: javawrappers.org.jfree.base.modules.SubSystem, ) -> None: ...
	def configure(self, arg0: javawrappers.org.jfree.base.modules.SubSystem, ) -> None: ...
	def getDescription(self, ) -> javawrappers.java.lang.String: ...
	def getOptionalModules(self, ) -> JArray(javawrappers.org.jfree.base.modules.ModuleInfo, 1): ...
	def getProducer(self, ) -> javawrappers.java.lang.String: ...


