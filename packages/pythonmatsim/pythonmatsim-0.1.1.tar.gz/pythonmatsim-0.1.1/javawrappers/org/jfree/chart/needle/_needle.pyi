################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.awt
import javawrappers.java.lang
import javawrappers.java.awt.geom

from jpype.types import *
from typing import Union

from typing import overload

class PinNeedle:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setRotateY(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotateX(self, arg0: Union[float, JDouble], ) -> None: ...
	def getRotateY(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def getHighlightPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getRotateX(self, ) -> Union[float, JDouble]: ...
	def getFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.awt.geom.Point2D, arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def notify(self, ) -> None: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setHighlightPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def setSize(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getTransform(self, ) -> javawrappers.java.awt.geom.AffineTransform: ...


class ShipNeedle:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setRotateY(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotateX(self, arg0: Union[float, JDouble], ) -> None: ...
	def getRotateY(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def getHighlightPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getRotateX(self, ) -> Union[float, JDouble]: ...
	def getFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.awt.geom.Point2D, arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def notify(self, ) -> None: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setHighlightPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def setSize(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getTransform(self, ) -> javawrappers.java.awt.geom.AffineTransform: ...


class WindNeedle:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setRotateY(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotateX(self, arg0: Union[float, JDouble], ) -> None: ...
	def getRotateY(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def getHighlightPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getRotateX(self, ) -> Union[float, JDouble]: ...
	def getFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.awt.geom.Point2D, arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def notify(self, ) -> None: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setHighlightPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def setSize(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getTransform(self, ) -> javawrappers.java.awt.geom.AffineTransform: ...


class ArrowNeedle:
	def __init__(self, arg0: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setRotateY(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotateX(self, arg0: Union[float, JDouble], ) -> None: ...
	def getRotateY(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def getHighlightPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getRotateX(self, ) -> Union[float, JDouble]: ...
	def getFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.awt.geom.Point2D, arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def notify(self, ) -> None: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setHighlightPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def setSize(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getTransform(self, ) -> javawrappers.java.awt.geom.AffineTransform: ...


class LineNeedle:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setRotateY(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotateX(self, arg0: Union[float, JDouble], ) -> None: ...
	def getRotateY(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def getHighlightPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getRotateX(self, ) -> Union[float, JDouble]: ...
	def getFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.awt.geom.Point2D, arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def notify(self, ) -> None: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setHighlightPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def setSize(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getTransform(self, ) -> javawrappers.java.awt.geom.AffineTransform: ...


class MeterNeedle:
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Paint, arg1: javawrappers.java.awt.Paint, arg2: javawrappers.java.awt.Paint, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setRotateY(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotateX(self, arg0: Union[float, JDouble], ) -> None: ...
	def getRotateY(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def getHighlightPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getRotateX(self, ) -> Union[float, JDouble]: ...
	def getFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.awt.geom.Point2D, arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def notify(self, ) -> None: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setHighlightPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def setSize(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getTransform(self, ) -> javawrappers.java.awt.geom.AffineTransform: ...


class PointerNeedle:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setRotateY(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotateX(self, arg0: Union[float, JDouble], ) -> None: ...
	def getRotateY(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def getHighlightPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getRotateX(self, ) -> Union[float, JDouble]: ...
	def getFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.awt.geom.Point2D, arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def notify(self, ) -> None: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setHighlightPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def setSize(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getTransform(self, ) -> javawrappers.java.awt.geom.AffineTransform: ...


class PlumNeedle:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setRotateY(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotateX(self, arg0: Union[float, JDouble], ) -> None: ...
	def getRotateY(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def getHighlightPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getRotateX(self, ) -> Union[float, JDouble]: ...
	def getFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.awt.geom.Point2D, arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def notify(self, ) -> None: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setHighlightPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def setSize(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getTransform(self, ) -> javawrappers.java.awt.geom.AffineTransform: ...


class LongNeedle:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setRotateY(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotateX(self, arg0: Union[float, JDouble], ) -> None: ...
	def getRotateY(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def getHighlightPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getRotateX(self, ) -> Union[float, JDouble]: ...
	def getFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.awt.geom.Point2D, arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def notify(self, ) -> None: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setHighlightPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def setSize(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getTransform(self, ) -> javawrappers.java.awt.geom.AffineTransform: ...


class MiddlePinNeedle:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setRotateY(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotateX(self, arg0: Union[float, JDouble], ) -> None: ...
	def getRotateY(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def getHighlightPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getRotateX(self, ) -> Union[float, JDouble]: ...
	def getFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.awt.geom.Point2D, arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def notify(self, ) -> None: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setHighlightPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def setSize(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getTransform(self, ) -> javawrappers.java.awt.geom.AffineTransform: ...


