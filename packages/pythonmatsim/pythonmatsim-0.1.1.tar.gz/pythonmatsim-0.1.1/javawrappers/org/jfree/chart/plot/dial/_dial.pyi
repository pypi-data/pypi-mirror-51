################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.awt
import javawrappers.org.jfree.chart.ui
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.text
import javawrappers.java.awt.geom
import javawrappers.org.jfree.chart.plot.dial
import javawrappers.org.jfree.chart.plot
import javawrappers.org.jfree.chart.event
import javawrappers.org.jfree.data.general
import javawrappers.org.jfree.chart
import javawrappers.org.jfree.chart.axis

from jpype.types import *
from typing import Union

from typing import overload

class DialLayerChangeEvent:
	def __init__(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayer, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setChart(self, arg0: javawrappers.org.jfree.chart.JFreeChart, ) -> None: ...
	def getDialLayer(self, ) -> javawrappers.org.jfree.chart.plot.dial.DialLayer: ...
	def getType(self, ) -> javawrappers.org.jfree.chart.event.ChartChangeEventType: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getSource(self, ) -> javawrappers.java.lang.Object: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getChart(self, ) -> javawrappers.org.jfree.chart.JFreeChart: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setType(self, arg0: javawrappers.org.jfree.chart.event.ChartChangeEventType, ) -> None: ...
	def notify(self, ) -> None: ...


class AbstractDialLayer:
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def isClippedToWindow(self, ) -> Union[int, JBoolean]: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class DialFrame:
	def isClippedToWindow(self, ) -> Union[int, JBoolean]: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def getWindow(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> javawrappers.java.awt.Shape: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class DialPlot:
	@overload
	def __init__(self, arg0: javawrappers.org.jfree.data.general.ValueDataset, ): ...
	@overload
	def __init__(self, ): ...
	def isOutlineVisible(self, ) -> Union[int, JBoolean]: ...
	def addPointer(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialPointer, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getViewHeight(self, ) -> Union[float, JDouble]: ...
	def isSubplot(self, ) -> Union[int, JBoolean]: ...
	def getLegendItems(self, ) -> javawrappers.org.jfree.chart.LegendItemCollection: ...
	def getBackgroundImageAlignment(self, ) -> Union[int, JInt]: ...
	def addScale(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.chart.plot.dial.DialScale, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.PlotChangeListener, ) -> None: ...
	@staticmethod
	def rectangleByRadius(arg0: javawrappers.java.awt.geom.Rectangle2D, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	@overload
	def getDataset(self, arg0: Union[int, JInt], ) -> javawrappers.org.jfree.data.general.ValueDataset: ...
	@overload
	def getDataset(self, ) -> javawrappers.org.jfree.data.general.ValueDataset: ...
	def setCap(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayer, ) -> None: ...
	def getCap(self, ) -> javawrappers.org.jfree.chart.plot.dial.DialLayer: ...
	def drawBackground(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def annotationChanged(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeEvent, ) -> None: ...
	@staticmethod
	def resolveDomainAxisLocation(arg0: javawrappers.org.jfree.chart.axis.AxisLocation, arg1: javawrappers.org.jfree.chart.plot.PlotOrientation, ) -> javawrappers.org.jfree.chart.ui.RectangleEdge: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getDatasetGroup(self, ) -> javawrappers.org.jfree.data.general.DatasetGroup: ...
	def datasetChanged(self, arg0: javawrappers.org.jfree.data.general.DatasetChangeEvent, ) -> None: ...
	def drawBackgroundImage(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def isNotify(self, ) -> Union[int, JBoolean]: ...
	def notifyListeners(self, arg0: javawrappers.org.jfree.chart.event.PlotChangeEvent, ) -> None: ...
	def getForegroundAlpha(self, ) -> Union[float, JFloat]: ...
	def setNoDataMessage(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setOutlineVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setBackgroundPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def drawOutline(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def getScale(self, arg0: Union[int, JInt], ) -> javawrappers.org.jfree.chart.plot.dial.DialScale: ...
	def handleClick(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, ) -> None: ...
	def markerChanged(self, arg0: javawrappers.org.jfree.chart.event.MarkerChangeEvent, ) -> None: ...
	def getNoDataMessagePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getDialFrame(self, ) -> javawrappers.org.jfree.chart.plot.dial.DialFrame: ...
	def getRootPlot(self, ) -> javawrappers.org.jfree.chart.plot.Plot: ...
	@overload
	def removeLayer(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def removeLayer(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayer, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setBackgroundImageAlpha(self, arg0: Union[float, JFloat], ) -> None: ...
	def axisChanged(self, arg0: javawrappers.org.jfree.chart.event.AxisChangeEvent, ) -> None: ...
	def getPlotType(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def setInsets(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	@overload
	def setInsets(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, arg1: Union[int, JBoolean], ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setBackgroundImage(self, arg0: javawrappers.java.awt.Image, ) -> None: ...
	def setNoDataMessageFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	@overload
	def setDrawingSupplier(self, arg0: javawrappers.org.jfree.chart.plot.DrawingSupplier, ) -> None: ...
	@overload
	def setDrawingSupplier(self, arg0: javawrappers.org.jfree.chart.plot.DrawingSupplier, arg1: Union[int, JBoolean], ) -> None: ...
	def setBackground(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayer, ) -> None: ...
	def notify(self, ) -> None: ...
	def getBackgroundPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getViewX(self, ) -> Union[float, JDouble]: ...
	def setChart(self, arg0: javawrappers.org.jfree.chart.JFreeChart, ) -> None: ...
	def getViewY(self, ) -> Union[float, JDouble]: ...
	def setBackgroundImageAlignment(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getLayerIndex(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayer, ) -> Union[int, JInt]: ...
	def setParent(self, arg0: javawrappers.org.jfree.chart.plot.Plot, ) -> None: ...
	def setBackgroundAlpha(self, arg0: Union[float, JFloat], ) -> None: ...
	def dialLayerChanged(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeEvent, ) -> None: ...
	def getViewWidth(self, ) -> Union[float, JDouble]: ...
	def getParent(self, ) -> javawrappers.org.jfree.chart.plot.Plot: ...
	def getBackgroundAlpha(self, ) -> Union[float, JFloat]: ...
	def setNoDataMessagePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getChart(self, ) -> javawrappers.org.jfree.chart.JFreeChart: ...
	def zoom(self, arg0: Union[float, JDouble], ) -> None: ...
	def getDatasetCount(self, ) -> Union[int, JInt]: ...
	def getInsets(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.awt.geom.Point2D, arg3: javawrappers.org.jfree.chart.plot.PlotState, arg4: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def getScaleForDataset(self, arg0: Union[int, JInt], ) -> javawrappers.org.jfree.chart.plot.dial.DialScale: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def fetchElementHintingFlag(self, ) -> Union[int, JBoolean]: ...
	def getValue(self, arg0: Union[int, JInt], ) -> Union[float, JDouble]: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.PlotChangeListener, ) -> None: ...
	def getPointerIndex(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialPointer, ) -> Union[int, JInt]: ...
	def addLayer(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayer, ) -> None: ...
	@overload
	def setDataset(self, arg0: javawrappers.org.jfree.data.general.ValueDataset, ) -> None: ...
	@overload
	def setDataset(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.data.general.ValueDataset, ) -> None: ...
	def getPointerForDataset(self, arg0: Union[int, JInt], ) -> javawrappers.org.jfree.chart.plot.dial.DialPointer: ...
	def setDialFrame(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialFrame, ) -> None: ...
	def setView(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def getNoDataMessage(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def resolveRangeAxisLocation(arg0: javawrappers.org.jfree.chart.axis.AxisLocation, arg1: javawrappers.org.jfree.chart.plot.PlotOrientation, ) -> javawrappers.org.jfree.chart.ui.RectangleEdge: ...
	@overload
	def removePointer(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialPointer, ) -> None: ...
	@overload
	def removePointer(self, arg0: Union[int, JInt], ) -> None: ...
	def getBackgroundImageAlpha(self, ) -> Union[float, JFloat]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getBackgroundImage(self, ) -> javawrappers.java.awt.Image: ...
	def getDrawingSupplier(self, ) -> javawrappers.org.jfree.chart.plot.DrawingSupplier: ...
	def mapDatasetToScale(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def setForegroundAlpha(self, arg0: Union[float, JFloat], ) -> None: ...
	def getBackground(self, ) -> javawrappers.org.jfree.chart.plot.dial.DialLayer: ...
	def getNoDataMessageFont(self, ) -> javawrappers.java.awt.Font: ...


class DialScale:
	def isClippedToWindow(self, ) -> Union[int, JBoolean]: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def angleToValue(self, arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	def valueToAngle(self, arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class StandardDialFrame:
	def __init__(self, ): ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getWindow(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> javawrappers.java.awt.Shape: ...
	def notifyAll(self, ) -> None: ...
	def setForegroundPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def getRadius(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def setRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	def setBackgroundPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getBackgroundPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def isClippedToWindow(self, ) -> Union[int, JBoolean]: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def getForegroundPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class StandardDialScale:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], arg4: Union[float, JDouble], arg5: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setMinorTickLength(self, arg0: Union[float, JDouble], ) -> None: ...
	def setMajorTickLength(self, arg0: Union[float, JDouble], ) -> None: ...
	def valueToAngle(self, arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	def getUpperBound(self, ) -> Union[float, JDouble]: ...
	def setMajorTickStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def setTickLabelOffset(self, arg0: Union[float, JDouble], ) -> None: ...
	def setTickRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	def setLowerBound(self, arg0: Union[float, JDouble], ) -> None: ...
	def setMajorTickPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getMinorTickLength(self, ) -> Union[float, JDouble]: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getTickLabelOffset(self, ) -> Union[float, JDouble]: ...
	def getMajorTickLength(self, ) -> Union[float, JDouble]: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def isClippedToWindow(self, ) -> Union[int, JBoolean]: ...
	def getMinorTickStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getMajorTickStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getMajorTickIncrement(self, ) -> Union[float, JDouble]: ...
	def setTickLabelFormatter(self, arg0: javawrappers.java.text.NumberFormat, ) -> None: ...
	def getLowerBound(self, ) -> Union[float, JDouble]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setTickLabelFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setFirstTickLabelVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getTickLabelFormatter(self, ) -> javawrappers.java.text.NumberFormat: ...
	def notify(self, ) -> None: ...
	def getStartAngle(self, ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def angleToValue(self, arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	def setExtent(self, arg0: Union[float, JDouble], ) -> None: ...
	def getTickRadius(self, ) -> Union[float, JDouble]: ...
	def setUpperBound(self, arg0: Union[float, JDouble], ) -> None: ...
	def getTickLabelFont(self, ) -> javawrappers.java.awt.Font: ...
	def getExtent(self, ) -> Union[float, JDouble]: ...
	def getMajorTickPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setStartAngle(self, arg0: Union[float, JDouble], ) -> None: ...
	def setTickLabelsVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setTickLabelPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def setMinorTickStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def getMinorTickPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getMinorTickCount(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getTickLabelsVisible(self, ) -> Union[int, JBoolean]: ...
	def getFirstTickLabelVisible(self, ) -> Union[int, JBoolean]: ...
	def setMajorTickIncrement(self, arg0: Union[float, JDouble], ) -> None: ...
	def setMinorTickCount(self, arg0: Union[int, JInt], ) -> None: ...
	def getTickLabelPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...
	def setMinorTickPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...


class DialBackground:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Paint, ): ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getGradientPaintTransformer(self, ) -> javawrappers.org.jfree.chart.ui.GradientPaintTransformer: ...
	def notifyAll(self, ) -> None: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def isClippedToWindow(self, ) -> Union[int, JBoolean]: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setGradientPaintTransformer(self, arg0: javawrappers.org.jfree.chart.ui.GradientPaintTransformer, ) -> None: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...
	def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...


class DialLayerChangeListener:
	def dialLayerChanged(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeEvent, ) -> None: ...


class DialPointer:
	class Pointer:
		@overload
		def __init__(self, ): ...
		@overload
		def __init__(self, arg0: Union[int, JInt], ): ...
		def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def getWidthRadius(self, ) -> Union[float, JDouble]: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def isVisible(self, ) -> Union[int, JBoolean]: ...
		def getDatasetIndex(self, ) -> Union[int, JInt]: ...
		def getFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
		def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
		def getRadius(self, ) -> Union[float, JDouble]: ...
		def notify(self, ) -> None: ...
		def addChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
		def setRadius(self, arg0: Union[float, JDouble], ) -> None: ...
		def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
		def isClippedToWindow(self, ) -> Union[int, JBoolean]: ...
		def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def clone(self, ) -> javawrappers.java.lang.Object: ...
		def setDatasetIndex(self, arg0: Union[int, JInt], ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def setFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
		def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
		def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...
		def setWidthRadius(self, arg0: Union[float, JDouble], ) -> None: ...


	class Pin:
		@overload
		def __init__(self, ): ...
		@overload
		def __init__(self, arg0: Union[int, JInt], ): ...
		def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def getStroke(self, ) -> javawrappers.java.awt.Stroke: ...
		def notifyAll(self, ) -> None: ...
		def isVisible(self, ) -> Union[int, JBoolean]: ...
		def getDatasetIndex(self, ) -> Union[int, JInt]: ...
		def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
		def getRadius(self, ) -> Union[float, JDouble]: ...
		def notify(self, ) -> None: ...
		def addChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
		def setRadius(self, arg0: Union[float, JDouble], ) -> None: ...
		def isClippedToWindow(self, ) -> Union[int, JBoolean]: ...
		def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def clone(self, ) -> javawrappers.java.lang.Object: ...
		def setDatasetIndex(self, arg0: Union[int, JInt], ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def setStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
		def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
		def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...
		def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...


	def getWidthRadius(self, ) -> Union[float, JDouble]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def setRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setDatasetIndex(self, arg0: Union[int, JInt], ) -> None: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setWidthRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def getDatasetIndex(self, ) -> Union[int, JInt]: ...
	def getRadius(self, ) -> Union[float, JDouble]: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def isClippedToWindow(self, ) -> Union[int, JBoolean]: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class DialTextAnnotation:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getLabel(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def setRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setAngle(self, arg0: Union[float, JDouble], ) -> None: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def getRadius(self, ) -> Union[float, JDouble]: ...
	def isClippedToWindow(self, ) -> Union[int, JBoolean]: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def getAnchor(self, ) -> javawrappers.org.jfree.chart.ui.TextAnchor: ...
	def getAngle(self, ) -> Union[float, JDouble]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setAnchor(self, arg0: javawrappers.org.jfree.chart.ui.TextAnchor, ) -> None: ...
	def setLabel(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class ArcDialFrame:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getWindow(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> javawrappers.java.awt.Shape: ...
	def notifyAll(self, ) -> None: ...
	def setInnerRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def getBackgroundPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getOuterRadius(self, ) -> Union[float, JDouble]: ...
	def getStartAngle(self, ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setExtent(self, arg0: Union[float, JDouble], ) -> None: ...
	def setStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getExtent(self, ) -> Union[float, JDouble]: ...
	def setOuterRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	def setStartAngle(self, arg0: Union[float, JDouble], ) -> None: ...
	def setForegroundPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setBackgroundPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def isClippedToWindow(self, ) -> Union[int, JBoolean]: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def getInnerRadius(self, ) -> Union[float, JDouble]: ...
	def getForegroundPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class DialLayer:
	def isClippedToWindow(self, ) -> Union[int, JBoolean]: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class DialValueIndicator:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setInsets(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getValueAnchor(self, ) -> javawrappers.org.jfree.chart.ui.RectangleAnchor: ...
	def setNumberFormat(self, arg0: javawrappers.java.text.NumberFormat, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def setRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	def getBackgroundPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setDatasetIndex(self, arg0: Union[int, JInt], ) -> None: ...
	def setFrameAnchor(self, arg0: javawrappers.org.jfree.chart.ui.RectangleAnchor, ) -> None: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getMaxTemplateValue(self, ) -> javawrappers.java.lang.Number: ...
	def setTemplateValue(self, arg0: javawrappers.java.lang.Number, ) -> None: ...
	def setAngle(self, arg0: Union[float, JDouble], ) -> None: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def getInsets(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def getDatasetIndex(self, ) -> Union[int, JInt]: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def getRadius(self, ) -> Union[float, JDouble]: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setBackgroundPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getNumberFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def isClippedToWindow(self, ) -> Union[int, JBoolean]: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def setMaxTemplateValue(self, arg0: javawrappers.java.lang.Number, ) -> None: ...
	def getAngle(self, ) -> Union[float, JDouble]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setTextAnchor(self, arg0: javawrappers.org.jfree.chart.ui.TextAnchor, ) -> None: ...
	def getTextAnchor(self, ) -> javawrappers.org.jfree.chart.ui.TextAnchor: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def getFrameAnchor(self, ) -> javawrappers.org.jfree.chart.ui.RectangleAnchor: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def setValueAnchor(self, arg0: javawrappers.org.jfree.chart.ui.RectangleAnchor, ) -> None: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getTemplateValue(self, ) -> javawrappers.java.lang.Number: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class StandardDialRange:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: javawrappers.java.awt.Paint, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setInnerRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	def getUpperBound(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def setLowerBound(self, arg0: Union[float, JDouble], ) -> None: ...
	def getOuterRadius(self, ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setUpperBound(self, arg0: Union[float, JDouble], ) -> None: ...
	def setOuterRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	def getScaleIndex(self, ) -> Union[int, JInt]: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setBounds(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], ) -> None: ...
	def isClippedToWindow(self, ) -> Union[int, JBoolean]: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def setScaleIndex(self, arg0: Union[int, JInt], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def getInnerRadius(self, ) -> Union[float, JDouble]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getLowerBound(self, ) -> Union[float, JDouble]: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class DialCap:
	def __init__(self, ): ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def getFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.dial.DialPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def getRadius(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def setRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def isClippedToWindow(self, ) -> Union[int, JBoolean]: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.plot.dial.DialLayerChangeListener, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


