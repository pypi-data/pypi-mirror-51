################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.jfree.chart.urls
import javawrappers.java.util
import javawrappers.java.awt.geom
import javawrappers.org.jfree.chart.plot
import javawrappers.org.jfree.chart.event
import javawrappers.org.jfree.chart.labels
import javawrappers.java.awt
import javawrappers.org.jfree.data.xy
import javawrappers.java.lang
import javawrappers.java.io
import javawrappers.org.jfree.chart.renderer
import javawrappers.org.jfree.chart
import javawrappers.org.jfree.chart.entity
import javawrappers.org.jfree.chart.axis

from jpype.types import *
from typing import Union

from typing import overload

class GrayPaintScale:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getUpperBound(self, ) -> Union[float, JDouble]: ...
	def getLowerBound(self, ) -> Union[float, JDouble]: ...
	def getPaint(self, arg0: Union[float, JDouble], ) -> javawrappers.java.awt.Paint: ...
	def notify(self, ) -> None: ...
	def getAlpha(self, ) -> Union[int, JInt]: ...


class PaintScale:
	def getUpperBound(self, ) -> Union[float, JDouble]: ...
	def getLowerBound(self, ) -> Union[float, JDouble]: ...
	def getPaint(self, arg0: Union[float, JDouble], ) -> javawrappers.java.awt.Paint: ...


class OutlierList:
	def __init__(self, arg0: javawrappers.org.jfree.chart.renderer.Outlier, ): ...
	def add(self, arg0: javawrappers.org.jfree.chart.renderer.Outlier, ) -> Union[int, JBoolean]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAveragedOutlier(self, ) -> javawrappers.org.jfree.chart.renderer.Outlier: ...
	def notifyAll(self, ) -> None: ...
	def getItemCount(self, ) -> Union[int, JInt]: ...
	def updateAveragedOutlier(self, ) -> None: ...
	def isMultiple(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def isOverlapped(self, arg0: javawrappers.org.jfree.chart.renderer.Outlier, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setMultiple(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setAveragedOutlier(self, arg0: javawrappers.org.jfree.chart.renderer.Outlier, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class WaferMapRenderer:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Integer, arg1: javawrappers.java.lang.Integer, ): ...
	def getSeriesShape(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Shape: ...
	def getAutoPopulateSeriesShape(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setDefaultItemLabelFont(self, arg0: javawrappers.java.awt.Font, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultItemLabelFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def getItemOutlineStroke(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def getSeriesVisibleInLegend(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Boolean: ...
	def setDefaultLegendTextFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	@overload
	def setSeriesPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.RendererChangeListener, ) -> None: ...
	def getChipColor(self, arg0: javawrappers.java.lang.Number, ) -> javawrappers.java.awt.Paint: ...
	def clearSeriesPaints(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getDefaultLegendTextPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def isItemLabelVisible(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def setLegendTextPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setDefaultOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setDefaultOutlinePaint(self, arg0: javawrappers.java.awt.Paint, arg1: Union[int, JBoolean], ) -> None: ...
	def lookupSeriesFillPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def setPlot(self, arg0: javawrappers.org.jfree.chart.plot.WaferMapPlot, ) -> None: ...
	@overload
	def setDefaultCreateEntities(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultCreateEntities(self, arg0: Union[int, JBoolean], arg1: Union[int, JBoolean], ) -> None: ...
	def isSeriesItemLabelsVisible(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def setSeriesShape(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Shape, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesShape(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Shape, ) -> None: ...
	def getDefaultCreateEntities(self, ) -> Union[int, JBoolean]: ...
	def getSeriesStroke(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def getSeriesItemLabelPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getItemLabelPaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	@overload
	def setDefaultSeriesVisible(self, arg0: Union[int, JBoolean], arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultSeriesVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getItemFillPaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	@overload
	def setDefaultOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def isSeriesVisibleInLegend(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getSeriesVisible(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Boolean: ...
	def clearSeriesStrokes(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDefaultItemLabelFont(self, ) -> javawrappers.java.awt.Font: ...
	def getDefaultEntityRadius(self, ) -> Union[int, JInt]: ...
	def getDefaultPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getDefaultStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getAutoPopulateSeriesStroke(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	@overload
	def setDefaultItemLabelPaint(self, arg0: javawrappers.java.awt.Paint, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultItemLabelPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setSeriesOutlinePaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setSeriesOutlinePaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, arg2: Union[int, JBoolean], ) -> None: ...
	def setItemLabelAnchorOffset(self, arg0: Union[float, JDouble], ) -> None: ...
	@overload
	def setSeriesItemLabelFont(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Font, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesItemLabelFont(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Font, ) -> None: ...
	def lookupLegendShape(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Shape: ...
	def setAutoPopulateSeriesPaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getSeriesFillPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getItemStroke(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def getDefaultOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def setAutoPopulateSeriesFillPaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setDefaultLegendTextPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getAutoPopulateSeriesOutlineStroke(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSeriesItemLabelsVisible(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesItemLabelsVisible(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesItemLabelsVisible(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, ) -> None: ...
	def setDataBoundsIncludesVisibleSeriesOnly(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setAutoPopulateSeriesOutlineStroke(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.RendererChangeListener, ) -> None: ...
	@overload
	def setSeriesCreateEntities(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, ) -> None: ...
	@overload
	def setSeriesCreateEntities(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, arg2: Union[int, JBoolean], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def setSeriesOutlineStroke(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Stroke, ) -> None: ...
	@overload
	def setSeriesOutlineStroke(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Stroke, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesPositiveItemLabelPosition(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.chart.labels.ItemLabelPosition, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesPositiveItemLabelPosition(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.chart.labels.ItemLabelPosition, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def setSeriesVisibleInLegend(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, ) -> None: ...
	@overload
	def setSeriesVisibleInLegend(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, arg2: Union[int, JBoolean], ) -> None: ...
	def getDrawingSupplier(self, ) -> javawrappers.org.jfree.chart.plot.DrawingSupplier: ...
	def getItemVisible(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getItemOutlinePaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getSeriesPositiveItemLabelPosition(self, arg0: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def setDefaultPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setDefaultPaint(self, arg0: javawrappers.java.awt.Paint, arg1: Union[int, JBoolean], ) -> None: ...
	def lookupSeriesOutlinePaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getItemShape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Shape: ...
	def setAutoPopulateSeriesStroke(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getDefaultPositiveItemLabelPosition(self, ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getDataBoundsIncludesVisibleSeriesOnly(self, ) -> Union[int, JBoolean]: ...
	def getLegendCollection(self, ) -> javawrappers.org.jfree.chart.LegendItemCollection: ...
	def getItemLabelFont(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Font: ...
	@overload
	def setDefaultNegativeItemLabelPosition(self, arg0: javawrappers.org.jfree.chart.labels.ItemLabelPosition, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultNegativeItemLabelPosition(self, arg0: javawrappers.org.jfree.chart.labels.ItemLabelPosition, ) -> None: ...
	@overload
	def setSeriesItemLabelPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesItemLabelPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	def getDefaultItemLabelPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def setSeriesStroke(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Stroke, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesStroke(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Stroke, ) -> None: ...
	def getLegendTextPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def setLegendTextFont(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Font, ) -> None: ...
	def getDefaultSeriesVisible(self, ) -> Union[int, JBoolean]: ...
	def getLegendShape(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Shape: ...
	def getSeriesItemLabelFont(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Font: ...
	def getDefaultLegendTextFont(self, ) -> javawrappers.java.awt.Font: ...
	def getNegativeItemLabelPosition(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getItemPaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getSeriesOutlinePaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def notifyListeners(self, arg0: javawrappers.org.jfree.chart.event.RendererChangeEvent, ) -> None: ...
	@overload
	def setDefaultShape(self, arg0: javawrappers.java.awt.Shape, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def getItemCreateEntity(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def isSeriesVisible(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def setSeriesNegativeItemLabelPosition(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.chart.labels.ItemLabelPosition, ) -> None: ...
	@overload
	def setSeriesNegativeItemLabelPosition(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.chart.labels.ItemLabelPosition, arg2: Union[int, JBoolean], ) -> None: ...
	def getDefaultSeriesVisibleInLegend(self, ) -> Union[int, JBoolean]: ...
	def lookupSeriesShape(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Shape: ...
	@overload
	def setDefaultFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setDefaultFillPaint(self, arg0: javawrappers.java.awt.Paint, arg1: Union[int, JBoolean], ) -> None: ...
	def setLegendShape(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Shape, ) -> None: ...
	def lookupSeriesPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getDefaultFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getSeriesOutlineStroke(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def getSeriesCreateEntities(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Boolean: ...
	def notifyAll(self, ) -> None: ...
	def setAutoPopulateSeriesShape(self, arg0: Union[int, JBoolean], ) -> None: ...
	def lookupSeriesStroke(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def lookupSeriesOutlineStroke(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def getDefaultOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getDefaultNegativeItemLabelPosition(self, ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getPlot(self, ) -> javawrappers.org.jfree.chart.plot.WaferMapPlot: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getItemLabelAnchorOffset(self, ) -> Union[float, JDouble]: ...
	def getDefaultShape(self, ) -> javawrappers.java.awt.Shape: ...
	@overload
	def setDefaultStroke(self, arg0: javawrappers.java.awt.Stroke, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	@overload
	def setDefaultSeriesVisibleInLegend(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultSeriesVisibleInLegend(self, arg0: Union[int, JBoolean], arg1: Union[int, JBoolean], ) -> None: ...
	def getSeriesNegativeItemLabelPosition(self, arg0: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getDefaultLegendShape(self, ) -> javawrappers.java.awt.Shape: ...
	def getAutoPopulateSeriesOutlinePaint(self, ) -> Union[int, JBoolean]: ...
	def getLegendTextFont(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Font: ...
	@overload
	def setDefaultPositiveItemLabelPosition(self, arg0: javawrappers.org.jfree.chart.labels.ItemLabelPosition, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultPositiveItemLabelPosition(self, arg0: javawrappers.org.jfree.chart.labels.ItemLabelPosition, ) -> None: ...
	@overload
	def setSeriesFillPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesFillPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setSeriesVisible(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesVisible(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, ) -> None: ...
	@overload
	def setDefaultItemLabelsVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultItemLabelsVisible(self, arg0: Union[int, JBoolean], arg1: Union[int, JBoolean], ) -> None: ...
	def setDefaultLegendShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def getDefaultItemLabelsVisible(self, ) -> Union[int, JBoolean]: ...
	def getAutoPopulateSeriesFillPaint(self, ) -> Union[int, JBoolean]: ...
	def lookupLegendTextPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def setAutoPopulateSeriesOutlinePaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getAutoPopulateSeriesPaint(self, ) -> Union[int, JBoolean]: ...
	def getPositiveItemLabelPosition(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getSeriesPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def lookupLegendTextFont(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Font: ...
	def setDefaultEntityRadius(self, arg0: Union[int, JInt], ) -> None: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class RendererUtils:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def findLiveItemsLowerBound(arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def findLiveItemsUpperBound(arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def findLiveItems(arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> JArray(Union[int, JInt], 1): ...
	def notify(self, ) -> None: ...


class PolarItemRenderer:
	def setURLGenerator(self, arg0: javawrappers.org.jfree.chart.urls.XYURLGenerator, ) -> None: ...
	def getURLGenerator(self, ) -> javawrappers.org.jfree.chart.urls.XYURLGenerator: ...
	def setBaseToolTipGenerator(self, arg0: javawrappers.org.jfree.chart.labels.XYToolTipGenerator, ) -> None: ...
	def getBaseToolTipGenerator(self, ) -> javawrappers.org.jfree.chart.labels.XYToolTipGenerator: ...
	def getToolTipGenerator(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.XYToolTipGenerator: ...
	def setSeriesToolTipGenerator(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.chart.labels.XYToolTipGenerator, ) -> None: ...
	def setPlot(self, arg0: javawrappers.org.jfree.chart.plot.PolarPlot, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.RendererChangeListener, ) -> None: ...
	def drawRadialGridLines(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.PolarPlot, arg2: javawrappers.org.jfree.chart.axis.ValueAxis, arg3: javawrappers.java.util.List, arg4: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.RendererChangeListener, ) -> None: ...
	def drawSeries(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, arg3: javawrappers.org.jfree.chart.plot.PolarPlot, arg4: javawrappers.org.jfree.data.xy.XYDataset, arg5: Union[int, JInt], ) -> None: ...
	def getPlot(self, ) -> javawrappers.org.jfree.chart.plot.PolarPlot: ...
	def getLegendItem(self, arg0: Union[int, JInt], ) -> javawrappers.org.jfree.chart.LegendItem: ...
	def getSeriesToolTipGenerator(self, arg0: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.XYToolTipGenerator: ...
	def drawAngularGridLines(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.PolarPlot, arg2: javawrappers.java.util.List, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...


class RendererState:
	def __init__(self, arg0: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getInfo(self, ) -> javawrappers.org.jfree.chart.plot.PlotRenderingInfo: ...
	def getElementHinting(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setElementHinting(self, arg0: Union[int, JBoolean], ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getEntityCollection(self, ) -> javawrappers.org.jfree.chart.entity.EntityCollection: ...


class NotOutlierException:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class DefaultPolarItemRenderer:
	def __init__(self, ): ...
	def getSeriesShape(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Shape: ...
	def getAutoPopulateSeriesShape(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setDefaultItemLabelFont(self, arg0: javawrappers.java.awt.Font, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultItemLabelFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def getItemOutlineStroke(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def getSeriesVisibleInLegend(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Boolean: ...
	def setDefaultLegendTextFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	@overload
	def setSeriesPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	def getShapesVisible(self, ) -> Union[int, JBoolean]: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.RendererChangeListener, ) -> None: ...
	def clearSeriesPaints(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getDefaultLegendTextPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setLegendItemURLGenerator(self, arg0: javawrappers.org.jfree.chart.labels.XYSeriesLabelGenerator, ) -> None: ...
	def isSeriesFilled(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getURLGenerator(self, ) -> javawrappers.org.jfree.chart.urls.XYURLGenerator: ...
	def isItemLabelVisible(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getConnectFirstAndLastPoint(self, ) -> Union[int, JBoolean]: ...
	def setLegendTextPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setDefaultOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setDefaultOutlinePaint(self, arg0: javawrappers.java.awt.Paint, arg1: Union[int, JBoolean], ) -> None: ...
	def lookupSeriesFillPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def setPlot(self, arg0: javawrappers.org.jfree.chart.plot.PolarPlot, ) -> None: ...
	def getLegendItemURLGenerator(self, ) -> javawrappers.org.jfree.chart.labels.XYSeriesLabelGenerator: ...
	@overload
	def setDefaultCreateEntities(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultCreateEntities(self, arg0: Union[int, JBoolean], arg1: Union[int, JBoolean], ) -> None: ...
	def isSeriesItemLabelsVisible(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def setSeriesShape(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Shape, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesShape(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Shape, ) -> None: ...
	def drawSeries(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, arg3: javawrappers.org.jfree.chart.plot.PolarPlot, arg4: javawrappers.org.jfree.data.xy.XYDataset, arg5: Union[int, JInt], ) -> None: ...
	def getDefaultCreateEntities(self, ) -> Union[int, JBoolean]: ...
	def getSeriesStroke(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def getSeriesItemLabelPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getItemLabelPaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	@overload
	def setDefaultSeriesVisible(self, arg0: Union[int, JBoolean], arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultSeriesVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getItemFillPaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	@overload
	def setDefaultOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def isSeriesVisibleInLegend(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def drawAngularGridLines(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.PolarPlot, arg2: javawrappers.java.util.List, arg3: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def getSeriesVisible(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Boolean: ...
	def clearSeriesStrokes(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDefaultItemLabelFont(self, ) -> javawrappers.java.awt.Font: ...
	def getDefaultEntityRadius(self, ) -> Union[int, JInt]: ...
	def getDefaultPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getDefaultStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getAutoPopulateSeriesStroke(self, ) -> Union[int, JBoolean]: ...
	def setSeriesToolTipGenerator(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.chart.labels.XYToolTipGenerator, ) -> None: ...
	def notify(self, ) -> None: ...
	@overload
	def setDefaultItemLabelPaint(self, arg0: javawrappers.java.awt.Paint, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultItemLabelPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setSeriesOutlinePaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setSeriesOutlinePaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, arg2: Union[int, JBoolean], ) -> None: ...
	def setItemLabelAnchorOffset(self, arg0: Union[float, JDouble], ) -> None: ...
	@overload
	def setSeriesItemLabelFont(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Font, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesItemLabelFont(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Font, ) -> None: ...
	def lookupLegendShape(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Shape: ...
	def setAutoPopulateSeriesPaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getSeriesFillPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getItemStroke(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def getDefaultOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def setAutoPopulateSeriesFillPaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setDefaultLegendTextPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setUseFillPaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getFillComposite(self, ) -> javawrappers.java.awt.Composite: ...
	def getAutoPopulateSeriesOutlineStroke(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSeriesItemLabelsVisible(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesItemLabelsVisible(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesItemLabelsVisible(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, ) -> None: ...
	def setDataBoundsIncludesVisibleSeriesOnly(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setAutoPopulateSeriesOutlineStroke(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.RendererChangeListener, ) -> None: ...
	def drawRadialGridLines(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.PolarPlot, arg2: javawrappers.org.jfree.chart.axis.ValueAxis, arg3: javawrappers.java.util.List, arg4: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	@overload
	def setSeriesCreateEntities(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, ) -> None: ...
	@overload
	def setSeriesCreateEntities(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesOutlineStroke(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Stroke, ) -> None: ...
	@overload
	def setSeriesOutlineStroke(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Stroke, arg2: Union[int, JBoolean], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def setSeriesPositiveItemLabelPosition(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.chart.labels.ItemLabelPosition, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesPositiveItemLabelPosition(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.chart.labels.ItemLabelPosition, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def setSeriesVisibleInLegend(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, ) -> None: ...
	@overload
	def setSeriesVisibleInLegend(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, arg2: Union[int, JBoolean], ) -> None: ...
	def getDrawingSupplier(self, ) -> javawrappers.org.jfree.chart.plot.DrawingSupplier: ...
	def getItemVisible(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getItemOutlinePaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getSeriesPositiveItemLabelPosition(self, arg0: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setSeriesFilled(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setDefaultPaint(self, arg0: javawrappers.java.awt.Paint, arg1: Union[int, JBoolean], ) -> None: ...
	def getBaseToolTipGenerator(self, ) -> javawrappers.org.jfree.chart.labels.XYToolTipGenerator: ...
	def lookupSeriesOutlinePaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getItemShape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Shape: ...
	def setAutoPopulateSeriesStroke(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setLegendLine(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def getDefaultPositiveItemLabelPosition(self, ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getDataBoundsIncludesVisibleSeriesOnly(self, ) -> Union[int, JBoolean]: ...
	def getLegendLine(self, ) -> javawrappers.java.awt.Shape: ...
	def getItemLabelFont(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Font: ...
	@overload
	def setDefaultNegativeItemLabelPosition(self, arg0: javawrappers.org.jfree.chart.labels.ItemLabelPosition, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultNegativeItemLabelPosition(self, arg0: javawrappers.org.jfree.chart.labels.ItemLabelPosition, ) -> None: ...
	@overload
	def setSeriesItemLabelPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesItemLabelPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	def getDefaultItemLabelPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def setSeriesStroke(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Stroke, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesStroke(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Stroke, ) -> None: ...
	def setLegendItemToolTipGenerator(self, arg0: javawrappers.org.jfree.chart.labels.XYSeriesLabelGenerator, ) -> None: ...
	def getLegendTextPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def setLegendTextFont(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Font, ) -> None: ...
	def getDefaultSeriesVisible(self, ) -> Union[int, JBoolean]: ...
	def getLegendShape(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Shape: ...
	def setURLGenerator(self, arg0: javawrappers.org.jfree.chart.urls.XYURLGenerator, ) -> None: ...
	def getSeriesItemLabelFont(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Font: ...
	def getDefaultLegendTextFont(self, ) -> javawrappers.java.awt.Font: ...
	def getNegativeItemLabelPosition(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getItemPaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getUseFillPaint(self, ) -> Union[int, JBoolean]: ...
	def getSeriesOutlinePaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def notifyListeners(self, arg0: javawrappers.org.jfree.chart.event.RendererChangeEvent, ) -> None: ...
	@overload
	def setDefaultShape(self, arg0: javawrappers.java.awt.Shape, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def getItemCreateEntity(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def isSeriesVisible(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def setSeriesNegativeItemLabelPosition(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.chart.labels.ItemLabelPosition, ) -> None: ...
	@overload
	def setSeriesNegativeItemLabelPosition(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.chart.labels.ItemLabelPosition, arg2: Union[int, JBoolean], ) -> None: ...
	def setConnectFirstAndLastPoint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getDefaultSeriesVisibleInLegend(self, ) -> Union[int, JBoolean]: ...
	def lookupSeriesShape(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Shape: ...
	def getDrawOutlineWhenFilled(self, ) -> Union[int, JBoolean]: ...
	def getLegendItem(self, arg0: Union[int, JInt], ) -> javawrappers.org.jfree.chart.LegendItem: ...
	@overload
	def setDefaultFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setDefaultFillPaint(self, arg0: javawrappers.java.awt.Paint, arg1: Union[int, JBoolean], ) -> None: ...
	def setLegendShape(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Shape, ) -> None: ...
	def lookupSeriesPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def setDrawOutlineWhenFilled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getDefaultFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getSeriesOutlineStroke(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def setFillComposite(self, arg0: javawrappers.java.awt.Composite, ) -> None: ...
	def getLegendItemToolTipGenerator(self, ) -> javawrappers.org.jfree.chart.labels.XYSeriesLabelGenerator: ...
	def getSeriesCreateEntities(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Boolean: ...
	def setBaseToolTipGenerator(self, arg0: javawrappers.org.jfree.chart.labels.XYToolTipGenerator, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setAutoPopulateSeriesShape(self, arg0: Union[int, JBoolean], ) -> None: ...
	def lookupSeriesStroke(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def lookupSeriesOutlineStroke(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def getDefaultOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getDefaultNegativeItemLabelPosition(self, ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getPlot(self, ) -> javawrappers.org.jfree.chart.plot.PolarPlot: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getItemLabelAnchorOffset(self, ) -> Union[float, JDouble]: ...
	def getDefaultShape(self, ) -> javawrappers.java.awt.Shape: ...
	@overload
	def setDefaultStroke(self, arg0: javawrappers.java.awt.Stroke, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	@overload
	def setDefaultSeriesVisibleInLegend(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultSeriesVisibleInLegend(self, arg0: Union[int, JBoolean], arg1: Union[int, JBoolean], ) -> None: ...
	def getSeriesNegativeItemLabelPosition(self, arg0: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getDefaultLegendShape(self, ) -> javawrappers.java.awt.Shape: ...
	def getAutoPopulateSeriesOutlinePaint(self, ) -> Union[int, JBoolean]: ...
	def getLegendTextFont(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Font: ...
	@overload
	def setDefaultPositiveItemLabelPosition(self, arg0: javawrappers.org.jfree.chart.labels.ItemLabelPosition, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultPositiveItemLabelPosition(self, arg0: javawrappers.org.jfree.chart.labels.ItemLabelPosition, ) -> None: ...
	@overload
	def setSeriesFillPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesFillPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setSeriesVisible(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesVisible(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, ) -> None: ...
	def setShapesVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultItemLabelsVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultItemLabelsVisible(self, arg0: Union[int, JBoolean], arg1: Union[int, JBoolean], ) -> None: ...
	def setDefaultLegendShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def getDefaultItemLabelsVisible(self, ) -> Union[int, JBoolean]: ...
	def getAutoPopulateSeriesFillPaint(self, ) -> Union[int, JBoolean]: ...
	def getToolTipGenerator(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.XYToolTipGenerator: ...
	def lookupLegendTextPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def setAutoPopulateSeriesOutlinePaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getAutoPopulateSeriesPaint(self, ) -> Union[int, JBoolean]: ...
	def getPositiveItemLabelPosition(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def getSeriesPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def lookupLegendTextFont(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Font: ...
	def setDefaultEntityRadius(self, arg0: Union[int, JInt], ) -> None: ...
	def getSeriesToolTipGenerator(self, arg0: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.XYToolTipGenerator: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class Outlier:
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getPoint(self, ) -> javawrappers.java.awt.geom.Point2D: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setPoint(self, arg0: javawrappers.java.awt.geom.Point2D, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def getRadius(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def setRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	def getX(self, ) -> Union[float, JDouble]: ...
	def getY(self, ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def overlaps(self, arg0: javawrappers.org.jfree.chart.renderer.Outlier, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class OutlierListCollection:
	def __init__(self, ): ...
	def add(self, arg0: javawrappers.org.jfree.chart.renderer.Outlier, ) -> Union[int, JBoolean]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isHighFarOut(self, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def isLowFarOut(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setHighFarOut(self, arg0: Union[int, JBoolean], ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def setLowFarOut(self, arg0: Union[int, JBoolean], ) -> None: ...


class AbstractRenderer:
	def __init__(self, ): ...
	def getSeriesShape(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Shape: ...
	def getAutoPopulateSeriesShape(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setDefaultItemLabelFont(self, arg0: javawrappers.java.awt.Font, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultItemLabelFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def getItemOutlineStroke(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def getSeriesVisibleInLegend(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Boolean: ...
	def setDefaultLegendTextFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	@overload
	def setSeriesPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.RendererChangeListener, ) -> None: ...
	def clearSeriesPaints(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getDefaultLegendTextPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def isItemLabelVisible(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def setLegendTextPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setDefaultOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setDefaultOutlinePaint(self, arg0: javawrappers.java.awt.Paint, arg1: Union[int, JBoolean], ) -> None: ...
	def lookupSeriesFillPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	@overload
	def setDefaultCreateEntities(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultCreateEntities(self, arg0: Union[int, JBoolean], arg1: Union[int, JBoolean], ) -> None: ...
	def isSeriesItemLabelsVisible(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def setSeriesShape(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Shape, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesShape(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Shape, ) -> None: ...
	def getDefaultCreateEntities(self, ) -> Union[int, JBoolean]: ...
	def getSeriesStroke(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def getSeriesItemLabelPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getItemLabelPaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	@overload
	def setDefaultSeriesVisible(self, arg0: Union[int, JBoolean], arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultSeriesVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getItemFillPaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	@overload
	def setDefaultOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def isSeriesVisibleInLegend(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getSeriesVisible(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Boolean: ...
	def clearSeriesStrokes(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDefaultItemLabelFont(self, ) -> javawrappers.java.awt.Font: ...
	def getDefaultEntityRadius(self, ) -> Union[int, JInt]: ...
	def getDefaultPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getDefaultStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getAutoPopulateSeriesStroke(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	@overload
	def setDefaultItemLabelPaint(self, arg0: javawrappers.java.awt.Paint, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultItemLabelPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setSeriesOutlinePaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setSeriesOutlinePaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, arg2: Union[int, JBoolean], ) -> None: ...
	def setItemLabelAnchorOffset(self, arg0: Union[float, JDouble], ) -> None: ...
	@overload
	def setSeriesItemLabelFont(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Font, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesItemLabelFont(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Font, ) -> None: ...
	def lookupLegendShape(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Shape: ...
	def setAutoPopulateSeriesPaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getSeriesFillPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getItemStroke(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def getDefaultOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def setAutoPopulateSeriesFillPaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setDefaultLegendTextPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getAutoPopulateSeriesOutlineStroke(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSeriesItemLabelsVisible(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesItemLabelsVisible(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesItemLabelsVisible(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, ) -> None: ...
	def setDataBoundsIncludesVisibleSeriesOnly(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setAutoPopulateSeriesOutlineStroke(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.RendererChangeListener, ) -> None: ...
	@overload
	def setSeriesCreateEntities(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, ) -> None: ...
	@overload
	def setSeriesCreateEntities(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, arg2: Union[int, JBoolean], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def setSeriesOutlineStroke(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Stroke, ) -> None: ...
	@overload
	def setSeriesOutlineStroke(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Stroke, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesPositiveItemLabelPosition(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.chart.labels.ItemLabelPosition, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesPositiveItemLabelPosition(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.chart.labels.ItemLabelPosition, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def setSeriesVisibleInLegend(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, ) -> None: ...
	@overload
	def setSeriesVisibleInLegend(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, arg2: Union[int, JBoolean], ) -> None: ...
	def getDrawingSupplier(self, ) -> javawrappers.org.jfree.chart.plot.DrawingSupplier: ...
	def getItemVisible(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getItemOutlinePaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getSeriesPositiveItemLabelPosition(self, arg0: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def setDefaultPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setDefaultPaint(self, arg0: javawrappers.java.awt.Paint, arg1: Union[int, JBoolean], ) -> None: ...
	def lookupSeriesOutlinePaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getItemShape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Shape: ...
	def setAutoPopulateSeriesStroke(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getDefaultPositiveItemLabelPosition(self, ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getDataBoundsIncludesVisibleSeriesOnly(self, ) -> Union[int, JBoolean]: ...
	def getItemLabelFont(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Font: ...
	@overload
	def setDefaultNegativeItemLabelPosition(self, arg0: javawrappers.org.jfree.chart.labels.ItemLabelPosition, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultNegativeItemLabelPosition(self, arg0: javawrappers.org.jfree.chart.labels.ItemLabelPosition, ) -> None: ...
	@overload
	def setSeriesItemLabelPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesItemLabelPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	def getDefaultItemLabelPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def setSeriesStroke(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Stroke, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesStroke(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Stroke, ) -> None: ...
	def getLegendTextPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def setLegendTextFont(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Font, ) -> None: ...
	def getDefaultSeriesVisible(self, ) -> Union[int, JBoolean]: ...
	def getLegendShape(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Shape: ...
	def getSeriesItemLabelFont(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Font: ...
	def getDefaultLegendTextFont(self, ) -> javawrappers.java.awt.Font: ...
	def getNegativeItemLabelPosition(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getItemPaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getSeriesOutlinePaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def notifyListeners(self, arg0: javawrappers.org.jfree.chart.event.RendererChangeEvent, ) -> None: ...
	@overload
	def setDefaultShape(self, arg0: javawrappers.java.awt.Shape, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def getItemCreateEntity(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def isSeriesVisible(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def setSeriesNegativeItemLabelPosition(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.chart.labels.ItemLabelPosition, ) -> None: ...
	@overload
	def setSeriesNegativeItemLabelPosition(self, arg0: Union[int, JInt], arg1: javawrappers.org.jfree.chart.labels.ItemLabelPosition, arg2: Union[int, JBoolean], ) -> None: ...
	def getDefaultSeriesVisibleInLegend(self, ) -> Union[int, JBoolean]: ...
	def lookupSeriesShape(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Shape: ...
	@overload
	def setDefaultFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setDefaultFillPaint(self, arg0: javawrappers.java.awt.Paint, arg1: Union[int, JBoolean], ) -> None: ...
	def setLegendShape(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Shape, ) -> None: ...
	def lookupSeriesPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def getDefaultFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getSeriesOutlineStroke(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def getSeriesCreateEntities(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Boolean: ...
	def notifyAll(self, ) -> None: ...
	def setAutoPopulateSeriesShape(self, arg0: Union[int, JBoolean], ) -> None: ...
	def lookupSeriesStroke(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def lookupSeriesOutlineStroke(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Stroke: ...
	def getDefaultOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getDefaultNegativeItemLabelPosition(self, ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getItemLabelAnchorOffset(self, ) -> Union[float, JDouble]: ...
	def getDefaultShape(self, ) -> javawrappers.java.awt.Shape: ...
	@overload
	def setDefaultStroke(self, arg0: javawrappers.java.awt.Stroke, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	@overload
	def setDefaultSeriesVisibleInLegend(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultSeriesVisibleInLegend(self, arg0: Union[int, JBoolean], arg1: Union[int, JBoolean], ) -> None: ...
	def getSeriesNegativeItemLabelPosition(self, arg0: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getDefaultLegendShape(self, ) -> javawrappers.java.awt.Shape: ...
	def getAutoPopulateSeriesOutlinePaint(self, ) -> Union[int, JBoolean]: ...
	def getLegendTextFont(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Font: ...
	@overload
	def setDefaultPositiveItemLabelPosition(self, arg0: javawrappers.org.jfree.chart.labels.ItemLabelPosition, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultPositiveItemLabelPosition(self, arg0: javawrappers.org.jfree.chart.labels.ItemLabelPosition, ) -> None: ...
	@overload
	def setSeriesFillPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesFillPaint(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setSeriesVisible(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def setSeriesVisible(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Boolean, ) -> None: ...
	@overload
	def setDefaultItemLabelsVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDefaultItemLabelsVisible(self, arg0: Union[int, JBoolean], arg1: Union[int, JBoolean], ) -> None: ...
	def setDefaultLegendShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def getDefaultItemLabelsVisible(self, ) -> Union[int, JBoolean]: ...
	def getAutoPopulateSeriesFillPaint(self, ) -> Union[int, JBoolean]: ...
	def lookupLegendTextPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def setAutoPopulateSeriesOutlinePaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getAutoPopulateSeriesPaint(self, ) -> Union[int, JBoolean]: ...
	def getPositiveItemLabelPosition(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.org.jfree.chart.labels.ItemLabelPosition: ...
	def getSeriesPaint(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Paint: ...
	def lookupLegendTextFont(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Font: ...
	def setDefaultEntityRadius(self, arg0: Union[int, JInt], ) -> None: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class LookupPaintScale:
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: javawrappers.java.awt.Paint, ): ...
	@overload
	def __init__(self, ): ...
	class PaintItem:
		def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.java.awt.Paint, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...


	def add(self, arg0: Union[float, JDouble], arg1: javawrappers.java.awt.Paint, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getDefaultPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def getUpperBound(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getLowerBound(self, ) -> Union[float, JDouble]: ...
	def getPaint(self, arg0: Union[float, JDouble], ) -> javawrappers.java.awt.Paint: ...


class AreaRendererEndType:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


