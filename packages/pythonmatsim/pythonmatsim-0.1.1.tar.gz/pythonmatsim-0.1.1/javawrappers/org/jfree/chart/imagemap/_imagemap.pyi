################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.io
import javawrappers.org.jfree.chart.imagemap
import javawrappers.org.jfree.chart

from jpype.types import *
from typing import Union

from typing import overload

class StandardURLTagFragmentGenerator:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def generateURLFragment(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ToolTipTagFragmentGenerator:
	def generateToolTipFragment(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...


class URLTagFragmentGenerator:
	def generateURLFragment(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...


class OverLIBToolTipTagFragmentGenerator:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def generateToolTipFragment(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class DynamicDriveToolTipTagFragmentGenerator:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def generateToolTipFragment(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class StandardToolTipTagFragmentGenerator:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def generateToolTipFragment(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ImageMapUtils:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def writeImageMap(arg0: javawrappers.java.io.PrintWriter, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jfree.chart.ChartRenderingInfo, arg3: javawrappers.org.jfree.chart.imagemap.ToolTipTagFragmentGenerator, arg4: javawrappers.org.jfree.chart.imagemap.URLTagFragmentGenerator, ) -> None: ...
	@overload
	@staticmethod
	def writeImageMap(arg0: javawrappers.java.io.PrintWriter, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jfree.chart.ChartRenderingInfo, ) -> None: ...
	@overload
	@staticmethod
	def writeImageMap(arg0: javawrappers.java.io.PrintWriter, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jfree.chart.ChartRenderingInfo, arg3: Union[int, JBoolean], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def htmlEscape(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getImageMap(arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jfree.chart.ChartRenderingInfo, arg2: javawrappers.org.jfree.chart.imagemap.ToolTipTagFragmentGenerator, arg3: javawrappers.org.jfree.chart.imagemap.URLTagFragmentGenerator, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getImageMap(arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jfree.chart.ChartRenderingInfo, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def javascriptEscape(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


