################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.awt
import javawrappers.org.jfree.chart.ui
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.jfree.chart.util
import javawrappers.java.awt.geom
import javawrappers.org.jfree.chart.renderer
import javawrappers.org.jfree.chart.event
import javawrappers.org.jfree.data.general
import javawrappers.org.jfree.chart
import javawrappers.org.jfree.chart.axis
import javawrappers.org.jfree.chart.block

from jpype.types import *
from typing import Union

from typing import overload

class TextTitle:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Font, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Font, arg2: javawrappers.java.awt.Paint, arg3: javawrappers.org.jfree.chart.ui.RectangleEdge, arg4: javawrappers.org.jfree.chart.ui.HorizontalAlignment, arg5: javawrappers.org.jfree.chart.ui.VerticalAlignment, arg6: javawrappers.org.jfree.chart.ui.RectangleInsets, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getMargin(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def setTextAlignment(self, arg0: javawrappers.org.jfree.chart.ui.HorizontalAlignment, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	def setPosition(self, arg0: javawrappers.org.jfree.chart.ui.RectangleEdge, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getContentYOffset(self, ) -> Union[float, JDouble]: ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	def getTextAlignment(self, ) -> javawrappers.org.jfree.chart.ui.HorizontalAlignment: ...
	def getContentXOffset(self, ) -> Union[float, JDouble]: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def setHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setBackgroundPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def setHorizontalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.HorizontalAlignment, ) -> None: ...
	def getMaximumLinesToDisplay(self, ) -> Union[int, JInt]: ...
	def setURLText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getFrame(self, ) -> javawrappers.org.jfree.chart.block.BlockFrame: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def getURLText(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getBackgroundPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	def setFrame(self, arg0: javawrappers.org.jfree.chart.block.BlockFrame, ) -> None: ...
	def getExpandToFitSpace(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setExpandToFitSpace(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setMaximumLinesToDisplay(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def setPadding(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	@overload
	def setMargin(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setMargin(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def getVerticalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.VerticalAlignment: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	def getPosition(self, ) -> javawrappers.org.jfree.chart.ui.RectangleEdge: ...
	def getHorizontalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.HorizontalAlignment: ...
	def setBorder(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def setVerticalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.VerticalAlignment, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def setText(self, arg0: javawrappers.java.lang.String, ) -> None: ...


class ImageTitle:
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.org.jfree.chart.ui.RectangleEdge, arg2: javawrappers.org.jfree.chart.ui.HorizontalAlignment, arg3: javawrappers.org.jfree.chart.ui.VerticalAlignment, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.org.jfree.chart.ui.RectangleEdge, arg4: javawrappers.org.jfree.chart.ui.HorizontalAlignment, arg5: javawrappers.org.jfree.chart.ui.VerticalAlignment, arg6: javawrappers.org.jfree.chart.ui.RectangleInsets, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Image, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getMargin(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def getFrame(self, ) -> javawrappers.org.jfree.chart.block.BlockFrame: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	def setPosition(self, arg0: javawrappers.org.jfree.chart.ui.RectangleEdge, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	def setFrame(self, arg0: javawrappers.org.jfree.chart.block.BlockFrame, ) -> None: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getContentYOffset(self, ) -> Union[float, JDouble]: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setPadding(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	def getContentXOffset(self, ) -> Union[float, JDouble]: ...
	def getPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	@overload
	def setMargin(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setMargin(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def getVerticalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.VerticalAlignment: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	def getPosition(self, ) -> javawrappers.org.jfree.chart.ui.RectangleEdge: ...
	def getHorizontalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.HorizontalAlignment: ...
	def setBorder(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def setVerticalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.VerticalAlignment, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getImage(self, ) -> javawrappers.java.awt.Image: ...
	def setHorizontalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.HorizontalAlignment, ) -> None: ...
	def setImage(self, arg0: javawrappers.java.awt.Image, ) -> None: ...


class LegendItemBlockContainer:
	def __init__(self, arg0: javawrappers.org.jfree.chart.block.Arrangement, arg1: javawrappers.org.jfree.data.general.Dataset, arg2: javawrappers.java.lang.Comparable, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setURLText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getMargin(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def getFrame(self, ) -> javawrappers.org.jfree.chart.block.BlockFrame: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def getBlocks(self, ) -> javawrappers.java.util.List: ...
	def getSeriesKey(self, ) -> javawrappers.java.lang.Comparable: ...
	def getURLText(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	def getSeriesIndex(self, ) -> Union[int, JInt]: ...
	def getDataset(self, ) -> javawrappers.org.jfree.data.general.Dataset: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	def setFrame(self, arg0: javawrappers.org.jfree.chart.block.BlockFrame, ) -> None: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getContentYOffset(self, ) -> Union[float, JDouble]: ...
	def setArrangement(self, arg0: javawrappers.org.jfree.chart.block.Arrangement, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.org.jfree.chart.block.Block, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.org.jfree.chart.block.Block, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def setPadding(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getContentXOffset(self, ) -> Union[float, JDouble]: ...
	def getArrangement(self, ) -> javawrappers.org.jfree.chart.block.Arrangement: ...
	def getPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	@overload
	def setMargin(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setMargin(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def setBorder(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...


class LegendGraphic:
	def __init__(self, arg0: javawrappers.java.awt.Shape, arg1: javawrappers.java.awt.Paint, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setLineVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setShapeVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setShapeLocation(self, arg0: javawrappers.org.jfree.chart.ui.RectangleAnchor, ) -> None: ...
	def getMargin(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def isLineVisible(self, ) -> Union[int, JBoolean]: ...
	def setLineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def getLinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getShapeLocation(self, ) -> javawrappers.org.jfree.chart.ui.RectangleAnchor: ...
	def getContentYOffset(self, ) -> Union[float, JDouble]: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def isShapeOutlineVisible(self, ) -> Union[int, JBoolean]: ...
	def isShapeVisible(self, ) -> Union[int, JBoolean]: ...
	def setShapeFilled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getContentXOffset(self, ) -> Union[float, JDouble]: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	def setHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setShapeOutlineVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setLine(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def setFillPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getFrame(self, ) -> javawrappers.org.jfree.chart.block.BlockFrame: ...
	def setShapeAnchor(self, arg0: javawrappers.org.jfree.chart.ui.RectangleAnchor, ) -> None: ...
	def getShape(self, ) -> javawrappers.java.awt.Shape: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	def setFrame(self, arg0: javawrappers.org.jfree.chart.block.BlockFrame, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getShapeAnchor(self, ) -> javawrappers.org.jfree.chart.ui.RectangleAnchor: ...
	def getLineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def setLinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setPadding(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getFillPaintTransformer(self, ) -> javawrappers.org.jfree.chart.ui.GradientPaintTransformer: ...
	def isShapeFilled(self, ) -> Union[int, JBoolean]: ...
	def getPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	@overload
	def setMargin(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setMargin(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def setFillPaintTransformer(self, arg0: javawrappers.org.jfree.chart.ui.GradientPaintTransformer, ) -> None: ...
	def getLine(self, ) -> javawrappers.java.awt.Shape: ...
	def getFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def setShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setBorder(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class CompositeTitle:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.jfree.chart.block.BlockContainer, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getMargin(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def getFrame(self, ) -> javawrappers.org.jfree.chart.block.BlockFrame: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	def setPosition(self, arg0: javawrappers.org.jfree.chart.ui.RectangleEdge, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	def getBackgroundPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	def setFrame(self, arg0: javawrappers.org.jfree.chart.block.BlockFrame, ) -> None: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getContentYOffset(self, ) -> Union[float, JDouble]: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setPadding(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	def getContentXOffset(self, ) -> Union[float, JDouble]: ...
	def getContainer(self, ) -> javawrappers.org.jfree.chart.block.BlockContainer: ...
	def getPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	@overload
	def setMargin(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setMargin(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def setBackgroundPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getVerticalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.VerticalAlignment: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	def getPosition(self, ) -> javawrappers.org.jfree.chart.ui.RectangleEdge: ...
	def getHorizontalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.HorizontalAlignment: ...
	def setBorder(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def setVerticalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.VerticalAlignment, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setTitleContainer(self, arg0: javawrappers.org.jfree.chart.block.BlockContainer, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setHorizontalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.HorizontalAlignment, ) -> None: ...


class Title:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getMargin(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def getFrame(self, ) -> javawrappers.org.jfree.chart.block.BlockFrame: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	def setPosition(self, arg0: javawrappers.org.jfree.chart.ui.RectangleEdge, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def setFrame(self, arg0: javawrappers.org.jfree.chart.block.BlockFrame, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getContentYOffset(self, ) -> Union[float, JDouble]: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setPadding(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	def getContentXOffset(self, ) -> Union[float, JDouble]: ...
	def getPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	@overload
	def setMargin(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setMargin(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def getVerticalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.VerticalAlignment: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	def getPosition(self, ) -> javawrappers.org.jfree.chart.ui.RectangleEdge: ...
	def getHorizontalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.HorizontalAlignment: ...
	def setBorder(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def setVerticalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.VerticalAlignment, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setHorizontalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.HorizontalAlignment, ) -> None: ...


class PaintScaleLegend:
	def __init__(self, arg0: javawrappers.org.jfree.chart.renderer.PaintScale, arg1: javawrappers.org.jfree.chart.axis.ValueAxis, ): ...
	def setStripOutlineVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setSubdivisionCount(self, arg0: Union[int, JInt], ) -> None: ...
	def getAxisOffset(self, ) -> Union[float, JDouble]: ...
	def getMargin(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def isStripOutlineVisible(self, ) -> Union[int, JBoolean]: ...
	def getStripWidth(self, ) -> Union[float, JDouble]: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	def setPosition(self, arg0: javawrappers.org.jfree.chart.ui.RectangleEdge, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	def getAxisLocation(self, ) -> javawrappers.org.jfree.chart.axis.AxisLocation: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getContentYOffset(self, ) -> Union[float, JDouble]: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getStripOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	def setStripWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def getContentXOffset(self, ) -> Union[float, JDouble]: ...
	def setScale(self, arg0: javawrappers.org.jfree.chart.renderer.PaintScale, ) -> None: ...
	def setAxisOffset(self, arg0: Union[float, JDouble], ) -> None: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def setHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setBackgroundPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getSubdivisionCount(self, ) -> Union[int, JInt]: ...
	def getScale(self, ) -> javawrappers.org.jfree.chart.renderer.PaintScale: ...
	def setAxisLocation(self, arg0: javawrappers.org.jfree.chart.axis.AxisLocation, ) -> None: ...
	def setHorizontalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.HorizontalAlignment, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def axisChanged(self, arg0: javawrappers.org.jfree.chart.event.AxisChangeEvent, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getFrame(self, ) -> javawrappers.org.jfree.chart.block.BlockFrame: ...
	def setStripOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def getBackgroundPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	def setStripOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setFrame(self, arg0: javawrappers.org.jfree.chart.block.BlockFrame, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def setPadding(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	@overload
	def setMargin(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setMargin(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getAxis(self, ) -> javawrappers.org.jfree.chart.axis.ValueAxis: ...
	def setAxis(self, arg0: javawrappers.org.jfree.chart.axis.ValueAxis, ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def getStripOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getVerticalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.VerticalAlignment: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	def getPosition(self, ) -> javawrappers.org.jfree.chart.ui.RectangleEdge: ...
	def getHorizontalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.HorizontalAlignment: ...
	def setBorder(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def setVerticalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.VerticalAlignment, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class LegendTitle:
	@overload
	def __init__(self, arg0: javawrappers.org.jfree.chart.LegendItemSource, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.jfree.chart.LegendItemSource, arg1: javawrappers.org.jfree.chart.block.Arrangement, arg2: javawrappers.org.jfree.chart.block.Arrangement, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getLegendItemGraphicLocation(self, ) -> javawrappers.org.jfree.chart.ui.RectangleAnchor: ...
	def getMargin(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def setLegendItemGraphicAnchor(self, arg0: javawrappers.org.jfree.chart.ui.RectangleAnchor, ) -> None: ...
	def setWrapper(self, arg0: javawrappers.org.jfree.chart.block.BlockContainer, ) -> None: ...
	def setItemPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	def setPosition(self, arg0: javawrappers.org.jfree.chart.ui.RectangleEdge, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getContentYOffset(self, ) -> Union[float, JDouble]: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	def getContentXOffset(self, ) -> Union[float, JDouble]: ...
	def getItemPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setSortOrder(self, arg0: javawrappers.org.jfree.chart.util.SortOrder, ) -> None: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	def getItemLabelPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def setHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setBackgroundPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getLegendItemGraphicPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def getWrapper(self, ) -> javawrappers.org.jfree.chart.block.BlockContainer: ...
	def setItemLabelPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def setHorizontalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.HorizontalAlignment, ) -> None: ...
	def setItemFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getLegendItemGraphicAnchor(self, ) -> javawrappers.org.jfree.chart.ui.RectangleAnchor: ...
	def notifyAll(self, ) -> None: ...
	def getFrame(self, ) -> javawrappers.org.jfree.chart.block.BlockFrame: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def getSources(self, ) -> JArray(javawrappers.org.jfree.chart.LegendItemSource, 1): ...
	def getLegendItemGraphicEdge(self, ) -> javawrappers.org.jfree.chart.ui.RectangleEdge: ...
	def setSources(self, arg0: JArray(javawrappers.org.jfree.chart.LegendItemSource, 1), ) -> None: ...
	def notify(self, ) -> None: ...
	def getSortOrder(self, ) -> javawrappers.org.jfree.chart.util.SortOrder: ...
	def getBackgroundPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setLegendItemGraphicPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	def setFrame(self, arg0: javawrappers.org.jfree.chart.block.BlockFrame, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setLegendItemGraphicEdge(self, arg0: javawrappers.org.jfree.chart.ui.RectangleEdge, ) -> None: ...
	@overload
	def setPadding(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	@overload
	def setMargin(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setMargin(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def getVerticalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.VerticalAlignment: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	def getPosition(self, ) -> javawrappers.org.jfree.chart.ui.RectangleEdge: ...
	def getHorizontalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.HorizontalAlignment: ...
	def setBorder(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def setVerticalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.VerticalAlignment, ) -> None: ...
	def setLegendItemGraphicLocation(self, arg0: javawrappers.org.jfree.chart.ui.RectangleAnchor, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getItemContainer(self, ) -> javawrappers.org.jfree.chart.block.BlockContainer: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getItemFont(self, ) -> javawrappers.java.awt.Font: ...


class ShortTextTitle:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getMargin(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def setTextAlignment(self, arg0: javawrappers.org.jfree.chart.ui.HorizontalAlignment, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	def setPosition(self, arg0: javawrappers.org.jfree.chart.ui.RectangleEdge, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getContentYOffset(self, ) -> Union[float, JDouble]: ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	def getTextAlignment(self, ) -> javawrappers.org.jfree.chart.ui.HorizontalAlignment: ...
	def getContentXOffset(self, ) -> Union[float, JDouble]: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def setHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setBackgroundPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def setHorizontalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.HorizontalAlignment, ) -> None: ...
	def getMaximumLinesToDisplay(self, ) -> Union[int, JInt]: ...
	def setURLText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getFrame(self, ) -> javawrappers.org.jfree.chart.block.BlockFrame: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def getURLText(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getBackgroundPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	def setFrame(self, arg0: javawrappers.org.jfree.chart.block.BlockFrame, ) -> None: ...
	def getExpandToFitSpace(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setExpandToFitSpace(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setMaximumLinesToDisplay(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def setPadding(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	@overload
	def setMargin(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setMargin(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def getVerticalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.VerticalAlignment: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	def getPosition(self, ) -> javawrappers.org.jfree.chart.ui.RectangleEdge: ...
	def getHorizontalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.HorizontalAlignment: ...
	def setBorder(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def setVerticalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.VerticalAlignment, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def setText(self, arg0: javawrappers.java.lang.String, ) -> None: ...


class DateTitle:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Locale, arg2: javawrappers.java.awt.Font, arg3: javawrappers.java.awt.Paint, arg4: javawrappers.org.jfree.chart.ui.RectangleEdge, arg5: javawrappers.org.jfree.chart.ui.HorizontalAlignment, arg6: javawrappers.org.jfree.chart.ui.VerticalAlignment, arg7: javawrappers.org.jfree.chart.ui.RectangleInsets, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Locale, arg2: javawrappers.java.awt.Font, arg3: javawrappers.java.awt.Paint, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getMargin(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def setTextAlignment(self, arg0: javawrappers.org.jfree.chart.ui.HorizontalAlignment, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	def setPosition(self, arg0: javawrappers.org.jfree.chart.ui.RectangleEdge, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getContentYOffset(self, ) -> Union[float, JDouble]: ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	def getTextAlignment(self, ) -> javawrappers.org.jfree.chart.ui.HorizontalAlignment: ...
	def getContentXOffset(self, ) -> Union[float, JDouble]: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def setHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setBackgroundPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def setHorizontalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.HorizontalAlignment, ) -> None: ...
	def getMaximumLinesToDisplay(self, ) -> Union[int, JInt]: ...
	def setURLText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getFrame(self, ) -> javawrappers.org.jfree.chart.block.BlockFrame: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def getURLText(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getBackgroundPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	def setFrame(self, arg0: javawrappers.org.jfree.chart.block.BlockFrame, ) -> None: ...
	def getExpandToFitSpace(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setExpandToFitSpace(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setMaximumLinesToDisplay(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def setPadding(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def setDateFormat(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Locale, ) -> None: ...
	def getPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	@overload
	def setMargin(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setMargin(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def getVerticalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.VerticalAlignment: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.TitleChangeListener, ) -> None: ...
	def getPosition(self, ) -> javawrappers.org.jfree.chart.ui.RectangleEdge: ...
	def getHorizontalAlignment(self, ) -> javawrappers.org.jfree.chart.ui.HorizontalAlignment: ...
	def setBorder(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def setVerticalAlignment(self, arg0: javawrappers.org.jfree.chart.ui.VerticalAlignment, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def setText(self, arg0: javawrappers.java.lang.String, ) -> None: ...


