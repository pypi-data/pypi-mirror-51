################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.awt
import javawrappers.org.jfree.chart.ui
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.jfree.data
import javawrappers.java.awt.geom
import javawrappers.org.jfree.chart.text
import javawrappers.org.jfree.chart.entity
import javawrappers.org.jfree.chart.block

from jpype.types import *
from typing import Union

from typing import overload

class EntityBlockParams:
	def getGenerateEntities(self, ) -> Union[int, JBoolean]: ...


class BlockContainer:
	@overload
	def __init__(self, arg0: javawrappers.org.jfree.chart.block.Arrangement, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getMargin(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def getFrame(self, ) -> javawrappers.org.jfree.chart.block.BlockFrame: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def getBlocks(self, ) -> javawrappers.java.util.List: ...
	def notify(self, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	def setFrame(self, arg0: javawrappers.org.jfree.chart.block.BlockFrame, ) -> None: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getContentYOffset(self, ) -> Union[float, JDouble]: ...
	def setArrangement(self, arg0: javawrappers.org.jfree.chart.block.Arrangement, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.org.jfree.chart.block.Block, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.org.jfree.chart.block.Block, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def setPadding(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getContentXOffset(self, ) -> Union[float, JDouble]: ...
	def getArrangement(self, ) -> javawrappers.org.jfree.chart.block.Arrangement: ...
	def getPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	@overload
	def setMargin(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setMargin(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def setBorder(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class CenterArrangement:
	def __init__(self, ): ...
	def add(self, arg0: javawrappers.org.jfree.chart.block.Block, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def arrange(self, arg0: javawrappers.org.jfree.chart.block.BlockContainer, arg1: javawrappers.java.awt.Graphics2D, arg2: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class AbstractBlock:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getMargin(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def getFrame(self, ) -> javawrappers.org.jfree.chart.block.BlockFrame: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def setFrame(self, arg0: javawrappers.org.jfree.chart.block.BlockFrame, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getContentYOffset(self, ) -> Union[float, JDouble]: ...
	@overload
	def setPadding(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getContentXOffset(self, ) -> Union[float, JDouble]: ...
	def getPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	@overload
	def setMargin(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setMargin(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def setBorder(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class BlockParams:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setGenerateEntities(self, arg0: Union[int, JBoolean], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getGenerateEntities(self, ) -> Union[int, JBoolean]: ...
	def getTranslateY(self, ) -> Union[float, JDouble]: ...
	def getTranslateX(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def setTranslateX(self, arg0: Union[float, JDouble], ) -> None: ...
	def setTranslateY(self, arg0: Union[float, JDouble], ) -> None: ...


class ColumnArrangement:
	@overload
	def __init__(self, arg0: javawrappers.org.jfree.chart.ui.HorizontalAlignment, arg1: javawrappers.org.jfree.chart.ui.VerticalAlignment, arg2: Union[float, JDouble], arg3: Union[float, JDouble], ): ...
	@overload
	def __init__(self, ): ...
	def add(self, arg0: javawrappers.org.jfree.chart.block.Block, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def arrange(self, arg0: javawrappers.org.jfree.chart.block.BlockContainer, arg1: javawrappers.java.awt.Graphics2D, arg2: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class EmptyBlock:
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getMargin(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def getFrame(self, ) -> javawrappers.org.jfree.chart.block.BlockFrame: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	def setFrame(self, arg0: javawrappers.org.jfree.chart.block.BlockFrame, ) -> None: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getContentYOffset(self, ) -> Union[float, JDouble]: ...
	@overload
	def setPadding(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getContentXOffset(self, ) -> Union[float, JDouble]: ...
	def getPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	@overload
	def setMargin(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setMargin(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def setBorder(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class LabelBlock:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Font, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Font, arg2: javawrappers.java.awt.Paint, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setURLText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getMargin(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def getFrame(self, ) -> javawrappers.org.jfree.chart.block.BlockFrame: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def getURLText(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	def setFrame(self, arg0: javawrappers.org.jfree.chart.block.BlockFrame, ) -> None: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getContentYOffset(self, ) -> Union[float, JDouble]: ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	@overload
	def setPadding(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getContentXOffset(self, ) -> Union[float, JDouble]: ...
	def getPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	@overload
	def setMargin(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setMargin(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def setBorder(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setTextAnchor(self, arg0: javawrappers.org.jfree.chart.ui.RectangleAnchor, ) -> None: ...
	def getTextAnchor(self, ) -> javawrappers.org.jfree.chart.ui.RectangleAnchor: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def getContentAlignmentPoint(self, ) -> javawrappers.org.jfree.chart.text.TextBlockAnchor: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def setContentAlignmentPoint(self, arg0: javawrappers.org.jfree.chart.text.TextBlockAnchor, ) -> None: ...


class LineBorder:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Paint, arg1: javawrappers.java.awt.Stroke, arg2: javawrappers.org.jfree.chart.ui.RectangleInsets, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getInsets(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def notify(self, ) -> None: ...


class BlockResult:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setEntityCollection(self, arg0: javawrappers.org.jfree.chart.entity.EntityCollection, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getEntityCollection(self, ) -> javawrappers.org.jfree.chart.entity.EntityCollection: ...


class Block:
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...


class FlowArrangement:
	@overload
	def __init__(self, arg0: javawrappers.org.jfree.chart.ui.HorizontalAlignment, arg1: javawrappers.org.jfree.chart.ui.VerticalAlignment, arg2: Union[float, JDouble], arg3: Union[float, JDouble], ): ...
	@overload
	def __init__(self, ): ...
	def add(self, arg0: javawrappers.org.jfree.chart.block.Block, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def arrange(self, arg0: javawrappers.org.jfree.chart.block.BlockContainer, arg1: javawrappers.java.awt.Graphics2D, arg2: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class BlockBorder:
	@overload
	def __init__(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, arg1: javawrappers.java.awt.Paint, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Paint, ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], arg4: javawrappers.java.awt.Paint, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getInsets(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def notify(self, ) -> None: ...


class BlockFrame:
	def getInsets(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...


class BorderArrangement:
	def __init__(self, ): ...
	def add(self, arg0: javawrappers.org.jfree.chart.block.Block, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def arrange(self, arg0: javawrappers.org.jfree.chart.block.BlockContainer, arg1: javawrappers.java.awt.Graphics2D, arg2: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ColorBlock:
	def __init__(self, arg0: javawrappers.java.awt.Paint, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getMargin(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	def getFrame(self, ) -> javawrappers.org.jfree.chart.block.BlockFrame: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.awt.geom.Rectangle2D: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	def setFrame(self, arg0: javawrappers.org.jfree.chart.block.BlockFrame, ) -> None: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	@overload
	def arrange(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getContentYOffset(self, ) -> Union[float, JDouble]: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	@overload
	def setPadding(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setPadding(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getContentXOffset(self, ) -> Union[float, JDouble]: ...
	def getPadding(self, ) -> javawrappers.org.jfree.chart.ui.RectangleInsets: ...
	@overload
	def setMargin(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setMargin(self, arg0: javawrappers.org.jfree.chart.ui.RectangleInsets, ) -> None: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setBounds(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ) -> None: ...
	def setHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def setBorder(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setID(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class LengthConstraintType:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class GridArrangement:
	def __init__(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ): ...
	def add(self, arg0: javawrappers.org.jfree.chart.block.Block, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def arrange(self, arg0: javawrappers.org.jfree.chart.block.BlockContainer, arg1: javawrappers.java.awt.Graphics2D, arg2: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class Arrangement:
	def add(self, arg0: javawrappers.org.jfree.chart.block.Block, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def arrange(self, arg0: javawrappers.org.jfree.chart.block.BlockContainer, arg1: javawrappers.java.awt.Graphics2D, arg2: javawrappers.org.jfree.chart.block.RectangleConstraint, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def clear(self, ) -> None: ...


class RectangleConstraint:
	@overload
	def __init__(self, arg0: javawrappers.org.jfree.data.Range, arg1: javawrappers.org.jfree.data.Range, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.jfree.data.Range, arg1: Union[float, JDouble], ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.jfree.data.Range, ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.jfree.data.Range, arg2: javawrappers.org.jfree.chart.block.LengthConstraintType, arg3: Union[float, JDouble], arg4: javawrappers.org.jfree.data.Range, arg5: javawrappers.org.jfree.chart.block.LengthConstraintType, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def toFixedHeight(self, arg0: Union[float, JDouble], ) -> javawrappers.org.jfree.chart.block.RectangleConstraint: ...
	def notifyAll(self, ) -> None: ...
	def toRangeHeight(self, arg0: javawrappers.org.jfree.data.Range, ) -> javawrappers.org.jfree.chart.block.RectangleConstraint: ...
	def getWidthRange(self, ) -> javawrappers.org.jfree.data.Range: ...
	def toUnconstrainedHeight(self, ) -> javawrappers.org.jfree.chart.block.RectangleConstraint: ...
	def calculateConstrainedSize(self, arg0: javawrappers.org.jfree.chart.ui.Size2D, ) -> javawrappers.org.jfree.chart.ui.Size2D: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def toUnconstrainedWidth(self, ) -> javawrappers.org.jfree.chart.block.RectangleConstraint: ...
	def notify(self, ) -> None: ...
	def getHeightRange(self, ) -> javawrappers.org.jfree.data.Range: ...
	def toRangeWidth(self, arg0: javawrappers.org.jfree.data.Range, ) -> javawrappers.org.jfree.chart.block.RectangleConstraint: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getHeightConstraintType(self, ) -> javawrappers.org.jfree.chart.block.LengthConstraintType: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getWidthConstraintType(self, ) -> javawrappers.org.jfree.chart.block.LengthConstraintType: ...
	def toFixedWidth(self, arg0: Union[float, JDouble], ) -> javawrappers.org.jfree.chart.block.RectangleConstraint: ...


class EntityBlockResult:
	def getEntityCollection(self, ) -> javawrappers.org.jfree.chart.entity.EntityCollection: ...


