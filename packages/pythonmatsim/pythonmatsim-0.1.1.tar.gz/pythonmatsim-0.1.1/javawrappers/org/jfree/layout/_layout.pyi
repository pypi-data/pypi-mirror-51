################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.awt
import javawrappers.java.lang

from jpype.types import *
from typing import Union

from typing import overload

class FormatLayout:
	def __init__(self, arg0: Union[int, JInt], arg1: JArray(Union[int, JInt], 1), ): ...
	def preferredLayoutSize(self, arg0: javawrappers.java.awt.Container, ) -> javawrappers.java.awt.Dimension: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def removeLayoutComponent(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def removeLayoutComponent(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def minimumLayoutSize(self, arg0: javawrappers.java.awt.Container, ) -> javawrappers.java.awt.Dimension: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def layoutContainer(self, arg0: javawrappers.java.awt.Container, ) -> None: ...
	@overload
	def addLayoutComponent(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def addLayoutComponent(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def complete(self, ) -> None: ...
	def notify(self, ) -> None: ...


class LCBLayout:
	def __init__(self, arg0: Union[int, JInt], ): ...
	def preferredLayoutSize(self, arg0: javawrappers.java.awt.Container, ) -> javawrappers.java.awt.Dimension: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def removeLayoutComponent(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def removeLayoutComponent(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def minimumLayoutSize(self, arg0: javawrappers.java.awt.Container, ) -> javawrappers.java.awt.Dimension: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def layoutContainer(self, arg0: javawrappers.java.awt.Container, ) -> None: ...
	@overload
	def addLayoutComponent(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def addLayoutComponent(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class CenterLayout:
	def __init__(self, ): ...
	def preferredLayoutSize(self, arg0: javawrappers.java.awt.Container, ) -> javawrappers.java.awt.Dimension: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def removeLayoutComponent(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def removeLayoutComponent(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def minimumLayoutSize(self, arg0: javawrappers.java.awt.Container, ) -> javawrappers.java.awt.Dimension: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def layoutContainer(self, arg0: javawrappers.java.awt.Container, ) -> None: ...
	@overload
	def addLayoutComponent(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def addLayoutComponent(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class RadialLayout:
	def __init__(self, ): ...
	def preferredLayoutSize(self, arg0: javawrappers.java.awt.Container, ) -> javawrappers.java.awt.Dimension: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def removeLayoutComponent(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def removeLayoutComponent(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def minimumLayoutSize(self, arg0: javawrappers.java.awt.Container, ) -> javawrappers.java.awt.Dimension: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def layoutContainer(self, arg0: javawrappers.java.awt.Container, ) -> None: ...
	@overload
	def addLayoutComponent(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def addLayoutComponent(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def main(arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def notify(self, ) -> None: ...


