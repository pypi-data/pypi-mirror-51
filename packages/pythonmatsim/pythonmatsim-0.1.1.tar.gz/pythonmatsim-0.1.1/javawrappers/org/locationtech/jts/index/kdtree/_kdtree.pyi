################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.locationtech.jts.index.kdtree
import javawrappers.org.locationtech.jts.geom

from jpype.types import *
from typing import Union

from typing import overload

class KdNode:
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Coordinate, arg1: javawrappers.java.lang.Object, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def isRepeated(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getCoordinate(self, ) -> javawrappers.org.locationtech.jts.geom.Coordinate: ...
	def getX(self, ) -> Union[float, JDouble]: ...
	def getRight(self, ) -> javawrappers.org.locationtech.jts.index.kdtree.KdNode: ...
	def getY(self, ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCount(self, ) -> Union[int, JInt]: ...
	def getData(self, ) -> javawrappers.java.lang.Object: ...
	def getLeft(self, ) -> javawrappers.org.locationtech.jts.index.kdtree.KdNode: ...


class KdNodeVisitor:
	def visit(self, arg0: javawrappers.org.locationtech.jts.index.kdtree.KdNode, ) -> None: ...


class KdTree:
	@overload
	def __init__(self, arg0: Union[float, JDouble], ): ...
	@overload
	def __init__(self, ): ...
	class BestMatchVisitor:
		def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Coordinate, arg1: Union[float, JDouble], ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def queryEnvelope(self, ) -> javawrappers.org.locationtech.jts.geom.Envelope: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getNode(self, ) -> javawrappers.org.locationtech.jts.index.kdtree.KdNode: ...
		def visit(self, arg0: javawrappers.org.locationtech.jts.index.kdtree.KdNode, ) -> None: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def toCoordinates(arg0: javawrappers.java.util.Collection, ) -> JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1): ...
	@overload
	@staticmethod
	def toCoordinates(arg0: javawrappers.java.util.Collection, arg1: Union[int, JBoolean], ) -> JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1): ...
	def notifyAll(self, ) -> None: ...
	@overload
	def query(self, arg0: javawrappers.org.locationtech.jts.geom.Envelope, ) -> javawrappers.java.util.List: ...
	@overload
	def query(self, arg0: javawrappers.org.locationtech.jts.geom.Envelope, arg1: javawrappers.java.util.List, ) -> None: ...
	@overload
	def query(self, arg0: javawrappers.org.locationtech.jts.geom.Envelope, arg1: javawrappers.org.locationtech.jts.index.kdtree.KdNodeVisitor, ) -> None: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	@overload
	def insert(self, arg0: javawrappers.org.locationtech.jts.geom.Coordinate, arg1: javawrappers.java.lang.Object, ) -> javawrappers.org.locationtech.jts.index.kdtree.KdNode: ...
	@overload
	def insert(self, arg0: javawrappers.org.locationtech.jts.geom.Coordinate, ) -> javawrappers.org.locationtech.jts.index.kdtree.KdNode: ...
	def notify(self, ) -> None: ...
	def queryEnvelope(self, ) -> javawrappers.org.locationtech.jts.geom.Envelope: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getNode(self, ) -> javawrappers.org.locationtech.jts.index.kdtree.KdNode: ...
	def visit(self, arg0: javawrappers.org.locationtech.jts.index.kdtree.KdNode, ) -> None: ...


