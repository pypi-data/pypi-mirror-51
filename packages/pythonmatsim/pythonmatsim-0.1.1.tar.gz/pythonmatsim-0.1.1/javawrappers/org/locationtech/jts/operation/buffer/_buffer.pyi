################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.locationtech.jts.operation.buffer
import javawrappers.org.locationtech.jts.geom

from jpype.types import *
from typing import Union

from typing import overload

class BufferInputLineSimplifier:
	def __init__(self, arg0: JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1), ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def simplify(self, arg0: Union[float, JDouble], ) -> JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1): ...
	@overload
	@staticmethod
	def simplify(arg0: JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1), arg1: Union[float, JDouble], ) -> JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1): ...
	def notify(self, ) -> None: ...


class OffsetCurveBuilder:
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.PrecisionModel, arg1: javawrappers.org.locationtech.jts.operation.buffer.BufferParameters, ): ...
	def getRingCurve(self, arg0: JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1), arg1: Union[int, JInt], arg2: Union[float, JDouble], ) -> JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1): ...
	def getLineCurve(self, arg0: JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1), arg1: Union[float, JDouble], ) -> JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getBufferParameters(self, ) -> javawrappers.org.locationtech.jts.operation.buffer.BufferParameters: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getOffsetCurve(self, arg0: JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1), arg1: Union[float, JDouble], ) -> JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1): ...
	def notify(self, ) -> None: ...


class OffsetCurveSetBuilder:
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: Union[float, JDouble], arg2: javawrappers.org.locationtech.jts.operation.buffer.OffsetCurveBuilder, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getCurves(self, ) -> javawrappers.java.util.List: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class BufferParameters:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[float, JDouble], ): ...
	def setJoinStyle(self, arg0: Union[int, JInt], ) -> None: ...
	def getJoinStyle(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getEndCapStyle(self, ) -> Union[int, JInt]: ...
	def getQuadrantSegments(self, ) -> Union[int, JInt]: ...
	def setEndCapStyle(self, arg0: Union[int, JInt], ) -> None: ...
	def setQuadrantSegments(self, arg0: Union[int, JInt], ) -> None: ...
	def notify(self, ) -> None: ...
	def setSimplifyFactor(self, arg0: Union[float, JDouble], ) -> None: ...
	def isSingleSided(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getSimplifyFactor(self, ) -> Union[float, JDouble]: ...
	def setSingleSided(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setMitreLimit(self, arg0: Union[float, JDouble], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getMitreLimit(self, ) -> Union[float, JDouble]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def bufferDistanceError(arg0: Union[int, JInt], ) -> Union[float, JDouble]: ...


class BufferOp:
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: javawrappers.org.locationtech.jts.operation.buffer.BufferParameters, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getResultGeometry(self, arg0: Union[float, JDouble], ) -> javawrappers.org.locationtech.jts.geom.Geometry: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def bufferOp(arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: Union[float, JDouble], arg2: Union[int, JInt], ) -> javawrappers.org.locationtech.jts.geom.Geometry: ...
	@overload
	@staticmethod
	def bufferOp(arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: Union[float, JDouble], arg2: javawrappers.org.locationtech.jts.operation.buffer.BufferParameters, ) -> javawrappers.org.locationtech.jts.geom.Geometry: ...
	@overload
	@staticmethod
	def bufferOp(arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: Union[float, JDouble], ) -> javawrappers.org.locationtech.jts.geom.Geometry: ...
	@overload
	@staticmethod
	def bufferOp(arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: Union[float, JDouble], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> javawrappers.org.locationtech.jts.geom.Geometry: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setEndCapStyle(self, arg0: Union[int, JInt], ) -> None: ...
	def setQuadrantSegments(self, arg0: Union[int, JInt], ) -> None: ...
	def notify(self, ) -> None: ...


