################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.util
import javawrappers.java.lang
import javawrappers.org.locationtech.jts.geom

from jpype.types import *
from typing import Union

from typing import overload

class Polygonizer:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[int, JBoolean], ): ...
	class LineStringAdder:
		def filter(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	@overload
	def add(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getGeometry(self, ) -> javawrappers.org.locationtech.jts.geom.Geometry: ...
	def notify(self, ) -> None: ...
	def getDangles(self, ) -> javawrappers.java.util.Collection: ...
	def filter(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ) -> None: ...
	def getInvalidRingLines(self, ) -> javawrappers.java.util.Collection: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setCheckRingsValid(self, arg0: Union[int, JBoolean], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getPolygons(self, ) -> javawrappers.java.util.Collection: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCutEdges(self, ) -> javawrappers.java.util.Collection: ...


