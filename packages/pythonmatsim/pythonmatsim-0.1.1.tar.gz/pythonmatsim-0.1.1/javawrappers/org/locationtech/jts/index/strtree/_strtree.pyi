################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.locationtech.jts.index.strtree
import javawrappers.java.util.function
import javawrappers.org.locationtech.jts.geom
import javawrappers.org.locationtech.jts.index

from jpype.types import *
from typing import Union

from typing import overload

class AbstractSTRtree:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	class IntersectsOp:
		def intersects(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getNodeCapacity(self, ) -> Union[int, JInt]: ...
	def intersects(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def build(self, ) -> None: ...
	def itemsTree(self, ) -> javawrappers.java.util.List: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getRoot(self, ) -> javawrappers.org.locationtech.jts.index.strtree.AbstractNode: ...
	def notify(self, ) -> None: ...


class GeometryItemDistance:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def distance(self, arg0: javawrappers.org.locationtech.jts.index.strtree.ItemBoundable, arg1: javawrappers.org.locationtech.jts.index.strtree.ItemBoundable, ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class STRtree:
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	@overload
	def __init__(self, ): ...
	class STRtreeNode:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def getLevel(self, ) -> Union[int, JInt]: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def size(self, ) -> Union[int, JInt]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def getChildBoundables(self, ) -> javawrappers.java.util.List: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def isEmpty(self, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def addChildBoundable(self, arg0: javawrappers.org.locationtech.jts.index.strtree.Boundable, ) -> None: ...
		def notify(self, ) -> None: ...
		def getBounds(self, ) -> javawrappers.java.lang.Object: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getNodeCapacity(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def query(self, arg0: javawrappers.org.locationtech.jts.geom.Envelope, ) -> javawrappers.java.util.List: ...
	@overload
	def query(self, arg0: javawrappers.org.locationtech.jts.geom.Envelope, arg1: javawrappers.org.locationtech.jts.index.ItemVisitor, ) -> None: ...
	@overload
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def insert(self, arg0: javawrappers.org.locationtech.jts.geom.Envelope, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...
	def remove(self, arg0: javawrappers.org.locationtech.jts.geom.Envelope, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getLevel(self, ) -> Union[int, JInt]: ...
	def depth(self, ) -> Union[int, JInt]: ...
	@overload
	def size(self, ) -> Union[int, JInt]: ...
	@overload
	def size(self, ) -> Union[int, JInt]: ...
	def build(self, ) -> None: ...
	def itemsTree(self, ) -> javawrappers.java.util.List: ...
	def getChildBoundables(self, ) -> javawrappers.java.util.List: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def nearestNeighbour(self, arg0: javawrappers.org.locationtech.jts.index.strtree.ItemDistance, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def nearestNeighbour(self, arg0: javawrappers.org.locationtech.jts.geom.Envelope, arg1: javawrappers.java.lang.Object, arg2: javawrappers.org.locationtech.jts.index.strtree.ItemDistance, arg3: Union[int, JInt], ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def nearestNeighbour(self, arg0: javawrappers.org.locationtech.jts.index.strtree.STRtree, arg1: javawrappers.org.locationtech.jts.index.strtree.ItemDistance, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def nearestNeighbour(self, arg0: javawrappers.org.locationtech.jts.geom.Envelope, arg1: javawrappers.java.lang.Object, arg2: javawrappers.org.locationtech.jts.index.strtree.ItemDistance, ) -> javawrappers.java.lang.Object: ...
	def getRoot(self, ) -> javawrappers.org.locationtech.jts.index.strtree.AbstractNode: ...
	def addChildBoundable(self, arg0: javawrappers.org.locationtech.jts.index.strtree.Boundable, ) -> None: ...


class ItemBoundable:
	def __init__(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getItem(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.lang.Object: ...


class Interval:
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.index.strtree.Interval, ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def expandToInclude(self, arg0: javawrappers.org.locationtech.jts.index.strtree.Interval, ) -> javawrappers.org.locationtech.jts.index.strtree.Interval: ...
	def intersects(self, arg0: javawrappers.org.locationtech.jts.index.strtree.Interval, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getCentre(self, ) -> Union[float, JDouble]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class BoundablePairDistanceComparator:
	def __init__(self, arg0: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def compare(self, arg0: javawrappers.org.locationtech.jts.index.strtree.BoundablePair, arg1: javawrappers.org.locationtech.jts.index.strtree.BoundablePair, ) -> Union[int, JInt]: ...
	@overload
	def compare(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def thenComparingLong(self, arg0: javawrappers.java.util.function.ToLongFunction, ) -> javawrappers.java.util.Comparator: ...
	def thenComparingInt(self, arg0: javawrappers.java.util.function.ToIntFunction, ) -> javawrappers.java.util.Comparator: ...
	@overload
	def thenComparing(self, arg0: javawrappers.java.util.function.Function, ) -> javawrappers.java.util.Comparator: ...
	@overload
	def thenComparing(self, arg0: javawrappers.java.util.function.Function, arg1: javawrappers.java.util.Comparator, ) -> javawrappers.java.util.Comparator: ...
	@overload
	def thenComparing(self, arg0: javawrappers.java.util.Comparator, ) -> javawrappers.java.util.Comparator: ...
	def thenComparingDouble(self, arg0: javawrappers.java.util.function.ToDoubleFunction, ) -> javawrappers.java.util.Comparator: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def reversed(self, ) -> javawrappers.java.util.Comparator: ...
	def notify(self, ) -> None: ...


class ItemDistance:
	def distance(self, arg0: javawrappers.org.locationtech.jts.index.strtree.ItemBoundable, arg1: javawrappers.org.locationtech.jts.index.strtree.ItemBoundable, ) -> Union[float, JDouble]: ...


class SIRtree:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getNodeCapacity(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def query(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], ) -> javawrappers.java.util.List: ...
	@overload
	def query(self, arg0: Union[float, JDouble], ) -> javawrappers.java.util.List: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def insert(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: javawrappers.java.lang.Object, ) -> None: ...
	def notify(self, ) -> None: ...
	def build(self, ) -> None: ...
	def itemsTree(self, ) -> javawrappers.java.util.List: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getRoot(self, ) -> javawrappers.org.locationtech.jts.index.strtree.AbstractNode: ...


class AbstractNode:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getLevel(self, ) -> Union[int, JInt]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def size(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getChildBoundables(self, ) -> javawrappers.java.util.List: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def addChildBoundable(self, arg0: javawrappers.org.locationtech.jts.index.strtree.Boundable, ) -> None: ...
	def notify(self, ) -> None: ...
	def getBounds(self, ) -> javawrappers.java.lang.Object: ...


class Boundable:
	def getBounds(self, ) -> javawrappers.java.lang.Object: ...


