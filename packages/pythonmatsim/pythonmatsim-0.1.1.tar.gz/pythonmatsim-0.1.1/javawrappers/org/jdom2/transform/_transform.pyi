################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.xml.sax.ext
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.jdom2.output.support
import javawrappers.java.io
import javawrappers.org.jdom2
import javawrappers.org.xml.sax
import javawrappers.org.jdom2.output
import javawrappers.javax.xml.transform

from jpype.types import *
from typing import Union

from typing import overload

class JDOMResult:
	def __init__(self, ): ...
	class DocumentBuilder:
		def __init__(self, arg0: javawrappers.org.jdom2.transform.JDOMResult, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def setEntityResolver(self, arg0: javawrappers.org.xml.sax.EntityResolver, ) -> None: ...
		def endPrefixMapping(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def setDTDHandler(self, arg0: javawrappers.org.xml.sax.DTDHandler, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def endCDATA(self, ) -> None: ...
		def error(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
		def notify(self, ) -> None: ...
		def notationDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
		def startCDATA(self, ) -> None: ...
		def characters(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
		def getErrorHandler(self, ) -> javawrappers.org.xml.sax.ErrorHandler: ...
		def endElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
		def startPrefixMapping(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
		def setFeature(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> None: ...
		def setContentHandler(self, arg0: javawrappers.org.xml.sax.ContentHandler, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def getContentHandler(self, ) -> javawrappers.org.xml.sax.ContentHandler: ...
		def warning(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
		def setParent(self, arg0: javawrappers.org.xml.sax.XMLReader, ) -> None: ...
		def setDocumentLocator(self, arg0: javawrappers.org.xml.sax.Locator, ) -> None: ...
		def ignorableWhitespace(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
		def getParent(self, ) -> javawrappers.org.xml.sax.XMLReader: ...
		def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
		def startElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.org.xml.sax.Attributes, ) -> None: ...
		def fatalError(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
		def startEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def resolveEntity(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.xml.sax.InputSource: ...
		@overload
		def parse(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		@overload
		def parse(self, arg0: javawrappers.org.xml.sax.InputSource, ) -> None: ...
		def getEntityResolver(self, ) -> javawrappers.org.xml.sax.EntityResolver: ...
		def endDocument(self, ) -> None: ...
		def endEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def startDocument(self, ) -> None: ...
		def startDTD(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
		def getFeature(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
		def endDTD(self, ) -> None: ...
		def getDTDHandler(self, ) -> javawrappers.org.xml.sax.DTDHandler: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def setProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def setErrorHandler(self, arg0: javawrappers.org.xml.sax.ErrorHandler, ) -> None: ...
		def getResult(self, ) -> javawrappers.java.util.List: ...
		def skippedEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def unparsedEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def comment(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
		def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...


	class FragmentHandler:
		def __init__(self, arg0: javawrappers.org.jdom2.JDOMFactory, ): ...
		def externalEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def setIgnoringElementContentWhitespace(self, arg0: Union[int, JBoolean], ) -> None: ...
		def endPrefixMapping(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def getDocumentLocator(self, ) -> javawrappers.org.xml.sax.Locator: ...
		def endCDATA(self, ) -> None: ...
		def error(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
		def getExpandEntities(self, ) -> Union[int, JBoolean]: ...
		def notify(self, ) -> None: ...
		def notationDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
		def getCurrentElement(self, ) -> javawrappers.org.jdom2.Element: ...
		def setExpandEntities(self, arg0: Union[int, JBoolean], ) -> None: ...
		def startCDATA(self, ) -> None: ...
		def characters(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
		def startPrefixMapping(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
		def endElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def warning(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
		def setDocumentLocator(self, arg0: javawrappers.org.xml.sax.Locator, ) -> None: ...
		def ignorableWhitespace(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
		def getIgnoringElementContentWhitespace(self, ) -> Union[int, JBoolean]: ...
		def elementDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
		def startElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.org.xml.sax.Attributes, ) -> None: ...
		def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
		def fatalError(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
		def startEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def resolveEntity(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.xml.sax.InputSource: ...
		def setIgnoringBoundaryWhitespace(self, arg0: Union[int, JBoolean], ) -> None: ...
		def getFactory(self, ) -> javawrappers.org.jdom2.JDOMFactory: ...
		def endDocument(self, ) -> None: ...
		def endEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def startDocument(self, ) -> None: ...
		def startDTD(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
		def endDTD(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def skippedEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def internalEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
		def getResult(self, ) -> javawrappers.java.util.List: ...
		def unparsedEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
		def reset(self, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def comment(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
		def attributeDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> None: ...
		def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
		def getIgnoringBoundaryWhitespace(self, ) -> Union[int, JBoolean]: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setHandler(self, arg0: javawrappers.org.xml.sax.ContentHandler, ) -> None: ...
	def setIgnoringElementContentWhitespace(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getSystemId(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def endPrefixMapping(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def endPrefixMapping(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setDTDHandler(self, arg0: javawrappers.org.xml.sax.DTDHandler, ) -> None: ...
	def setResult(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def getDocumentLocator(self, ) -> javawrappers.org.xml.sax.Locator: ...
	def getHandler(self, ) -> javawrappers.org.xml.sax.ContentHandler: ...
	@overload
	def notationDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def notationDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def getCurrentElement(self, ) -> javawrappers.org.jdom2.Element: ...
	def getErrorHandler(self, ) -> javawrappers.org.xml.sax.ErrorHandler: ...
	def setContentHandler(self, arg0: javawrappers.org.xml.sax.ContentHandler, ) -> None: ...
	def getContentHandler(self, ) -> javawrappers.org.xml.sax.ContentHandler: ...
	@overload
	def warning(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	@overload
	def warning(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	@overload
	def setDocumentLocator(self, arg0: javawrappers.org.xml.sax.Locator, ) -> None: ...
	@overload
	def setDocumentLocator(self, arg0: javawrappers.org.xml.sax.Locator, ) -> None: ...
	@overload
	def ignorableWhitespace(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def ignorableWhitespace(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def getIgnoringElementContentWhitespace(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def fatalError(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	@overload
	def fatalError(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def setIgnoringBoundaryWhitespace(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getEntityResolver(self, ) -> javawrappers.org.xml.sax.EntityResolver: ...
	@overload
	def endDocument(self, ) -> None: ...
	@overload
	def endDocument(self, ) -> None: ...
	@overload
	def endEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def endEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getFeature(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def setProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def unparsedEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def unparsedEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	def reset(self, ) -> None: ...
	def externalEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def setEntityResolver(self, arg0: javawrappers.org.xml.sax.EntityResolver, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def endCDATA(self, ) -> None: ...
	@overload
	def endCDATA(self, ) -> None: ...
	@overload
	def error(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	@overload
	def error(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def getExpandEntities(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def setExpandEntities(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def startCDATA(self, ) -> None: ...
	@overload
	def startCDATA(self, ) -> None: ...
	@overload
	def characters(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def characters(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def startPrefixMapping(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def startPrefixMapping(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def endElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def endElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def setFeature(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setParent(self, arg0: javawrappers.org.xml.sax.XMLReader, ) -> None: ...
	def setFactory(self, arg0: javawrappers.org.jdom2.JDOMFactory, ) -> None: ...
	def getParent(self, ) -> javawrappers.org.xml.sax.XMLReader: ...
	def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def elementDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def startElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.org.xml.sax.Attributes, ) -> None: ...
	@overload
	def startElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.org.xml.sax.Attributes, ) -> None: ...
	@overload
	def startEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def startEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def resolveEntity(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.xml.sax.InputSource: ...
	@overload
	def resolveEntity(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.xml.sax.InputSource: ...
	@overload
	def parse(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def parse(self, arg0: javawrappers.org.xml.sax.InputSource, ) -> None: ...
	@overload
	def getFactory(self, ) -> javawrappers.org.jdom2.JDOMFactory: ...
	@overload
	def getFactory(self, ) -> javawrappers.org.jdom2.JDOMFactory: ...
	@overload
	def startDocument(self, ) -> None: ...
	@overload
	def startDocument(self, ) -> None: ...
	@overload
	def startDTD(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def startDTD(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def endDTD(self, ) -> None: ...
	@overload
	def endDTD(self, ) -> None: ...
	def setDocument(self, arg0: javawrappers.org.jdom2.Document, ) -> None: ...
	def setLexicalHandler(self, arg0: javawrappers.org.xml.sax.ext.LexicalHandler, ) -> None: ...
	def getDTDHandler(self, ) -> javawrappers.org.xml.sax.DTDHandler: ...
	def setErrorHandler(self, arg0: javawrappers.org.xml.sax.ErrorHandler, ) -> None: ...
	@overload
	def skippedEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def skippedEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def internalEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setSystemId(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def getResult(self, ) -> javawrappers.java.util.List: ...
	@overload
	def getResult(self, ) -> javawrappers.java.util.List: ...
	@overload
	def getResult(self, ) -> javawrappers.java.util.List: ...
	def getLexicalHandler(self, ) -> javawrappers.org.xml.sax.ext.LexicalHandler: ...
	@overload
	def comment(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def comment(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def attributeDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def getIgnoringBoundaryWhitespace(self, ) -> Union[int, JBoolean]: ...


class XSLTransformException:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class XSLTransformer:
	@overload
	def __init__(self, arg0: javawrappers.org.jdom2.Document, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.File, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.InputStream, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.Reader, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setFactory(self, arg0: javawrappers.org.jdom2.JDOMFactory, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def transform(self, arg0: javawrappers.java.util.List, ) -> javawrappers.java.util.List: ...
	@overload
	def transform(self, arg0: javawrappers.org.jdom2.Document, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def transform(self, arg0: javawrappers.org.jdom2.Document, arg1: javawrappers.org.xml.sax.EntityResolver, ) -> javawrappers.org.jdom2.Document: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFactory(self, ) -> javawrappers.org.jdom2.JDOMFactory: ...
	def notify(self, ) -> None: ...


class JDOMSource:
	@overload
	def __init__(self, arg0: javawrappers.org.jdom2.Document, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.List, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.jdom2.Document, arg1: javawrappers.org.xml.sax.EntityResolver, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.jdom2.Element, ): ...
	class DocumentReader:
		def __init__(self, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def setEntityResolver(self, arg0: javawrappers.org.xml.sax.EntityResolver, ) -> None: ...
		def setDTDHandler(self, arg0: javawrappers.org.xml.sax.DTDHandler, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def notify(self, ) -> None: ...
		@overload
		def output(self, arg0: javawrappers.org.jdom2.Element, ) -> None: ...
		@overload
		def output(self, arg0: javawrappers.org.jdom2.Document, ) -> None: ...
		@overload
		def output(self, arg0: javawrappers.java.util.List, ) -> None: ...
		def getErrorHandler(self, ) -> javawrappers.org.xml.sax.ErrorHandler: ...
		def setFormat(self, arg0: javawrappers.org.jdom2.output.Format, ) -> None: ...
		def setFeature(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> None: ...
		def getDeclHandler(self, ) -> javawrappers.org.xml.sax.ext.DeclHandler: ...
		def setContentHandler(self, arg0: javawrappers.org.xml.sax.ContentHandler, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def getContentHandler(self, ) -> javawrappers.org.xml.sax.ContentHandler: ...
		@overload
		def outputFragment(self, arg0: javawrappers.java.util.List, ) -> None: ...
		@overload
		def outputFragment(self, arg0: javawrappers.org.jdom2.Content, ) -> None: ...
		def getLocator(self, ) -> javawrappers.org.jdom2.output.JDOMLocator: ...
		def getFormat(self, ) -> javawrappers.org.jdom2.output.Format: ...
		def getReportNamespaceDeclarations(self, ) -> Union[int, JBoolean]: ...
		def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
		@overload
		def parse(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		@overload
		def parse(self, arg0: javawrappers.org.xml.sax.InputSource, ) -> None: ...
		def getEntityResolver(self, ) -> javawrappers.org.xml.sax.EntityResolver: ...
		def getSAXOutputProcessor(self, ) -> javawrappers.org.jdom2.output.support.SAXOutputProcessor: ...
		def getFeature(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
		def setLexicalHandler(self, arg0: javawrappers.org.xml.sax.ext.LexicalHandler, ) -> None: ...
		def getDTDHandler(self, ) -> javawrappers.org.xml.sax.DTDHandler: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def setProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def setSAXOutputProcessor(self, arg0: javawrappers.org.jdom2.output.support.SAXOutputProcessor, ) -> None: ...
		def getReportDTDEvents(self, ) -> Union[int, JBoolean]: ...
		def setErrorHandler(self, arg0: javawrappers.org.xml.sax.ErrorHandler, ) -> None: ...
		def getLexicalHandler(self, ) -> javawrappers.org.xml.sax.ext.LexicalHandler: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def setDeclHandler(self, arg0: javawrappers.org.xml.sax.ext.DeclHandler, ) -> None: ...
		def setReportDTDEvents(self, arg0: Union[int, JBoolean], ) -> None: ...
		def setReportNamespaceDeclarations(self, arg0: Union[int, JBoolean], ) -> None: ...


	class JDOMInputSource:
		@overload
		def __init__(self, arg0: javawrappers.org.jdom2.Document, ): ...
		@overload
		def __init__(self, arg0: javawrappers.java.util.List, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def getSystemId(self, ) -> javawrappers.java.lang.String: ...
		def setEncoding(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def isEmpty(self, ) -> Union[int, JBoolean]: ...
		def setPublicId(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def getCharacterStream(self, ) -> javawrappers.java.io.Reader: ...
		def notify(self, ) -> None: ...
		def getPublicId(self, ) -> javawrappers.java.lang.String: ...
		def getEncoding(self, ) -> javawrappers.java.lang.String: ...
		def getByteStream(self, ) -> javawrappers.java.io.InputStream: ...
		def setCharacterStream(self, arg0: javawrappers.java.io.Reader, ) -> None: ...
		def getListSource(self, ) -> javawrappers.java.util.List: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def getSource(self, ) -> javawrappers.java.lang.Object: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def setSystemId(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def setByteStream(self, arg0: javawrappers.java.io.InputStream, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getDocumentSource(self, ) -> javawrappers.org.jdom2.Document: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def getSystemId(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getSystemId(self, ) -> javawrappers.java.lang.String: ...
	def setNodes(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def setDTDHandler(self, arg0: javawrappers.org.xml.sax.DTDHandler, ) -> None: ...
	@staticmethod
	def sourceToInputSource(arg0: javawrappers.javax.xml.transform.Source, ) -> javawrappers.org.xml.sax.InputSource: ...
	@overload
	def output(self, arg0: javawrappers.org.jdom2.Element, ) -> None: ...
	@overload
	def output(self, arg0: javawrappers.org.jdom2.Document, ) -> None: ...
	@overload
	def output(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def getEncoding(self, ) -> javawrappers.java.lang.String: ...
	def getErrorHandler(self, ) -> javawrappers.org.xml.sax.ErrorHandler: ...
	def getDeclHandler(self, ) -> javawrappers.org.xml.sax.ext.DeclHandler: ...
	def setContentHandler(self, arg0: javawrappers.org.xml.sax.ContentHandler, ) -> None: ...
	def getContentHandler(self, ) -> javawrappers.org.xml.sax.ContentHandler: ...
	def getLocator(self, ) -> javawrappers.org.jdom2.output.JDOMLocator: ...
	def getFormat(self, ) -> javawrappers.org.jdom2.output.Format: ...
	def getInputSource(self, ) -> javawrappers.org.xml.sax.InputSource: ...
	def getDocumentSource(self, ) -> javawrappers.org.jdom2.Document: ...
	def getNodes(self, ) -> javawrappers.java.util.List: ...
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	def getEntityResolver(self, ) -> javawrappers.org.xml.sax.EntityResolver: ...
	def getFeature(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def getPublicId(self, ) -> javawrappers.java.lang.String: ...
	def getSource(self, ) -> javawrappers.java.lang.Object: ...
	def setProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def setSAXOutputProcessor(self, arg0: javawrappers.org.jdom2.output.support.SAXOutputProcessor, ) -> None: ...
	def getReportDTDEvents(self, ) -> Union[int, JBoolean]: ...
	def getXMLReader(self, ) -> javawrappers.org.xml.sax.XMLReader: ...
	def setEntityResolver(self, arg0: javawrappers.org.xml.sax.EntityResolver, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setEncoding(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setPublicId(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getByteStream(self, ) -> javawrappers.java.io.InputStream: ...
	def setCharacterStream(self, arg0: javawrappers.java.io.Reader, ) -> None: ...
	def setFormat(self, arg0: javawrappers.org.jdom2.output.Format, ) -> None: ...
	def setFeature(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def outputFragment(self, arg0: javawrappers.java.util.List, ) -> None: ...
	@overload
	def outputFragment(self, arg0: javawrappers.org.jdom2.Content, ) -> None: ...
	def setByteStream(self, arg0: javawrappers.java.io.InputStream, ) -> None: ...
	def getReportNamespaceDeclarations(self, ) -> Union[int, JBoolean]: ...
	def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	@overload
	def parse(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def parse(self, arg0: javawrappers.org.xml.sax.InputSource, ) -> None: ...
	def setXMLReader(self, arg0: javawrappers.org.xml.sax.XMLReader, ) -> None: ...
	def getCharacterStream(self, ) -> javawrappers.java.io.Reader: ...
	def getSAXOutputProcessor(self, ) -> javawrappers.org.jdom2.output.support.SAXOutputProcessor: ...
	def getListSource(self, ) -> javawrappers.java.util.List: ...
	def setDocument(self, arg0: javawrappers.org.jdom2.Document, ) -> None: ...
	def setLexicalHandler(self, arg0: javawrappers.org.xml.sax.ext.LexicalHandler, ) -> None: ...
	def getDTDHandler(self, ) -> javawrappers.org.xml.sax.DTDHandler: ...
	def setErrorHandler(self, arg0: javawrappers.org.xml.sax.ErrorHandler, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def setSystemId(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def setSystemId(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getLexicalHandler(self, ) -> javawrappers.org.xml.sax.ext.LexicalHandler: ...
	def setDeclHandler(self, arg0: javawrappers.org.xml.sax.ext.DeclHandler, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setInputSource(self, arg0: javawrappers.org.xml.sax.InputSource, ) -> None: ...
	def setReportDTDEvents(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setReportNamespaceDeclarations(self, arg0: Union[int, JBoolean], ) -> None: ...


