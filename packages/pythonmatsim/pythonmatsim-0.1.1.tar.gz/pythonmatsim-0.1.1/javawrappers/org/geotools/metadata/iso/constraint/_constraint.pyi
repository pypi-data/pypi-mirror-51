################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.geotools.metadata
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.metadata.constraint
import javawrappers.org.opengis.util
import javawrappers.javax.swing.tree

from jpype.types import *
from typing import Union

from typing import overload

class SecurityConstraintsImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.constraint.SecurityConstraints, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.constraint.Classification, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def setClassificationSystem(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getUserNote(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def notifyAll(self, ) -> None: ...
	def setHandlingDescription(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def setClassification(self, arg0: javawrappers.org.opengis.metadata.constraint.Classification, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def setUserNote(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def setUseLimitation(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getHandlingDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getClassificationSystem(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getUseLimitation(self, ) -> javawrappers.java.util.Collection: ...
	def getClassification(self, ) -> javawrappers.org.opengis.metadata.constraint.Classification: ...


class LegalConstraintsImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.constraint.LegalConstraints, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def setOtherConstraints(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def getUseConstraints(self, ) -> javawrappers.java.util.Collection: ...
	def setAccessConstraints(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getOtherConstraints(self, ) -> javawrappers.java.util.Collection: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def setUseLimitation(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setUseConstraints(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getUseLimitation(self, ) -> javawrappers.java.util.Collection: ...
	def getAccessConstraints(self, ) -> javawrappers.java.util.Collection: ...


class ConstraintsImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.constraint.Constraints, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def setUseLimitation(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getUseLimitation(self, ) -> javawrappers.java.util.Collection: ...


