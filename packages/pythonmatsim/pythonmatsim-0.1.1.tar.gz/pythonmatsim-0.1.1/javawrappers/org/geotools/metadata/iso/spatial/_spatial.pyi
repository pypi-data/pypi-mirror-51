################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.geotools.metadata
import javawrappers.org.opengis.geometry.primitive
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.metadata.spatial
import javawrappers.org.opengis.util
import javawrappers.org.opengis.referencing.operation
import javawrappers.javax.swing.tree
import javawrappers.org.opengis.referencing.datum
import javawrappers.org.geotools.metadata.iso.spatial

from jpype.types import *
from typing import Union

from typing import overload

class VectorSpatialRepresentationImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.spatial.VectorSpatialRepresentation, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getGeometricObjects(self, ) -> javawrappers.java.util.Collection: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def setTopologyLevel(self, arg0: javawrappers.org.opengis.metadata.spatial.TopologyLevel, ) -> None: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getTopologyLevel(self, ) -> javawrappers.org.opengis.metadata.spatial.TopologyLevel: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setGeometricObjects(self, arg0: javawrappers.java.util.Collection, ) -> None: ...


class DimensionImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.spatial.DimensionNameType, arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.spatial.Dimension, ): ...
	def getResolution(self, ) -> javawrappers.java.lang.Double: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def getDimensionName(self, ) -> javawrappers.org.opengis.metadata.spatial.DimensionNameType: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def setResolution(self, arg0: javawrappers.java.lang.Double, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getDimensionSize(self, ) -> javawrappers.java.lang.Integer: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def setDimensionSize(self, arg0: javawrappers.java.lang.Integer, ) -> None: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setDimensionName(self, arg0: javawrappers.org.opengis.metadata.spatial.DimensionNameType, ) -> None: ...


class GeometricObjectsImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.spatial.GeometricObjectType, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.spatial.GeometricObjects, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setGeometricObjectCount(self, arg0: javawrappers.java.lang.Integer, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def setGeometricObjectType(self, arg0: javawrappers.org.opengis.metadata.spatial.GeometricObjectType, ) -> None: ...
	def getGeometricObjectType(self, ) -> javawrappers.org.opengis.metadata.spatial.GeometricObjectType: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getGeometricObjectCount(self, ) -> javawrappers.java.lang.Integer: ...


class GeoreferenceableImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.spatial.Georeferenceable, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.List, arg2: javawrappers.org.opengis.metadata.spatial.CellGeometry, arg3: Union[int, JBoolean], arg4: Union[int, JBoolean], arg5: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setParameterCitation(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def setControlPointAvailable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def isTransformationParameterAvailable(self, ) -> Union[int, JBoolean]: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def isOrientationParameterAvailable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def setOrientationParameterAvailable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setCellGeometry(self, arg0: javawrappers.org.opengis.metadata.spatial.CellGeometry, ) -> None: ...
	def getGeoreferencedParameters(self, ) -> javawrappers.org.opengis.util.Record: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def isControlPointAvailable(self, ) -> Union[int, JBoolean]: ...
	def setAxisDimensionsProperties(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setTransformationParameterAvailable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def getParameterCitation(self, ) -> javawrappers.java.util.Collection: ...
	def setOrientationParameterDescription(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def getOrientationParameterDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setNumberOfDimensions(self, arg0: javawrappers.java.lang.Integer, ) -> None: ...
	def setGeoreferencedParameters(self, arg0: javawrappers.org.opengis.util.Record, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def getNumberOfDimensions(self, ) -> javawrappers.java.lang.Integer: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getCellGeometry(self, ) -> javawrappers.org.opengis.metadata.spatial.CellGeometry: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAxisDimensionsProperties(self, ) -> javawrappers.java.util.List: ...


class PixelTranslation:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def getPixelTranslation(arg0: javawrappers.org.opengis.referencing.datum.PixelInCell, ) -> Union[float, JDouble]: ...
	@overload
	@staticmethod
	def getPixelTranslation(arg0: javawrappers.org.opengis.metadata.spatial.PixelOrientation, ) -> javawrappers.org.geotools.metadata.iso.spatial.PixelTranslation: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	@overload
	@staticmethod
	def translate(arg0: javawrappers.org.opengis.referencing.operation.MathTransform, arg1: javawrappers.org.opengis.referencing.datum.PixelInCell, arg2: javawrappers.org.opengis.referencing.datum.PixelInCell, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	@overload
	@staticmethod
	def translate(arg0: javawrappers.org.opengis.referencing.operation.MathTransform, arg1: javawrappers.org.opengis.metadata.spatial.PixelOrientation, arg2: javawrappers.org.opengis.metadata.spatial.PixelOrientation, arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	@overload
	@staticmethod
	def getPixelOrientation(arg0: Union[float, JDouble], arg1: Union[float, JDouble], ) -> javawrappers.org.opengis.metadata.spatial.PixelOrientation: ...
	@overload
	@staticmethod
	def getPixelOrientation(arg0: javawrappers.org.opengis.referencing.datum.PixelInCell, ) -> javawrappers.org.opengis.metadata.spatial.PixelOrientation: ...


class GridSpatialRepresentationImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.List, arg2: javawrappers.org.opengis.metadata.spatial.CellGeometry, arg3: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.spatial.GridSpatialRepresentation, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def isTransformationParameterAvailable(self, ) -> Union[int, JBoolean]: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def setNumberOfDimensions(self, arg0: javawrappers.java.lang.Integer, ) -> None: ...
	def notify(self, ) -> None: ...
	def setCellGeometry(self, arg0: javawrappers.org.opengis.metadata.spatial.CellGeometry, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def setAxisDimensionsProperties(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def getNumberOfDimensions(self, ) -> javawrappers.java.lang.Integer: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getCellGeometry(self, ) -> javawrappers.org.opengis.metadata.spatial.CellGeometry: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setTransformationParameterAvailable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getAxisDimensionsProperties(self, ) -> javawrappers.java.util.List: ...


class SpatialRepresentationImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.spatial.SpatialRepresentation, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class GeorectifiedImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.spatial.Georectified, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.List, arg2: javawrappers.org.opengis.metadata.spatial.CellGeometry, arg3: Union[int, JBoolean], arg4: Union[int, JBoolean], arg5: javawrappers.java.util.List, arg6: javawrappers.org.opengis.metadata.spatial.PixelOrientation, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setCheckPointAvailable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def isTransformationParameterAvailable(self, ) -> Union[int, JBoolean]: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def setCellGeometry(self, arg0: javawrappers.org.opengis.metadata.spatial.CellGeometry, ) -> None: ...
	def setCheckPointDescription(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def setPointInPixel(self, arg0: javawrappers.org.opengis.metadata.spatial.PixelOrientation, ) -> None: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def setAxisDimensionsProperties(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def getTransformationDimensionMapping(self, ) -> javawrappers.java.util.Collection: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getCornerPoints(self, ) -> javawrappers.java.util.List: ...
	def setTransformationParameterAvailable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isCheckPointAvailable(self, ) -> Union[int, JBoolean]: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def setTransformationDimensionMapping(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def setNumberOfDimensions(self, arg0: javawrappers.java.lang.Integer, ) -> None: ...
	def setTransformationDimensionDescription(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getCenterPoint(self, ) -> javawrappers.org.opengis.geometry.primitive.Point: ...
	def getCheckPointDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def getNumberOfDimensions(self, ) -> javawrappers.java.lang.Integer: ...
	def setCenterPoint(self, arg0: javawrappers.org.opengis.geometry.primitive.Point, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getCellGeometry(self, ) -> javawrappers.org.opengis.metadata.spatial.CellGeometry: ...
	def setCornerPoints(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getTransformationDimensionDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAxisDimensionsProperties(self, ) -> javawrappers.java.util.List: ...
	def getPointInPixel(self, ) -> javawrappers.org.opengis.metadata.spatial.PixelOrientation: ...


