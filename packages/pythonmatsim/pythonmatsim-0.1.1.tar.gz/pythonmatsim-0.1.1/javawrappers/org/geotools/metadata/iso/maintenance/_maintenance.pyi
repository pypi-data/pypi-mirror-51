################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.geotools.metadata
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.temporal
import javawrappers.javax.swing.tree
import javawrappers.org.opengis.metadata.maintenance

from jpype.types import *
from typing import Union

from typing import overload

class MaintenanceInformationImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.maintenance.MaintenanceInformation, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.maintenance.MaintenanceFrequency, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setMaintenanceNotes(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setUserDefinedMaintenanceFrequency(self, arg0: javawrappers.org.opengis.temporal.PeriodDuration, ) -> None: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def getUpdateScopes(self, ) -> javawrappers.java.util.Collection: ...
	def setMaintenanceAndUpdateFrequency(self, arg0: javawrappers.org.opengis.metadata.maintenance.MaintenanceFrequency, ) -> None: ...
	def getUpdateScopeDescriptions(self, ) -> javawrappers.java.util.Collection: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getContacts(self, ) -> javawrappers.java.util.Collection: ...
	def getMaintenanceNotes(self, ) -> javawrappers.java.util.Collection: ...
	def getUserDefinedMaintenanceFrequency(self, ) -> javawrappers.org.opengis.temporal.PeriodDuration: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setDateOfNextUpdate(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def getMaintenanceAndUpdateFrequency(self, ) -> javawrappers.org.opengis.metadata.maintenance.MaintenanceFrequency: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def getDateOfNextUpdate(self, ) -> javawrappers.java.util.Date: ...
	def setContacts(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setUpdateScopeDescriptions(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def setUpdateScopes(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ScopeDescriptionImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.maintenance.ScopeDescription, ): ...
	@overload
	def __init__(self, ): ...
	def setFeatures(self, arg0: javawrappers.java.util.Set, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getFeatureInstances(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def setAttributes(self, arg0: javawrappers.java.util.Set, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getDataset(self, ) -> javawrappers.java.lang.String: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def getAttributes(self, ) -> javawrappers.java.util.Set: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def getOther(self, ) -> javawrappers.java.lang.String: ...
	def setAttributeInstances(self, arg0: javawrappers.java.util.Set, ) -> None: ...
	def setOther(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def setDataset(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getFeatures(self, ) -> javawrappers.java.util.Set: ...
	def setFeatureInstances(self, arg0: javawrappers.java.util.Set, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAttributeInstances(self, ) -> javawrappers.java.util.Set: ...


