################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.geotools.geometry.jts.coordinatesequence
import javawrappers.org.opengis.referencing.operation
import javawrappers.org.locationtech.jts.geom

from jpype.types import *
from typing import Union

from typing import overload

class CSBuilderFactory:
	def __init__(self, ): ...
	@staticmethod
	def getDefaultBuilder() -> javawrappers.org.geotools.geometry.jts.coordinatesequence.CSBuilder: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def setDefaultBuilderClass(arg0: javawrappers.java.lang.Class, ) -> None: ...


class CSBuilder:
	def getOrdinate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[float, JDouble]: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	@overload
	def setOrdinate(self, arg0: javawrappers.org.locationtech.jts.geom.CoordinateSequence, arg1: Union[float, JDouble], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setOrdinate(self, arg0: Union[float, JDouble], arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def start(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def end(self, ) -> javawrappers.org.locationtech.jts.geom.CoordinateSequence: ...


class InPlaceCoordinateSequenceTransformer:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def transform(self, arg0: javawrappers.org.locationtech.jts.geom.CoordinateSequence, arg1: javawrappers.org.opengis.referencing.operation.MathTransform, ) -> javawrappers.org.locationtech.jts.geom.CoordinateSequence: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class DefaultCSBuilder:
	def __init__(self, ): ...
	def getOrdinate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[float, JDouble]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	@overload
	def setOrdinate(self, arg0: Union[float, JDouble], arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def setOrdinate(self, arg0: javawrappers.org.locationtech.jts.geom.CoordinateSequence, arg1: Union[float, JDouble], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def start(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def end(self, ) -> javawrappers.org.locationtech.jts.geom.CoordinateSequence: ...
	def notify(self, ) -> None: ...


class PackedCSBuilder:
	def __init__(self, ): ...
	def getOrdinate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[float, JDouble]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	@overload
	def setOrdinate(self, arg0: javawrappers.org.locationtech.jts.geom.CoordinateSequence, arg1: Union[float, JDouble], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setOrdinate(self, arg0: Union[float, JDouble], arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def start(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def end(self, ) -> javawrappers.org.locationtech.jts.geom.CoordinateSequence: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


