################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.opengis.filter
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.filter.capability
import javawrappers.org.geotools.util
import javawrappers.org.opengis.filter.temporal
import javawrappers.org.opengis.filter.expression
import javawrappers.org.geotools.filter.visitor
import javawrappers.java.util.function
import javawrappers.org.opengis.filter.spatial
import javawrappers.org.opengis.feature.type

from jpype.types import *
from typing import Union

from typing import overload

class Categorize:
	def getFunctionName(self, ) -> javawrappers.org.opengis.filter.capability.FunctionName: ...
	def getFallbackValue(self, ) -> javawrappers.org.opengis.filter.expression.Literal: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getLookupValue(self, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	def getThresholds(self, ) -> javawrappers.java.util.SortedMap: ...
	def getParameters(self, ) -> javawrappers.java.util.List: ...
	@overload
	def evaluate(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def evaluate(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def getBelongTo(self, ) -> javawrappers.org.geotools.filter.visitor.ThreshholdsBelongTo: ...
	def accept(self, arg0: javawrappers.org.opengis.filter.expression.ExpressionVisitor, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...


class IsStaticExpressionVisitor:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Boolean: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Boolean: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Boolean: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Boolean: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Boolean: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Boolean: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Boolean: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Boolean: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class NullExpressionVisitor:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class LiteralDemultiplyingFilterVisitor:
	def __init__(self, ): ...
	class BinaryTemporalOperatorReplacer:
		def __init__(self, arg0: javawrappers.org.geotools.filter.visitor.LiteralDemultiplyingFilterVisitor, arg1: javawrappers.java.lang.String, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@overload
		def getExpression2(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
		@overload
		def getExpression2(self, arg0: javawrappers.org.opengis.filter.temporal.BinaryTemporalOperator, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...
		@overload
		def getExpression1(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
		@overload
		def getExpression1(self, arg0: javawrappers.org.opengis.filter.temporal.BinaryTemporalOperator, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
		@overload
		def replaceExpressions(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, arg1: javawrappers.org.opengis.filter.expression.Expression, arg2: javawrappers.org.opengis.filter.expression.Expression, ) -> javawrappers.org.opengis.filter.Filter: ...
		@overload
		def replaceExpressions(self, arg0: javawrappers.org.opengis.filter.temporal.BinaryTemporalOperator, arg1: javawrappers.org.opengis.filter.expression.Expression, arg2: javawrappers.org.opengis.filter.expression.Expression, ) -> javawrappers.org.opengis.filter.Filter: ...


	class BinarySpatialOperatorReplacer:
		def __init__(self, arg0: javawrappers.org.geotools.filter.visitor.LiteralDemultiplyingFilterVisitor, arg1: javawrappers.java.lang.String, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@overload
		def getExpression2(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
		@overload
		def getExpression2(self, arg0: javawrappers.org.opengis.filter.spatial.BinarySpatialOperator, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...
		@overload
		def getExpression1(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
		@overload
		def getExpression1(self, arg0: javawrappers.org.opengis.filter.spatial.BinarySpatialOperator, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
		@overload
		def replaceExpressions(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, arg1: javawrappers.org.opengis.filter.expression.Expression, arg2: javawrappers.org.opengis.filter.expression.Expression, ) -> javawrappers.org.opengis.filter.Filter: ...
		@overload
		def replaceExpressions(self, arg0: javawrappers.org.opengis.filter.spatial.BinarySpatialOperator, arg1: javawrappers.org.opengis.filter.expression.Expression, arg2: javawrappers.org.opengis.filter.expression.Expression, ) -> javawrappers.org.opengis.filter.Filter: ...


	class BinaryComparisonOperatorReplacer:
		def __init__(self, arg0: javawrappers.org.geotools.filter.visitor.LiteralDemultiplyingFilterVisitor, arg1: javawrappers.java.lang.String, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@overload
		def getExpression2(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
		@overload
		def getExpression2(self, arg0: javawrappers.org.opengis.filter.BinaryComparisonOperator, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...
		@overload
		def getExpression1(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
		@overload
		def getExpression1(self, arg0: javawrappers.org.opengis.filter.BinaryComparisonOperator, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
		@overload
		def replaceExpressions(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, arg1: javawrappers.org.opengis.filter.expression.Expression, arg2: javawrappers.org.opengis.filter.expression.Expression, ) -> javawrappers.org.opengis.filter.Filter: ...
		@overload
		def replaceExpressions(self, arg0: javawrappers.org.opengis.filter.BinaryComparisonOperator, arg1: javawrappers.org.opengis.filter.expression.Expression, arg2: javawrappers.org.opengis.filter.expression.Expression, ) -> javawrappers.org.opengis.filter.Filter: ...


	class FilterReplacer:
		def getExpression2(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
		def getExpression1(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
		def replaceExpressions(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, arg1: javawrappers.org.opengis.filter.expression.Expression, arg2: javawrappers.org.opengis.filter.expression.Expression, ) -> javawrappers.org.opengis.filter.Filter: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def getExpression2(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	@overload
	def getExpression2(self, arg0: javawrappers.org.opengis.filter.spatial.BinarySpatialOperator, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	@overload
	def getExpression2(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	@overload
	def getExpression2(self, arg0: javawrappers.org.opengis.filter.temporal.BinaryTemporalOperator, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	@overload
	def getExpression2(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	@overload
	def getExpression2(self, arg0: javawrappers.org.opengis.filter.BinaryComparisonOperator, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	@overload
	def getExpression2(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getExpression1(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	@overload
	def getExpression1(self, arg0: javawrappers.org.opengis.filter.spatial.BinarySpatialOperator, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	@overload
	def getExpression1(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	@overload
	def getExpression1(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	@overload
	def getExpression1(self, arg0: javawrappers.org.opengis.filter.BinaryComparisonOperator, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	@overload
	def getExpression1(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	@overload
	def getExpression1(self, arg0: javawrappers.org.opengis.filter.temporal.BinaryTemporalOperator, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	def notify(self, ) -> None: ...
	@overload
	def replaceExpressions(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, arg1: javawrappers.org.opengis.filter.expression.Expression, arg2: javawrappers.org.opengis.filter.expression.Expression, ) -> javawrappers.org.opengis.filter.Filter: ...
	@overload
	def replaceExpressions(self, arg0: javawrappers.org.opengis.filter.spatial.BinarySpatialOperator, arg1: javawrappers.org.opengis.filter.expression.Expression, arg2: javawrappers.org.opengis.filter.expression.Expression, ) -> javawrappers.org.opengis.filter.Filter: ...
	@overload
	def replaceExpressions(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, arg1: javawrappers.org.opengis.filter.expression.Expression, arg2: javawrappers.org.opengis.filter.expression.Expression, ) -> javawrappers.org.opengis.filter.Filter: ...
	@overload
	def replaceExpressions(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, arg1: javawrappers.org.opengis.filter.expression.Expression, arg2: javawrappers.org.opengis.filter.expression.Expression, ) -> javawrappers.org.opengis.filter.Filter: ...
	@overload
	def replaceExpressions(self, arg0: javawrappers.org.opengis.filter.BinaryComparisonOperator, arg1: javawrappers.org.opengis.filter.expression.Expression, arg2: javawrappers.org.opengis.filter.expression.Expression, ) -> javawrappers.org.opengis.filter.Filter: ...
	@overload
	def replaceExpressions(self, arg0: javawrappers.org.opengis.filter.MultiValuedFilter, arg1: javawrappers.org.opengis.filter.expression.Expression, arg2: javawrappers.org.opengis.filter.expression.Expression, ) -> javawrappers.org.opengis.filter.Filter: ...
	@overload
	def replaceExpressions(self, arg0: javawrappers.org.opengis.filter.temporal.BinaryTemporalOperator, arg1: javawrappers.org.opengis.filter.expression.Expression, arg2: javawrappers.org.opengis.filter.expression.Expression, ) -> javawrappers.org.opengis.filter.Filter: ...


class AbstractSearchFilterVisitor:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class DuplicatingFilterVisitor:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.filter.FilterFactory2, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class Recode:
	def getFunctionName(self, ) -> javawrappers.org.opengis.filter.capability.FunctionName: ...
	def getFallbackValue(self, ) -> javawrappers.org.opengis.filter.expression.Literal: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getLookupValue(self, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	def getParameters(self, ) -> javawrappers.java.util.List: ...
	def getMapItems(self, ) -> javawrappers.java.util.List: ...
	@overload
	def evaluate(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def evaluate(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def accept(self, arg0: javawrappers.org.opengis.filter.expression.ExpressionVisitor, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...


class FixBBOXFilterVisitor:
	def __init__(self, arg0: javawrappers.org.geotools.geometry.jts.ReferencedEnvelope, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class ClientTransactionAccessor:
	def getDeleteFilter(self, ) -> javawrappers.org.opengis.filter.Filter: ...
	def getUpdateFilter(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.filter.Filter: ...


class Mode:
	LINEAR: Mode = ...
	COSINE: Mode = ...
	CUBIC: Mode = ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.geotools.filter.visitor.Mode: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.geotools.filter.visitor.Mode, 1): ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class CapabilitiesFilterSplitter:
	def __init__(self, arg0: javawrappers.org.geotools.filter.Capabilities, arg1: javawrappers.org.opengis.feature.type.FeatureType, arg2: javawrappers.org.geotools.filter.visitor.ClientTransactionAccessor, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getFilterPre(self, ) -> javawrappers.org.opengis.filter.Filter: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getFilterPost(self, ) -> javawrappers.org.opengis.filter.Filter: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, ) -> None: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, ) -> None: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class ExtractBoundsFilterVisitor:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class DefaultExpressionVisitor:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class MapItem:
	def getValue(self, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	@overload
	def evaluate(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def evaluate(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def getData(self, ) -> Union[float, JDouble]: ...
	def accept(self, arg0: javawrappers.org.opengis.filter.expression.ExpressionVisitor, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...


class NullFilterVisitor:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class SimplifyingFilterVisitor:
	def __init__(self, ): ...
	class TypeNameDotNumberFidValidator:
		def __init__(self, arg0: javawrappers.java.lang.String, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def isValid(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class RegExFIDValidator:
		def __init__(self, arg0: javawrappers.java.lang.String, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def isValid(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class FIDValidator:
		def isValid(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isRangeSimplicationEnabled(self, ) -> Union[int, JBoolean]: ...
	def setFeatureType(self, arg0: javawrappers.org.opengis.feature.type.FeatureType, ) -> None: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def setFIDValidator(self, arg0: javawrappers.org.geotools.filter.visitor.SimplifyingFilterVisitor.FIDValidator, ) -> None: ...
	@overload
	@staticmethod
	def simplify(arg0: javawrappers.org.opengis.filter.Filter, arg1: javawrappers.org.opengis.feature.type.FeatureType, ) -> javawrappers.org.opengis.filter.Filter: ...
	@overload
	@staticmethod
	def simplify(arg0: javawrappers.org.opengis.filter.Filter, ) -> javawrappers.org.opengis.filter.Filter: ...
	def setRangeSimplicationEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...


class ExpressionTypeVisitor:
	def __init__(self, arg0: javawrappers.org.opengis.feature.type.FeatureType, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class OperatorNameFilterVisitor:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class BindingFilterVisitor:
	def __init__(self, arg0: javawrappers.org.opengis.feature.type.FeatureType, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class FilterVisitorSupport:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class IsFullySupportedFilterVisitor:
	def __init__(self, arg0: javawrappers.org.opengis.filter.capability.FilterCapabilities, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class Interpolate:
	def getFunctionName(self, ) -> javawrappers.org.opengis.filter.capability.FunctionName: ...
	def getFallbackValue(self, ) -> javawrappers.org.opengis.filter.expression.Literal: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getLookupValue(self, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	def getInterpolationPoints(self, ) -> javawrappers.java.util.List: ...
	def getParameters(self, ) -> javawrappers.java.util.List: ...
	def getMethod(self, ) -> javawrappers.org.geotools.filter.visitor.Method: ...
	def getMode(self, ) -> javawrappers.org.geotools.filter.visitor.Mode: ...
	@overload
	def evaluate(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def evaluate(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def accept(self, arg0: javawrappers.org.opengis.filter.expression.ExpressionVisitor, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...


class IsSupportedFilterVisitor:
	def __init__(self, arg0: javawrappers.org.opengis.filter.capability.FilterCapabilities, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class DefaultFilterVisitor:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class PropertyNameResolvingVisitor:
	def __init__(self, arg0: javawrappers.org.opengis.feature.simple.SimpleFeatureType, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class SpatialFilterVisitor:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def reset(self, ) -> None: ...
	def hasSpatialFilter(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class AbstractFinderFilterVisitor:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def isFound(self, ) -> Union[int, JBoolean]: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class InterpolationPoint:
	def getValue(self, ) -> javawrappers.org.opengis.filter.expression.Expression: ...
	def getData(self, ) -> Union[float, JDouble]: ...


class Method:
	NUMERIC: Method = ...
	COLOR: Method = ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.geotools.filter.visitor.Method: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.geotools.filter.visitor.Method, 1): ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class ThreshholdsBelongTo:
	SUCCEEDING: ThreshholdsBelongTo = ...
	PRECEDING: ThreshholdsBelongTo = ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.geotools.filter.visitor.ThreshholdsBelongTo: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.geotools.filter.visitor.ThreshholdsBelongTo, 1): ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class PostPreProcessFilterSplittingVisitor:
	def __init__(self, arg0: javawrappers.org.geotools.filter.FilterCapabilities, arg1: javawrappers.org.opengis.feature.simple.SimpleFeatureType, arg2: javawrappers.org.geotools.filter.visitor.ClientTransactionAccessor, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getFilterPre(self, ) -> javawrappers.org.opengis.filter.Filter: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getFilterPost(self, ) -> javawrappers.org.opengis.filter.Filter: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Multiply, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Function, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Divide, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Subtract, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.NilExpression, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.PropertyName, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Literal, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.expression.Add, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, ) -> None: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, ) -> None: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class AbstractFilterVisitor:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.filter.expression.ExpressionVisitor, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitNullFilter(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.NativeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Id, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNull, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNil, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TEquals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsNotEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Equals, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.BBOX, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.After, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Touches, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Contains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Begins, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.IncludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.DWithin, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.EndedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.AnyInteracts, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Before, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Meets, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Within, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsGreaterThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.And, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TContains, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.During, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.BegunBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Overlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Crosses, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.ExcludeFilter, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Or, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.OverlappedBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.Ends, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Intersects, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.Not, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Beyond, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLike, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.spatial.Disjoint, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.MetBy, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsBetween, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThan, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.PropertyIsLessThanOrEqualTo, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.org.opengis.filter.temporal.TOverlaps, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class MultiRange:
	@overload
	def __init__(self, arg0: javawrappers.org.geotools.util.Range, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.geotools.filter.visitor.MultiRange, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.List, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Comparable, ): ...
	class RangeComparator:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		@overload
		def compare(self, arg0: javawrappers.org.geotools.util.Range, arg1: javawrappers.org.geotools.util.Range, ) -> Union[int, JInt]: ...
		@overload
		def compare(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		def thenComparingLong(self, arg0: javawrappers.java.util.function.ToLongFunction, ) -> javawrappers.java.util.Comparator: ...
		def thenComparingInt(self, arg0: javawrappers.java.util.function.ToIntFunction, ) -> javawrappers.java.util.Comparator: ...
		@overload
		def thenComparing(self, arg0: javawrappers.java.util.function.Function, ) -> javawrappers.java.util.Comparator: ...
		@overload
		def thenComparing(self, arg0: javawrappers.java.util.function.Function, arg1: javawrappers.java.util.Comparator, ) -> javawrappers.java.util.Comparator: ...
		@overload
		def thenComparing(self, arg0: javawrappers.java.util.Comparator, ) -> javawrappers.java.util.Comparator: ...
		def thenComparingDouble(self, arg0: javawrappers.java.util.function.ToDoubleFunction, ) -> javawrappers.java.util.Comparator: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def reversed(self, ) -> javawrappers.java.util.Comparator: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def compare(self, arg0: javawrappers.org.geotools.util.Range, arg1: javawrappers.org.geotools.util.Range, ) -> Union[int, JInt]: ...
	@overload
	def compare(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def thenComparingInt(self, arg0: javawrappers.java.util.function.ToIntFunction, ) -> javawrappers.java.util.Comparator: ...
	def intersect(self, arg0: javawrappers.org.geotools.filter.visitor.MultiRange, ) -> javawrappers.org.geotools.filter.visitor.MultiRange: ...
	def thenComparingDouble(self, arg0: javawrappers.java.util.function.ToDoubleFunction, ) -> javawrappers.java.util.Comparator: ...
	def notifyAll(self, ) -> None: ...
	def addRange(self, arg0: javawrappers.org.geotools.util.Range, ) -> None: ...
	def notify(self, ) -> None: ...
	def thenComparingLong(self, arg0: javawrappers.java.util.function.ToLongFunction, ) -> javawrappers.java.util.Comparator: ...
	@overload
	def thenComparing(self, arg0: javawrappers.java.util.function.Function, ) -> javawrappers.java.util.Comparator: ...
	@overload
	def thenComparing(self, arg0: javawrappers.java.util.function.Function, arg1: javawrappers.java.util.Comparator, ) -> javawrappers.java.util.Comparator: ...
	@overload
	def thenComparing(self, arg0: javawrappers.java.util.Comparator, ) -> javawrappers.java.util.Comparator: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def merge(self, arg0: javawrappers.org.geotools.filter.visitor.MultiRange, ) -> javawrappers.org.geotools.filter.visitor.MultiRange: ...
	def removeRange(self, arg0: javawrappers.org.geotools.util.Range, ) -> None: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def toFilter(self, arg0: javawrappers.org.opengis.filter.FilterFactory, arg1: javawrappers.org.opengis.filter.expression.Expression, ) -> javawrappers.org.opengis.filter.Filter: ...
	def reversed(self, ) -> javawrappers.java.util.Comparator: ...


