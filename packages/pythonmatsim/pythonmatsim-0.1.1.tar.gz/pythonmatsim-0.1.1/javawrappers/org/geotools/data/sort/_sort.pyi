################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.feature.simple
import javawrappers.org.geotools.data
import javawrappers.org.opengis.feature
import javawrappers.org.opengis.filter.sort
import javawrappers.org.opengis.feature.type

from jpype.types import *
from typing import Union

from typing import overload

class SortedFeatureIterator:
	def __init__(self, arg0: javawrappers.org.geotools.data.simple.SimpleFeatureIterator, arg1: javawrappers.org.opengis.feature.simple.SimpleFeatureType, arg2: JArray(javawrappers.org.opengis.filter.sort.SortBy, 1), arg3: Union[int, JInt], ): ...
	@overload
	def next(self, ) -> javawrappers.org.opengis.feature.simple.SimpleFeature: ...
	@overload
	def next(self, ) -> javawrappers.org.opengis.feature.Feature: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def canSort(arg0: javawrappers.org.opengis.feature.simple.SimpleFeatureType, arg1: JArray(javawrappers.org.opengis.filter.sort.SortBy, 1), ) -> Union[int, JBoolean]: ...
	def close(self, ) -> None: ...
	def notify(self, ) -> None: ...


class SortedFeatureReader:
	@overload
	def __init__(self, arg0: javawrappers.org.geotools.data.simple.SimpleFeatureReader, arg1: javawrappers.org.geotools.data.Query, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.geotools.data.simple.SimpleFeatureReader, arg1: JArray(javawrappers.org.opengis.filter.sort.SortBy, 1), arg2: Union[int, JInt], ): ...
	@overload
	def next(self, ) -> javawrappers.org.opengis.feature.Feature: ...
	@overload
	def next(self, ) -> javawrappers.org.opengis.feature.simple.SimpleFeature: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def getComparator(arg0: JArray(javawrappers.org.opengis.filter.sort.SortBy, 1), ) -> javawrappers.java.util.Comparator: ...
	@overload
	def getFeatureType(self, ) -> javawrappers.org.opengis.feature.type.FeatureType: ...
	@overload
	def getFeatureType(self, ) -> javawrappers.org.opengis.feature.simple.SimpleFeatureType: ...
	def notifyAll(self, ) -> None: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def canSort(arg0: javawrappers.org.opengis.feature.simple.SimpleFeatureType, arg1: JArray(javawrappers.org.opengis.filter.sort.SortBy, 1), ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getMaxFeaturesInMemory(arg0: javawrappers.org.geotools.data.Query, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def close(self, ) -> None: ...


class SimpleFeatureIO:
	def __init__(self, arg0: javawrappers.java.io.File, arg1: javawrappers.org.opengis.feature.simple.SimpleFeatureType, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def read(self, ) -> javawrappers.org.opengis.feature.simple.SimpleFeature: ...
	def endOfFile(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getOffset(self, ) -> Union[long, JLong]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def close(self, arg0: Union[int, JBoolean], ) -> None: ...
	def write(self, arg0: javawrappers.org.opengis.feature.simple.SimpleFeature, ) -> None: ...
	def seek(self, arg0: Union[long, JLong], ) -> None: ...
	def notify(self, ) -> None: ...


