################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.javax.measure
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.geotools.referencing.cs
import javawrappers.org.opengis.referencing
import javawrappers.org.opengis.util
import javawrappers.org.opengis.referencing.operation
import javawrappers.org.opengis.referencing.cs
import javawrappers.org.opengis.metadata.citation
import javawrappers.org.geotools.referencing
import javawrappers.org.geotools.measure

from jpype.types import *
from typing import Union

from typing import overload

class DefaultVerticalCS:
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.referencing.cs.VerticalCS, ): ...
	@staticmethod
	def standard(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def nameMatches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getName(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getName(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	def distance(self, arg0: JArray(Union[float, JDouble], 1), arg1: JArray(Union[float, JDouble], 1), ) -> javawrappers.org.geotools.measure.Measure: ...
	@staticmethod
	def cleanupThreadLocals() -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.util.Map: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> javawrappers.java.util.Map: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	@staticmethod
	def swapAndScaleAxis(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	def notify(self, ) -> None: ...
	@overload
	def toWKT(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getIdentifier(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getIdentifier(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.org.geotools.referencing.AbstractIdentifiedObject, arg1: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class AbstractCS:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: JArray(javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: JArray(javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, 1), ): ...
	@staticmethod
	def standard(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def nameMatches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getName(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getName(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	def distance(self, arg0: JArray(Union[float, JDouble], 1), arg1: JArray(Union[float, JDouble], 1), ) -> javawrappers.org.geotools.measure.Measure: ...
	@staticmethod
	def cleanupThreadLocals() -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.util.Map: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> javawrappers.java.util.Map: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	@staticmethod
	def swapAndScaleAxis(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	def notify(self, ) -> None: ...
	@overload
	def toWKT(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getIdentifier(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getIdentifier(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.org.geotools.referencing.AbstractIdentifiedObject, arg1: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class DefaultCompoundCS:
	def __init__(self, arg0: JArray(javawrappers.org.opengis.referencing.cs.CoordinateSystem, 1), ): ...
	@staticmethod
	def standard(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def nameMatches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getName(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getName(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	def distance(self, arg0: JArray(Union[float, JDouble], 1), arg1: JArray(Union[float, JDouble], 1), ) -> javawrappers.org.geotools.measure.Measure: ...
	def getCoordinateSystems(self, ) -> javawrappers.java.util.List: ...
	@staticmethod
	def cleanupThreadLocals() -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.util.Map: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> javawrappers.java.util.Map: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	@staticmethod
	def swapAndScaleAxis(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	def notify(self, ) -> None: ...
	@overload
	def toWKT(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getIdentifier(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getIdentifier(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.org.geotools.referencing.AbstractIdentifiedObject, arg1: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class DefaultCoordinateSystemAxis:
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.opengis.referencing.cs.AxisDirection, arg3: javawrappers.javax.measure.Unit, arg4: Union[float, JDouble], arg5: Union[float, JDouble], arg6: javawrappers.org.opengis.referencing.cs.RangeMeaning, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.opengis.referencing.cs.AxisDirection, arg3: javawrappers.javax.measure.Unit, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.util.InternationalString, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.opengis.referencing.cs.AxisDirection, arg3: javawrappers.javax.measure.Unit, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.AxisDirection, arg2: javawrappers.javax.measure.Unit, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> Union[int, JBoolean]: ...
	@overload
	def nameMatches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getName(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getName(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def perpendicular(arg0: javawrappers.org.opengis.referencing.cs.AxisDirection, arg1: javawrappers.org.opengis.referencing.cs.AxisDirection, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def getDirection(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.AxisDirection: ...
	@overload
	def getDirection(self, ) -> javawrappers.org.opengis.referencing.cs.AxisDirection: ...
	@staticmethod
	def cleanupThreadLocals() -> None: ...
	@staticmethod
	def isCompassDirection(arg0: javawrappers.org.opengis.referencing.cs.AxisDirection, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getAbbreviation(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getIdentifier(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getIdentifier(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getMaximumValue(self, ) -> Union[float, JDouble]: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.util.Map: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> javawrappers.java.util.Map: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getRangeMeaning(self, ) -> javawrappers.org.opengis.referencing.cs.RangeMeaning: ...
	@overload
	def toWKT(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getPredefined(arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.AxisDirection, ) -> javawrappers.org.geotools.referencing.cs.DefaultCoordinateSystemAxis: ...
	@staticmethod
	def getAngle(arg0: javawrappers.org.opengis.referencing.cs.AxisDirection, arg1: javawrappers.org.opengis.referencing.cs.AxisDirection, ) -> Union[float, JDouble]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.org.geotools.referencing.AbstractIdentifiedObject, arg1: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getUnit(self, ) -> javawrappers.javax.measure.Unit: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getMinimumValue(self, ) -> Union[float, JDouble]: ...


class DefaultEllipsoidalCS:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.referencing.cs.EllipsoidalCS, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@staticmethod
	def standard(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def nameMatches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getName(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getName(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	def distance(self, arg0: JArray(Union[float, JDouble], 1), arg1: JArray(Union[float, JDouble], 1), ) -> javawrappers.org.geotools.measure.Measure: ...
	def getLongitude(self, arg0: JArray(Union[float, JDouble], 1), ) -> Union[float, JDouble]: ...
	@staticmethod
	def cleanupThreadLocals() -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.util.Map: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> javawrappers.java.util.Map: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getLatitude(self, arg0: JArray(Union[float, JDouble], 1), ) -> Union[float, JDouble]: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	@staticmethod
	def swapAndScaleAxis(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	def usingUnit(self, arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.org.geotools.referencing.cs.DefaultEllipsoidalCS: ...
	def notify(self, ) -> None: ...
	def getHeight(self, arg0: JArray(Union[float, JDouble], 1), ) -> Union[float, JDouble]: ...
	@overload
	def toWKT(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getIdentifier(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getIdentifier(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.org.geotools.referencing.AbstractIdentifiedObject, arg1: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class DefaultAffineCS:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.referencing.cs.AffineCS, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@staticmethod
	def standard(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def nameMatches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getName(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getName(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	def distance(self, arg0: JArray(Union[float, JDouble], 1), arg1: JArray(Union[float, JDouble], 1), ) -> javawrappers.org.geotools.measure.Measure: ...
	@staticmethod
	def cleanupThreadLocals() -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.util.Map: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> javawrappers.java.util.Map: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	@staticmethod
	def swapAndScaleAxis(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	def notify(self, ) -> None: ...
	@overload
	def toWKT(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getIdentifier(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getIdentifier(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.org.geotools.referencing.AbstractIdentifiedObject, arg1: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class DefaultPolarCS:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.referencing.cs.PolarCS, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@staticmethod
	def standard(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def nameMatches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getName(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getName(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	def distance(self, arg0: JArray(Union[float, JDouble], 1), arg1: JArray(Union[float, JDouble], 1), ) -> javawrappers.org.geotools.measure.Measure: ...
	@staticmethod
	def cleanupThreadLocals() -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.util.Map: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> javawrappers.java.util.Map: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	@staticmethod
	def swapAndScaleAxis(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	def notify(self, ) -> None: ...
	@overload
	def toWKT(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getIdentifier(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getIdentifier(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.org.geotools.referencing.AbstractIdentifiedObject, arg1: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class DefaultCylindricalCS:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.referencing.cs.CylindricalCS, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@staticmethod
	def standard(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def nameMatches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getName(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getName(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	def distance(self, arg0: JArray(Union[float, JDouble], 1), arg1: JArray(Union[float, JDouble], 1), ) -> javawrappers.org.geotools.measure.Measure: ...
	@staticmethod
	def cleanupThreadLocals() -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.util.Map: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> javawrappers.java.util.Map: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	@staticmethod
	def swapAndScaleAxis(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	def notify(self, ) -> None: ...
	@overload
	def toWKT(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getIdentifier(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getIdentifier(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.org.geotools.referencing.AbstractIdentifiedObject, arg1: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class DefaultCartesianCS:
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.referencing.cs.CartesianCS, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@staticmethod
	def standard(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def nameMatches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getName(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getName(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	def distance(self, arg0: JArray(Union[float, JDouble], 1), arg1: JArray(Union[float, JDouble], 1), ) -> javawrappers.org.geotools.measure.Measure: ...
	@staticmethod
	def cleanupThreadLocals() -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.util.Map: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> javawrappers.java.util.Map: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	@staticmethod
	def swapAndScaleAxis(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	def usingUnit(self, arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.org.geotools.referencing.cs.DefaultCartesianCS: ...
	def notify(self, ) -> None: ...
	@overload
	def toWKT(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getIdentifier(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getIdentifier(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.org.geotools.referencing.AbstractIdentifiedObject, arg1: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class DefaultLinearCS:
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.referencing.cs.LinearCS, ): ...
	@staticmethod
	def standard(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def nameMatches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getName(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getName(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	def distance(self, arg0: JArray(Union[float, JDouble], 1), arg1: JArray(Union[float, JDouble], 1), ) -> javawrappers.org.geotools.measure.Measure: ...
	@staticmethod
	def cleanupThreadLocals() -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.util.Map: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> javawrappers.java.util.Map: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	@staticmethod
	def swapAndScaleAxis(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	def notify(self, ) -> None: ...
	@overload
	def toWKT(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getIdentifier(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getIdentifier(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.org.geotools.referencing.AbstractIdentifiedObject, arg1: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class DefaultTimeCS:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.referencing.cs.TimeCS, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@staticmethod
	def standard(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def nameMatches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getName(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getName(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	def distance(self, arg0: JArray(Union[float, JDouble], 1), arg1: JArray(Union[float, JDouble], 1), ) -> javawrappers.org.geotools.measure.Measure: ...
	@staticmethod
	def cleanupThreadLocals() -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.util.Map: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> javawrappers.java.util.Map: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	@staticmethod
	def swapAndScaleAxis(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	def notify(self, ) -> None: ...
	@overload
	def toWKT(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getIdentifier(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getIdentifier(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.org.geotools.referencing.AbstractIdentifiedObject, arg1: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class DirectionAlongMeridian:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDirection(self, ) -> javawrappers.org.opengis.referencing.cs.AxisDirection: ...
	def getAngle(self, arg0: javawrappers.org.geotools.referencing.cs.DirectionAlongMeridian, ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def parse(arg0: javawrappers.org.opengis.referencing.cs.AxisDirection, ) -> javawrappers.org.geotools.referencing.cs.DirectionAlongMeridian: ...
	@overload
	@staticmethod
	def parse(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.geotools.referencing.cs.DirectionAlongMeridian: ...
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...


class DefaultSphericalCS:
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.referencing.cs.SphericalCS, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@staticmethod
	def standard(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def nameMatches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getName(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getName(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	def distance(self, arg0: JArray(Union[float, JDouble], 1), arg1: JArray(Union[float, JDouble], 1), ) -> javawrappers.org.geotools.measure.Measure: ...
	@staticmethod
	def cleanupThreadLocals() -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.util.Map: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> javawrappers.java.util.Map: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	@staticmethod
	def swapAndScaleAxis(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	def notify(self, ) -> None: ...
	@overload
	def toWKT(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getIdentifier(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getIdentifier(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.org.geotools.referencing.AbstractIdentifiedObject, arg1: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class DefaultUserDefinedCS:
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.referencing.cs.UserDefinedCS, ): ...
	@staticmethod
	def standard(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def nameMatches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def nameMatches(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getName(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getName(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	def distance(self, arg0: JArray(Union[float, JDouble], 1), arg1: JArray(Union[float, JDouble], 1), ) -> javawrappers.org.geotools.measure.Measure: ...
	@staticmethod
	def cleanupThreadLocals() -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.util.Map: ...
	@overload
	@staticmethod
	def getProperties(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, ) -> javawrappers.java.util.Map: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	@staticmethod
	def swapAndScaleAxis(arg0: javawrappers.org.opengis.referencing.cs.CoordinateSystem, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	def notify(self, ) -> None: ...
	@overload
	def toWKT(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getIdentifier(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	@overload
	@staticmethod
	def getIdentifier(arg0: javawrappers.org.opengis.referencing.IdentifiedObject, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.org.geotools.referencing.AbstractIdentifiedObject, arg1: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


