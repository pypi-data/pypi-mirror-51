################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.javax.measure
import javawrappers.java.util
import javawrappers.org.opengis.referencing.operation
import javawrappers.org.opengis.util
import javawrappers.org.opengis.parameter
import javawrappers.org.geotools.factory
import javawrappers.org.opengis.referencing.crs
import javawrappers.org.opengis.referencing.datum
import javawrappers.org.opengis.metadata.extent
import javawrappers.org.geotools.referencing.factory
import javawrappers.java.lang
import javawrappers.org.opengis.referencing
import javawrappers.org.opengis.referencing.cs
import javawrappers.org.opengis.metadata.citation

from jpype.types import *
from typing import Union

from typing import overload

class AutoCRSFactory:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.geotools.factory.Hints, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def createTemporalCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.TemporalCRS: ...
	def createSphericalCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.SphericalCS: ...
	def getVendor(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def createVerticalCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.VerticalCS: ...
	def createOperationMethod(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.operation.OperationMethod: ...
	def getImplementationHints(self, ) -> javawrappers.java.util.Map: ...
	def createCoordinateOperation(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.operation.CoordinateOperation: ...
	def createVerticalCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.VerticalCRS: ...
	def createExtent(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...
	def createVerticalDatum(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.VerticalDatum: ...
	def createFromCoordinateReferenceSystemCodes(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.util.Set: ...
	def getBackingStoreDescription(self, ) -> javawrappers.java.lang.String: ...
	def getDescriptionText(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def createTimeCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.TimeCS: ...
	def createPolarCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.PolarCS: ...
	def dispose(self, ) -> None: ...
	def createImageDatum(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.ImageDatum: ...
	def createUnit(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.measure.Unit: ...
	def createEllipsoid(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.Ellipsoid: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getIdentifiedObjectFinder(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.geotools.referencing.factory.IdentifiedObjectFinder: ...
	def createEngineeringDatum(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.EngineeringDatum: ...
	def getAuthorityCodes(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def createEngineeringCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.EngineeringCRS: ...
	def createCompoundCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.CompoundCRS: ...
	def onDeregistration(self, arg0: javawrappers.org.geotools.factory.FactoryRegistry, arg1: javawrappers.java.lang.Class, ) -> None: ...
	def createCylindricalCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.CylindricalCS: ...
	def createDatum(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.Datum: ...
	def createTemporalDatum(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.TemporalDatum: ...
	def createGeodeticDatum(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.GeodeticDatum: ...
	def createCoordinateSystem(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def createProjectedCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.ProjectedCRS: ...
	def createImageCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.ImageCRS: ...
	def createCoordinateSystemAxis(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	def getAuthority(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def createDerivedCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.DerivedCRS: ...
	def createObject(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.IdentifiedObject: ...
	def createCartesianCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.CartesianCS: ...
	def createCoordinateReferenceSystem(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def createGeocentricCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.GeocentricCRS: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def createGeographicCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.GeographicCRS: ...
	def createEllipsoidalCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.EllipsoidalCS: ...
	def getPriority(self, ) -> Union[int, JInt]: ...
	def createParameterDescriptor(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.parameter.ParameterDescriptor: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def createPrimeMeridian(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.PrimeMeridian: ...
	def onRegistration(self, arg0: javawrappers.org.geotools.factory.FactoryRegistry, arg1: javawrappers.java.lang.Class, ) -> None: ...


class WebCRSFactory:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.geotools.factory.Hints, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def createTemporalCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.TemporalCRS: ...
	def createSphericalCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.SphericalCS: ...
	def getVendor(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def createVerticalCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.VerticalCS: ...
	def createOperationMethod(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.operation.OperationMethod: ...
	def getImplementationHints(self, ) -> javawrappers.java.util.Map: ...
	def createCoordinateOperation(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.operation.CoordinateOperation: ...
	def createVerticalCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.VerticalCRS: ...
	def createExtent(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...
	def createVerticalDatum(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.VerticalDatum: ...
	def createFromCoordinateReferenceSystemCodes(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.util.Set: ...
	def getBackingStoreDescription(self, ) -> javawrappers.java.lang.String: ...
	def getDescriptionText(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def createTimeCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.TimeCS: ...
	def createPolarCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.PolarCS: ...
	def dispose(self, ) -> None: ...
	def createImageDatum(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.ImageDatum: ...
	def createUnit(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.measure.Unit: ...
	def createEllipsoid(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.Ellipsoid: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getIdentifiedObjectFinder(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.geotools.referencing.factory.IdentifiedObjectFinder: ...
	def createEngineeringDatum(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.EngineeringDatum: ...
	def getAuthorityCodes(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def createEngineeringCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.EngineeringCRS: ...
	def createCompoundCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.CompoundCRS: ...
	def onDeregistration(self, arg0: javawrappers.org.geotools.factory.FactoryRegistry, arg1: javawrappers.java.lang.Class, ) -> None: ...
	def createCylindricalCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.CylindricalCS: ...
	def createDatum(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.Datum: ...
	def createTemporalDatum(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.TemporalDatum: ...
	def createGeodeticDatum(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.GeodeticDatum: ...
	def createCoordinateSystem(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def createProjectedCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.ProjectedCRS: ...
	def createImageCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.ImageCRS: ...
	def createCoordinateSystemAxis(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	def getAuthority(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def createDerivedCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.DerivedCRS: ...
	def createObject(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.IdentifiedObject: ...
	def createCartesianCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.CartesianCS: ...
	def createCoordinateReferenceSystem(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def createGeocentricCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.GeocentricCRS: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def createGeographicCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.GeographicCRS: ...
	def createEllipsoidalCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.EllipsoidalCS: ...
	def getPriority(self, ) -> Union[int, JInt]: ...
	def createParameterDescriptor(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.parameter.ParameterDescriptor: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def createPrimeMeridian(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.datum.PrimeMeridian: ...
	def onRegistration(self, arg0: javawrappers.org.geotools.factory.FactoryRegistry, arg1: javawrappers.java.lang.Class, ) -> None: ...


