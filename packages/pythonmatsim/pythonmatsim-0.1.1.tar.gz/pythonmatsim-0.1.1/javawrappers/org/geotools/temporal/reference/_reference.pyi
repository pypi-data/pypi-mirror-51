################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.referencing
import javawrappers.org.opengis.util
import javawrappers.org.opengis.temporal
import javawrappers.org.geotools.temporal.reference
import javawrappers.org.opengis.metadata.extent

from jpype.types import *
from typing import Union

from typing import overload

class DefaultCalendarEra:
	def __init__(self, arg0: javawrappers.org.opengis.util.InternationalString, arg1: javawrappers.org.opengis.util.InternationalString, arg2: javawrappers.org.opengis.temporal.CalendarDate, arg3: javawrappers.org.opengis.temporal.JulianDate, arg4: javawrappers.org.opengis.temporal.Period, ): ...
	def setName(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getJulianReference(self, ) -> javawrappers.org.opengis.temporal.JulianDate: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setJulianReference(self, arg0: javawrappers.org.opengis.temporal.JulianDate, ) -> None: ...
	def getName(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def notifyAll(self, ) -> None: ...
	def getReferenceDate(self, ) -> javawrappers.org.opengis.temporal.CalendarDate: ...
	def getEpochOfUse(self, ) -> javawrappers.org.opengis.temporal.Period: ...
	def getDatingSystem(self, ) -> javawrappers.java.util.Collection: ...
	def setReferenceDate(self, arg0: javawrappers.org.opengis.temporal.CalendarDate, ) -> None: ...
	def notify(self, ) -> None: ...
	def getReferenceEvent(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setReferenceEvent(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def setEpochOfUse(self, arg0: javawrappers.org.opengis.temporal.Period, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class DefaultCalendar:
	def __init__(self, arg0: javawrappers.org.opengis.referencing.ReferenceIdentifier, arg1: javawrappers.org.opengis.metadata.extent.Extent, ): ...
	def setName(self, arg0: javawrappers.org.opengis.referencing.ReferenceIdentifier, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setBasis(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def notifyAll(self, ) -> None: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setValidArea(self, arg0: javawrappers.org.opengis.metadata.extent.Extent, ) -> None: ...
	def getValidArea(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...
	def notify(self, ) -> None: ...
	def julTrans(self, arg0: javawrappers.org.opengis.temporal.JulianDate, ) -> javawrappers.org.opengis.temporal.CalendarDate: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def dateTrans(self, arg0: javawrappers.org.opengis.temporal.DateAndTime, ) -> javawrappers.org.opengis.temporal.JulianDate: ...
	@overload
	def dateTrans(self, arg0: javawrappers.org.opengis.temporal.CalendarDate, arg1: javawrappers.org.opengis.temporal.ClockTime, ) -> javawrappers.org.opengis.temporal.JulianDate: ...
	def setDomainOfValidity(self, arg0: javawrappers.org.opengis.metadata.extent.Extent, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getBasis(self, ) -> javawrappers.java.util.Collection: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getClock(self, ) -> javawrappers.org.opengis.temporal.Clock: ...
	def setScope(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def setClock(self, arg0: javawrappers.org.opengis.temporal.Clock, ) -> None: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class DefaultOrdinalEra:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.util.InternationalString, arg1: javawrappers.java.util.Date, arg2: javawrappers.java.util.Date, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.util.InternationalString, arg1: javawrappers.java.util.Date, arg2: javawrappers.java.util.Date, arg3: javawrappers.java.util.Collection, ): ...
	def setName(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getBeginning(self, ) -> javawrappers.java.util.Date: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setBeginning(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def getComposition(self, ) -> javawrappers.java.util.Collection: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def notifyAll(self, ) -> None: ...
	def getEnd(self, ) -> javawrappers.java.util.Date: ...
	def notify(self, ) -> None: ...
	def setGroup(self, arg0: javawrappers.org.geotools.temporal.reference.DefaultOrdinalEra, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getGroup(self, ) -> javawrappers.org.geotools.temporal.reference.DefaultOrdinalEra: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setEnd(self, arg0: javawrappers.java.util.Date, ) -> None: ...


class DefaultTemporalReferenceSystem:
	def __init__(self, arg0: javawrappers.org.opengis.referencing.ReferenceIdentifier, arg1: javawrappers.org.opengis.metadata.extent.Extent, ): ...
	def setName(self, arg0: javawrappers.org.opengis.referencing.ReferenceIdentifier, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def notifyAll(self, ) -> None: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setValidArea(self, arg0: javawrappers.org.opengis.metadata.extent.Extent, ) -> None: ...
	def getValidArea(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...
	def notify(self, ) -> None: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def setDomainOfValidity(self, arg0: javawrappers.org.opengis.metadata.extent.Extent, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setScope(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class DefaultClock:
	def __init__(self, arg0: javawrappers.org.opengis.referencing.ReferenceIdentifier, arg1: javawrappers.org.opengis.metadata.extent.Extent, arg2: javawrappers.org.opengis.util.InternationalString, arg3: javawrappers.org.opengis.temporal.ClockTime, arg4: javawrappers.org.opengis.temporal.ClockTime, ): ...
	def setName(self, arg0: javawrappers.org.opengis.referencing.ReferenceIdentifier, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def clkTrans(self, arg0: javawrappers.org.opengis.temporal.ClockTime, ) -> javawrappers.org.opengis.temporal.ClockTime: ...
	def notifyAll(self, ) -> None: ...
	def setUtcReference(self, arg0: javawrappers.org.opengis.temporal.ClockTime, ) -> None: ...
	def getValidArea(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...
	def getDateBasis(self, ) -> javawrappers.java.util.Collection: ...
	def notify(self, ) -> None: ...
	def getUTCReference(self, ) -> javawrappers.org.opengis.temporal.ClockTime: ...
	def getReferenceTime(self, ) -> javawrappers.org.opengis.temporal.ClockTime: ...
	def setReferenceTime(self, arg0: javawrappers.org.opengis.temporal.ClockTime, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def utcTrans(self, arg0: javawrappers.org.opengis.temporal.ClockTime, ) -> javawrappers.org.opengis.temporal.ClockTime: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setValidArea(self, arg0: javawrappers.org.opengis.metadata.extent.Extent, ) -> None: ...
	def getReferenceEvent(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setReferenceEvent(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def setDomainOfValidity(self, arg0: javawrappers.org.opengis.metadata.extent.Extent, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setScope(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class DefaultOrdinalReferenceSystem:
	def __init__(self, arg0: javawrappers.org.opengis.referencing.ReferenceIdentifier, arg1: javawrappers.org.opengis.metadata.extent.Extent, arg2: javawrappers.java.util.Collection, ): ...
	def setName(self, arg0: javawrappers.org.opengis.referencing.ReferenceIdentifier, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def notifyAll(self, ) -> None: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getOrdinalEraSequence(self, ) -> javawrappers.java.util.Collection: ...
	def setValidArea(self, arg0: javawrappers.org.opengis.metadata.extent.Extent, ) -> None: ...
	def getValidArea(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...
	def notify(self, ) -> None: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def setDomainOfValidity(self, arg0: javawrappers.org.opengis.metadata.extent.Extent, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setScope(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class DefaultTemporalCoordinateSystem:
	def __init__(self, arg0: javawrappers.org.opengis.referencing.ReferenceIdentifier, arg1: javawrappers.org.opengis.metadata.extent.Extent, arg2: javawrappers.java.util.Date, arg3: javawrappers.org.opengis.util.InternationalString, ): ...
	def setName(self, arg0: javawrappers.org.opengis.referencing.ReferenceIdentifier, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterval(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def getOrigin(self, ) -> javawrappers.java.util.Date: ...
	def setOrigin(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setValidArea(self, arg0: javawrappers.org.opengis.metadata.extent.Extent, ) -> None: ...
	def getValidArea(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...
	def notify(self, ) -> None: ...
	def transformDateTime(self, arg0: javawrappers.java.util.Date, ) -> javawrappers.org.opengis.temporal.TemporalCoordinate: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def setDomainOfValidity(self, arg0: javawrappers.org.opengis.metadata.extent.Extent, ) -> None: ...
	def transformCoord(self, arg0: javawrappers.org.opengis.temporal.TemporalCoordinate, ) -> javawrappers.java.util.Date: ...
	def setInterval(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setScope(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


