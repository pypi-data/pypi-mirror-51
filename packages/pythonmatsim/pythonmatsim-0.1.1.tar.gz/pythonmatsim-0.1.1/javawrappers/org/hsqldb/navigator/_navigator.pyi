################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.hsqldb.result
import javawrappers.org.hsqldb.navigator
import javawrappers.java.util
import javawrappers.org.hsqldb
import javawrappers.org.hsqldb.types
import javawrappers.java.util.function
import javawrappers.org.hsqldb.rowio

from jpype.types import *
from typing import Union

from typing import overload

class RowSetNavigator:
	def __init__(self, ): ...
	def next(self, ) -> Union[int, JBoolean]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getRowNumber(self, ) -> Union[int, JInt]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def isLast(self, ) -> Union[int, JBoolean]: ...
	def release(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getRowId(self, ) -> Union[long, JLong]: ...
	def getId(self, ) -> Union[long, JLong]: ...
	def addRow(self, arg0: javawrappers.org.hsqldb.Row, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getCurrentRow(self, ) -> javawrappers.org.hsqldb.Row: ...
	def isFirst(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getRangePosition(self, ) -> Union[int, JInt]: ...
	def setId(self, arg0: Union[long, JLong], ) -> None: ...
	def setSession(self, arg0: javawrappers.org.hsqldb.SessionInterface, ) -> None: ...
	def write(self, arg0: javawrappers.org.hsqldb.rowio.RowOutputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def setCurrent(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def add(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def read(self, arg0: javawrappers.org.hsqldb.rowio.RowInputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def previous(self, ) -> Union[int, JBoolean]: ...
	def last(self, ) -> Union[int, JBoolean]: ...
	def isMemory(self, ) -> Union[int, JBoolean]: ...
	def getField(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def beforeFirst(self, ) -> Union[int, JBoolean]: ...
	def hadNext(self, ) -> Union[int, JBoolean]: ...
	def isBeforeFirst(self, ) -> Union[int, JBoolean]: ...
	def afterLast(self, ) -> Union[int, JBoolean]: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def isAfterLast(self, ) -> Union[int, JBoolean]: ...
	def isClosed(self, ) -> Union[int, JBoolean]: ...
	def absolute(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def removeCurrent(self, ) -> None: ...
	def reset(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def readSimple(self, arg0: javawrappers.org.hsqldb.rowio.RowInputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def getCurrent(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def getSession(self, ) -> javawrappers.org.hsqldb.SessionInterface: ...
	def first(self, ) -> Union[int, JBoolean]: ...
	def writeSimple(self, arg0: javawrappers.org.hsqldb.rowio.RowOutputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def relative(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...


class RowSetNavigatorData:
	@overload
	def __init__(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.QuerySpecification, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.QueryExpression, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.navigator.RowSetNavigator, ): ...
	class DataIterator:
		def next(self, ) -> Union[int, JBoolean]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def release(self, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def getRowId(self, ) -> Union[long, JLong]: ...
		def getField(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
		def notify(self, ) -> None: ...
		def getCurrentRow(self, ) -> javawrappers.org.hsqldb.Row: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def removeCurrent(self, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getCurrent(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def unionAll(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.navigator.RowSetNavigatorData, ) -> None: ...
	def thenComparingDouble(self, arg0: javawrappers.java.util.function.ToDoubleFunction, ) -> javawrappers.java.util.Comparator: ...
	@overload
	def release(self, ) -> None: ...
	@overload
	def release(self, ) -> None: ...
	def exceptAll(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.navigator.RowSetNavigatorData, ) -> None: ...
	def isFirst(self, ) -> Union[int, JBoolean]: ...
	def getGroupData(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def trim(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def getRangePosition(self, ) -> Union[int, JInt]: ...
	def setId(self, arg0: Union[long, JLong], ) -> None: ...
	def write(self, arg0: javawrappers.org.hsqldb.rowio.RowOutputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def intersectAll(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.navigator.RowSetNavigatorData, ) -> None: ...
	def add(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def read(self, arg0: javawrappers.org.hsqldb.rowio.RowInputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def last(self, ) -> Union[int, JBoolean]: ...
	def isMemory(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getField(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	@overload
	def getField(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	def beforeFirst(self, ) -> Union[int, JBoolean]: ...
	def hadNext(self, ) -> Union[int, JBoolean]: ...
	def isBeforeFirst(self, ) -> Union[int, JBoolean]: ...
	def afterLast(self, ) -> Union[int, JBoolean]: ...
	def sortOrder(self, arg0: javawrappers.org.hsqldb.Session, ) -> None: ...
	@overload
	def removeCurrent(self, ) -> None: ...
	@overload
	def removeCurrent(self, ) -> None: ...
	def reset(self, ) -> None: ...
	def except_(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.navigator.RowSetNavigatorData, ) -> None: ...
	@overload
	def getCurrent(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def getCurrent(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def relative(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def next(self, ) -> Union[int, JBoolean]: ...
	@overload
	def next(self, ) -> Union[int, JBoolean]: ...
	def getRowNumber(self, ) -> Union[int, JInt]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def compare(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def thenComparingInt(self, arg0: javawrappers.java.util.function.ToIntFunction, ) -> javawrappers.java.util.Comparator: ...
	def isLast(self, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def getRowId(self, ) -> Union[long, JLong]: ...
	@overload
	def getRowId(self, ) -> Union[long, JLong]: ...
	def update(self, arg0: JArray(javawrappers.java.lang.Object, 1), arg1: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def getId(self, ) -> Union[long, JLong]: ...
	def sortFull(self, arg0: javawrappers.org.hsqldb.Session, ) -> None: ...
	def addRow(self, arg0: javawrappers.org.hsqldb.Row, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	@overload
	def getCurrentRow(self, ) -> javawrappers.org.hsqldb.Row: ...
	@overload
	def getCurrentRow(self, ) -> javawrappers.org.hsqldb.Row: ...
	@overload
	def thenComparing(self, arg0: javawrappers.java.util.function.Function, ) -> javawrappers.java.util.Comparator: ...
	@overload
	def thenComparing(self, arg0: javawrappers.java.util.function.Function, arg1: javawrappers.java.util.Comparator, ) -> javawrappers.java.util.Comparator: ...
	@overload
	def thenComparing(self, arg0: javawrappers.java.util.Comparator, ) -> javawrappers.java.util.Comparator: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def sortOrderUnion(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.SortAndSlice, ) -> None: ...
	def setSession(self, arg0: javawrappers.org.hsqldb.SessionInterface, ) -> None: ...
	def copy(self, arg0: javawrappers.org.hsqldb.navigator.RowIterator, arg1: JArray(Union[int, JInt], 1), ) -> None: ...
	def setCurrent(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def getData(self, arg0: Union[long, JLong], ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def hasUniqueNotNullRows(self, arg0: javawrappers.org.hsqldb.Session, ) -> Union[int, JBoolean]: ...
	def previous(self, ) -> Union[int, JBoolean]: ...
	def intersect(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.navigator.RowSetNavigatorData, ) -> None: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def union(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.navigator.RowSetNavigatorData, ) -> None: ...
	def removeDuplicates(self, arg0: javawrappers.org.hsqldb.Session, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def isAfterLast(self, ) -> Union[int, JBoolean]: ...
	def thenComparingLong(self, arg0: javawrappers.java.util.function.ToLongFunction, ) -> javawrappers.java.util.Comparator: ...
	def isClosed(self, ) -> Union[int, JBoolean]: ...
	def absolute(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def readSimple(self, arg0: javawrappers.org.hsqldb.rowio.RowInputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def getNextRowData(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def getSession(self, ) -> javawrappers.org.hsqldb.SessionInterface: ...
	def reversed(self, ) -> javawrappers.java.util.Comparator: ...
	def first(self, ) -> Union[int, JBoolean]: ...
	def writeSimple(self, arg0: javawrappers.org.hsqldb.rowio.RowOutputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...


class RowSetNavigatorDataChangeMemory:
	def __init__(self, arg0: javawrappers.org.hsqldb.Session, ): ...
	class UpdateRowIterator:
		def next(self, ) -> Union[int, JBoolean]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def release(self, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def getRowId(self, ) -> Union[long, JLong]: ...
		def getField(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
		def beforeFirst(self, ) -> Union[int, JBoolean]: ...
		def isBeforeFirst(self, ) -> Union[int, JBoolean]: ...
		def notify(self, ) -> None: ...
		def getCurrentRow(self, ) -> javawrappers.org.hsqldb.Row: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def getRangePosition(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def removeCurrent(self, ) -> None: ...
		def reset(self, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getCurrent(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
		def setCurrent(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...


	@overload
	def next(self, ) -> Union[int, JBoolean]: ...
	@overload
	def next(self, ) -> Union[int, JBoolean]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getCurrentChangedColumns(self, ) -> JArray(Union[int, JInt], 1): ...
	@overload
	def release(self, ) -> None: ...
	@overload
	def release(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def getRowId(self, ) -> Union[long, JLong]: ...
	@overload
	def getRowId(self, ) -> Union[long, JLong]: ...
	def containsDeletedRow(self, arg0: javawrappers.org.hsqldb.Row, ) -> Union[int, JBoolean]: ...
	@overload
	def addRow(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.Row, arg2: JArray(javawrappers.java.lang.Object, 1), arg3: JArray(javawrappers.org.hsqldb.types.Type, 1), arg4: JArray(Union[int, JInt], 1), ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def addRow(self, arg0: javawrappers.org.hsqldb.Row, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	@overload
	def getCurrentRow(self, ) -> javawrappers.org.hsqldb.Row: ...
	@overload
	def getCurrentRow(self, ) -> javawrappers.org.hsqldb.Row: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def getRangePosition(self, ) -> Union[int, JInt]: ...
	@overload
	def getRangePosition(self, ) -> Union[int, JInt]: ...
	def write(self, arg0: javawrappers.org.hsqldb.rowio.RowOutputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	@overload
	def setCurrent(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	@overload
	def setCurrent(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def read(self, arg0: javawrappers.org.hsqldb.rowio.RowInputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def endMainDataSet(self, ) -> None: ...
	def containsUpdatedRow(self, arg0: javawrappers.org.hsqldb.Row, arg1: javawrappers.org.hsqldb.Row, arg2: JArray(Union[int, JInt], 1), ) -> Union[int, JBoolean]: ...
	def getCurrentChangedData(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def getField(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	@overload
	def getField(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	@overload
	def beforeFirst(self, ) -> Union[int, JBoolean]: ...
	@overload
	def beforeFirst(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isBeforeFirst(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isBeforeFirst(self, ) -> Union[int, JBoolean]: ...
	def getRowPosition(self, ) -> Union[int, JInt]: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def getUpdateRowIterator(self, ) -> javawrappers.org.hsqldb.navigator.RangeIterator: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def removeCurrent(self, ) -> None: ...
	@overload
	def removeCurrent(self, ) -> None: ...
	@overload
	def reset(self, ) -> None: ...
	@overload
	def reset(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getCurrent(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def getCurrent(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def addUpdate(self, arg0: javawrappers.org.hsqldb.Row, arg1: JArray(javawrappers.java.lang.Object, 1), arg2: JArray(Union[int, JInt], 1), ) -> Union[int, JBoolean]: ...


class RowIterator:
	def next(self, ) -> Union[int, JBoolean]: ...
	def release(self, ) -> None: ...
	def getRowId(self, ) -> Union[long, JLong]: ...
	def getField(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	def removeCurrent(self, ) -> None: ...
	def getCurrent(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def getCurrentRow(self, ) -> javawrappers.org.hsqldb.Row: ...


class RowSetNavigatorClient:
	@overload
	def __init__(self, arg0: javawrappers.org.hsqldb.navigator.RowSetNavigator, arg1: Union[int, JInt], arg2: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	@overload
	def __init__(self, ): ...
	def next(self, ) -> Union[int, JBoolean]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getRowNumber(self, ) -> Union[int, JInt]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def isLast(self, ) -> Union[int, JBoolean]: ...
	def release(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getRowId(self, ) -> Union[long, JLong]: ...
	def getId(self, ) -> Union[long, JLong]: ...
	def addRow(self, arg0: javawrappers.org.hsqldb.Row, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getCurrentRow(self, ) -> javawrappers.org.hsqldb.Row: ...
	def isFirst(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getRangePosition(self, ) -> Union[int, JInt]: ...
	def setId(self, arg0: Union[long, JLong], ) -> None: ...
	def setSession(self, arg0: javawrappers.org.hsqldb.SessionInterface, ) -> None: ...
	def setCurrent(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def write(self, arg0: javawrappers.org.hsqldb.rowio.RowOutputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def getData(self, arg0: Union[int, JInt], ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def add(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def read(self, arg0: javawrappers.org.hsqldb.rowio.RowInputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def previous(self, ) -> Union[int, JBoolean]: ...
	def last(self, ) -> Union[int, JBoolean]: ...
	def isMemory(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setData(self, arg0: JArray(JArray(javawrappers.java.lang.Object, 1), 1), ) -> None: ...
	@overload
	def setData(self, arg0: Union[int, JInt], arg1: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def getField(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def beforeFirst(self, ) -> Union[int, JBoolean]: ...
	def hadNext(self, ) -> Union[int, JBoolean]: ...
	def isBeforeFirst(self, ) -> Union[int, JBoolean]: ...
	def afterLast(self, ) -> Union[int, JBoolean]: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def isAfterLast(self, ) -> Union[int, JBoolean]: ...
	def isClosed(self, ) -> Union[int, JBoolean]: ...
	def absolute(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def removeCurrent(self, ) -> None: ...
	def reset(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def readSimple(self, arg0: javawrappers.org.hsqldb.rowio.RowInputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def getCurrent(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def getSession(self, ) -> javawrappers.org.hsqldb.SessionInterface: ...
	def first(self, ) -> Union[int, JBoolean]: ...
	def writeSimple(self, arg0: javawrappers.org.hsqldb.rowio.RowOutputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def relative(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...


class RowSetNavigatorDataChange:
	def next(self, ) -> Union[int, JBoolean]: ...
	def getCurrentChangedColumns(self, ) -> JArray(Union[int, JInt], 1): ...
	def read(self, arg0: javawrappers.org.hsqldb.rowio.RowInputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def endMainDataSet(self, ) -> None: ...
	def release(self, ) -> None: ...
	def containsUpdatedRow(self, arg0: javawrappers.org.hsqldb.Row, arg1: javawrappers.org.hsqldb.Row, arg2: JArray(Union[int, JInt], 1), ) -> Union[int, JBoolean]: ...
	def getRowId(self, ) -> Union[long, JLong]: ...
	def getCurrentChangedData(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def getField(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	def containsDeletedRow(self, arg0: javawrappers.org.hsqldb.Row, ) -> Union[int, JBoolean]: ...
	def beforeFirst(self, ) -> Union[int, JBoolean]: ...
	def isBeforeFirst(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addRow(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.Row, arg2: JArray(javawrappers.java.lang.Object, 1), arg3: JArray(javawrappers.org.hsqldb.types.Type, 1), arg4: JArray(Union[int, JInt], 1), ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def addRow(self, arg0: javawrappers.org.hsqldb.Row, ) -> Union[int, JBoolean]: ...
	def getCurrentRow(self, ) -> javawrappers.org.hsqldb.Row: ...
	def getRowPosition(self, ) -> Union[int, JInt]: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def getUpdateRowIterator(self, ) -> javawrappers.org.hsqldb.navigator.RangeIterator: ...
	def getRangePosition(self, ) -> Union[int, JInt]: ...
	def removeCurrent(self, ) -> None: ...
	def reset(self, ) -> None: ...
	def getCurrent(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def setCurrent(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def write(self, arg0: javawrappers.org.hsqldb.rowio.RowOutputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def addUpdate(self, arg0: javawrappers.org.hsqldb.Row, arg1: JArray(javawrappers.java.lang.Object, 1), arg2: JArray(Union[int, JInt], 1), ) -> Union[int, JBoolean]: ...


class RangeIterator:
	def next(self, ) -> Union[int, JBoolean]: ...
	def release(self, ) -> None: ...
	def getRangePosition(self, ) -> Union[int, JInt]: ...
	def getRowId(self, ) -> Union[long, JLong]: ...
	def getField(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	def removeCurrent(self, ) -> None: ...
	def reset(self, ) -> None: ...
	def isBeforeFirst(self, ) -> Union[int, JBoolean]: ...
	def getCurrent(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def setCurrent(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def getCurrentRow(self, ) -> javawrappers.org.hsqldb.Row: ...


class RowSetNavigatorDataTable:
	@overload
	def __init__(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.Table, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.QueryExpression, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.QuerySpecification, arg2: javawrappers.org.hsqldb.navigator.RowSetNavigatorData, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.QuerySpecification, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def unionAll(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.navigator.RowSetNavigatorData, ) -> None: ...
	def thenComparingDouble(self, arg0: javawrappers.java.util.function.ToDoubleFunction, ) -> javawrappers.java.util.Comparator: ...
	def release(self, ) -> None: ...
	def exceptAll(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.navigator.RowSetNavigatorData, ) -> None: ...
	def isFirst(self, ) -> Union[int, JBoolean]: ...
	def getGroupData(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def trim(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def getRangePosition(self, ) -> Union[int, JInt]: ...
	def setId(self, arg0: Union[long, JLong], ) -> None: ...
	def write(self, arg0: javawrappers.org.hsqldb.rowio.RowOutputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def intersectAll(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.navigator.RowSetNavigatorData, ) -> None: ...
	def add(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def read(self, arg0: javawrappers.org.hsqldb.rowio.RowInputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def last(self, ) -> Union[int, JBoolean]: ...
	def isMemory(self, ) -> Union[int, JBoolean]: ...
	def getField(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	def beforeFirst(self, ) -> Union[int, JBoolean]: ...
	def hadNext(self, ) -> Union[int, JBoolean]: ...
	def isBeforeFirst(self, ) -> Union[int, JBoolean]: ...
	def afterLast(self, ) -> Union[int, JBoolean]: ...
	def sortOrder(self, arg0: javawrappers.org.hsqldb.Session, ) -> None: ...
	def removeCurrent(self, ) -> None: ...
	def reset(self, ) -> None: ...
	def except_(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.navigator.RowSetNavigatorData, ) -> None: ...
	def getCurrent(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def relative(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def next(self, ) -> Union[int, JBoolean]: ...
	def getRowNumber(self, ) -> Union[int, JInt]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def compare(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def thenComparingInt(self, arg0: javawrappers.java.util.function.ToIntFunction, ) -> javawrappers.java.util.Comparator: ...
	def isLast(self, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def getRowId(self, ) -> Union[long, JLong]: ...
	def update(self, arg0: JArray(javawrappers.java.lang.Object, 1), arg1: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def getId(self, ) -> Union[long, JLong]: ...
	def sortFull(self, arg0: javawrappers.org.hsqldb.Session, ) -> None: ...
	def addRow(self, arg0: javawrappers.org.hsqldb.Row, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getCurrentRow(self, ) -> javawrappers.org.hsqldb.Row: ...
	@overload
	def thenComparing(self, arg0: javawrappers.java.util.function.Function, ) -> javawrappers.java.util.Comparator: ...
	@overload
	def thenComparing(self, arg0: javawrappers.java.util.function.Function, arg1: javawrappers.java.util.Comparator, ) -> javawrappers.java.util.Comparator: ...
	@overload
	def thenComparing(self, arg0: javawrappers.java.util.Comparator, ) -> javawrappers.java.util.Comparator: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def sortOrderUnion(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.SortAndSlice, ) -> None: ...
	def setSession(self, arg0: javawrappers.org.hsqldb.SessionInterface, ) -> None: ...
	@overload
	def copy(self, arg0: javawrappers.org.hsqldb.navigator.RowIterator, arg1: JArray(Union[int, JInt], 1), ) -> None: ...
	@overload
	def copy(self, arg0: javawrappers.org.hsqldb.navigator.RowSetNavigatorData, arg1: JArray(Union[int, JInt], 1), ) -> None: ...
	def setCurrent(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	@overload
	def getData(self, arg0: javawrappers.java.lang.Long, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def getData(self, arg0: Union[long, JLong], ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def hasUniqueNotNullRows(self, arg0: javawrappers.org.hsqldb.Session, ) -> Union[int, JBoolean]: ...
	def previous(self, ) -> Union[int, JBoolean]: ...
	def intersect(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.navigator.RowSetNavigatorData, ) -> None: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def union(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.navigator.RowSetNavigatorData, ) -> None: ...
	def removeDuplicates(self, arg0: javawrappers.org.hsqldb.Session, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def isAfterLast(self, ) -> Union[int, JBoolean]: ...
	def thenComparingLong(self, arg0: javawrappers.java.util.function.ToLongFunction, ) -> javawrappers.java.util.Comparator: ...
	def isClosed(self, ) -> Union[int, JBoolean]: ...
	def absolute(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def readSimple(self, arg0: javawrappers.org.hsqldb.rowio.RowInputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...
	def getNextRowData(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def getSession(self, ) -> javawrappers.org.hsqldb.SessionInterface: ...
	def reversed(self, ) -> javawrappers.java.util.Comparator: ...
	def first(self, ) -> Union[int, JBoolean]: ...
	def writeSimple(self, arg0: javawrappers.org.hsqldb.rowio.RowOutputInterface, arg1: javawrappers.org.hsqldb.result.ResultMetaData, ) -> None: ...


