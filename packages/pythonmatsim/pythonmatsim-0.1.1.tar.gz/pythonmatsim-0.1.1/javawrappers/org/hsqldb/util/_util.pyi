################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.sql
import javawrappers.java.applet
import javawrappers.java.util
import javawrappers.java.awt.image
import javawrappers.java.awt.dnd
import javawrappers.java.beans
import javawrappers.javax.swing.table
import javawrappers.javax.swing.event
import javawrappers.java.awt.im
import javawrappers.org.hsqldb.util
import javawrappers.java.awt
import javawrappers.java.lang
import javawrappers.javax.accessibility
import javawrappers.java.net
import javawrappers.java.io
import javawrappers.java.awt.event
import javawrappers.javax.swing

from jpype.types import *
from typing import Union

from typing import overload

class TableSorter:
	@overload
	def __init__(self, arg0: javawrappers.javax.swing.table.TableModel, ): ...
	@overload
	def __init__(self, arg0: javawrappers.javax.swing.table.TableModel, arg1: javawrappers.javax.swing.table.JTableHeader, ): ...
	@overload
	def __init__(self, ): ...
	class Directive:
		def __init__(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class SortableHeaderRenderer:
		def __init__(self, arg0: javawrappers.org.hsqldb.util.TableSorter, arg1: javawrappers.javax.swing.table.TableCellRenderer, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def getTableCellRendererComponent(self, arg0: javawrappers.javax.swing.JTable, arg1: javawrappers.java.lang.Object, arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class Arrow:
		def __init__(self, arg0: Union[int, JBoolean], arg1: Union[int, JInt], arg2: Union[int, JInt], ): ...
		def getIconWidth(self, ) -> Union[int, JInt]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def getIconHeight(self, ) -> Union[int, JInt]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def paintIcon(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.awt.Graphics, arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
		def notify(self, ) -> None: ...


	class MouseHandler:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def mouseDragged(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
		def mouseExited(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def notify(self, ) -> None: ...
		def mousePressed(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
		def mouseReleased(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
		def mouseEntered(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def mouseWheelMoved(self, arg0: javawrappers.java.awt.event.MouseWheelEvent, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def mouseClicked(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def mouseMoved(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...


	class TableModelHandler:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def tableChanged(self, arg0: javawrappers.javax.swing.event.TableModelEvent, ) -> None: ...
		def notify(self, ) -> None: ...


	class Row:
		def __init__(self, arg0: javawrappers.org.hsqldb.util.TableSorter, arg1: Union[int, JInt], ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...


	def getIconWidth(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def mouseDragged(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
	def getColumnClass(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Class: ...
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def setSortingStatus(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def mousePressed(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
	def modelIndex(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def fireTableDataChanged(self, ) -> None: ...
	def paintIcon(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.awt.Graphics, arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def mouseMoved(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
	def getRowCount(self, ) -> Union[int, JInt]: ...
	def fireTableRowsUpdated(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def getTableCellRendererComponent(self, arg0: javawrappers.javax.swing.JTable, arg1: javawrappers.java.lang.Object, arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def getColumnCount(self, ) -> Union[int, JInt]: ...
	def getTableHeader(self, ) -> javawrappers.javax.swing.table.JTableHeader: ...
	def fireTableCellUpdated(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def mouseWheelMoved(self, arg0: javawrappers.java.awt.event.MouseWheelEvent, ) -> None: ...
	def mouseClicked(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
	def tableChanged(self, arg0: javawrappers.javax.swing.event.TableModelEvent, ) -> None: ...
	def isSorting(self, ) -> Union[int, JBoolean]: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def removeTableModelListener(self, arg0: javawrappers.javax.swing.event.TableModelListener, ) -> None: ...
	def addTableModelListener(self, arg0: javawrappers.javax.swing.event.TableModelListener, ) -> None: ...
	def mouseExited(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
	def setTableModel(self, arg0: javawrappers.javax.swing.table.TableModel, ) -> None: ...
	def fireTableStructureChanged(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def findColumn(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JInt]: ...
	def fireTableChanged(self, arg0: javawrappers.javax.swing.event.TableModelEvent, ) -> None: ...
	def getColumnName(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def setValueAt(self, arg0: javawrappers.java.lang.Object, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def mouseReleased(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
	def mouseEntered(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
	def getValueAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTableModel(self, ) -> javawrappers.javax.swing.table.TableModel: ...
	def fireTableRowsDeleted(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def getSortingStatus(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def setTableHeader(self, arg0: javawrappers.javax.swing.table.JTableHeader, ) -> None: ...
	def getIconHeight(self, ) -> Union[int, JInt]: ...
	def fireTableRowsInserted(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def getTableModelListeners(self, ) -> JArray(javawrappers.javax.swing.event.TableModelListener, 1): ...
	def isCellEditable(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setColumnComparator(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.util.Comparator, ) -> None: ...


class MainInvoker:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def main(arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	@staticmethod
	def invoke(arg0: javawrappers.java.lang.String, arg1: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def notify(self, ) -> None: ...


class CSVWriter:
	def __init__(self, arg0: javawrappers.java.io.File, arg1: javawrappers.java.lang.String, ): ...
	def writeHeader(self, arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def writeData(self, arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def close(self, ) -> None: ...
	def notify(self, ) -> None: ...


class FontDialogSwing:
	def __init__(self, ): ...
	@overload
	def getLocation(self, ) -> javawrappers.java.awt.Point: ...
	@overload
	def getLocation(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Point: ...
	@overload
	def requestFocusInWindow(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocusInWindow(self, ) -> Union[int, JBoolean]: ...
	def isOpaque(self, ) -> Union[int, JBoolean]: ...
	def setModalExclusionType(self, arg0: javawrappers.java.awt.Dialog.ModalExclusionType, ) -> None: ...
	def paint(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def removeWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def getInputMethodListeners(self, ) -> JArray(javawrappers.java.awt.event.InputMethodListener, 1): ...
	def setLayout(self, arg0: javawrappers.java.awt.LayoutManager, ) -> None: ...
	def mouseDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getOwner(self, ) -> javawrappers.java.awt.Window: ...
	def getInputMethodRequests(self, ) -> javawrappers.java.awt.im.InputMethodRequests: ...
	def addHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def removeAll(self, ) -> None: ...
	def getMinimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getAlignmentY(self, ) -> Union[float, JFloat]: ...
	def getWindowStateListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowStateListener, 1): ...
	def getAlignmentX(self, ) -> Union[float, JFloat]: ...
	def dispatchEvent(self, arg0: javawrappers.java.awt.AWTEvent, ) -> None: ...
	def setFocusableWindowState(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getMostRecentFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def reshape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def pack(self, ) -> None: ...
	def postEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def toBack(self, ) -> None: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.BufferCapabilities, ) -> None: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def contains(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JBoolean]: ...
	def size(self, ) -> javawrappers.java.awt.Dimension: ...
	def setModal(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getType(self, ) -> javawrappers.java.awt.Window.Type: ...
	def mouseUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def enableInputMethods(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setLayeredPane(self, arg0: javawrappers.javax.swing.JLayeredPane, ) -> None: ...
	def removeContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def addComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	@staticmethod
	def setDefaultLookAndFeelDecorated(arg0: Union[int, JBoolean], ) -> None: ...
	def removeHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def removeWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getFontMetrics(self, arg0: javawrappers.java.awt.Font, ) -> javawrappers.java.awt.FontMetrics: ...
	def getHeight(self, ) -> Union[int, JInt]: ...
	def getIgnoreRepaint(self, ) -> Union[int, JBoolean]: ...
	def getBaselineResizeBehavior(self, ) -> javawrappers.java.awt.Component.BaselineResizeBehavior: ...
	def removeMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def applyComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def isAlwaysOnTopSupported(self, ) -> Union[int, JBoolean]: ...
	def validate(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.java.awt.Container: ...
	def isMinimumSizeSet(self, ) -> Union[int, JBoolean]: ...
	def getWindowFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowFocusListener, 1): ...
	def setComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	@overload
	def setBounds(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	@staticmethod
	def getWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def isValidateRoot(self, ) -> Union[int, JBoolean]: ...
	def addNotify(self, ) -> None: ...
	def addInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFocusCycleRootAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def setFocusTraversalPolicyProvider(self, arg0: Union[int, JBoolean], ) -> None: ...
	def addWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def countComponents(self, ) -> Union[int, JInt]: ...
	def isFocusTraversable(self, ) -> Union[int, JBoolean]: ...
	def inside(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def nextFocus(self, ) -> None: ...
	def getFocusTraversalKeys(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.Set: ...
	def getInputContext(self, ) -> javawrappers.java.awt.im.InputContext: ...
	def isCursorSet(self, ) -> Union[int, JBoolean]: ...
	def getMouseWheelListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseWheelListener, 1): ...
	def getComponents(self, ) -> JArray(javawrappers.java.awt.Component, 1): ...
	def removeMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def doLayout(self, ) -> None: ...
	def isLocationByPlatform(self, ) -> Union[int, JBoolean]: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.PopupMenu, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def setFocusCycleRoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setTitle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def isResizable(self, ) -> Union[int, JBoolean]: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def setDropTarget(self, arg0: javawrappers.java.awt.dnd.DropTarget, ) -> None: ...
	@overload
	def list(self, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, arg1: Union[int, JInt], ) -> None: ...
	def isFocused(self, ) -> Union[int, JBoolean]: ...
	def revalidate(self, ) -> None: ...
	def removeWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def setContentPane(self, arg0: javawrappers.java.awt.Container, ) -> None: ...
	def removeNotify(self, ) -> None: ...
	def getWarningString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getOwnerlessWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def isModal(self, ) -> Union[int, JBoolean]: ...
	def gotFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def handleEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isForegroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def show(self, ) -> None: ...
	@overload
	def show(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getShape(self, ) -> javawrappers.java.awt.Shape: ...
	def update(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def isFocusTraversalPolicySet(self, ) -> Union[int, JBoolean]: ...
	def setMaximumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.MenuComponent, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def addMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def imageUpdate(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	def getLayout(self, ) -> javawrappers.java.awt.LayoutManager: ...
	def addKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getContainerListeners(self, ) -> JArray(javawrappers.java.awt.event.ContainerListener, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getComponentListeners(self, ) -> JArray(javawrappers.java.awt.event.ComponentListener, 1): ...
	def getLayeredPane(self, ) -> javawrappers.javax.swing.JLayeredPane: ...
	def isMaximumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def getWindowListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowListener, 1): ...
	def getCursor(self, ) -> javawrappers.java.awt.Cursor: ...
	@overload
	def createImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Image: ...
	@overload
	def createImage(self, arg0: javawrappers.java.awt.image.ImageProducer, ) -> javawrappers.java.awt.Image: ...
	def mouseMove(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def areFocusTraversalKeysSet(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getKeyListeners(self, ) -> JArray(javawrappers.java.awt.event.KeyListener, 1): ...
	def getContentPane(self, ) -> javawrappers.java.awt.Container: ...
	def setModalityType(self, arg0: javawrappers.java.awt.Dialog.ModalityType, ) -> None: ...
	def setType(self, arg0: javawrappers.java.awt.Window.Type, ) -> None: ...
	def layout(self, ) -> None: ...
	def getBaseline(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def print_(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	@staticmethod
	def setColor(arg0: javawrappers.java.lang.String, ) -> None: ...
	@staticmethod
	def creatFontDialog(arg0: javawrappers.org.hsqldb.util.DatabaseManagerSwing, ) -> None: ...
	def paintComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.FocusListener, 1): ...
	@overload
	def resize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def resize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.awt.ImageCapabilities, ) -> javawrappers.java.awt.image.VolatileImage: ...
	def isAutoRequestFocus(self, ) -> Union[int, JBoolean]: ...
	def location(self, ) -> javawrappers.java.awt.Point: ...
	def lostFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def keyDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getDropTarget(self, ) -> javawrappers.java.awt.dnd.DropTarget: ...
	def getTransferHandler(self, ) -> javawrappers.javax.swing.TransferHandler: ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def setGlassPane(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def setOpacity(self, arg0: Union[float, JFloat], ) -> None: ...
	def getHierarchyBoundsListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyBoundsListener, 1): ...
	def getRootPane(self, ) -> javawrappers.javax.swing.JRootPane: ...
	@overload
	def getBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def getBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	def setPreferredSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def getJMenuBar(self, ) -> javawrappers.javax.swing.JMenuBar: ...
	@overload
	def enable(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def enable(self, ) -> None: ...
	@overload
	def getMousePosition(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.awt.Point: ...
	@overload
	def getMousePosition(self, ) -> javawrappers.java.awt.Point: ...
	def action(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setIconImages(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def setDefaultCloseOperation(self, arg0: Union[int, JInt], ) -> None: ...
	def addContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def setComponentZOrder(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: JByte, arg2: JByte, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], arg2: Union[string, JString], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], arg2: Union[int, JShort], ) -> None: ...
	def addMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	@staticmethod
	def isDefaultLookAndFeelDecorated() -> Union[int, JBoolean]: ...
	def getComponentOrientation(self, ) -> javawrappers.java.awt.ComponentOrientation: ...
	def setFocusable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getTreeLock(self, ) -> javawrappers.java.lang.Object: ...
	def addHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def isBackgroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def findComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def findComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocationByPlatform(self, arg0: Union[int, JBoolean], ) -> None: ...
	@staticmethod
	def setFontSize(arg0: javawrappers.java.lang.String, ) -> None: ...
	def setEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLightweight(self, ) -> Union[int, JBoolean]: ...
	def setTransferHandler(self, arg0: javawrappers.javax.swing.TransferHandler, ) -> None: ...
	def isEnabled(self, ) -> Union[int, JBoolean]: ...
	def minimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def bounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def repaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def repaint(self, ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	def getMouseMotionListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseMotionListener, 1): ...
	def getModalExclusionType(self, ) -> javawrappers.java.awt.Dialog.ModalExclusionType: ...
	def setMinimumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def transferFocus(self, ) -> None: ...
	def printComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	def setJMenuBar(self, arg0: javawrappers.javax.swing.JMenuBar, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getMaximumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getLocationOnScreen(self, ) -> javawrappers.java.awt.Point: ...
	def keyUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getWidth(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def setFocusTraversalPolicy(self, arg0: javawrappers.java.awt.FocusTraversalPolicy, ) -> None: ...
	def addWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def paintAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setFocusTraversalKeys(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ) -> None: ...
	def hasFocus(self, ) -> Union[int, JBoolean]: ...
	def isPreferredSizeSet(self, ) -> Union[int, JBoolean]: ...
	def addWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def getFocusableWindowState(self, ) -> Union[int, JBoolean]: ...
	def getIconImages(self, ) -> javawrappers.java.util.List: ...
	def isDoubleBuffered(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getPropertyChangeListeners(self, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	@overload
	def getPropertyChangeListeners(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	def getColorModel(self, ) -> javawrappers.java.awt.image.ColorModel: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getInsets(self, ) -> javawrappers.java.awt.Insets: ...
	def getFocusTraversalKeysEnabled(self, ) -> Union[int, JBoolean]: ...
	def hide(self, ) -> None: ...
	def getPreferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def setUndecorated(self, arg0: Union[int, JBoolean], ) -> None: ...
	def disable(self, ) -> None: ...
	def isUndecorated(self, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	def isFocusableWindow(self, ) -> Union[int, JBoolean]: ...
	def isFocusable(self, ) -> Union[int, JBoolean]: ...
	def setLocationRelativeTo(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def insets(self, ) -> javawrappers.java.awt.Insets: ...
	def setIconImage(self, arg0: javawrappers.java.awt.Image, ) -> None: ...
	def setMixingCutoutShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def isActive(self, ) -> Union[int, JBoolean]: ...
	def mouseExit(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getHierarchyListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyListener, 1): ...
	def getOpacity(self, ) -> Union[float, JFloat]: ...
	def isShowing(self, ) -> Union[int, JBoolean]: ...
	def mouseEnter(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getTitle(self, ) -> javawrappers.java.lang.String: ...
	def mouseDrag(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def preferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getDefaultCloseOperation(self, ) -> Union[int, JInt]: ...
	def getMouseListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseListener, 1): ...
	@overload
	@staticmethod
	def setFont() -> None: ...
	@overload
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def setAutoRequestFocus(self, arg0: Union[int, JBoolean], ) -> None: ...
	def toFront(self, ) -> None: ...
	def getGlassPane(self, ) -> javawrappers.java.awt.Component: ...
	def deliverEvent(self, arg0: javawrappers.java.awt.Event, ) -> None: ...
	def getForeground(self, ) -> javawrappers.java.awt.Color: ...
	def isAncestorOf(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def getComponentCount(self, ) -> Union[int, JInt]: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def dispose(self, ) -> None: ...
	def setCursor(self, arg0: javawrappers.java.awt.Cursor, ) -> None: ...
	def isDisplayable(self, ) -> Union[int, JBoolean]: ...
	def getGraphicsConfiguration(self, ) -> javawrappers.java.awt.GraphicsConfiguration: ...
	def getComponent(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def getModalityType(self, ) -> javawrappers.java.awt.Dialog.ModalityType: ...
	def removeComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	@overload
	def requestFocus(self, ) -> None: ...
	@overload
	def requestFocus(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> None: ...
	def locate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def addFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	@overload
	def getComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def getComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def isAlwaysOnTop(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, arg0: javawrappers.java.awt.Container, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, ) -> Union[int, JBoolean]: ...
	def setFocusTraversalKeysEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getComponentZOrder(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JInt]: ...
	def setBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def printAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getToolkit(self, ) -> javawrappers.java.awt.Toolkit: ...
	def transferFocusUpCycle(self, ) -> None: ...
	def isFontSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def isFocusTraversalPolicyProvider(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setLocation(self, arg0: javawrappers.java.awt.Point, ) -> None: ...
	@staticmethod
	def setStyle() -> None: ...
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	def removeFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def setIgnoreRepaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def transferFocusBackward(self, ) -> None: ...
	def getOwnedWindows(self, ) -> JArray(javawrappers.java.awt.Window, 1): ...
	def move(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def transferFocusDownCycle(self, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.util.ResourceBundle, ) -> None: ...
	def setResizable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def invalidate(self, ) -> None: ...
	def getBufferStrategy(self, ) -> javawrappers.java.awt.image.BufferStrategy: ...
	def getAccessibleContext(self, ) -> javawrappers.javax.accessibility.AccessibleContext: ...
	def setShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def isFocusOwner(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getSize(self, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def getSize(self, arg0: javawrappers.java.awt.Dimension, ) -> javawrappers.java.awt.Dimension: ...
	def getX(self, ) -> Union[int, JInt]: ...
	def removeHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def getY(self, ) -> Union[int, JInt]: ...
	def getFocusTraversalPolicy(self, ) -> javawrappers.java.awt.FocusTraversalPolicy: ...
	def setAlwaysOnTop(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def removeMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def getBackground(self, ) -> javawrappers.java.awt.Color: ...
	def addMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...


class DatabaseManager:
	def __init__(self, ): ...
	@overload
	def getLocation(self, ) -> javawrappers.java.awt.Point: ...
	@overload
	def getLocation(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Point: ...
	@overload
	def requestFocusInWindow(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocusInWindow(self, ) -> Union[int, JBoolean]: ...
	def windowOpened(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def isOpaque(self, ) -> Union[int, JBoolean]: ...
	def paint(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getInputMethodListeners(self, ) -> JArray(javawrappers.java.awt.event.InputMethodListener, 1): ...
	def setLayout(self, arg0: javawrappers.java.awt.LayoutManager, ) -> None: ...
	def mouseDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getInputMethodRequests(self, ) -> javawrappers.java.awt.im.InputMethodRequests: ...
	def keyTyped(self, arg0: javawrappers.java.awt.event.KeyEvent, ) -> None: ...
	def addHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def removeAll(self, ) -> None: ...
	def getMinimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getDocumentBase(self, ) -> javawrappers.java.net.URL: ...
	def getAlignmentY(self, ) -> Union[float, JFloat]: ...
	def getAlignmentX(self, ) -> Union[float, JFloat]: ...
	def dispatchEvent(self, arg0: javawrappers.java.awt.AWTEvent, ) -> None: ...
	def reshape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def postEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JBoolean]: ...
	def size(self, ) -> javawrappers.java.awt.Dimension: ...
	def stop(self, ) -> None: ...
	def windowDeiconified(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def mouseUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def enableInputMethods(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def addComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def removeHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def getFontMetrics(self, arg0: javawrappers.java.awt.Font, ) -> javawrappers.java.awt.FontMetrics: ...
	def getHeight(self, ) -> Union[int, JInt]: ...
	def windowActivated(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def getIgnoreRepaint(self, ) -> Union[int, JBoolean]: ...
	def getBaselineResizeBehavior(self, ) -> javawrappers.java.awt.Component.BaselineResizeBehavior: ...
	def removeMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def applyComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def connect(self, arg0: javawrappers.java.sql.Connection, ) -> None: ...
	def validate(self, ) -> None: ...
	def setStub(self, arg0: javawrappers.java.applet.AppletStub, ) -> None: ...
	def getParent(self, ) -> javawrappers.java.awt.Container: ...
	def isMinimumSizeSet(self, ) -> Union[int, JBoolean]: ...
	def setComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	@overload
	def setBounds(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def isValidateRoot(self, ) -> Union[int, JBoolean]: ...
	def addNotify(self, ) -> None: ...
	def addInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFocusCycleRootAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def setFocusTraversalPolicyProvider(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getAppletContext(self, ) -> javawrappers.java.applet.AppletContext: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def countComponents(self, ) -> Union[int, JInt]: ...
	def isFocusTraversable(self, ) -> Union[int, JBoolean]: ...
	def inside(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getInputContext(self, ) -> javawrappers.java.awt.im.InputContext: ...
	def nextFocus(self, ) -> None: ...
	def getFocusTraversalKeys(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.Set: ...
	def isCursorSet(self, ) -> Union[int, JBoolean]: ...
	def getAppletInfo(self, ) -> javawrappers.java.lang.String: ...
	def getMouseWheelListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseWheelListener, 1): ...
	def getComponents(self, ) -> JArray(javawrappers.java.awt.Component, 1): ...
	def removeMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def doLayout(self, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.PopupMenu, ) -> None: ...
	def removeKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def setFocusCycleRoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def setDropTarget(self, arg0: javawrappers.java.awt.dnd.DropTarget, ) -> None: ...
	@overload
	def list(self, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, arg1: Union[int, JInt], ) -> None: ...
	def windowIconified(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def windowClosed(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def revalidate(self, ) -> None: ...
	def removeNotify(self, ) -> None: ...
	def gotFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def handleEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isForegroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def show(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def show(self, ) -> None: ...
	def update(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def isFocusTraversalPolicySet(self, ) -> Union[int, JBoolean]: ...
	def setMaximumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.MenuComponent, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	def addMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def imageUpdate(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def actionPerformed(self, arg0: javawrappers.java.awt.event.ActionEvent, ) -> None: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	def getLayout(self, ) -> javawrappers.java.awt.LayoutManager: ...
	def addKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getContainerListeners(self, ) -> JArray(javawrappers.java.awt.event.ContainerListener, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getComponentListeners(self, ) -> JArray(javawrappers.java.awt.event.ComponentListener, 1): ...
	def isMaximumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def getCursor(self, ) -> javawrappers.java.awt.Cursor: ...
	@overload
	def createImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Image: ...
	@overload
	def createImage(self, arg0: javawrappers.java.awt.image.ImageProducer, ) -> javawrappers.java.awt.Image: ...
	def mouseMove(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def areFocusTraversalKeysSet(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getKeyListeners(self, ) -> JArray(javawrappers.java.awt.event.KeyListener, 1): ...
	def start(self, ) -> None: ...
	def layout(self, ) -> None: ...
	def getBaseline(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def print_(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def paintComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.FocusListener, 1): ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.awt.ImageCapabilities, ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def resize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def resize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def location(self, ) -> javawrappers.java.awt.Point: ...
	def lostFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def keyDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getDropTarget(self, ) -> javawrappers.java.awt.dnd.DropTarget: ...
	def getParameterInfo(self, ) -> JArray(JArray(javawrappers.java.lang.String, 1), 1): ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def getHierarchyBoundsListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyBoundsListener, 1): ...
	@overload
	def play(self, arg0: javawrappers.java.net.URL, ) -> None: ...
	@overload
	def play(self, arg0: javawrappers.java.net.URL, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def getAudioClip(self, arg0: javawrappers.java.net.URL, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.applet.AudioClip: ...
	@overload
	def getAudioClip(self, arg0: javawrappers.java.net.URL, ) -> javawrappers.java.applet.AudioClip: ...
	@overload
	def getBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def getBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	def setPreferredSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def enable(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def enable(self, ) -> None: ...
	@overload
	def getMousePosition(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.awt.Point: ...
	@overload
	def getMousePosition(self, ) -> javawrappers.java.awt.Point: ...
	def action(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def addContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def getParameter(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def init(self, ) -> None: ...
	def setComponentZOrder(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: JByte, arg2: JByte, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], arg2: Union[string, JString], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], arg2: Union[int, JShort], ) -> None: ...
	def addMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def getComponentOrientation(self, ) -> javawrappers.java.awt.ComponentOrientation: ...
	def setFocusable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def destroy(self, ) -> None: ...
	def getTreeLock(self, ) -> javawrappers.java.lang.Object: ...
	def addHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def isBackgroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def findComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def findComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLightweight(self, ) -> Union[int, JBoolean]: ...
	def isEnabled(self, ) -> Union[int, JBoolean]: ...
	def minimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def bounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def repaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, ) -> None: ...
	def getMouseMotionListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseMotionListener, 1): ...
	@overload
	def getImage(self, arg0: javawrappers.java.net.URL, ) -> javawrappers.java.awt.Image: ...
	@overload
	def getImage(self, arg0: javawrappers.java.net.URL, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.awt.Image: ...
	def setMinimumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def transferFocus(self, ) -> None: ...
	def printComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getMaximumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getLocationOnScreen(self, ) -> javawrappers.java.awt.Point: ...
	def keyUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getWidth(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def setFocusTraversalPolicy(self, arg0: javawrappers.java.awt.FocusTraversalPolicy, ) -> None: ...
	def paintAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def windowClosing(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def setFocusTraversalKeys(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ) -> None: ...
	def keyReleased(self, arg0: javawrappers.java.awt.event.KeyEvent, ) -> None: ...
	def hasFocus(self, ) -> Union[int, JBoolean]: ...
	def isPreferredSizeSet(self, ) -> Union[int, JBoolean]: ...
	def windowDeactivated(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def isDoubleBuffered(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getPropertyChangeListeners(self, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	@overload
	def getPropertyChangeListeners(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	def getColorModel(self, ) -> javawrappers.java.awt.image.ColorModel: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getInsets(self, ) -> javawrappers.java.awt.Insets: ...
	def getFocusTraversalKeysEnabled(self, ) -> Union[int, JBoolean]: ...
	def hide(self, ) -> None: ...
	def getPreferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def disable(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	def isFocusable(self, ) -> Union[int, JBoolean]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def insets(self, ) -> javawrappers.java.awt.Insets: ...
	def setMixingCutoutShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	@overload
	@staticmethod
	def main(arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	@overload
	def main(self, ) -> None: ...
	def isActive(self, ) -> Union[int, JBoolean]: ...
	def mouseExit(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getHierarchyListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyListener, 1): ...
	def isShowing(self, ) -> Union[int, JBoolean]: ...
	def mouseEnter(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def mouseDrag(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def preferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getMouseListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseListener, 1): ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def keyPressed(self, arg0: javawrappers.java.awt.event.KeyEvent, ) -> None: ...
	@staticmethod
	def threadedDBM() -> None: ...
	def deliverEvent(self, arg0: javawrappers.java.awt.Event, ) -> None: ...
	def getForeground(self, ) -> javawrappers.java.awt.Color: ...
	def isAncestorOf(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def getComponentCount(self, ) -> Union[int, JInt]: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def setCursor(self, arg0: javawrappers.java.awt.Cursor, ) -> None: ...
	def isDisplayable(self, ) -> Union[int, JBoolean]: ...
	def getGraphicsConfiguration(self, ) -> javawrappers.java.awt.GraphicsConfiguration: ...
	def getComponent(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def removeComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def getCodeBase(self, ) -> javawrappers.java.net.URL: ...
	@overload
	def requestFocus(self, ) -> None: ...
	@overload
	def requestFocus(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> None: ...
	def locate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def addFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	@overload
	def getComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def getComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def isFocusCycleRoot(self, arg0: javawrappers.java.awt.Container, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, ) -> Union[int, JBoolean]: ...
	def setFocusTraversalKeysEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getComponentZOrder(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JInt]: ...
	def setBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def printAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getToolkit(self, ) -> javawrappers.java.awt.Toolkit: ...
	def transferFocusUpCycle(self, ) -> None: ...
	def isFontSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@staticmethod
	def newAudioClip(arg0: javawrappers.java.net.URL, ) -> javawrappers.java.applet.AudioClip: ...
	@overload
	def setLocation(self, arg0: javawrappers.java.awt.Point, ) -> None: ...
	@overload
	def setLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def isFocusTraversalPolicyProvider(self, ) -> Union[int, JBoolean]: ...
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	def removeFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def setIgnoreRepaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def transferFocusBackward(self, ) -> None: ...
	def move(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def transferFocusDownCycle(self, ) -> None: ...
	def setForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def showStatus(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def invalidate(self, ) -> None: ...
	def getAccessibleContext(self, ) -> javawrappers.javax.accessibility.AccessibleContext: ...
	def isFocusOwner(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getSize(self, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def getSize(self, arg0: javawrappers.java.awt.Dimension, ) -> javawrappers.java.awt.Dimension: ...
	def getX(self, ) -> Union[int, JInt]: ...
	def removeHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def getY(self, ) -> Union[int, JInt]: ...
	def getFocusTraversalPolicy(self, ) -> javawrappers.java.awt.FocusTraversalPolicy: ...
	def removeMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def getBackground(self, ) -> javawrappers.java.awt.Color: ...
	def addMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...


class ConnectionSetting:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class CodeSwitcher:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def size(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def main(arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def notify(self, ) -> None: ...


class DatabaseManagerSwing:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.javax.swing.JFrame, ): ...
	class DBMPrefs:
		def __init__(self, arg0: javawrappers.org.hsqldb.util.DatabaseManagerSwing, arg1: Union[int, JBoolean], ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def load(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def store(self, ) -> None: ...
		def notify(self, ) -> None: ...


	class PopupListener:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def actionPerformed(self, arg0: javawrappers.java.awt.event.ActionEvent, ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def getCommandString(self, ) -> javawrappers.java.lang.String: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class StatementExecRunnable:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def run(self, ) -> None: ...
		def notify(self, ) -> None: ...


	@overload
	def getLocation(self, ) -> javawrappers.java.awt.Point: ...
	@overload
	def getLocation(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Point: ...
	@overload
	def requestFocusInWindow(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocusInWindow(self, ) -> Union[int, JBoolean]: ...
	def windowOpened(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def isOpaque(self, ) -> Union[int, JBoolean]: ...
	def paint(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getInputMethodListeners(self, ) -> JArray(javawrappers.java.awt.event.InputMethodListener, 1): ...
	def setLayout(self, arg0: javawrappers.java.awt.LayoutManager, ) -> None: ...
	def mouseDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getInputMethodRequests(self, ) -> javawrappers.java.awt.im.InputMethodRequests: ...
	def keyTyped(self, arg0: javawrappers.java.awt.event.KeyEvent, ) -> None: ...
	def addHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def removeAll(self, ) -> None: ...
	def getCommandString(self, ) -> javawrappers.java.lang.String: ...
	def getMinimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getDocumentBase(self, ) -> javawrappers.java.net.URL: ...
	def getAlignmentY(self, ) -> Union[float, JFloat]: ...
	def getAlignmentX(self, ) -> Union[float, JFloat]: ...
	def dispatchEvent(self, arg0: javawrappers.java.awt.AWTEvent, ) -> None: ...
	def setMustExit(self, arg0: Union[int, JBoolean], ) -> None: ...
	def reshape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def postEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JBoolean]: ...
	def size(self, ) -> javawrappers.java.awt.Dimension: ...
	def stop(self, ) -> None: ...
	def windowDeiconified(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def mouseUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def enableInputMethods(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setLayeredPane(self, arg0: javawrappers.javax.swing.JLayeredPane, ) -> None: ...
	def removeContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def addComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def setWaiting(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def getFontMetrics(self, arg0: javawrappers.java.awt.Font, ) -> javawrappers.java.awt.FontMetrics: ...
	def mouseReleased(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
	def getHeight(self, ) -> Union[int, JInt]: ...
	def windowActivated(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def getIgnoreRepaint(self, ) -> Union[int, JBoolean]: ...
	def getBaselineResizeBehavior(self, ) -> javawrappers.java.awt.Component.BaselineResizeBehavior: ...
	def removeMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def applyComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def connect(self, arg0: javawrappers.java.sql.Connection, ) -> None: ...
	def validate(self, ) -> None: ...
	def setStub(self, arg0: javawrappers.java.applet.AppletStub, ) -> None: ...
	def getParent(self, ) -> javawrappers.java.awt.Container: ...
	def isMinimumSizeSet(self, ) -> Union[int, JBoolean]: ...
	def setComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def store(self, ) -> None: ...
	@overload
	def setBounds(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def isValidateRoot(self, ) -> Union[int, JBoolean]: ...
	def addNotify(self, ) -> None: ...
	def addInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFocusCycleRootAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def setFocusTraversalPolicyProvider(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getAppletContext(self, ) -> javawrappers.java.applet.AppletContext: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def countComponents(self, ) -> Union[int, JInt]: ...
	def isFocusTraversable(self, ) -> Union[int, JBoolean]: ...
	def run(self, ) -> None: ...
	def inside(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getInputContext(self, ) -> javawrappers.java.awt.im.InputContext: ...
	def nextFocus(self, ) -> None: ...
	def getFocusTraversalKeys(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.Set: ...
	def isCursorSet(self, ) -> Union[int, JBoolean]: ...
	def getAppletInfo(self, ) -> javawrappers.java.lang.String: ...
	def getMouseWheelListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseWheelListener, 1): ...
	def getComponents(self, ) -> JArray(javawrappers.java.awt.Component, 1): ...
	def removeMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def doLayout(self, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.PopupMenu, ) -> None: ...
	def removeKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def setFocusCycleRoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def setDropTarget(self, arg0: javawrappers.java.awt.dnd.DropTarget, ) -> None: ...
	@overload
	def list(self, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, arg1: Union[int, JInt], ) -> None: ...
	def windowIconified(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def windowClosed(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def revalidate(self, ) -> None: ...
	def setContentPane(self, arg0: javawrappers.java.awt.Container, ) -> None: ...
	def removeNotify(self, ) -> None: ...
	def gotFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def handleEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isForegroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def show(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def show(self, ) -> None: ...
	def update(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def isFocusTraversalPolicySet(self, ) -> Union[int, JBoolean]: ...
	def setMaximumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.MenuComponent, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def addMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def imageUpdate(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def actionPerformed(self, arg0: javawrappers.java.awt.event.ActionEvent, ) -> None: ...
	@overload
	def actionPerformed(self, arg0: javawrappers.java.awt.event.ActionEvent, ) -> None: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	def getLayout(self, ) -> javawrappers.java.awt.LayoutManager: ...
	def load(self, ) -> None: ...
	def addKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getContainerListeners(self, ) -> JArray(javawrappers.java.awt.event.ContainerListener, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getComponentListeners(self, ) -> JArray(javawrappers.java.awt.event.ComponentListener, 1): ...
	def getLayeredPane(self, ) -> javawrappers.javax.swing.JLayeredPane: ...
	def isMaximumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def getCursor(self, ) -> javawrappers.java.awt.Cursor: ...
	@overload
	def createImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Image: ...
	@overload
	def createImage(self, arg0: javawrappers.java.awt.image.ImageProducer, ) -> javawrappers.java.awt.Image: ...
	def mouseMove(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def areFocusTraversalKeysSet(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getKeyListeners(self, ) -> JArray(javawrappers.java.awt.event.KeyListener, 1): ...
	def start(self, ) -> None: ...
	def getContentPane(self, ) -> javawrappers.java.awt.Container: ...
	def layout(self, ) -> None: ...
	def getBaseline(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def print_(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def paintComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.FocusListener, 1): ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.awt.ImageCapabilities, ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def resize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def resize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def location(self, ) -> javawrappers.java.awt.Point: ...
	def lostFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def keyDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getDropTarget(self, ) -> javawrappers.java.awt.dnd.DropTarget: ...
	def getParameterInfo(self, ) -> JArray(JArray(javawrappers.java.lang.String, 1), 1): ...
	def getTransferHandler(self, ) -> javawrappers.javax.swing.TransferHandler: ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def setGlassPane(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def getHierarchyBoundsListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyBoundsListener, 1): ...
	@overload
	def play(self, arg0: javawrappers.java.net.URL, ) -> None: ...
	@overload
	def play(self, arg0: javawrappers.java.net.URL, arg1: javawrappers.java.lang.String, ) -> None: ...
	def getRootPane(self, ) -> javawrappers.javax.swing.JRootPane: ...
	@overload
	def getAudioClip(self, arg0: javawrappers.java.net.URL, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.applet.AudioClip: ...
	@overload
	def getAudioClip(self, arg0: javawrappers.java.net.URL, ) -> javawrappers.java.applet.AudioClip: ...
	@overload
	def getBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def getBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	def setPreferredSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def getJMenuBar(self, ) -> javawrappers.javax.swing.JMenuBar: ...
	@overload
	def enable(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def enable(self, ) -> None: ...
	@overload
	def getMousePosition(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.awt.Point: ...
	@overload
	def getMousePosition(self, ) -> javawrappers.java.awt.Point: ...
	def action(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def addContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def getParameter(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def init(self, ) -> None: ...
	def setComponentZOrder(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: JByte, arg2: JByte, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], arg2: Union[string, JString], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], arg2: Union[int, JShort], ) -> None: ...
	def addMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def getComponentOrientation(self, ) -> javawrappers.java.awt.ComponentOrientation: ...
	def setFocusable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def destroy(self, ) -> None: ...
	def getTreeLock(self, ) -> javawrappers.java.lang.Object: ...
	def addHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def isBackgroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def findComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def findComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLightweight(self, ) -> Union[int, JBoolean]: ...
	def setTransferHandler(self, arg0: javawrappers.javax.swing.TransferHandler, ) -> None: ...
	def isEnabled(self, ) -> Union[int, JBoolean]: ...
	def minimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def bounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def repaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def repaint(self, ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	def getMouseMotionListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseMotionListener, 1): ...
	@overload
	def getImage(self, arg0: javawrappers.java.net.URL, ) -> javawrappers.java.awt.Image: ...
	@overload
	def getImage(self, arg0: javawrappers.java.net.URL, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.awt.Image: ...
	def setMinimumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def transferFocus(self, ) -> None: ...
	def printComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	def setJMenuBar(self, arg0: javawrappers.javax.swing.JMenuBar, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getMaximumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def mouseExited(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
	def getLocationOnScreen(self, ) -> javawrappers.java.awt.Point: ...
	def keyUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getWidth(self, ) -> Union[int, JInt]: ...
	def handlePopup(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
	def notify(self, ) -> None: ...
	def setFocusTraversalPolicy(self, arg0: javawrappers.java.awt.FocusTraversalPolicy, ) -> None: ...
	def paintAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def mouseEntered(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
	def windowClosing(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def setFocusTraversalKeys(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ) -> None: ...
	def keyReleased(self, arg0: javawrappers.java.awt.event.KeyEvent, ) -> None: ...
	def hasFocus(self, ) -> Union[int, JBoolean]: ...
	def isPreferredSizeSet(self, ) -> Union[int, JBoolean]: ...
	def windowDeactivated(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def isDoubleBuffered(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getPropertyChangeListeners(self, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	@overload
	def getPropertyChangeListeners(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	def getColorModel(self, ) -> javawrappers.java.awt.image.ColorModel: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getInsets(self, ) -> javawrappers.java.awt.Insets: ...
	def getFocusTraversalKeysEnabled(self, ) -> Union[int, JBoolean]: ...
	def hide(self, ) -> None: ...
	def getPreferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def disable(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	def isFocusable(self, ) -> Union[int, JBoolean]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def insets(self, ) -> javawrappers.java.awt.Insets: ...
	def setMixingCutoutShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	@overload
	@staticmethod
	def main(arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	@overload
	def main(self, ) -> None: ...
	def isActive(self, ) -> Union[int, JBoolean]: ...
	def mouseExit(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def mousePressed(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
	def getHierarchyListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyListener, 1): ...
	def isShowing(self, ) -> Union[int, JBoolean]: ...
	def mouseEnter(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def mouseDrag(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def preferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getMouseListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseListener, 1): ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def keyPressed(self, arg0: javawrappers.java.awt.event.KeyEvent, ) -> None: ...
	def getGlassPane(self, ) -> javawrappers.java.awt.Component: ...
	def deliverEvent(self, arg0: javawrappers.java.awt.Event, ) -> None: ...
	def getForeground(self, ) -> javawrappers.java.awt.Color: ...
	def isAncestorOf(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def getComponentCount(self, ) -> Union[int, JInt]: ...
	def mouseClicked(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> None: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def setCursor(self, arg0: javawrappers.java.awt.Cursor, ) -> None: ...
	def isDisplayable(self, ) -> Union[int, JBoolean]: ...
	def getGraphicsConfiguration(self, ) -> javawrappers.java.awt.GraphicsConfiguration: ...
	def getComponent(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def removeComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def getCodeBase(self, ) -> javawrappers.java.net.URL: ...
	@overload
	def requestFocus(self, ) -> None: ...
	@overload
	def requestFocus(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> None: ...
	def locate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def addFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	@overload
	def getComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def getComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def isFocusCycleRoot(self, arg0: javawrappers.java.awt.Container, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, ) -> Union[int, JBoolean]: ...
	def setFocusTraversalKeysEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getComponentZOrder(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JInt]: ...
	def setBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def printAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getToolkit(self, ) -> javawrappers.java.awt.Toolkit: ...
	def transferFocusUpCycle(self, ) -> None: ...
	def isFontSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@staticmethod
	def newAudioClip(arg0: javawrappers.java.net.URL, ) -> javawrappers.java.applet.AudioClip: ...
	@overload
	def setLocation(self, arg0: javawrappers.java.awt.Point, ) -> None: ...
	@overload
	def setLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def isFocusTraversalPolicyProvider(self, ) -> Union[int, JBoolean]: ...
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	def removeFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def setIgnoreRepaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def transferFocusBackward(self, ) -> None: ...
	def move(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def transferFocusDownCycle(self, ) -> None: ...
	def setForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def showStatus(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def invalidate(self, ) -> None: ...
	def getAccessibleContext(self, ) -> javawrappers.javax.accessibility.AccessibleContext: ...
	def isFocusOwner(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getSize(self, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def getSize(self, arg0: javawrappers.java.awt.Dimension, ) -> javawrappers.java.awt.Dimension: ...
	def getX(self, ) -> Union[int, JInt]: ...
	def removeHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def getY(self, ) -> Union[int, JInt]: ...
	def getFocusTraversalPolicy(self, ) -> javawrappers.java.awt.FocusTraversalPolicy: ...
	def removeMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def getBackground(self, ) -> javawrappers.java.awt.Color: ...
	def addMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...


