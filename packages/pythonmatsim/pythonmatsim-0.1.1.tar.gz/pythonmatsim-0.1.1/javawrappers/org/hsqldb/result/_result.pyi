################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.hsqldb.result
import javawrappers.org.hsqldb.navigator
import javawrappers.org.hsqldb
import javawrappers.java.io
import javawrappers.org.hsqldb.types
import javawrappers.org.hsqldb.lib
import javawrappers.org.hsqldb.rowio

from jpype.types import *
from typing import Union

from typing import overload

class ResultMetaData:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getExtendedColumnCount(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def newParameterMetaData(arg0: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.ResultMetaData: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def resetExtendedColumnCount(self, ) -> None: ...
	@overload
	@staticmethod
	def newResultMetaData(arg0: JArray(javawrappers.org.hsqldb.types.Type, 1), arg1: JArray(Union[int, JInt], 1), arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.ResultMetaData: ...
	@overload
	@staticmethod
	def newResultMetaData(arg0: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.ResultMetaData: ...
	def getNewMetaData(self, arg0: JArray(Union[int, JInt], 1), ) -> javawrappers.org.hsqldb.result.ResultMetaData: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def newDoubleColumnMetaData(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.result.ResultMetaData: ...
	@staticmethod
	def newSimpleResultMetaData(arg0: JArray(javawrappers.org.hsqldb.types.Type, 1), ) -> javawrappers.org.hsqldb.result.ResultMetaData: ...
	@staticmethod
	def newUpdateResultMetaData(arg0: JArray(javawrappers.org.hsqldb.types.Type, 1), ) -> javawrappers.org.hsqldb.result.ResultMetaData: ...
	def getParameterTypes(self, ) -> JArray(javawrappers.org.hsqldb.types.Type, 1): ...
	def getGeneratedColumnNames(self, ) -> JArray(javawrappers.java.lang.String, 1): ...
	def prepareData(self, ) -> None: ...
	def getColumnCount(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def isTableColumn(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@staticmethod
	def newSingleColumnMetaData(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.result.ResultMetaData: ...
	def areTypesCompatible(self, arg0: javawrappers.org.hsqldb.result.ResultMetaData, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getGeneratedColumnIndexes(self, ) -> JArray(Union[int, JInt], 1): ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def newGeneratedColumnsMetaData(arg0: JArray(Union[int, JInt], 1), arg1: JArray(javawrappers.java.lang.String, 1), ) -> javawrappers.org.hsqldb.result.ResultMetaData: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ResultProperties:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@staticmethod
	def getJDBCHoldability(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	@staticmethod
	def isUpdatable(arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def addUpdatable(arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> Union[int, JInt]: ...
	@staticmethod
	def addScrollable(arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def getProperties(arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def addHoldable(arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> Union[int, JInt]: ...
	@staticmethod
	def isReadOnly(arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getJDBCConcurrency(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	@staticmethod
	def getValueForJDBC(arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JInt]: ...
	@staticmethod
	def isScrollable(arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def isSensitive(arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def addIsHeld(arg0: Union[int, JInt], arg1: Union[int, JBoolean], ) -> Union[int, JInt]: ...
	@staticmethod
	def isHeld(arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@staticmethod
	def isHoldable(arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getJDBCScrollability(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...


class Result:
	def __init__(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ): ...
	def isUpdateCount(self, ) -> Union[int, JBoolean]: ...
	def getDatabaseId(self, ) -> Union[int, JInt]: ...
	def readAdditionalResults(self, arg0: javawrappers.org.hsqldb.SessionInterface, arg1: javawrappers.java.io.DataInputStream, arg2: javawrappers.org.hsqldb.rowio.RowInputInterface, ) -> None: ...
	def getStatementType(self, ) -> Union[int, JInt]: ...
	def setResultId(self, arg0: Union[long, JLong], ) -> None: ...
	def setMaxRows(self, arg0: Union[int, JInt], ) -> None: ...
	@staticmethod
	def newConnectionAttemptRequest(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.Result: ...
	def write(self, arg0: javawrappers.org.hsqldb.SessionInterface, arg1: javawrappers.org.hsqldb.lib.DataOutputStream, arg2: javawrappers.org.hsqldb.rowio.RowOutputInterface, ) -> None: ...
	@staticmethod
	def newResetSessionRequest() -> javawrappers.org.hsqldb.result.Result: ...
	def getException(self, ) -> javawrappers.org.hsqldb.HsqlException: ...
	def getActionType(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def newPreparedExecuteRequest(arg0: JArray(javawrappers.org.hsqldb.types.Type, 1), arg1: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newResult(arg0: javawrappers.java.io.DataInput, arg1: javawrappers.org.hsqldb.rowio.RowInputInterface, ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newResult(arg0: javawrappers.org.hsqldb.Session, arg1: Union[int, JInt], arg2: javawrappers.java.io.DataInput, arg3: javawrappers.org.hsqldb.rowio.RowInputInterface, ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newResult(arg0: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newResult(arg0: javawrappers.org.hsqldb.navigator.RowSetNavigator, ) -> javawrappers.org.hsqldb.result.Result: ...
	def setValueObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def getType(self, ) -> Union[int, JInt]: ...
	def setMainString(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getSessionId(self, ) -> Union[long, JLong]: ...
	@staticmethod
	def newCallResponse(arg0: JArray(javawrappers.org.hsqldb.types.Type, 1), arg1: Union[long, JLong], arg2: JArray(javawrappers.java.lang.Object, 1), ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newDataResult(arg0: javawrappers.org.hsqldb.result.ResultMetaData, ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getConnectionAttrType(self, ) -> Union[int, JInt]: ...
	def getLobCount(self, ) -> Union[int, JInt]: ...
	def addRow(self, arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def notify(self, ) -> None: ...
	def getLOBResult(self, ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	def isError(self, ) -> Union[int, JBoolean]: ...
	def setActionType(self, arg0: Union[int, JInt], ) -> None: ...
	def isData(self, ) -> Union[int, JBoolean]: ...
	def getErrorCode(self, ) -> Union[int, JInt]: ...
	def setStatement(self, arg0: javawrappers.org.hsqldb.Statement, ) -> None: ...
	def getResultId(self, ) -> Union[long, JLong]: ...
	@overload
	@staticmethod
	def newSingleColumnResult(arg0: javawrappers.org.hsqldb.result.ResultMetaData, ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newSingleColumnResult(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.result.Result: ...
	def setSession(self, arg0: javawrappers.org.hsqldb.SessionInterface, ) -> None: ...
	@overload
	@staticmethod
	def newDataRowsResult(arg0: javawrappers.org.hsqldb.result.Result, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newDataRowsResult(arg0: javawrappers.org.hsqldb.navigator.RowSetNavigator, ) -> javawrappers.org.hsqldb.result.Result: ...
	def isWarning(self, ) -> Union[int, JBoolean]: ...
	def hasGeneratedKeys(self, ) -> Union[int, JBoolean]: ...
	def setFetchSize(self, arg0: Union[int, JInt], ) -> None: ...
	@staticmethod
	def newUpdateResultRequest(arg0: JArray(javawrappers.org.hsqldb.types.Type, 1), arg1: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.Result: ...
	def getZoneString(self, ) -> javawrappers.java.lang.String: ...
	def getSessionRandomID(self, ) -> Union[int, JInt]: ...
	def clearLobResults(self, ) -> None: ...
	def addBatchedPreparedExecuteRequest(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def setStatementType(self, arg0: Union[int, JInt], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getGeneratedResultMetaData(self, ) -> javawrappers.org.hsqldb.result.ResultMetaData: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getChainedResult(self, ) -> javawrappers.org.hsqldb.result.Result: ...
	def setBatchedPreparedExecuteRequest(self, ) -> None: ...
	@overload
	@staticmethod
	def newUpdateCountResult(arg0: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newUpdateCountResult(arg0: javawrappers.org.hsqldb.result.ResultMetaData, arg1: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newSessionAttributesResult() -> javawrappers.org.hsqldb.result.Result: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setUpdateCount(self, arg0: Union[int, JInt], ) -> None: ...
	def addLobResult(self, arg0: javawrappers.org.hsqldb.result.ResultLob, ) -> None: ...
	def addWarnings(self, arg0: JArray(javawrappers.org.hsqldb.HsqlException, 1), ) -> None: ...
	def readLobResults(self, arg0: javawrappers.org.hsqldb.SessionInterface, arg1: javawrappers.java.io.DataInputStream, arg2: javawrappers.org.hsqldb.rowio.RowInputInterface, ) -> None: ...
	@staticmethod
	def newPrepareResponse(arg0: javawrappers.org.hsqldb.Statement, ) -> javawrappers.org.hsqldb.result.Result: ...
	def addChainedResult(self, arg0: javawrappers.org.hsqldb.result.Result, ) -> None: ...
	def getUnlinkChainedResult(self, ) -> javawrappers.org.hsqldb.result.Result: ...
	def getParameterData(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@staticmethod
	def newUpdateZeroResult() -> javawrappers.org.hsqldb.result.Result: ...
	def getDatabaseName(self, ) -> javawrappers.java.lang.String: ...
	def getUpdateCount(self, ) -> Union[int, JInt]: ...
	def getFetchSize(self, ) -> Union[int, JInt]: ...
	def isSimpleValue(self, ) -> Union[int, JBoolean]: ...
	def addRows(self, arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def getSessionAttributes(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def getStatement(self, ) -> javawrappers.org.hsqldb.Statement: ...
	@staticmethod
	def newWarningResult(arg0: javawrappers.org.hsqldb.HsqlException, ) -> javawrappers.org.hsqldb.result.Result: ...
	def setPreparedExecuteProperties(self, arg0: JArray(javawrappers.java.lang.Object, 1), arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@staticmethod
	def newConnectionAcknowledgeResponse(arg0: javawrappers.org.hsqldb.Session, ) -> javawrappers.org.hsqldb.result.Result: ...
	def setPreparedResultUpdateProperties(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def getGeneratedResultType(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def newExecuteDirectRequest() -> javawrappers.org.hsqldb.result.Result: ...
	def setNavigator(self, arg0: javawrappers.org.hsqldb.navigator.RowSetNavigator, ) -> None: ...
	def setResultType(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	@staticmethod
	def newErrorResult(arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newErrorResult(arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newSetSavepointRequest(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newDoubleColumnResult(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newGeneratedDataResult(arg0: javawrappers.org.hsqldb.result.ResultMetaData, ) -> javawrappers.org.hsqldb.result.Result: ...
	def setStatementID(self, arg0: Union[long, JLong], ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def newBatchedExecuteResponse(arg0: JArray(Union[int, JInt], 1), arg1: javawrappers.org.hsqldb.result.Result, arg2: javawrappers.org.hsqldb.result.Result, ) -> javawrappers.org.hsqldb.result.Result: ...
	def getSubString(self, ) -> javawrappers.java.lang.String: ...
	def getValueObject(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	@staticmethod
	def newPSMResult(arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newPSMResult(arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newRequestDataResult(arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.Result: ...
	def setSessionRandomID(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def newCancelRequest(arg0: Union[int, JInt], arg1: Union[long, JLong], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.result.Result: ...
	def getMainString(self, ) -> javawrappers.java.lang.String: ...
	def setPrepareOrExecuteProperties(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JInt], arg7: JArray(Union[int, JInt], 1), arg8: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	@staticmethod
	def newBatchedExecuteRequest() -> javawrappers.org.hsqldb.result.Result: ...
	def initialiseNavigator(self, ) -> javawrappers.org.hsqldb.navigator.RowSetNavigator: ...
	@staticmethod
	def newPrepareStatementRequest() -> javawrappers.org.hsqldb.result.Result: ...
	def setAsTransactionEndRequest(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, ) -> None: ...
	def setConnectionAttrType(self, arg0: Union[int, JInt], ) -> None: ...
	def getNavigator(self, ) -> javawrappers.org.hsqldb.navigator.RowSetNavigator: ...
	def getSingleRowData(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def setSessionId(self, arg0: Union[long, JLong], ) -> None: ...
	@staticmethod
	def newFreeStmtRequest(arg0: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.Result: ...
	def setDatabaseId(self, arg0: Union[int, JInt], ) -> None: ...
	@staticmethod
	def newSingleColumnStringResult(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.result.Result: ...
	def getExecuteProperties(self, ) -> Union[int, JInt]: ...
	def getStatementID(self, ) -> Union[long, JLong]: ...
	@staticmethod
	def newDataHeadResult(arg0: javawrappers.org.hsqldb.SessionInterface, arg1: javawrappers.org.hsqldb.result.Result, arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.Result: ...


class ResultLob:
	class LobResultTypes:


	def getCharArray(self, ) -> JArray(Union[string, JString], 1): ...
	@staticmethod
	def newLob(arg0: javawrappers.java.io.DataInput, arg1: Union[int, JBoolean], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	def isUpdateCount(self, ) -> Union[int, JBoolean]: ...
	def writeBody(self, arg0: javawrappers.org.hsqldb.SessionInterface, arg1: javawrappers.org.hsqldb.lib.DataOutputStream, ) -> None: ...
	def getDatabaseId(self, ) -> Union[int, JInt]: ...
	def readAdditionalResults(self, arg0: javawrappers.org.hsqldb.SessionInterface, arg1: javawrappers.java.io.DataInputStream, arg2: javawrappers.org.hsqldb.rowio.RowInputInterface, ) -> None: ...
	@overload
	@staticmethod
	def newLobGetCharPatternPositionRequest(arg0: Union[long, JLong], arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	@overload
	@staticmethod
	def newLobGetCharPatternPositionRequest(arg0: Union[long, JLong], arg1: JArray(Union[string, JString], 1), arg2: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	def getSubType(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def newLobSetCharsRequest(arg0: Union[long, JLong], arg1: Union[long, JLong], arg2: JArray(Union[string, JString], 1), ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	def getStatementType(self, ) -> Union[int, JInt]: ...
	def setResultId(self, arg0: Union[long, JLong], ) -> None: ...
	@staticmethod
	def newLobCreateBlobRequest(arg0: Union[long, JLong], arg1: Union[long, JLong], arg2: javawrappers.java.io.InputStream, arg3: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	def setMaxRows(self, arg0: Union[int, JInt], ) -> None: ...
	@staticmethod
	def newConnectionAttemptRequest(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.Result: ...
	def write(self, arg0: javawrappers.org.hsqldb.SessionInterface, arg1: javawrappers.org.hsqldb.lib.DataOutputStream, arg2: javawrappers.org.hsqldb.rowio.RowOutputInterface, ) -> None: ...
	@staticmethod
	def newLobDuplicateRequest(arg0: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	@staticmethod
	def newLobSetResponse(arg0: Union[long, JLong], arg1: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	@staticmethod
	def newResetSessionRequest() -> javawrappers.org.hsqldb.result.Result: ...
	def getException(self, ) -> javawrappers.org.hsqldb.HsqlException: ...
	def getActionType(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def newPreparedExecuteRequest(arg0: JArray(javawrappers.org.hsqldb.types.Type, 1), arg1: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newLobCreateClobResponse(arg0: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	def getLobID(self, ) -> Union[long, JLong]: ...
	@overload
	@staticmethod
	def newResult(arg0: javawrappers.java.io.DataInput, arg1: javawrappers.org.hsqldb.rowio.RowInputInterface, ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newResult(arg0: javawrappers.org.hsqldb.Session, arg1: Union[int, JInt], arg2: javawrappers.java.io.DataInput, arg3: javawrappers.org.hsqldb.rowio.RowInputInterface, ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newResult(arg0: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newResult(arg0: javawrappers.org.hsqldb.navigator.RowSetNavigator, ) -> javawrappers.org.hsqldb.result.Result: ...
	def getInputStream(self, ) -> javawrappers.java.io.InputStream: ...
	@staticmethod
	def newLobTruncateResponse(arg0: Union[long, JLong], arg1: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	def setValueObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def getType(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def newLobCreateBlobResponse(arg0: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	def setMainString(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getSessionId(self, ) -> Union[long, JLong]: ...
	@staticmethod
	def newCallResponse(arg0: JArray(javawrappers.org.hsqldb.types.Type, 1), arg1: Union[long, JLong], arg2: JArray(javawrappers.java.lang.Object, 1), ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newDataResult(arg0: javawrappers.org.hsqldb.result.ResultMetaData, ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newLobCreateClobRequest(arg0: Union[long, JLong], arg1: Union[long, JLong], arg2: javawrappers.java.io.Reader, arg3: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getConnectionAttrType(self, ) -> Union[int, JInt]: ...
	def getLobCount(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def newLobGetBytePatternPositionRequest(arg0: Union[long, JLong], arg1: JArray(JByte, 1), arg2: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	@overload
	@staticmethod
	def newLobGetBytePatternPositionRequest(arg0: Union[long, JLong], arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	def addRow(self, arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def notify(self, ) -> None: ...
	def getLOBResult(self, ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	def getBlockLength(self, ) -> Union[long, JLong]: ...
	def isError(self, ) -> Union[int, JBoolean]: ...
	def setActionType(self, arg0: Union[int, JInt], ) -> None: ...
	def isData(self, ) -> Union[int, JBoolean]: ...
	def getErrorCode(self, ) -> Union[int, JInt]: ...
	def setStatement(self, arg0: javawrappers.org.hsqldb.Statement, ) -> None: ...
	def getResultId(self, ) -> Union[long, JLong]: ...
	@staticmethod
	def newLobGetCharsRequest(arg0: Union[long, JLong], arg1: Union[long, JLong], arg2: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	@overload
	@staticmethod
	def newSingleColumnResult(arg0: javawrappers.org.hsqldb.result.ResultMetaData, ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newSingleColumnResult(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.result.Result: ...
	def setSession(self, arg0: javawrappers.org.hsqldb.SessionInterface, ) -> None: ...
	@overload
	@staticmethod
	def newDataRowsResult(arg0: javawrappers.org.hsqldb.result.Result, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newDataRowsResult(arg0: javawrappers.org.hsqldb.navigator.RowSetNavigator, ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newLobGetTruncateLength(arg0: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	def isWarning(self, ) -> Union[int, JBoolean]: ...
	def hasGeneratedKeys(self, ) -> Union[int, JBoolean]: ...
	def setFetchSize(self, arg0: Union[int, JInt], ) -> None: ...
	@staticmethod
	def newUpdateResultRequest(arg0: JArray(javawrappers.org.hsqldb.types.Type, 1), arg1: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.Result: ...
	def getZoneString(self, ) -> javawrappers.java.lang.String: ...
	def getSessionRandomID(self, ) -> Union[int, JInt]: ...
	def clearLobResults(self, ) -> None: ...
	def addBatchedPreparedExecuteRequest(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def setStatementType(self, arg0: Union[int, JInt], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getGeneratedResultMetaData(self, ) -> javawrappers.org.hsqldb.result.ResultMetaData: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getChainedResult(self, ) -> javawrappers.org.hsqldb.result.Result: ...
	def setBatchedPreparedExecuteRequest(self, ) -> None: ...
	@overload
	@staticmethod
	def newUpdateCountResult(arg0: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newUpdateCountResult(arg0: javawrappers.org.hsqldb.result.ResultMetaData, arg1: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newSessionAttributesResult() -> javawrappers.org.hsqldb.result.Result: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setUpdateCount(self, arg0: Union[int, JInt], ) -> None: ...
	def addLobResult(self, arg0: javawrappers.org.hsqldb.result.ResultLob, ) -> None: ...
	def addWarnings(self, arg0: JArray(javawrappers.org.hsqldb.HsqlException, 1), ) -> None: ...
	def readLobResults(self, arg0: javawrappers.org.hsqldb.SessionInterface, arg1: javawrappers.java.io.DataInputStream, arg2: javawrappers.org.hsqldb.rowio.RowInputInterface, ) -> None: ...
	@staticmethod
	def newPrepareResponse(arg0: javawrappers.org.hsqldb.Statement, ) -> javawrappers.org.hsqldb.result.Result: ...
	def addChainedResult(self, arg0: javawrappers.org.hsqldb.result.Result, ) -> None: ...
	@staticmethod
	def newLobGetRequest(arg0: Union[long, JLong], arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	def getUnlinkChainedResult(self, ) -> javawrappers.org.hsqldb.result.Result: ...
	def getParameterData(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@staticmethod
	def newUpdateZeroResult() -> javawrappers.org.hsqldb.result.Result: ...
	def getDatabaseName(self, ) -> javawrappers.java.lang.String: ...
	def getUpdateCount(self, ) -> Union[int, JInt]: ...
	def getFetchSize(self, ) -> Union[int, JInt]: ...
	def isSimpleValue(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def newLobGetLengthRequest(arg0: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	def addRows(self, arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def getSessionAttributes(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def getStatement(self, ) -> javawrappers.org.hsqldb.Statement: ...
	@staticmethod
	def newLobGetBytesResponse(arg0: Union[long, JLong], arg1: Union[long, JLong], arg2: JArray(JByte, 1), ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	@staticmethod
	def newWarningResult(arg0: javawrappers.org.hsqldb.HsqlException, ) -> javawrappers.org.hsqldb.result.Result: ...
	def setPreparedExecuteProperties(self, arg0: JArray(javawrappers.java.lang.Object, 1), arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@staticmethod
	def newConnectionAcknowledgeResponse(arg0: javawrappers.org.hsqldb.Session, ) -> javawrappers.org.hsqldb.result.Result: ...
	def setPreparedResultUpdateProperties(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def getGeneratedResultType(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def newLobGetCharsResponse(arg0: Union[long, JLong], arg1: Union[long, JLong], arg2: JArray(Union[string, JString], 1), ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	@staticmethod
	def newExecuteDirectRequest() -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newLobGetBytesRequest(arg0: Union[long, JLong], arg1: Union[long, JLong], arg2: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	def setNavigator(self, arg0: javawrappers.org.hsqldb.navigator.RowSetNavigator, ) -> None: ...
	def setResultType(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	@staticmethod
	def newErrorResult(arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newErrorResult(arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newSetSavepointRequest(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newDoubleColumnResult(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newGeneratedDataResult(arg0: javawrappers.org.hsqldb.result.ResultMetaData, ) -> javawrappers.org.hsqldb.result.Result: ...
	def setStatementID(self, arg0: Union[long, JLong], ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getOffset(self, ) -> Union[long, JLong]: ...
	@staticmethod
	def newBatchedExecuteResponse(arg0: JArray(Union[int, JInt], 1), arg1: javawrappers.org.hsqldb.result.Result, arg2: javawrappers.org.hsqldb.result.Result, ) -> javawrappers.org.hsqldb.result.Result: ...
	def getSubString(self, ) -> javawrappers.java.lang.String: ...
	def getValueObject(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	@staticmethod
	def newPSMResult(arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hsqldb.result.Result: ...
	@overload
	@staticmethod
	def newPSMResult(arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newRequestDataResult(arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.Result: ...
	def setSessionRandomID(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def newCancelRequest(arg0: Union[int, JInt], arg1: Union[long, JLong], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.result.Result: ...
	@staticmethod
	def newLobSetBytesRequest(arg0: Union[long, JLong], arg1: Union[long, JLong], arg2: JArray(JByte, 1), ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	def getMainString(self, ) -> javawrappers.java.lang.String: ...
	def setPrepareOrExecuteProperties(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JInt], arg7: JArray(Union[int, JInt], 1), arg8: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	@staticmethod
	def newBatchedExecuteRequest() -> javawrappers.org.hsqldb.result.Result: ...
	def getReader(self, ) -> javawrappers.java.io.Reader: ...
	def initialiseNavigator(self, ) -> javawrappers.org.hsqldb.navigator.RowSetNavigator: ...
	@staticmethod
	def newPrepareStatementRequest() -> javawrappers.org.hsqldb.result.Result: ...
	def setAsTransactionEndRequest(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, ) -> None: ...
	def setConnectionAttrType(self, arg0: Union[int, JInt], ) -> None: ...
	def getNavigator(self, ) -> javawrappers.org.hsqldb.navigator.RowSetNavigator: ...
	def getSingleRowData(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def setSessionId(self, arg0: Union[long, JLong], ) -> None: ...
	@staticmethod
	def newFreeStmtRequest(arg0: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.Result: ...
	def setDatabaseId(self, arg0: Union[int, JInt], ) -> None: ...
	def getByteArray(self, ) -> JArray(JByte, 1): ...
	@staticmethod
	def newLobTruncateRequest(arg0: Union[long, JLong], arg1: Union[long, JLong], ) -> javawrappers.org.hsqldb.result.ResultLob: ...
	@staticmethod
	def newSingleColumnStringResult(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.result.Result: ...
	def getExecuteProperties(self, ) -> Union[int, JInt]: ...
	def getStatementID(self, ) -> Union[long, JLong]: ...
	@staticmethod
	def newDataHeadResult(arg0: javawrappers.org.hsqldb.SessionInterface, arg1: javawrappers.org.hsqldb.result.Result, arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> javawrappers.org.hsqldb.result.Result: ...


class ResultConstants:


