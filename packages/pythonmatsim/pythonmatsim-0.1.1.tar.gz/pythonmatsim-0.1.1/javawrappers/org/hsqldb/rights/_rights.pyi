################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.hsqldb
import javawrappers.org.hsqldb.rights
import javawrappers.org.hsqldb.lib

from jpype.types import *
from typing import Union

from typing import overload

class User:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setPassword(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> None: ...
	def getColumnsForAllPrivileges(self, arg0: javawrappers.org.hsqldb.SchemaObject, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def getName(self, ) -> javawrappers.org.hsqldb.HsqlNameManager.HsqlName: ...
	def getAllDirectPrivileges(self, arg0: javawrappers.org.hsqldb.SchemaObject, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def checkUpdate(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: JArray(Union[int, JBoolean], 1), ) -> None: ...
	def checkInsert(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: JArray(Union[int, JBoolean], 1), ) -> None: ...
	def getOwner(self, ) -> javawrappers.org.hsqldb.rights.Grantee: ...
	def getSQL(self, ) -> javawrappers.java.lang.String: ...
	def compile(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.SchemaObject, ) -> None: ...
	def getComponents(self, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def getChangeTimestamp(self, ) -> Union[long, JLong]: ...
	def canChangeAuthorisation(self, ) -> Union[int, JBoolean]: ...
	def getConnectUserSQL(self, ) -> javawrappers.java.lang.String: ...
	def getInitialSchema(self, ) -> javawrappers.org.hsqldb.HsqlNameManager.HsqlName: ...
	def getGranteeAndAllRoles(self, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def getSetUserPasswordDigestSQL(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	def hasColumnRights(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: JArray(Union[int, JInt], 1), ) -> Union[int, JBoolean]: ...
	def checkTrigger(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: JArray(Union[int, JBoolean], 1), ) -> None: ...
	def isAdmin(self, ) -> Union[int, JBoolean]: ...
	def checkAccess(self, arg0: javawrappers.org.hsqldb.SchemaObject, ) -> None: ...
	def isSystem(self, ) -> Union[int, JBoolean]: ...
	def checkDelete(self, arg0: javawrappers.org.hsqldb.SchemaObject, ) -> None: ...
	def getReferences(self, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def getType(self, ) -> Union[int, JInt]: ...
	def checkPassword(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def hasRole(self, arg0: javawrappers.org.hsqldb.rights.Grantee, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAllRoles(self, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def getSchemaName(self, ) -> javawrappers.org.hsqldb.HsqlNameManager.HsqlName: ...
	def getCatalogName(self, ) -> javawrappers.org.hsqldb.HsqlNameManager.HsqlName: ...
	def isFullyAccessibleByRole(self, arg0: javawrappers.org.hsqldb.HsqlNameManager.HsqlName, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def checkAdmin(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getDirectRoles(self, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def getInitialOrDefaultSchema(self, ) -> javawrappers.org.hsqldb.HsqlNameManager.HsqlName: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def visibleGrantees(self, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def isPublic(self, ) -> Union[int, JBoolean]: ...
	def checkSchemaUpdateOrGrantRights(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getLocalUserSQL(self, ) -> javawrappers.java.lang.String: ...
	def getAllGrantedPrivileges(self, arg0: javawrappers.org.hsqldb.SchemaObject, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def checkSelect(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: JArray(Union[int, JBoolean], 1), ) -> None: ...
	def getPasswordDigest(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def isGrantable(self, arg0: javawrappers.org.hsqldb.rights.Grantee, ) -> Union[int, JBoolean]: ...
	@overload
	def isGrantable(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: javawrappers.org.hsqldb.rights.Right, ) -> Union[int, JBoolean]: ...
	def getInitialSchemaSQL(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def isAccessible(self, arg0: javawrappers.org.hsqldb.HsqlNameManager.HsqlName, ) -> Union[int, JBoolean]: ...
	@overload
	def isAccessible(self, arg0: javawrappers.org.hsqldb.HsqlNameManager.HsqlName, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def isAccessible(self, arg0: javawrappers.org.hsqldb.SchemaObject, ) -> Union[int, JBoolean]: ...
	def isRole(self, ) -> Union[int, JBoolean]: ...
	def hasSchemaUpdateOrGrantRights(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def setInitialSchema(self, arg0: javawrappers.org.hsqldb.HsqlNameManager.HsqlName, ) -> None: ...
	def isSchemaCreator(self, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getSetCurrentPasswordDigestSQL(arg0: javawrappers.org.hsqldb.rights.GranteeManager, arg1: javawrappers.java.lang.String, arg2: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	def hasNonSelectTableRight(self, arg0: javawrappers.org.hsqldb.SchemaObject, ) -> Union[int, JBoolean]: ...
	def checkReferences(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: JArray(Union[int, JBoolean], 1), ) -> None: ...
	def getGranteeAndAllRolesWithPublic(self, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...


class UserManager:
	def __init__(self, arg0: javawrappers.org.hsqldb.Database, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInitialSchemaSQL(self, ) -> JArray(javawrappers.java.lang.String, 1): ...
	def getAuthenticationSQL(self, ) -> JArray(javawrappers.java.lang.String, 1): ...
	def setPassword(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.rights.User, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def dropUser(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def createFirstUser(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def checkComplexity(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def getUser(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.rights.User: ...
	def notify(self, ) -> None: ...
	def setExtAuthenticationFunction(self, arg0: javawrappers.org.hsqldb.Routine, ) -> None: ...
	def listVisibleUsers(self, arg0: javawrappers.org.hsqldb.Session, ) -> javawrappers.org.hsqldb.lib.HsqlArrayList: ...
	def removeSchemaReference(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getSysUser(self, ) -> javawrappers.org.hsqldb.rights.User: ...
	def setPasswordCheckFunction(self, arg0: javawrappers.org.hsqldb.Routine, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getUsers(self, ) -> javawrappers.org.hsqldb.lib.HashMappedList: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.rights.User: ...
	def exists(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def createUser(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.HsqlNameManager.HsqlName, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.org.hsqldb.rights.User: ...


class Grantee:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAllRoles(self, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def getColumnsForAllPrivileges(self, arg0: javawrappers.org.hsqldb.SchemaObject, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def getName(self, ) -> javawrappers.org.hsqldb.HsqlNameManager.HsqlName: ...
	def getSchemaName(self, ) -> javawrappers.org.hsqldb.HsqlNameManager.HsqlName: ...
	def getCatalogName(self, ) -> javawrappers.org.hsqldb.HsqlNameManager.HsqlName: ...
	def getAllDirectPrivileges(self, arg0: javawrappers.org.hsqldb.SchemaObject, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def isFullyAccessibleByRole(self, arg0: javawrappers.org.hsqldb.HsqlNameManager.HsqlName, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def checkUpdate(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: JArray(Union[int, JBoolean], 1), ) -> None: ...
	def checkAdmin(self, ) -> None: ...
	def checkInsert(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: JArray(Union[int, JBoolean], 1), ) -> None: ...
	def getOwner(self, ) -> javawrappers.org.hsqldb.rights.Grantee: ...
	def notify(self, ) -> None: ...
	def getDirectRoles(self, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def getSQL(self, ) -> javawrappers.java.lang.String: ...
	def compile(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.SchemaObject, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def visibleGrantees(self, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def isPublic(self, ) -> Union[int, JBoolean]: ...
	def getComponents(self, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def checkSchemaUpdateOrGrantRights(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getChangeTimestamp(self, ) -> Union[long, JLong]: ...
	def canChangeAuthorisation(self, ) -> Union[int, JBoolean]: ...
	def getAllGrantedPrivileges(self, arg0: javawrappers.org.hsqldb.SchemaObject, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def checkSelect(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: JArray(Union[int, JBoolean], 1), ) -> None: ...
	def getGranteeAndAllRoles(self, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	@overload
	def isGrantable(self, arg0: javawrappers.org.hsqldb.rights.Grantee, ) -> Union[int, JBoolean]: ...
	@overload
	def isGrantable(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: javawrappers.org.hsqldb.rights.Right, ) -> Union[int, JBoolean]: ...
	@overload
	def isAccessible(self, arg0: javawrappers.org.hsqldb.HsqlNameManager.HsqlName, ) -> Union[int, JBoolean]: ...
	@overload
	def isAccessible(self, arg0: javawrappers.org.hsqldb.HsqlNameManager.HsqlName, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def isAccessible(self, arg0: javawrappers.org.hsqldb.SchemaObject, ) -> Union[int, JBoolean]: ...
	def hasColumnRights(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: JArray(Union[int, JInt], 1), ) -> Union[int, JBoolean]: ...
	def checkTrigger(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: JArray(Union[int, JBoolean], 1), ) -> None: ...
	def isRole(self, ) -> Union[int, JBoolean]: ...
	def hasSchemaUpdateOrGrantRights(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def isAdmin(self, ) -> Union[int, JBoolean]: ...
	def isSchemaCreator(self, ) -> Union[int, JBoolean]: ...
	def checkAccess(self, arg0: javawrappers.org.hsqldb.SchemaObject, ) -> None: ...
	def isSystem(self, ) -> Union[int, JBoolean]: ...
	def checkDelete(self, arg0: javawrappers.org.hsqldb.SchemaObject, ) -> None: ...
	def getReferences(self, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def getType(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def hasRole(self, arg0: javawrappers.org.hsqldb.rights.Grantee, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def hasNonSelectTableRight(self, arg0: javawrappers.org.hsqldb.SchemaObject, ) -> Union[int, JBoolean]: ...
	def checkReferences(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: JArray(Union[int, JBoolean], 1), ) -> None: ...
	def getGranteeAndAllRolesWithPublic(self, ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...


class Right:
	def __init__(self, ): ...
	def add(self, arg0: javawrappers.org.hsqldb.rights.Right, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setColumns(self, arg0: javawrappers.org.hsqldb.Table, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: Union[int, JInt], arg1: javawrappers.org.hsqldb.lib.OrderedHashSet, ) -> None: ...
	def getGrantee(self, ) -> javawrappers.org.hsqldb.rights.Grantee: ...
	def notifyAll(self, ) -> None: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def duplicate(self, ) -> javawrappers.org.hsqldb.rights.Right: ...
	def getGrantor(self, ) -> javawrappers.org.hsqldb.rights.Grantee: ...
	def notify(self, ) -> None: ...
	def remove(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: javawrappers.org.hsqldb.rights.Right, ) -> None: ...
	def contains(self, arg0: javawrappers.org.hsqldb.rights.Right, ) -> Union[int, JBoolean]: ...
	def getColumnsForPrivilege(self, arg0: javawrappers.org.hsqldb.Table, arg1: Union[int, JInt], ) -> javawrappers.org.hsqldb.lib.OrderedHashSet: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def canAccessFully(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def canAccess(self, arg0: javawrappers.org.hsqldb.Table, arg1: JArray(Union[int, JInt], 1), ) -> Union[int, JBoolean]: ...
	@overload
	def canAccess(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def addNewColumn(self, arg0: javawrappers.org.hsqldb.HsqlNameManager.HsqlName, ) -> None: ...
	def isFull(self, ) -> Union[int, JBoolean]: ...
	def canAccesssNonSelect(self, ) -> Union[int, JBoolean]: ...
	def getGrantableRights(self, ) -> javawrappers.org.hsqldb.rights.Right: ...


class GranteeManager:
	def __init__(self, arg0: javawrappers.org.hsqldb.Database, ): ...
	def getRoleNames(self, ) -> javawrappers.org.hsqldb.lib.Set: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def removeDbObjects(self, arg0: javawrappers.org.hsqldb.lib.OrderedHashSet, ) -> None: ...
	def addUser(self, arg0: javawrappers.org.hsqldb.HsqlNameManager.HsqlName, ) -> javawrappers.org.hsqldb.rights.User: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def getCheckSingleRight(arg0: javawrappers.java.lang.String, ) -> Union[int, JInt]: ...
	@overload
	def revoke(self, arg0: javawrappers.org.hsqldb.lib.OrderedHashSet, arg1: JArray(javawrappers.org.hsqldb.SchemaObject, 1), arg2: javawrappers.org.hsqldb.rights.Right, arg3: javawrappers.org.hsqldb.rights.Grantee, arg4: Union[int, JBoolean], arg5: Union[int, JBoolean], ) -> None: ...
	@overload
	def revoke(self, arg0: javawrappers.org.hsqldb.lib.OrderedHashSet, arg1: javawrappers.org.hsqldb.SchemaObject, arg2: javawrappers.org.hsqldb.rights.Right, arg3: javawrappers.org.hsqldb.rights.Grantee, arg4: Union[int, JBoolean], arg5: Union[int, JBoolean], ) -> None: ...
	@overload
	def revoke(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.hsqldb.rights.Grantee, ) -> None: ...
	def notify(self, ) -> None: ...
	def getSQL(self, ) -> JArray(javawrappers.java.lang.String, 1): ...
	def getDBARole(self, ) -> javawrappers.org.hsqldb.rights.Grantee: ...
	@staticmethod
	def isImmutable(arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.rights.Grantee: ...
	def checkRoleList(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.hsqldb.lib.OrderedHashSet, arg2: javawrappers.org.hsqldb.rights.Grantee, arg3: Union[int, JBoolean], ) -> None: ...
	def removeNewUser(self, arg0: javawrappers.org.hsqldb.HsqlNameManager.HsqlName, ) -> None: ...
	def getDigestAlgo(self, ) -> javawrappers.java.lang.String: ...
	def getRoles(self, ) -> javawrappers.org.hsqldb.lib.Collection: ...
	def updateAddColumn(self, arg0: javawrappers.org.hsqldb.HsqlNameManager.HsqlName, arg1: javawrappers.org.hsqldb.HsqlNameManager.HsqlName, ) -> None: ...
	@staticmethod
	def isReserved(arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def isRole(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def getRole(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hsqldb.rights.Grantee: ...
	def getGrantees(self, ) -> javawrappers.org.hsqldb.lib.Collection: ...
	@staticmethod
	def getSystemRole() -> javawrappers.org.hsqldb.rights.Grantee: ...
	def setDigestAlgo(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeGrantee(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def validRightString(arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def dropRole(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@staticmethod
	def getRight(arg0: javawrappers.java.lang.String, ) -> Union[int, JInt]: ...
	def removeDbObject(self, arg0: javawrappers.org.hsqldb.HsqlNameManager.HsqlName, ) -> None: ...
	def getRightsSQL(self, ) -> JArray(javawrappers.java.lang.String, 1): ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def grantSystemToPublic(self, arg0: javawrappers.org.hsqldb.SchemaObject, arg1: javawrappers.org.hsqldb.rights.Right, ) -> None: ...
	def checkGranteeList(self, arg0: javawrappers.org.hsqldb.lib.OrderedHashSet, ) -> None: ...
	@overload
	def grant(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.lib.OrderedHashSet, arg2: javawrappers.org.hsqldb.SchemaObject, arg3: javawrappers.org.hsqldb.rights.Right, arg4: javawrappers.org.hsqldb.rights.Grantee, arg5: Union[int, JBoolean], ) -> None: ...
	@overload
	def grant(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.lib.OrderedHashSet, arg2: JArray(javawrappers.org.hsqldb.SchemaObject, 1), arg3: javawrappers.org.hsqldb.rights.Right, arg4: javawrappers.org.hsqldb.rights.Grantee, arg5: Union[int, JBoolean], ) -> None: ...
	@overload
	def grant(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.hsqldb.rights.Grantee, ) -> None: ...
	def addRole(self, arg0: javawrappers.org.hsqldb.HsqlNameManager.HsqlName, ) -> javawrappers.org.hsqldb.rights.Grantee: ...


class GrantConstants:


