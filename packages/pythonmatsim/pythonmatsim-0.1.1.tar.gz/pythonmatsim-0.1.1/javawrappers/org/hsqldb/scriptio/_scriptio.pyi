################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.hsqldb

from jpype.types import *
from typing import Union

from typing import overload

class ScriptWriterEncode:
	@overload
	def __init__(self, arg0: javawrappers.org.hsqldb.Database, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.hsqldb.persist.Crypto, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hsqldb.Database, arg1: javawrappers.java.lang.String, arg2: Union[int, JBoolean], arg3: javawrappers.org.hsqldb.persist.Crypto, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hsqldb.Database, arg1: javawrappers.java.io.OutputStream, arg2: javawrappers.org.hsqldb.lib.FileAccess.FileSync, arg3: Union[int, JBoolean], arg4: javawrappers.org.hsqldb.persist.Crypto, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getWriteDelay(self, ) -> Union[int, JInt]: ...
	def run(self, ) -> None: ...
	def writeRow(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.Row, arg2: javawrappers.org.hsqldb.Table, ) -> None: ...
	def notify(self, ) -> None: ...
	def writeExistingData(self, ) -> None: ...
	def writeTableInit(self, arg0: javawrappers.org.hsqldb.Table, ) -> None: ...
	def setWriteDelay(self, arg0: Union[int, JInt], ) -> None: ...
	def setIncludeIndexRoots(self, arg0: Union[int, JBoolean], ) -> None: ...
	def writeSequenceStatement(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.NumberSequence, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def writeInsertStatement(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.Row, arg2: javawrappers.org.hsqldb.Table, ) -> None: ...
	def setIncludeTableInit(self, arg0: Union[int, JBoolean], ) -> None: ...
	def close(self, ) -> None: ...
	def start(self, ) -> None: ...
	def sync(self, ) -> None: ...
	def writeOtherStatement(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.java.lang.String, ) -> None: ...
	def writeCommitStatement(self, arg0: javawrappers.org.hsqldb.Session, ) -> None: ...
	def writeTableTerm(self, arg0: javawrappers.org.hsqldb.Table, ) -> None: ...
	def writeAll(self, ) -> None: ...
	def stop(self, ) -> None: ...
	def size(self, ) -> Union[long, JLong]: ...
	def forceSync(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def writeDeleteStatement(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.Table, arg2: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def setIncludeCachedData(self, arg0: Union[int, JBoolean], ) -> None: ...
	def writeLogStatement(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.java.lang.String, ) -> None: ...
	def writeDDL(self, ) -> None: ...


class ScriptReaderText:
	def __init__(self, arg0: javawrappers.org.hsqldb.Database, arg1: javawrappers.java.lang.String, arg2: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getSessionNumber(self, ) -> Union[int, JInt]: ...
	def getCurrentSchema(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getStatementType(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def readAll(self, arg0: javawrappers.org.hsqldb.Session, ) -> None: ...
	def readLoggedStatement(self, arg0: javawrappers.org.hsqldb.Session, ) -> Union[int, JBoolean]: ...
	def getLineNumber(self, ) -> Union[long, JLong]: ...
	def getFileNamePath(self, ) -> javawrappers.java.lang.String: ...
	def getLoggedStatement(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getCurrentTable(self, ) -> javawrappers.org.hsqldb.Table: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def close(self, ) -> None: ...
	def getData(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...


class ScriptWriterBase:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getWriteDelay(self, ) -> Union[int, JInt]: ...
	def run(self, ) -> None: ...
	def writeRow(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.Row, arg2: javawrappers.org.hsqldb.Table, ) -> None: ...
	def notify(self, ) -> None: ...
	def writeTableInit(self, arg0: javawrappers.org.hsqldb.Table, ) -> None: ...
	def writeExistingData(self, ) -> None: ...
	def setWriteDelay(self, arg0: Union[int, JInt], ) -> None: ...
	def setIncludeIndexRoots(self, arg0: Union[int, JBoolean], ) -> None: ...
	def writeSequenceStatement(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.NumberSequence, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def writeInsertStatement(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.Row, arg2: javawrappers.org.hsqldb.Table, ) -> None: ...
	def setIncludeTableInit(self, arg0: Union[int, JBoolean], ) -> None: ...
	def close(self, ) -> None: ...
	def start(self, ) -> None: ...
	def sync(self, ) -> None: ...
	def writeOtherStatement(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.java.lang.String, ) -> None: ...
	def writeCommitStatement(self, arg0: javawrappers.org.hsqldb.Session, ) -> None: ...
	def writeTableTerm(self, arg0: javawrappers.org.hsqldb.Table, ) -> None: ...
	def writeAll(self, ) -> None: ...
	def stop(self, ) -> None: ...
	def size(self, ) -> Union[long, JLong]: ...
	def forceSync(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def writeDeleteStatement(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.Table, arg2: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def setIncludeCachedData(self, arg0: Union[int, JBoolean], ) -> None: ...
	def writeLogStatement(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.java.lang.String, ) -> None: ...
	def writeDDL(self, ) -> None: ...


class ScriptReaderBase:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getSessionNumber(self, ) -> Union[int, JInt]: ...
	def getCurrentSchema(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getStatementType(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def readAll(self, arg0: javawrappers.org.hsqldb.Session, ) -> None: ...
	def readLoggedStatement(self, arg0: javawrappers.org.hsqldb.Session, ) -> Union[int, JBoolean]: ...
	def getLineNumber(self, ) -> Union[long, JLong]: ...
	def getFileNamePath(self, ) -> javawrappers.java.lang.String: ...
	def getLoggedStatement(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getCurrentTable(self, ) -> javawrappers.org.hsqldb.Table: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def close(self, ) -> None: ...
	def getData(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...


class ScriptReaderDecode:
	def __init__(self, arg0: javawrappers.org.hsqldb.Database, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.hsqldb.persist.Crypto, arg3: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getSessionNumber(self, ) -> Union[int, JInt]: ...
	def getCurrentSchema(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getStatementType(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def readAll(self, arg0: javawrappers.org.hsqldb.Session, ) -> None: ...
	def readLoggedStatement(self, arg0: javawrappers.org.hsqldb.Session, ) -> Union[int, JBoolean]: ...
	def getLineNumber(self, ) -> Union[long, JLong]: ...
	def getFileNamePath(self, ) -> javawrappers.java.lang.String: ...
	def getLoggedStatement(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getCurrentTable(self, ) -> javawrappers.org.hsqldb.Table: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def close(self, ) -> None: ...
	def getData(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...


class ScriptWriterText:
	@overload
	def __init__(self, arg0: javawrappers.org.hsqldb.Database, arg1: javawrappers.java.lang.String, arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], arg4: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hsqldb.Database, arg1: javawrappers.java.lang.String, arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hsqldb.Database, arg1: javawrappers.java.io.OutputStream, arg2: javawrappers.org.hsqldb.lib.FileAccess.FileSync, arg3: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getWriteDelay(self, ) -> Union[int, JInt]: ...
	def run(self, ) -> None: ...
	def writeRow(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.Row, arg2: javawrappers.org.hsqldb.Table, ) -> None: ...
	def notify(self, ) -> None: ...
	def writeExistingData(self, ) -> None: ...
	def writeTableInit(self, arg0: javawrappers.org.hsqldb.Table, ) -> None: ...
	def setWriteDelay(self, arg0: Union[int, JInt], ) -> None: ...
	def setIncludeIndexRoots(self, arg0: Union[int, JBoolean], ) -> None: ...
	def writeSequenceStatement(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.NumberSequence, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def writeInsertStatement(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.Row, arg2: javawrappers.org.hsqldb.Table, ) -> None: ...
	def setIncludeTableInit(self, arg0: Union[int, JBoolean], ) -> None: ...
	def close(self, ) -> None: ...
	def start(self, ) -> None: ...
	def sync(self, ) -> None: ...
	def writeOtherStatement(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.java.lang.String, ) -> None: ...
	def writeCommitStatement(self, arg0: javawrappers.org.hsqldb.Session, ) -> None: ...
	def writeTableTerm(self, arg0: javawrappers.org.hsqldb.Table, ) -> None: ...
	def writeAll(self, ) -> None: ...
	def stop(self, ) -> None: ...
	def size(self, ) -> Union[long, JLong]: ...
	def forceSync(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def writeDeleteStatement(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.org.hsqldb.Table, arg2: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def setIncludeCachedData(self, arg0: Union[int, JBoolean], ) -> None: ...
	def writeLogStatement(self, arg0: javawrappers.org.hsqldb.Session, arg1: javawrappers.java.lang.String, ) -> None: ...
	def writeDDL(self, ) -> None: ...


