################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.feature.simple
import javawrappers.org.opengis.feature
import javawrappers.org.opengis.util
import javawrappers.java.util.stream
import javawrappers.org.opengis.referencing.crs
import javawrappers.java.util.function
import javawrappers.org.opengis.feature.type

from jpype.types import *
from typing import Union

from typing import overload

class ComplexType:
	@overload
	def getDescriptor(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.feature.type.PropertyDescriptor: ...
	@overload
	def getDescriptor(self, arg0: javawrappers.org.opengis.feature.type.Name, ) -> javawrappers.org.opengis.feature.type.PropertyDescriptor: ...
	def getName(self, ) -> javawrappers.org.opengis.feature.type.Name: ...
	def getDescriptors(self, ) -> javawrappers.java.util.Collection: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def isIdentified(self, ) -> Union[int, JBoolean]: ...
	def getBinding(self, ) -> javawrappers.java.lang.Class: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isInline(self, ) -> Union[int, JBoolean]: ...
	def getUserData(self, ) -> javawrappers.java.util.Map: ...
	@overload
	def getSuper(self, ) -> javawrappers.org.opengis.feature.type.AttributeType: ...
	@overload
	def getSuper(self, ) -> javawrappers.org.opengis.feature.type.PropertyType: ...
	def isAbstract(self, ) -> Union[int, JBoolean]: ...
	def getRestrictions(self, ) -> javawrappers.java.util.List: ...
	def getDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class GeometryType:
	def getName(self, ) -> javawrappers.org.opengis.feature.type.Name: ...
	def getCoordinateReferenceSystem(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getBinding(self, ) -> javawrappers.java.lang.Class: ...
	def isIdentified(self, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getUserData(self, ) -> javawrappers.java.util.Map: ...
	@overload
	def getSuper(self, ) -> javawrappers.org.opengis.feature.type.AttributeType: ...
	@overload
	def getSuper(self, ) -> javawrappers.org.opengis.feature.type.PropertyType: ...
	def isAbstract(self, ) -> Union[int, JBoolean]: ...
	def getRestrictions(self, ) -> javawrappers.java.util.List: ...
	def getDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class Namespace:
	def add(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def lookup(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.feature.type.Name: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def containsAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def remove(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def removeIf(self, arg0: javawrappers.java.util.function.Predicate, ) -> Union[int, JBoolean]: ...
	def removeAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def contains(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def size(self, ) -> Union[int, JInt]: ...
	def stream(self, ) -> javawrappers.java.util.stream.Stream: ...
	def addAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def toArray(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def toArray(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def toArray(self, arg0: javawrappers.java.util.function.IntFunction, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def parallelStream(self, ) -> javawrappers.java.util.stream.Stream: ...
	def getURI(self, ) -> javawrappers.java.lang.String: ...
	def retainAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...


class AttributeType:
	def getName(self, ) -> javawrappers.org.opengis.feature.type.Name: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getBinding(self, ) -> javawrappers.java.lang.Class: ...
	def isIdentified(self, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getUserData(self, ) -> javawrappers.java.util.Map: ...
	@overload
	def getSuper(self, ) -> javawrappers.org.opengis.feature.type.AttributeType: ...
	@overload
	def getSuper(self, ) -> javawrappers.org.opengis.feature.type.PropertyType: ...
	def isAbstract(self, ) -> Union[int, JBoolean]: ...
	def getRestrictions(self, ) -> javawrappers.java.util.List: ...
	def getDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class PropertyType:
	def getName(self, ) -> javawrappers.org.opengis.feature.type.Name: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getBinding(self, ) -> javawrappers.java.lang.Class: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getUserData(self, ) -> javawrappers.java.util.Map: ...
	def getSuper(self, ) -> javawrappers.org.opengis.feature.type.PropertyType: ...
	def isAbstract(self, ) -> Union[int, JBoolean]: ...
	def getRestrictions(self, ) -> javawrappers.java.util.List: ...
	def getDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class OperationType:
	def getTarget(self, ) -> javawrappers.org.opengis.feature.type.AttributeType: ...
	def getName(self, ) -> javawrappers.org.opengis.feature.type.Name: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getBinding(self, ) -> javawrappers.java.lang.Class: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getResult(self, ) -> javawrappers.org.opengis.feature.type.AttributeType: ...
	def getParameters(self, ) -> javawrappers.java.util.List: ...
	def getUserData(self, ) -> javawrappers.java.util.Map: ...
	@overload
	def getSuper(self, ) -> javawrappers.org.opengis.feature.type.PropertyType: ...
	@overload
	def getSuper(self, ) -> javawrappers.org.opengis.feature.type.OperationType: ...
	def getDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def isAbstract(self, ) -> Union[int, JBoolean]: ...
	def getRestrictions(self, ) -> javawrappers.java.util.List: ...


class Schema:
	def getOrDefault(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def computeIfAbsent(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.util.function.Function, ) -> javawrappers.java.lang.Object: ...
	def values(self, ) -> javawrappers.java.util.Collection: ...
	@overload
	def replace(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def replace(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def replaceAll(self, arg0: javawrappers.java.util.function.BiFunction, ) -> None: ...
	def containsValue(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def put(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def remove(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def remove(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def compute(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.util.function.BiFunction, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def putAll(self, arg0: javawrappers.java.util.Map, ) -> None: ...
	def merge(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.util.function.BiFunction, ) -> javawrappers.java.lang.Object: ...
	def get(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def keySet(self, ) -> javawrappers.java.util.Set: ...
	def add(self, arg0: javawrappers.org.opengis.feature.type.AttributeType, ) -> None: ...
	def entrySet(self, ) -> javawrappers.java.util.Set: ...
	def containsKey(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def forEach(self, arg0: javawrappers.java.util.function.BiConsumer, ) -> None: ...
	def profile(self, arg0: javawrappers.java.util.Set, ) -> javawrappers.org.opengis.feature.type.Schema: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def computeIfPresent(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.util.function.BiFunction, ) -> javawrappers.java.lang.Object: ...
	def size(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def putIfAbsent(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def getURI(self, ) -> javawrappers.java.lang.String: ...


class AssociationDescriptor:
	def getName(self, ) -> javawrappers.org.opengis.feature.type.Name: ...
	@overload
	def getType(self, ) -> javawrappers.org.opengis.feature.type.AssociationType: ...
	@overload
	def getType(self, ) -> javawrappers.org.opengis.feature.type.PropertyType: ...
	def getMinOccurs(self, ) -> Union[int, JInt]: ...
	def getMaxOccurs(self, ) -> Union[int, JInt]: ...
	def getUserData(self, ) -> javawrappers.java.util.Map: ...
	def isNillable(self, ) -> Union[int, JBoolean]: ...


class AssociationType:
	def getRelatedType(self, ) -> javawrappers.org.opengis.feature.type.AttributeType: ...
	def getName(self, ) -> javawrappers.org.opengis.feature.type.Name: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getBinding(self, ) -> javawrappers.java.lang.Class: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getUserData(self, ) -> javawrappers.java.util.Map: ...
	@overload
	def getSuper(self, ) -> javawrappers.org.opengis.feature.type.PropertyType: ...
	@overload
	def getSuper(self, ) -> javawrappers.org.opengis.feature.type.AssociationType: ...
	def isAbstract(self, ) -> Union[int, JBoolean]: ...
	def getRestrictions(self, ) -> javawrappers.java.util.List: ...
	def getDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class GeometryDescriptor:
	def getName(self, ) -> javawrappers.org.opengis.feature.type.Name: ...
	def getLocalName(self, ) -> javawrappers.java.lang.String: ...
	def getCoordinateReferenceSystem(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	@overload
	def getType(self, ) -> javawrappers.org.opengis.feature.type.PropertyType: ...
	@overload
	def getType(self, ) -> javawrappers.org.opengis.feature.type.AttributeType: ...
	@overload
	def getType(self, ) -> javawrappers.org.opengis.feature.type.GeometryType: ...
	def getMinOccurs(self, ) -> Union[int, JInt]: ...
	def getMaxOccurs(self, ) -> Union[int, JInt]: ...
	def getUserData(self, ) -> javawrappers.java.util.Map: ...
	def isNillable(self, ) -> Union[int, JBoolean]: ...
	def getDefaultValue(self, ) -> javawrappers.java.lang.Object: ...


class Operation:
	def getName(self, ) -> javawrappers.org.opengis.feature.type.Name: ...
	@overload
	def getType(self, ) -> javawrappers.org.opengis.feature.type.OperationType: ...
	@overload
	def getType(self, ) -> javawrappers.org.opengis.feature.type.PropertyType: ...
	def isImplemented(self, ) -> Union[int, JBoolean]: ...
	def getMinOccurs(self, ) -> Union[int, JInt]: ...
	def invoke(self, arg0: javawrappers.org.opengis.feature.Attribute, arg1: JArray(javawrappers.java.lang.Object, 1), ) -> javawrappers.java.lang.Object: ...
	def getMaxOccurs(self, ) -> Union[int, JInt]: ...
	def getUserData(self, ) -> javawrappers.java.util.Map: ...
	def isNillable(self, ) -> Union[int, JBoolean]: ...


class FeatureTypeFactory:
	def createSimpleFeatureType(self, arg0: javawrappers.org.opengis.feature.type.Name, arg1: javawrappers.java.util.List, arg2: javawrappers.org.opengis.feature.type.GeometryDescriptor, arg3: Union[int, JBoolean], arg4: javawrappers.java.util.List, arg5: javawrappers.org.opengis.feature.type.AttributeType, arg6: javawrappers.org.opengis.util.InternationalString, ) -> javawrappers.org.opengis.feature.simple.SimpleFeatureType: ...
	def createComplexType(self, arg0: javawrappers.org.opengis.feature.type.Name, arg1: javawrappers.java.util.Collection, arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], arg4: javawrappers.java.util.List, arg5: javawrappers.org.opengis.feature.type.AttributeType, arg6: javawrappers.org.opengis.util.InternationalString, ) -> javawrappers.org.opengis.feature.type.ComplexType: ...
	def createFeatureType(self, arg0: javawrappers.org.opengis.feature.type.Name, arg1: javawrappers.java.util.Collection, arg2: javawrappers.org.opengis.feature.type.GeometryDescriptor, arg3: Union[int, JBoolean], arg4: javawrappers.java.util.List, arg5: javawrappers.org.opengis.feature.type.AttributeType, arg6: javawrappers.org.opengis.util.InternationalString, ) -> javawrappers.org.opengis.feature.type.FeatureType: ...
	def createAssociationType(self, arg0: javawrappers.org.opengis.feature.type.Name, arg1: javawrappers.org.opengis.feature.type.AttributeType, arg2: Union[int, JBoolean], arg3: javawrappers.java.util.List, arg4: javawrappers.org.opengis.feature.type.AssociationType, arg5: javawrappers.org.opengis.util.InternationalString, ) -> javawrappers.org.opengis.feature.type.AssociationType: ...
	def createGeometryType(self, arg0: javawrappers.org.opengis.feature.type.Name, arg1: javawrappers.java.lang.Class, arg2: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, arg3: Union[int, JBoolean], arg4: Union[int, JBoolean], arg5: javawrappers.java.util.List, arg6: javawrappers.org.opengis.feature.type.AttributeType, arg7: javawrappers.org.opengis.util.InternationalString, ) -> javawrappers.org.opengis.feature.type.GeometryType: ...
	def createGeometryDescriptor(self, arg0: javawrappers.org.opengis.feature.type.GeometryType, arg1: javawrappers.org.opengis.feature.type.Name, arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JBoolean], arg5: javawrappers.java.lang.Object, ) -> javawrappers.org.opengis.feature.type.GeometryDescriptor: ...
	def createAttributeDescriptor(self, arg0: javawrappers.org.opengis.feature.type.AttributeType, arg1: javawrappers.org.opengis.feature.type.Name, arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JBoolean], arg5: javawrappers.java.lang.Object, ) -> javawrappers.org.opengis.feature.type.AttributeDescriptor: ...
	def createAssociationDescriptor(self, arg0: javawrappers.org.opengis.feature.type.AssociationType, arg1: javawrappers.org.opengis.feature.type.Name, arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JBoolean], ) -> javawrappers.org.opengis.feature.type.AssociationDescriptor: ...
	def createAttributeType(self, arg0: javawrappers.org.opengis.feature.type.Name, arg1: javawrappers.java.lang.Class, arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], arg4: javawrappers.java.util.List, arg5: javawrappers.org.opengis.feature.type.AttributeType, arg6: javawrappers.org.opengis.util.InternationalString, ) -> javawrappers.org.opengis.feature.type.AttributeType: ...
	def createSchema(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.feature.type.Schema: ...


class PropertyDescriptor:
	def getName(self, ) -> javawrappers.org.opengis.feature.type.Name: ...
	def getType(self, ) -> javawrappers.org.opengis.feature.type.PropertyType: ...
	def getMinOccurs(self, ) -> Union[int, JInt]: ...
	def getMaxOccurs(self, ) -> Union[int, JInt]: ...
	def getUserData(self, ) -> javawrappers.java.util.Map: ...
	def isNillable(self, ) -> Union[int, JBoolean]: ...


class AttributeDescriptor:
	def getName(self, ) -> javawrappers.org.opengis.feature.type.Name: ...
	def getLocalName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getType(self, ) -> javawrappers.org.opengis.feature.type.PropertyType: ...
	@overload
	def getType(self, ) -> javawrappers.org.opengis.feature.type.AttributeType: ...
	def getMinOccurs(self, ) -> Union[int, JInt]: ...
	def getMaxOccurs(self, ) -> Union[int, JInt]: ...
	def getUserData(self, ) -> javawrappers.java.util.Map: ...
	def isNillable(self, ) -> Union[int, JBoolean]: ...
	def getDefaultValue(self, ) -> javawrappers.java.lang.Object: ...


class FeatureType:
	@overload
	def getDescriptor(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.feature.type.PropertyDescriptor: ...
	@overload
	def getDescriptor(self, arg0: javawrappers.org.opengis.feature.type.Name, ) -> javawrappers.org.opengis.feature.type.PropertyDescriptor: ...
	def getName(self, ) -> javawrappers.org.opengis.feature.type.Name: ...
	def getCoordinateReferenceSystem(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getDescriptors(self, ) -> javawrappers.java.util.Collection: ...
	@overload
	def getSuper(self, ) -> javawrappers.org.opengis.feature.type.AttributeType: ...
	@overload
	def getSuper(self, ) -> javawrappers.org.opengis.feature.type.PropertyType: ...
	def isAbstract(self, ) -> Union[int, JBoolean]: ...
	def getDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getBinding(self, ) -> javawrappers.java.lang.Class: ...
	def isIdentified(self, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isInline(self, ) -> Union[int, JBoolean]: ...
	def getUserData(self, ) -> javawrappers.java.util.Map: ...
	def getRestrictions(self, ) -> javawrappers.java.util.List: ...
	def getGeometryDescriptor(self, ) -> javawrappers.org.opengis.feature.type.GeometryDescriptor: ...


class Name:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isGlobal(self, ) -> Union[int, JBoolean]: ...
	def getSeparator(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getNamespaceURI(self, ) -> javawrappers.java.lang.String: ...
	def getLocalPart(self, ) -> javawrappers.java.lang.String: ...
	def getURI(self, ) -> javawrappers.java.lang.String: ...


