################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.javax.measure
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.net
import javawrappers.java.io
import javawrappers.org.opengis.referencing
import javawrappers.org.opengis.util
import javawrappers.org.opengis.parameter

from jpype.types import *
from typing import Union

from typing import overload

class ParameterNotFoundException:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getParameterName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class InvalidParameterCardinalityException:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getParameterName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class Parameter:
	def isRequired(self, ) -> javawrappers.java.lang.Boolean: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getTitle(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getType(self, ) -> javawrappers.java.lang.Class: ...
	def getMinOccurs(self, ) -> Union[int, JInt]: ...
	def getMaxOccurs(self, ) -> Union[int, JInt]: ...
	def getDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDefaultValue(self, ) -> javawrappers.java.lang.Object: ...


class InvalidParameterValueException:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: Union[float, JDouble], ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getParameterName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> javawrappers.java.lang.Object: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class GeneralParameterDescriptor:
	def getMinimumOccurs(self, ) -> Union[int, JInt]: ...
	def getMaximumOccurs(self, ) -> Union[int, JInt]: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def createValue(self, ) -> javawrappers.org.opengis.parameter.GeneralParameterValue: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class InvalidParameterTypeException:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getParameterName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class ParameterValueGroup:
	@overload
	def getDescriptor(self, ) -> javawrappers.org.opengis.parameter.ParameterDescriptorGroup: ...
	@overload
	def getDescriptor(self, ) -> javawrappers.org.opengis.parameter.GeneralParameterDescriptor: ...
	def parameter(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.parameter.ParameterValue: ...
	def values(self, ) -> javawrappers.java.util.List: ...
	@overload
	def clone(self, ) -> javawrappers.org.opengis.parameter.ParameterValueGroup: ...
	@overload
	def clone(self, ) -> javawrappers.org.opengis.parameter.GeneralParameterValue: ...
	@overload
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def groups(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	def addGroup(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.parameter.ParameterValueGroup: ...


class ParameterDescriptor:
	def getMaximumOccurs(self, ) -> Union[int, JInt]: ...
	def getValidValues(self, ) -> javawrappers.java.util.Set: ...
	def getValueClass(self, ) -> javawrappers.java.lang.Class: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDefaultValue(self, ) -> javawrappers.java.lang.Object: ...
	def getMinimumOccurs(self, ) -> Union[int, JInt]: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getMaximumValue(self, ) -> javawrappers.java.lang.Comparable: ...
	@overload
	def createValue(self, ) -> javawrappers.org.opengis.parameter.GeneralParameterValue: ...
	@overload
	def createValue(self, ) -> javawrappers.org.opengis.parameter.ParameterValue: ...
	def getUnit(self, ) -> javawrappers.javax.measure.Unit: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getMinimumValue(self, ) -> javawrappers.java.lang.Comparable: ...


class InvalidParameterNameException:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getParameterName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class ParameterValue:
	@overload
	def getDescriptor(self, ) -> javawrappers.org.opengis.parameter.GeneralParameterDescriptor: ...
	@overload
	def getDescriptor(self, ) -> javawrappers.org.opengis.parameter.ParameterDescriptor: ...
	def getValue(self, ) -> javawrappers.java.lang.Object: ...
	def stringValue(self, ) -> javawrappers.java.lang.String: ...
	def intValueList(self, ) -> JArray(Union[int, JInt], 1): ...
	def intValue(self, ) -> Union[int, JInt]: ...
	@overload
	def setValue(self, arg0: Union[float, JDouble], arg1: javawrappers.javax.measure.Unit, ) -> None: ...
	@overload
	def setValue(self, arg0: JArray(Union[float, JDouble], 1), arg1: javawrappers.javax.measure.Unit, ) -> None: ...
	@overload
	def setValue(self, arg0: Union[float, JDouble], ) -> None: ...
	@overload
	def setValue(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def setValue(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setValue(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def clone(self, ) -> javawrappers.org.opengis.parameter.GeneralParameterValue: ...
	@overload
	def clone(self, ) -> javawrappers.org.opengis.parameter.ParameterValue: ...
	@overload
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def valueFile(self, ) -> javawrappers.java.net.URI: ...
	def booleanValue(self, ) -> Union[int, JBoolean]: ...
	@overload
	def doubleValue(self, ) -> Union[float, JDouble]: ...
	@overload
	def doubleValue(self, arg0: javawrappers.javax.measure.Unit, ) -> Union[float, JDouble]: ...
	@overload
	def doubleValueList(self, arg0: javawrappers.javax.measure.Unit, ) -> JArray(Union[float, JDouble], 1): ...
	@overload
	def doubleValueList(self, ) -> JArray(Union[float, JDouble], 1): ...
	def getUnit(self, ) -> javawrappers.javax.measure.Unit: ...


class ParameterDescriptorGroup:
	def getMinimumOccurs(self, ) -> Union[int, JInt]: ...
	def getMaximumOccurs(self, ) -> Union[int, JInt]: ...
	def descriptors(self, ) -> javawrappers.java.util.List: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def createValue(self, ) -> javawrappers.org.opengis.parameter.GeneralParameterValue: ...
	@overload
	def createValue(self, ) -> javawrappers.org.opengis.parameter.ParameterValueGroup: ...
	def descriptor(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.parameter.GeneralParameterDescriptor: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class GeneralParameterValue:
	def getDescriptor(self, ) -> javawrappers.org.opengis.parameter.GeneralParameterDescriptor: ...
	@overload
	def clone(self, ) -> javawrappers.org.opengis.parameter.GeneralParameterValue: ...
	@overload
	def clone(self, ) -> javawrappers.java.lang.Object: ...


