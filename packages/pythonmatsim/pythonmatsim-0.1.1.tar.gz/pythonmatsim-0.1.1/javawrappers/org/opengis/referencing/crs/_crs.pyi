################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.referencing
import javawrappers.org.opengis.util
import javawrappers.org.opengis.referencing.operation
import javawrappers.org.opengis.referencing.cs
import javawrappers.org.opengis.referencing.crs
import javawrappers.org.opengis.referencing.datum
import javawrappers.org.opengis.metadata.citation
import javawrappers.org.opengis.metadata.extent

from jpype.types import *
from typing import Union

from typing import overload

class EngineeringCRS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.EngineeringDatum: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.Datum: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class VerticalCRS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.VerticalDatum: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.Datum: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	@overload
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.VerticalCS: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class GeodeticCRS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.GeodeticDatum: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.Datum: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class ProjectedCRS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getConversionFromBase(self, ) -> javawrappers.org.opengis.referencing.operation.Projection: ...
	@overload
	def getConversionFromBase(self, ) -> javawrappers.org.opengis.referencing.operation.Conversion: ...
	@overload
	def getBaseCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	@overload
	def getBaseCRS(self, ) -> javawrappers.org.opengis.referencing.crs.GeographicCRS: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.GeodeticDatum: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.Datum: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.CartesianCS: ...
	@overload
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class CRSAuthorityFactory:
	def createProjectedCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.ProjectedCRS: ...
	def createTemporalCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.TemporalCRS: ...
	def createImageCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.ImageCRS: ...
	def getVendor(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def getAuthority(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def createObject(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.IdentifiedObject: ...
	def createDerivedCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.DerivedCRS: ...
	def getAuthorityCodes(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def createCoordinateReferenceSystem(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def createGeocentricCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.GeocentricCRS: ...
	def createEngineeringCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.EngineeringCRS: ...
	def getDescriptionText(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def createGeographicCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.GeographicCRS: ...
	def createVerticalCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.VerticalCRS: ...
	def createCompoundCRS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.CompoundCRS: ...


class TemporalCRS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.TemporalDatum: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.Datum: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	@overload
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.TimeCS: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class CompoundCRS:
	def getCoordinateReferenceSystems(self, ) -> javawrappers.java.util.List: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class ImageCRS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.ImageDatum: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.Datum: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	@overload
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.AffineCS: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class GeographicCRS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.GeodeticDatum: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.Datum: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.EllipsoidalCS: ...
	@overload
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class GeneralDerivedCRS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getConversionFromBase(self, ) -> javawrappers.org.opengis.referencing.operation.Conversion: ...
	def getBaseCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.Datum: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class CRSFactory:
	def createProjectedCRS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.crs.GeographicCRS, arg2: javawrappers.org.opengis.referencing.operation.Conversion, arg3: javawrappers.org.opengis.referencing.cs.CartesianCS, ) -> javawrappers.org.opengis.referencing.crs.ProjectedCRS: ...
	def createFromWKT(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def createTemporalCRS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.datum.TemporalDatum, arg2: javawrappers.org.opengis.referencing.cs.TimeCS, ) -> javawrappers.org.opengis.referencing.crs.TemporalCRS: ...
	def createImageCRS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.datum.ImageDatum, arg2: javawrappers.org.opengis.referencing.cs.AffineCS, ) -> javawrappers.org.opengis.referencing.crs.ImageCRS: ...
	@overload
	def createGeocentricCRS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.datum.GeodeticDatum, arg2: javawrappers.org.opengis.referencing.cs.CartesianCS, ) -> javawrappers.org.opengis.referencing.crs.GeocentricCRS: ...
	@overload
	def createGeocentricCRS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.datum.GeodeticDatum, arg2: javawrappers.org.opengis.referencing.cs.SphericalCS, ) -> javawrappers.org.opengis.referencing.crs.GeocentricCRS: ...
	def createEngineeringCRS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.datum.EngineeringDatum, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.crs.EngineeringCRS: ...
	def createGeographicCRS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.datum.GeodeticDatum, arg2: javawrappers.org.opengis.referencing.cs.EllipsoidalCS, ) -> javawrappers.org.opengis.referencing.crs.GeographicCRS: ...
	def createVerticalCRS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.datum.VerticalDatum, arg2: javawrappers.org.opengis.referencing.cs.VerticalCS, ) -> javawrappers.org.opengis.referencing.crs.VerticalCRS: ...
	def getVendor(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def createCompoundCRS(self, arg0: javawrappers.java.util.Map, arg1: JArray(javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, 1), ) -> javawrappers.org.opengis.referencing.crs.CompoundCRS: ...
	def createFromXML(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def createDerivedCRS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, arg2: javawrappers.org.opengis.referencing.operation.Conversion, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.crs.DerivedCRS: ...


class CoordinateReferenceSystem:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class SingleCRS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.Datum: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class DerivedCRS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getConversionFromBase(self, ) -> javawrappers.org.opengis.referencing.operation.Conversion: ...
	def getBaseCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.Datum: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class GeocentricCRS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.GeodeticDatum: ...
	@overload
	def getDatum(self, ) -> javawrappers.org.opengis.referencing.datum.Datum: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getCoordinateSystem(self, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


