################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.javax.measure
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.referencing
import javawrappers.org.opengis.util
import javawrappers.org.opengis.referencing.cs
import javawrappers.org.opengis.metadata.citation

from jpype.types import *
from typing import Union

from typing import overload

class RangeMeaning:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.RangeMeaning: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.referencing.cs.RangeMeaning, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.referencing.cs.RangeMeaning, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class PolarCS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class CSFactory:
	@overload
	def createCartesianCS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ) -> javawrappers.org.opengis.referencing.cs.CartesianCS: ...
	@overload
	def createCartesianCS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ) -> javawrappers.org.opengis.referencing.cs.CartesianCS: ...
	def createSphericalCS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ) -> javawrappers.org.opengis.referencing.cs.SphericalCS: ...
	@overload
	def createEllipsoidalCS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ) -> javawrappers.org.opengis.referencing.cs.EllipsoidalCS: ...
	@overload
	def createEllipsoidalCS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ) -> javawrappers.org.opengis.referencing.cs.EllipsoidalCS: ...
	def createTimeCS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ) -> javawrappers.org.opengis.referencing.cs.TimeCS: ...
	def createPolarCS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ) -> javawrappers.org.opengis.referencing.cs.PolarCS: ...
	@overload
	def createUserDefinedCS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ) -> javawrappers.org.opengis.referencing.cs.UserDefinedCS: ...
	@overload
	def createUserDefinedCS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ) -> javawrappers.org.opengis.referencing.cs.UserDefinedCS: ...
	def getVendor(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def createCoordinateSystemAxis(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.opengis.referencing.cs.AxisDirection, arg3: javawrappers.javax.measure.Unit, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	def createCylindricalCS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ) -> javawrappers.org.opengis.referencing.cs.CylindricalCS: ...
	def createLinearCS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ) -> javawrappers.org.opengis.referencing.cs.LinearCS: ...
	def createVerticalCS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ) -> javawrappers.org.opengis.referencing.cs.VerticalCS: ...
	@overload
	def createAffineCS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ) -> javawrappers.org.opengis.referencing.cs.AffineCS: ...
	@overload
	def createAffineCS(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, arg3: javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis, ) -> javawrappers.org.opengis.referencing.cs.AffineCS: ...


class CartesianCS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class AffineCS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class CoordinateSystemAxis:
	def getAbbreviation(self, ) -> javawrappers.java.lang.String: ...
	def getRangeMeaning(self, ) -> javawrappers.org.opengis.referencing.cs.RangeMeaning: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getDirection(self, ) -> javawrappers.org.opengis.referencing.cs.AxisDirection: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getMaximumValue(self, ) -> Union[float, JDouble]: ...
	def getUnit(self, ) -> javawrappers.javax.measure.Unit: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getMinimumValue(self, ) -> Union[float, JDouble]: ...


class VerticalCS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class TimeCS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class CSAuthorityFactory:
	def createSphericalCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.SphericalCS: ...
	def getVendor(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def getAuthority(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def createCoordinateSystemAxis(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	def createVerticalCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.VerticalCS: ...
	def createObject(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.IdentifiedObject: ...
	def getAuthorityCodes(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def createCartesianCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.CartesianCS: ...
	def getDescriptionText(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def createEllipsoidalCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.EllipsoidalCS: ...
	def createTimeCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.TimeCS: ...
	def createPolarCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.PolarCS: ...
	def createCylindricalCS(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.CylindricalCS: ...
	def createUnit(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.measure.Unit: ...
	def createCoordinateSystem(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystem: ...


class SphericalCS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class CylindricalCS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class AxisDirection:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.cs.AxisDirection: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.referencing.cs.AxisDirection, 1): ...
	def opposite(self, ) -> javawrappers.org.opengis.referencing.cs.AxisDirection: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def absolute(self, ) -> javawrappers.org.opengis.referencing.cs.AxisDirection: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.referencing.cs.AxisDirection, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class CoordinateSystem:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class EllipsoidalCS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class LinearCS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


class UserDefinedCS:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getDimension(self, ) -> Union[int, JInt]: ...
	def getAxis(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.cs.CoordinateSystemAxis: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...


