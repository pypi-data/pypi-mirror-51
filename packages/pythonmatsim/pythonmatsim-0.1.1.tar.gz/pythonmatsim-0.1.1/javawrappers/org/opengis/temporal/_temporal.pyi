################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.javax.measure
import javawrappers.java.sql
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.referencing
import javawrappers.org.opengis.util
import javawrappers.org.opengis.temporal
import javawrappers.org.opengis.metadata.extent

from jpype.types import *
from typing import Union

from typing import overload

class Period:
	def getEnding(self, ) -> javawrappers.org.opengis.temporal.Instant: ...
	def getBeginning(self, ) -> javawrappers.org.opengis.temporal.Instant: ...
	def distance(self, arg0: javawrappers.org.opengis.temporal.TemporalGeometricPrimitive, ) -> javawrappers.org.opengis.temporal.Duration: ...
	def length(self, ) -> javawrappers.org.opengis.temporal.Duration: ...
	def relativePosition(self, arg0: javawrappers.org.opengis.temporal.TemporalPrimitive, ) -> javawrappers.org.opengis.temporal.RelativePosition: ...


class Calendar:
	def julTrans(self, arg0: javawrappers.org.opengis.temporal.JulianDate, ) -> javawrappers.org.opengis.temporal.CalendarDate: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def dateTrans(self, arg0: javawrappers.org.opengis.temporal.CalendarDate, arg1: javawrappers.org.opengis.temporal.ClockTime, ) -> javawrappers.org.opengis.temporal.JulianDate: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getBasis(self, ) -> javawrappers.java.util.Collection: ...
	def getClock(self, ) -> javawrappers.org.opengis.temporal.Clock: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class TemporalNode:
	def getPreviousEdge(self, ) -> javawrappers.org.opengis.temporal.TemporalEdge: ...
	def getRealization(self, ) -> javawrappers.org.opengis.temporal.Instant: ...
	def getNextEdge(self, ) -> javawrappers.org.opengis.temporal.TemporalEdge: ...


class CalendarEra:
	def getJulianReference(self, ) -> javawrappers.org.opengis.temporal.JulianDate: ...
	def getName(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getReferenceDate(self, ) -> javawrappers.org.opengis.temporal.CalendarDate: ...
	def getEpochOfUse(self, ) -> javawrappers.org.opengis.temporal.Period: ...
	def getReferenceEvent(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class ClockTime:
	def getClockTime(self, ) -> JArray(javawrappers.java.lang.Number, 1): ...
	def getIndeterminatePosition(self, ) -> javawrappers.org.opengis.temporal.IndeterminateValue: ...


class Duration:


class DateAndTime:
	def getCalendarDate(self, ) -> JArray(Union[int, JInt], 1): ...
	def getCalendarEraName(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getClockTime(self, ) -> JArray(javawrappers.java.lang.Number, 1): ...
	def getIndeterminatePosition(self, ) -> javawrappers.org.opengis.temporal.IndeterminateValue: ...


class RelativePosition:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.temporal.RelativePosition: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.temporal.RelativePosition, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.temporal.RelativePosition, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class TemporalCoordinate:
	def getCoordinateValue(self, ) -> javawrappers.java.lang.Number: ...
	def getIndeterminatePosition(self, ) -> javawrappers.org.opengis.temporal.IndeterminateValue: ...


class TemporalObject:


class TemporalFactory:
	def createPeriod(self, arg0: javawrappers.org.opengis.temporal.Instant, arg1: javawrappers.org.opengis.temporal.Instant, ) -> javawrappers.org.opengis.temporal.Period: ...
	def createCalendar(self, arg0: javawrappers.org.opengis.referencing.ReferenceIdentifier, arg1: javawrappers.org.opengis.metadata.extent.Extent, ) -> javawrappers.org.opengis.temporal.Calendar: ...
	def createCalendarDate(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, arg1: javawrappers.org.opengis.temporal.IndeterminateValue, arg2: javawrappers.org.opengis.util.InternationalString, arg3: JArray(Union[int, JInt], 1), ) -> javawrappers.org.opengis.temporal.CalendarDate: ...
	def createTemporalReferenceSystem(self, arg0: javawrappers.org.opengis.referencing.ReferenceIdentifier, arg1: javawrappers.org.opengis.metadata.extent.Extent, ) -> javawrappers.org.opengis.temporal.TemporalReferenceSystem: ...
	def createPosition(self, arg0: javawrappers.java.util.Date, ) -> javawrappers.org.opengis.temporal.Position: ...
	def createIntervalLenght(self, arg0: javawrappers.javax.measure.Unit, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> javawrappers.org.opengis.temporal.IntervalLength: ...
	def createOrdinalReferenceSystem(self, arg0: javawrappers.org.opengis.referencing.ReferenceIdentifier, arg1: javawrappers.org.opengis.metadata.extent.Extent, arg2: javawrappers.java.util.Collection, ) -> javawrappers.org.opengis.temporal.OrdinalReferenceSystem: ...
	def createCalendarEra(self, arg0: javawrappers.org.opengis.util.InternationalString, arg1: javawrappers.org.opengis.util.InternationalString, arg2: javawrappers.org.opengis.temporal.CalendarDate, arg3: javawrappers.org.opengis.temporal.JulianDate, arg4: javawrappers.org.opengis.temporal.Period, ) -> javawrappers.org.opengis.temporal.CalendarEra: ...
	def createTemporalPosition(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, arg1: javawrappers.org.opengis.temporal.IndeterminateValue, ) -> javawrappers.org.opengis.temporal.TemporalPosition: ...
	def createDateAndTime(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, arg1: javawrappers.org.opengis.temporal.IndeterminateValue, arg2: javawrappers.org.opengis.util.InternationalString, arg3: JArray(Union[int, JInt], 1), arg4: JArray(javawrappers.java.lang.Number, 1), ) -> javawrappers.org.opengis.temporal.DateAndTime: ...
	def createClockTime(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, arg1: javawrappers.org.opengis.temporal.IndeterminateValue, arg2: JArray(javawrappers.java.lang.Number, 1), ) -> javawrappers.org.opengis.temporal.ClockTime: ...
	def createInstant(self, arg0: javawrappers.org.opengis.temporal.Position, ) -> javawrappers.org.opengis.temporal.Instant: ...
	def createPeriodDuration(self, arg0: javawrappers.org.opengis.util.InternationalString, arg1: javawrappers.org.opengis.util.InternationalString, arg2: javawrappers.org.opengis.util.InternationalString, arg3: javawrappers.org.opengis.util.InternationalString, arg4: javawrappers.org.opengis.util.InternationalString, arg5: javawrappers.org.opengis.util.InternationalString, arg6: javawrappers.org.opengis.util.InternationalString, ) -> javawrappers.org.opengis.temporal.PeriodDuration: ...
	def createClock(self, arg0: javawrappers.org.opengis.referencing.ReferenceIdentifier, arg1: javawrappers.org.opengis.metadata.extent.Extent, arg2: javawrappers.org.opengis.util.InternationalString, arg3: javawrappers.org.opengis.temporal.ClockTime, arg4: javawrappers.org.opengis.temporal.ClockTime, ) -> javawrappers.org.opengis.temporal.Clock: ...
	def createTemporalCoordinate(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, arg1: javawrappers.org.opengis.temporal.IndeterminateValue, arg2: javawrappers.java.lang.Number, ) -> javawrappers.org.opengis.temporal.TemporalCoordinate: ...
	def createOrdinalPosition(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, arg1: javawrappers.org.opengis.temporal.IndeterminateValue, arg2: javawrappers.org.opengis.temporal.OrdinalEra, ) -> javawrappers.org.opengis.temporal.OrdinalPosition: ...
	def createTemporalCoordinateSystem(self, arg0: javawrappers.org.opengis.referencing.ReferenceIdentifier, arg1: javawrappers.org.opengis.metadata.extent.Extent, arg2: javawrappers.java.util.Date, arg3: javawrappers.org.opengis.util.InternationalString, ) -> javawrappers.org.opengis.temporal.TemporalCoordinateSystem: ...
	def createOrdinalEra(self, arg0: javawrappers.org.opengis.util.InternationalString, arg1: javawrappers.java.util.Date, arg2: javawrappers.java.util.Date, arg3: javawrappers.java.util.Collection, ) -> javawrappers.org.opengis.temporal.OrdinalEra: ...
	def createJulianDate(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, arg1: javawrappers.org.opengis.temporal.IndeterminateValue, arg2: javawrappers.java.lang.Number, ) -> javawrappers.org.opengis.temporal.JulianDate: ...


class Clock:
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def utcTrans(self, arg0: javawrappers.org.opengis.temporal.ClockTime, ) -> javawrappers.org.opengis.temporal.ClockTime: ...
	def clkTrans(self, arg0: javawrappers.org.opengis.temporal.ClockTime, ) -> javawrappers.org.opengis.temporal.ClockTime: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...
	def getUTCReference(self, ) -> javawrappers.org.opengis.temporal.ClockTime: ...
	def getReferenceTime(self, ) -> javawrappers.org.opengis.temporal.ClockTime: ...
	def getReferenceEvent(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class TemporalTopologicalComplex:
	def getTemporalTopologicalPrimitives(self, ) -> javawrappers.java.util.Collection: ...


class TemporalCoordinateSystem:
	def transformDateTime(self, arg0: javawrappers.java.util.Date, ) -> javawrappers.org.opengis.temporal.TemporalCoordinate: ...
	def getInterval(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def getOrigin(self, ) -> javawrappers.java.util.Date: ...
	def transformCoord(self, arg0: javawrappers.org.opengis.temporal.TemporalCoordinate, ) -> javawrappers.java.util.Date: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class OrdinalReferenceSystem:
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getOrdinalEraSequence(self, ) -> javawrappers.java.util.Collection: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class Instant:
	def getPosition(self, ) -> javawrappers.org.opengis.temporal.Position: ...
	def getEndedBy(self, ) -> javawrappers.java.util.Collection: ...
	def distance(self, arg0: javawrappers.org.opengis.temporal.TemporalGeometricPrimitive, ) -> javawrappers.org.opengis.temporal.Duration: ...
	def getBegunBy(self, ) -> javawrappers.java.util.Collection: ...
	def length(self, ) -> javawrappers.org.opengis.temporal.Duration: ...
	def relativePosition(self, arg0: javawrappers.org.opengis.temporal.TemporalPrimitive, ) -> javawrappers.org.opengis.temporal.RelativePosition: ...


class Position:
	def getDateTime(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getTime(self, ) -> javawrappers.java.sql.Time: ...
	def getDate(self, ) -> javawrappers.java.util.Date: ...
	def anyOther(self, ) -> javawrappers.org.opengis.temporal.TemporalPosition: ...


class IntervalLength:
	def getValue(self, ) -> Union[int, JInt]: ...
	def getUnit(self, ) -> javawrappers.javax.measure.Unit: ...
	def getFactor(self, ) -> Union[int, JInt]: ...
	def getRadix(self, ) -> Union[int, JInt]: ...


class TemporalPrimitive:
	def relativePosition(self, arg0: javawrappers.org.opengis.temporal.TemporalPrimitive, ) -> javawrappers.org.opengis.temporal.RelativePosition: ...


class Separation:
	def distance(self, arg0: javawrappers.org.opengis.temporal.TemporalGeometricPrimitive, ) -> javawrappers.org.opengis.temporal.Duration: ...
	def length(self, ) -> javawrappers.org.opengis.temporal.Duration: ...


class PeriodDuration:
	def getHours(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getSeconds(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDays(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getYears(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getTimeIndicator(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getMonths(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getMinutes(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDesignator(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class TemporalReferenceSystem:
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class OrdinalPosition:
	def getIndeterminatePosition(self, ) -> javawrappers.org.opengis.temporal.IndeterminateValue: ...
	def getOrdinalPosition(self, ) -> javawrappers.org.opengis.temporal.OrdinalEra: ...


class TemporalTopologicalPrimitive:


class JulianDate:
	def getCoordinateValue(self, ) -> javawrappers.java.lang.Number: ...
	def getIndeterminatePosition(self, ) -> javawrappers.org.opengis.temporal.IndeterminateValue: ...


class TemporalOrder:
	def relativePosition(self, arg0: javawrappers.org.opengis.temporal.TemporalPrimitive, ) -> javawrappers.org.opengis.temporal.RelativePosition: ...


class TemporalComplex:


class OrdinalEra:
	def getBeginning(self, ) -> javawrappers.java.util.Date: ...
	def getComposition(self, ) -> javawrappers.java.util.Collection: ...
	def getName(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getEnd(self, ) -> javawrappers.java.util.Date: ...


class IndeterminateValue:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.temporal.IndeterminateValue: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.temporal.IndeterminateValue, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.temporal.IndeterminateValue, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class TemporalGeometricPrimitive:
	def distance(self, arg0: javawrappers.org.opengis.temporal.TemporalGeometricPrimitive, ) -> javawrappers.org.opengis.temporal.Duration: ...
	def length(self, ) -> javawrappers.org.opengis.temporal.Duration: ...
	def relativePosition(self, arg0: javawrappers.org.opengis.temporal.TemporalPrimitive, ) -> javawrappers.org.opengis.temporal.RelativePosition: ...


class TemporalPosition:
	def getIndeterminatePosition(self, ) -> javawrappers.org.opengis.temporal.IndeterminateValue: ...


class CalendarDate:
	def getCalendarDate(self, ) -> JArray(Union[int, JInt], 1): ...
	def getCalendarEraName(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIndeterminatePosition(self, ) -> javawrappers.org.opengis.temporal.IndeterminateValue: ...


class TemporalEdge:
	def getStart(self, ) -> javawrappers.org.opengis.temporal.TemporalNode: ...
	def getEnd(self, ) -> javawrappers.org.opengis.temporal.TemporalNode: ...
	def getRealization(self, ) -> javawrappers.org.opengis.temporal.Period: ...


