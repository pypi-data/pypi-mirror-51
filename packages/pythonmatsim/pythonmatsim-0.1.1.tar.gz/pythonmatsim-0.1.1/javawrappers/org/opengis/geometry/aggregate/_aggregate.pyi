################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.util
import javawrappers.org.opengis.geometry
import javawrappers.org.opengis.referencing.operation
import javawrappers.org.opengis.referencing.crs
import javawrappers.org.opengis.geometry.complex
import javawrappers.org.opengis.geometry.aggregate

from jpype.types import *
from typing import Union

from typing import overload

class MultiPrimitive:
	def getConvexHull(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def distance(self, arg0: javawrappers.org.opengis.geometry.Geometry, ) -> Union[float, JDouble]: ...
	def getBuffer(self, arg0: Union[float, JDouble], ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def getCoordinateReferenceSystem(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def intersects(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> Union[int, JBoolean]: ...
	def isCycle(self, ) -> Union[int, JBoolean]: ...
	@overload
	def transform(self, arg0: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	@overload
	def transform(self, arg0: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, arg1: javawrappers.org.opengis.referencing.operation.MathTransform, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def getMbRegion(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def intersection(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def getDimension(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, ) -> Union[int, JInt]: ...
	def isSimple(self, ) -> Union[int, JBoolean]: ...
	def getCoordinateDimension(self, ) -> Union[int, JInt]: ...
	def toImmutable(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def getMaximalComplex(self, ) -> javawrappers.java.util.Set: ...
	def getBoundary(self, ) -> javawrappers.org.opengis.geometry.Boundary: ...
	def getCentroid(self, ) -> javawrappers.org.opengis.geometry.DirectPosition: ...
	def union(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def symmetricDifference(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def getPrecision(self, ) -> javawrappers.org.opengis.geometry.Precision: ...
	@overload
	def contains(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> Union[int, JBoolean]: ...
	def isMutable(self, ) -> Union[int, JBoolean]: ...
	def getClosure(self, ) -> javawrappers.org.opengis.geometry.complex.Complex: ...
	def equals(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> Union[int, JBoolean]: ...
	def getElements(self, ) -> javawrappers.java.util.Set: ...
	def clone(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def difference(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def getEnvelope(self, ) -> javawrappers.org.opengis.geometry.Envelope: ...
	def getRepresentativePoint(self, ) -> javawrappers.org.opengis.geometry.DirectPosition: ...


class MultiPoint:
	def getConvexHull(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def distance(self, arg0: javawrappers.org.opengis.geometry.Geometry, ) -> Union[float, JDouble]: ...
	def getBuffer(self, arg0: Union[float, JDouble], ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def getCoordinateReferenceSystem(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def intersects(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> Union[int, JBoolean]: ...
	def isCycle(self, ) -> Union[int, JBoolean]: ...
	@overload
	def transform(self, arg0: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	@overload
	def transform(self, arg0: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, arg1: javawrappers.org.opengis.referencing.operation.MathTransform, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def getMbRegion(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def intersection(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def getDimension(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, ) -> Union[int, JInt]: ...
	def isSimple(self, ) -> Union[int, JBoolean]: ...
	def getCoordinateDimension(self, ) -> Union[int, JInt]: ...
	def toImmutable(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def getMaximalComplex(self, ) -> javawrappers.java.util.Set: ...
	def getBoundary(self, ) -> javawrappers.org.opengis.geometry.Boundary: ...
	def getCentroid(self, ) -> javawrappers.org.opengis.geometry.DirectPosition: ...
	def union(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def symmetricDifference(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def getPrecision(self, ) -> javawrappers.org.opengis.geometry.Precision: ...
	@overload
	def contains(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> Union[int, JBoolean]: ...
	def isMutable(self, ) -> Union[int, JBoolean]: ...
	def getClosure(self, ) -> javawrappers.org.opengis.geometry.complex.Complex: ...
	def equals(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> Union[int, JBoolean]: ...
	def getElements(self, ) -> javawrappers.java.util.Set: ...
	def clone(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def difference(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def getEnvelope(self, ) -> javawrappers.org.opengis.geometry.Envelope: ...
	def getRepresentativePoint(self, ) -> javawrappers.org.opengis.geometry.DirectPosition: ...


class MultiCurve:
	def getConvexHull(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def distance(self, arg0: javawrappers.org.opengis.geometry.Geometry, ) -> Union[float, JDouble]: ...
	def getBuffer(self, arg0: Union[float, JDouble], ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def getCoordinateReferenceSystem(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def intersects(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> Union[int, JBoolean]: ...
	def isCycle(self, ) -> Union[int, JBoolean]: ...
	@overload
	def transform(self, arg0: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	@overload
	def transform(self, arg0: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, arg1: javawrappers.org.opengis.referencing.operation.MathTransform, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def getMbRegion(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def intersection(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def getDimension(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, ) -> Union[int, JInt]: ...
	def isSimple(self, ) -> Union[int, JBoolean]: ...
	def getCoordinateDimension(self, ) -> Union[int, JInt]: ...
	def toImmutable(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def getMaximalComplex(self, ) -> javawrappers.java.util.Set: ...
	def getBoundary(self, ) -> javawrappers.org.opengis.geometry.Boundary: ...
	def getCentroid(self, ) -> javawrappers.org.opengis.geometry.DirectPosition: ...
	def length(self, ) -> Union[float, JDouble]: ...
	def union(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def symmetricDifference(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def getPrecision(self, ) -> javawrappers.org.opengis.geometry.Precision: ...
	@overload
	def contains(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> Union[int, JBoolean]: ...
	def isMutable(self, ) -> Union[int, JBoolean]: ...
	def getClosure(self, ) -> javawrappers.org.opengis.geometry.complex.Complex: ...
	def equals(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> Union[int, JBoolean]: ...
	def getElements(self, ) -> javawrappers.java.util.Set: ...
	def clone(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def difference(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def getEnvelope(self, ) -> javawrappers.org.opengis.geometry.Envelope: ...
	def getRepresentativePoint(self, ) -> javawrappers.org.opengis.geometry.DirectPosition: ...


class MultiSurface:
	def getConvexHull(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def distance(self, arg0: javawrappers.org.opengis.geometry.Geometry, ) -> Union[float, JDouble]: ...
	def getBuffer(self, arg0: Union[float, JDouble], ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def getCoordinateReferenceSystem(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def intersects(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> Union[int, JBoolean]: ...
	def isCycle(self, ) -> Union[int, JBoolean]: ...
	@overload
	def transform(self, arg0: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	@overload
	def transform(self, arg0: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, arg1: javawrappers.org.opengis.referencing.operation.MathTransform, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def getMbRegion(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def intersection(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def getDimension(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, ) -> Union[int, JInt]: ...
	def isSimple(self, ) -> Union[int, JBoolean]: ...
	def getCoordinateDimension(self, ) -> Union[int, JInt]: ...
	def toImmutable(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def getMaximalComplex(self, ) -> javawrappers.java.util.Set: ...
	def getBoundary(self, ) -> javawrappers.org.opengis.geometry.Boundary: ...
	def getCentroid(self, ) -> javawrappers.org.opengis.geometry.DirectPosition: ...
	def union(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def symmetricDifference(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def getPrecision(self, ) -> javawrappers.org.opengis.geometry.Precision: ...
	@overload
	def contains(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> Union[int, JBoolean]: ...
	def isMutable(self, ) -> Union[int, JBoolean]: ...
	def getClosure(self, ) -> javawrappers.org.opengis.geometry.complex.Complex: ...
	def equals(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> Union[int, JBoolean]: ...
	def getElements(self, ) -> javawrappers.java.util.Set: ...
	def clone(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def difference(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def getEnvelope(self, ) -> javawrappers.org.opengis.geometry.Envelope: ...
	def getRepresentativePoint(self, ) -> javawrappers.org.opengis.geometry.DirectPosition: ...
	def getArea(self, ) -> Union[float, JDouble]: ...


class Aggregate:
	def getConvexHull(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def distance(self, arg0: javawrappers.org.opengis.geometry.Geometry, ) -> Union[float, JDouble]: ...
	def getBuffer(self, arg0: Union[float, JDouble], ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def getCoordinateReferenceSystem(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def intersects(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> Union[int, JBoolean]: ...
	def isCycle(self, ) -> Union[int, JBoolean]: ...
	@overload
	def transform(self, arg0: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	@overload
	def transform(self, arg0: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, arg1: javawrappers.org.opengis.referencing.operation.MathTransform, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def getMbRegion(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def intersection(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def getDimension(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, ) -> Union[int, JInt]: ...
	def isSimple(self, ) -> Union[int, JBoolean]: ...
	def getCoordinateDimension(self, ) -> Union[int, JInt]: ...
	def toImmutable(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def getMaximalComplex(self, ) -> javawrappers.java.util.Set: ...
	def getBoundary(self, ) -> javawrappers.org.opengis.geometry.Boundary: ...
	def getCentroid(self, ) -> javawrappers.org.opengis.geometry.DirectPosition: ...
	def union(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def symmetricDifference(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def getPrecision(self, ) -> javawrappers.org.opengis.geometry.Precision: ...
	@overload
	def contains(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> Union[int, JBoolean]: ...
	def isMutable(self, ) -> Union[int, JBoolean]: ...
	def getClosure(self, ) -> javawrappers.org.opengis.geometry.complex.Complex: ...
	def equals(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> Union[int, JBoolean]: ...
	def getElements(self, ) -> javawrappers.java.util.Set: ...
	def clone(self, ) -> javawrappers.org.opengis.geometry.Geometry: ...
	def difference(self, arg0: javawrappers.org.opengis.geometry.TransfiniteSet, ) -> javawrappers.org.opengis.geometry.TransfiniteSet: ...
	def getEnvelope(self, ) -> javawrappers.org.opengis.geometry.Envelope: ...
	def getRepresentativePoint(self, ) -> javawrappers.org.opengis.geometry.DirectPosition: ...


class AggregateFactory:
	def createMultiSurface(self, arg0: javawrappers.java.util.Set, ) -> javawrappers.org.opengis.geometry.aggregate.MultiSurface: ...
	def createMultiCurve(self, arg0: javawrappers.java.util.Set, ) -> javawrappers.org.opengis.geometry.aggregate.MultiCurve: ...
	def createMultiPrimitive(self, arg0: javawrappers.java.util.Set, ) -> javawrappers.org.opengis.geometry.aggregate.MultiPrimitive: ...
	def createMultiPoint(self, arg0: javawrappers.java.util.Set, ) -> javawrappers.org.opengis.geometry.aggregate.MultiPoint: ...


