################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.net
import javawrappers.org.opengis.util
import javawrappers.org.opengis.metadata.citation
import javawrappers.org.opengis.metadata
import javawrappers.org.opengis.metadata.identification
import javawrappers.java.nio.charset

from jpype.types import *
from typing import Union

from typing import overload

class TopicCategory:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.identification.TopicCategory: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.identification.TopicCategory, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.identification.TopicCategory, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class Usage:
	def getUserContactInfo(self, ) -> javawrappers.java.util.Collection: ...
	def getUsageDate(self, ) -> javawrappers.java.util.Date: ...
	def getSpecificUsage(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getUserDeterminedLimitations(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class Progress:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.identification.Progress: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.identification.Progress, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.identification.Progress, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class KeywordType:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.identification.KeywordType: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.identification.KeywordType, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.identification.KeywordType, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class CharacterSet:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.identification.CharacterSet: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.identification.CharacterSet, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def toCharset(self, ) -> javawrappers.java.nio.charset.Charset: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.identification.CharacterSet, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class BrowseGraphic:
	def getFileDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getFileName(self, ) -> javawrappers.java.net.URI: ...
	def getFileType(self, ) -> javawrappers.java.lang.String: ...


class RepresentativeFraction:
	def toScale(self, ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def doubleValue(self, ) -> Union[float, JDouble]: ...
	def getDenominator(self, ) -> Union[long, JLong]: ...


class ServiceIdentification:
	def getPointOfContacts(self, ) -> javawrappers.java.util.Collection: ...
	def getAggregationInfo(self, ) -> javawrappers.java.util.Collection: ...
	def getPurpose(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getCitation(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def getDescriptiveKeywords(self, ) -> javawrappers.java.util.Collection: ...
	def getResourceSpecificUsages(self, ) -> javawrappers.java.util.Collection: ...
	def getResourceFormat(self, ) -> javawrappers.java.util.Collection: ...
	def getGraphicOverviews(self, ) -> javawrappers.java.util.Collection: ...
	def getCredits(self, ) -> javawrappers.java.util.Collection: ...
	def getStatus(self, ) -> javawrappers.java.util.Collection: ...
	def getAbstract(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getResourceMaintenance(self, ) -> javawrappers.java.util.Collection: ...
	def getResourceConstraints(self, ) -> javawrappers.java.util.Collection: ...


class Resolution:
	def getDistance(self, ) -> javawrappers.java.lang.Double: ...
	def getEquivalentScale(self, ) -> javawrappers.org.opengis.metadata.identification.RepresentativeFraction: ...


class DataIdentification:
	def getAggregationInfo(self, ) -> javawrappers.java.util.Collection: ...
	def getPurpose(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getCitation(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def getExtent(self, ) -> javawrappers.java.util.Collection: ...
	def getLanguage(self, ) -> javawrappers.java.util.Collection: ...
	def getResourceSpecificUsages(self, ) -> javawrappers.java.util.Collection: ...
	def getResourceFormat(self, ) -> javawrappers.java.util.Collection: ...
	def getTopicCategories(self, ) -> javawrappers.java.util.Collection: ...
	def getCharacterSets(self, ) -> javawrappers.java.util.Collection: ...
	def getStatus(self, ) -> javawrappers.java.util.Collection: ...
	def getResourceConstraints(self, ) -> javawrappers.java.util.Collection: ...
	def getPointOfContacts(self, ) -> javawrappers.java.util.Collection: ...
	def getDescriptiveKeywords(self, ) -> javawrappers.java.util.Collection: ...
	def getSpatialResolutions(self, ) -> javawrappers.java.util.Collection: ...
	def getEnvironmentDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getSpatialRepresentationTypes(self, ) -> javawrappers.java.util.Collection: ...
	def getGraphicOverviews(self, ) -> javawrappers.java.util.Collection: ...
	def getCredits(self, ) -> javawrappers.java.util.Collection: ...
	def getAbstract(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getResourceMaintenance(self, ) -> javawrappers.java.util.Collection: ...
	def getSupplementalInformation(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class InitiativeType:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.identification.InitiativeType: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.identification.InitiativeType, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.identification.InitiativeType, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class AssociationType:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.identification.AssociationType: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.identification.AssociationType, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.identification.AssociationType, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class Keywords:
	def getType(self, ) -> javawrappers.org.opengis.metadata.identification.KeywordType: ...
	def getKeywords(self, ) -> javawrappers.java.util.Collection: ...
	def getThesaurusName(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...


class AggregateInformation:
	def getAggregateDataSetName(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def getAssociationType(self, ) -> javawrappers.org.opengis.metadata.identification.AssociationType: ...
	def getAggregateDataSetIdentifier(self, ) -> javawrappers.org.opengis.metadata.Identifier: ...
	def getInitiativeType(self, ) -> javawrappers.org.opengis.metadata.identification.InitiativeType: ...


class Identification:
	def getPointOfContacts(self, ) -> javawrappers.java.util.Collection: ...
	def getAggregationInfo(self, ) -> javawrappers.java.util.Collection: ...
	def getPurpose(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getCitation(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def getDescriptiveKeywords(self, ) -> javawrappers.java.util.Collection: ...
	def getResourceSpecificUsages(self, ) -> javawrappers.java.util.Collection: ...
	def getResourceFormat(self, ) -> javawrappers.java.util.Collection: ...
	def getGraphicOverviews(self, ) -> javawrappers.java.util.Collection: ...
	def getCredits(self, ) -> javawrappers.java.util.Collection: ...
	def getStatus(self, ) -> javawrappers.java.util.Collection: ...
	def getAbstract(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getResourceMaintenance(self, ) -> javawrappers.java.util.Collection: ...
	def getResourceConstraints(self, ) -> javawrappers.java.util.Collection: ...


