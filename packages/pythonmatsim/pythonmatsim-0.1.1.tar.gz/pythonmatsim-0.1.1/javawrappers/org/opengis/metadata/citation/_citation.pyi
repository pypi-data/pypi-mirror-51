################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.net
import javawrappers.org.opengis.util
import javawrappers.org.opengis.metadata.citation

from jpype.types import *
from typing import Union

from typing import overload

class Series:
	def getName(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getPage(self, ) -> javawrappers.java.lang.String: ...
	def getIssueIdentification(self, ) -> javawrappers.java.lang.String: ...


class PresentationForm:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.citation.PresentationForm: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.citation.PresentationForm, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.citation.PresentationForm, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class OnLineResource:
	def getApplicationProfile(self, ) -> javawrappers.java.lang.String: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getLinkage(self, ) -> javawrappers.java.net.URI: ...
	def getFunction(self, ) -> javawrappers.org.opengis.metadata.citation.OnLineFunction: ...
	def getProtocol(self, ) -> javawrappers.java.lang.String: ...
	def getDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class Contact:
	def getPhone(self, ) -> javawrappers.org.opengis.metadata.citation.Telephone: ...
	def getAddress(self, ) -> javawrappers.org.opengis.metadata.citation.Address: ...
	def getOnLineResource(self, ) -> javawrappers.org.opengis.metadata.citation.OnLineResource: ...
	def getContactInstructions(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getHoursOfService(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class Telephone:
	def getFacsimiles(self, ) -> javawrappers.java.util.Collection: ...
	def getVoices(self, ) -> javawrappers.java.util.Collection: ...


class Citation:
	def getTitle(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getCollectiveTitle(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDates(self, ) -> javawrappers.java.util.Collection: ...
	def getSeries(self, ) -> javawrappers.org.opengis.metadata.citation.Series: ...
	def getEditionDate(self, ) -> javawrappers.java.util.Date: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Collection: ...
	def getCitedResponsibleParties(self, ) -> javawrappers.java.util.Collection: ...
	def getOtherCitationDetails(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getISSN(self, ) -> javawrappers.java.lang.String: ...
	def getISBN(self, ) -> javawrappers.java.lang.String: ...
	def getAlternateTitles(self, ) -> javawrappers.java.util.Collection: ...
	def getEdition(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getPresentationForm(self, ) -> javawrappers.java.util.Collection: ...


class OnLineFunction:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.citation.OnLineFunction: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.citation.OnLineFunction, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.citation.OnLineFunction, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class Role:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.citation.Role: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.citation.Role, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.citation.Role, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class CitationDate:
	def getDate(self, ) -> javawrappers.java.util.Date: ...
	def getDateType(self, ) -> javawrappers.org.opengis.metadata.citation.DateType: ...


class DateType:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.citation.DateType: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.citation.DateType, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.citation.DateType, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class Address:
	def getAdministrativeArea(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDeliveryPoints(self, ) -> javawrappers.java.util.Collection: ...
	def getCountry(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getElectronicMailAddresses(self, ) -> javawrappers.java.util.Collection: ...
	def getPostalCode(self, ) -> javawrappers.java.lang.String: ...
	def getCity(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class CitationFactory:
	def createTelephone(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.citation.Telephone: ...
	def createResponsibleParty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.opengis.util.InternationalString, arg2: javawrappers.org.opengis.util.InternationalString, arg3: javawrappers.org.opengis.metadata.citation.Contact, arg4: javawrappers.org.opengis.metadata.citation.Role, ) -> javawrappers.org.opengis.metadata.citation.ResponsibleParty: ...
	def createAddress(self, arg0: javawrappers.java.util.Collection, arg1: javawrappers.org.opengis.util.InternationalString, arg2: javawrappers.org.opengis.util.InternationalString, arg3: javawrappers.java.lang.String, arg4: javawrappers.org.opengis.util.InternationalString, arg5: javawrappers.java.util.Collection, ) -> javawrappers.org.opengis.metadata.citation.Address: ...
	def createOnLineResource(self, arg0: javawrappers.java.net.URI, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.org.opengis.util.InternationalString, arg4: javawrappers.org.opengis.metadata.citation.OnLineFunction, ) -> javawrappers.org.opengis.metadata.citation.OnLineResource: ...
	def createContact(self, arg0: javawrappers.org.opengis.metadata.citation.Telephone, arg1: javawrappers.org.opengis.metadata.citation.Address, arg2: javawrappers.org.opengis.metadata.citation.OnLineResource, arg3: javawrappers.org.opengis.util.InternationalString, arg4: javawrappers.org.opengis.util.InternationalString, ) -> javawrappers.org.opengis.metadata.citation.Contact: ...
	def getVendor(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...


class ResponsibleParty:
	def getRole(self, ) -> javawrappers.org.opengis.metadata.citation.Role: ...
	def getContactInfo(self, ) -> javawrappers.org.opengis.metadata.citation.Contact: ...
	def getOrganisationName(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getPositionName(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIndividualName(self, ) -> javawrappers.java.lang.String: ...


