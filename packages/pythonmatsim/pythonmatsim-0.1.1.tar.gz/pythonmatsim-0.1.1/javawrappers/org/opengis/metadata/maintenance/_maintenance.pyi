################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.util
import javawrappers.org.opengis.temporal
import javawrappers.org.opengis.metadata.maintenance

from jpype.types import *
from typing import Union

from typing import overload

class ScopeDescription:
	def getDataset(self, ) -> javawrappers.java.lang.String: ...
	def getFeatureInstances(self, ) -> javawrappers.java.util.Set: ...
	def getAttributes(self, ) -> javawrappers.java.util.Set: ...
	def getFeatures(self, ) -> javawrappers.java.util.Set: ...
	def getOther(self, ) -> javawrappers.java.lang.String: ...
	def getAttributeInstances(self, ) -> javawrappers.java.util.Set: ...


class ScopeCode:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.maintenance.ScopeCode: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.maintenance.ScopeCode, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.maintenance.ScopeCode, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class MaintenanceInformation:
	def getMaintenanceNotes(self, ) -> javawrappers.java.util.Collection: ...
	def getUserDefinedMaintenanceFrequency(self, ) -> javawrappers.org.opengis.temporal.PeriodDuration: ...
	def getUpdateScopes(self, ) -> javawrappers.java.util.Collection: ...
	def getDateOfNextUpdate(self, ) -> javawrappers.java.util.Date: ...
	def getMaintenanceAndUpdateFrequency(self, ) -> javawrappers.org.opengis.metadata.maintenance.MaintenanceFrequency: ...
	def getUpdateScopeDescriptions(self, ) -> javawrappers.java.util.Collection: ...
	def getContacts(self, ) -> javawrappers.java.util.Collection: ...


class MaintenanceFrequency:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.maintenance.MaintenanceFrequency: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.maintenance.MaintenanceFrequency, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.maintenance.MaintenanceFrequency, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


