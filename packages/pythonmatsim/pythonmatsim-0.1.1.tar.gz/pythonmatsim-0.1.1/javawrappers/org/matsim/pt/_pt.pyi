################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.matsim.pt
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.matsim.pt.transitSchedule.api
import javawrappers.org.matsim.core.population.routes
import javawrappers.org.matsim.api.core.v01

from jpype.types import *
from typing import Union

from typing import overload

class UmlaufInterpolator:
	def __init__(self, arg0: javawrappers.org.matsim.api.core.v01.network.Network, arg1: javawrappers.org.matsim.core.config.groups.PlanCalcScoreConfigGroup, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def addUmlaufStueckToUmlauf(self, arg0: javawrappers.org.matsim.pt.UmlaufStueck, arg1: javawrappers.org.matsim.pt.Umlauf, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class UmlaufStueck:
	def __init__(self, arg0: javawrappers.org.matsim.pt.transitSchedule.api.TransitLine, arg1: javawrappers.org.matsim.pt.transitSchedule.api.TransitRoute, arg2: javawrappers.org.matsim.pt.transitSchedule.api.Departure, ): ...
	def getCarRoute(self, ) -> javawrappers.org.matsim.core.population.routes.NetworkRoute: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDeparture(self, ) -> javawrappers.org.matsim.pt.transitSchedule.api.Departure: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def isFahrt(self, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getLine(self, ) -> javawrappers.org.matsim.pt.transitSchedule.api.TransitLine: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getRoute(self, ) -> javawrappers.org.matsim.pt.transitSchedule.api.TransitRoute: ...
	def notify(self, ) -> None: ...


class UmlaufStueckI:
	def getCarRoute(self, ) -> javawrappers.org.matsim.core.population.routes.NetworkRoute: ...
	def getDeparture(self, ) -> javawrappers.org.matsim.pt.transitSchedule.api.Departure: ...
	def isFahrt(self, ) -> Union[int, JBoolean]: ...
	def getLine(self, ) -> javawrappers.org.matsim.pt.transitSchedule.api.TransitLine: ...
	def getRoute(self, ) -> javawrappers.org.matsim.pt.transitSchedule.api.TransitRoute: ...


class UmlaufImpl:
	def __init__(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getUmlaufStuecke(self, ) -> javawrappers.java.util.List: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getLineId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def setVehicleId(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> None: ...
	def getVehicleId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def notify(self, ) -> None: ...


class PtConstants:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class Wenden:
	def __init__(self, arg0: javawrappers.org.matsim.core.population.routes.NetworkRoute, ): ...
	def getCarRoute(self, ) -> javawrappers.org.matsim.core.population.routes.NetworkRoute: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDeparture(self, ) -> javawrappers.org.matsim.pt.transitSchedule.api.Departure: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def isFahrt(self, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getLine(self, ) -> javawrappers.org.matsim.pt.transitSchedule.api.TransitLine: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getRoute(self, ) -> javawrappers.org.matsim.pt.transitSchedule.api.TransitRoute: ...
	def notify(self, ) -> None: ...


class ReconstructingUmlaufBuilder:
	def __init__(self, arg0: javawrappers.org.matsim.api.core.v01.network.Network, arg1: javawrappers.java.util.Collection, arg2: javawrappers.org.matsim.vehicles.Vehicles, arg3: javawrappers.org.matsim.core.config.groups.PlanCalcScoreConfigGroup, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def build(self, ) -> javawrappers.java.util.Collection: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class Umlauf:
	def getUmlaufStuecke(self, ) -> javawrappers.java.util.List: ...
	def getLineId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def setVehicleId(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> None: ...
	def getVehicleId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...


class UmlaufBuilder:
	def build(self, ) -> javawrappers.java.util.Collection: ...


