################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.util.concurrent
import javawrappers.org.matsim.core.api.experimental.events
import javawrappers.org.matsim.withinday.replanning.replanners.interfaces
import javawrappers.org.matsim.api.core.v01
import javawrappers.org.matsim.withinday.replanning.replanners.tools

from jpype.types import *
from typing import Union

from typing import overload

class ReplanningRunnable:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def setCyclicTimeStepEndBarrier(self, arg0: javawrappers.java.util.concurrent.CyclicBarrier, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setCyclicTimeStepStartBarrier(self, arg0: javawrappers.java.util.concurrent.CyclicBarrier, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setBetweenReplannerBarrier(self, arg0: javawrappers.java.util.concurrent.CyclicBarrier, ) -> None: ...
	def removeWithinDayReplanner(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> None: ...
	def addReplanningTask(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.tools.ReplanningTask, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def run(self, ) -> None: ...
	def setEventsManager(self, arg0: javawrappers.org.matsim.core.api.experimental.events.EventsManager, ) -> None: ...
	def notify(self, ) -> None: ...
	def addWithinDayReplanner(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayReplanner, arg1: javawrappers.java.util.Queue, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def resetReplanners(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def beforeSim(self, ) -> None: ...
	def setTime(self, arg0: Union[float, JDouble], ) -> None: ...
	def afterSim(self, ) -> None: ...


class ParallelDuringActivityReplanner:
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.org.matsim.core.api.experimental.events.EventsManager, ): ...
	def getWithinDayReplannerFactories(self, ) -> javawrappers.java.util.Set: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def init(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def addReplanningTask(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.tools.ReplanningTask, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def addWithinDayReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayReplannerFactory, ) -> None: ...
	def run(self, arg0: Union[float, JDouble], ) -> None: ...
	def onPrepareSim(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def resetReplanners(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def removeWithinDayReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayReplannerFactory, ) -> None: ...
	def afterSim(self, ) -> None: ...


class ParallelInitialReplanner:
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.org.matsim.core.api.experimental.events.EventsManager, ): ...
	def getWithinDayReplannerFactories(self, ) -> javawrappers.java.util.Set: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def init(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def addReplanningTask(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.tools.ReplanningTask, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def addWithinDayReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayReplannerFactory, ) -> None: ...
	def run(self, arg0: Union[float, JDouble], ) -> None: ...
	def onPrepareSim(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def resetReplanners(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def removeWithinDayReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayReplannerFactory, ) -> None: ...
	def afterSim(self, ) -> None: ...


class ParallelReplanner:
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.org.matsim.core.api.experimental.events.EventsManager, ): ...
	class ExceptionHandler:
		def __init__(self, arg0: javawrappers.java.util.concurrent.atomic.AtomicBoolean, arg1: javawrappers.java.util.concurrent.CyclicBarrier, arg2: javawrappers.java.util.concurrent.CyclicBarrier, arg3: javawrappers.java.util.concurrent.CyclicBarrier, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def uncaughtException(self, arg0: javawrappers.java.lang.Thread, arg1: javawrappers.java.lang.Throwable, ) -> None: ...
		def notify(self, ) -> None: ...


	class InternalReplanningRunnable:
		def __init__(self, arg0: javawrappers.java.lang.String, ): ...
		def setCyclicTimeStepEndBarrier(self, arg0: javawrappers.java.util.concurrent.CyclicBarrier, ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def setCyclicTimeStepStartBarrier(self, arg0: javawrappers.java.util.concurrent.CyclicBarrier, ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def setBetweenReplannerBarrier(self, arg0: javawrappers.java.util.concurrent.CyclicBarrier, ) -> None: ...
		def removeWithinDayReplanner(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> None: ...
		def addReplanningTask(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.tools.ReplanningTask, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def run(self, ) -> None: ...
		def setEventsManager(self, arg0: javawrappers.org.matsim.core.api.experimental.events.EventsManager, ) -> None: ...
		def notify(self, ) -> None: ...
		def addWithinDayReplanner(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayReplanner, arg1: javawrappers.java.util.Queue, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def resetReplanners(self, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def beforeSim(self, ) -> None: ...
		def setTime(self, arg0: Union[float, JDouble], ) -> None: ...
		def afterSim(self, ) -> None: ...


	def setCyclicTimeStepEndBarrier(self, arg0: javawrappers.java.util.concurrent.CyclicBarrier, ) -> None: ...
	def getWithinDayReplannerFactories(self, ) -> javawrappers.java.util.Set: ...
	def setCyclicTimeStepStartBarrier(self, arg0: javawrappers.java.util.concurrent.CyclicBarrier, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setBetweenReplannerBarrier(self, arg0: javawrappers.java.util.concurrent.CyclicBarrier, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def removeWithinDayReplanner(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> None: ...
	@overload
	def addReplanningTask(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.tools.ReplanningTask, ) -> None: ...
	@overload
	def addReplanningTask(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.tools.ReplanningTask, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def run(self, ) -> None: ...
	@overload
	def run(self, arg0: Union[float, JDouble], ) -> None: ...
	def onPrepareSim(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def addWithinDayReplanner(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayReplanner, arg1: javawrappers.java.util.Queue, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def removeWithinDayReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayReplannerFactory, ) -> None: ...
	def setTime(self, arg0: Union[float, JDouble], ) -> None: ...
	@overload
	def afterSim(self, ) -> None: ...
	@overload
	def afterSim(self, ) -> None: ...
	def init(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def addWithinDayReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayReplannerFactory, ) -> None: ...
	def setEventsManager(self, arg0: javawrappers.org.matsim.core.api.experimental.events.EventsManager, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def resetReplanners(self, ) -> None: ...
	@overload
	def resetReplanners(self, ) -> None: ...
	def uncaughtException(self, arg0: javawrappers.java.lang.Thread, arg1: javawrappers.java.lang.Throwable, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def beforeSim(self, ) -> None: ...


class ParallelDuringLegReplanner:
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.org.matsim.core.api.experimental.events.EventsManager, ): ...
	def getWithinDayReplannerFactories(self, ) -> javawrappers.java.util.Set: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def init(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def addReplanningTask(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.tools.ReplanningTask, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def addWithinDayReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayReplannerFactory, ) -> None: ...
	def run(self, arg0: Union[float, JDouble], ) -> None: ...
	def onPrepareSim(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def resetReplanners(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def removeWithinDayReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayReplannerFactory, ) -> None: ...
	def afterSim(self, ) -> None: ...


