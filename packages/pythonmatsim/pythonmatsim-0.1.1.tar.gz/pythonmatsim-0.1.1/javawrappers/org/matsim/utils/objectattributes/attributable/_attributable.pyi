################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.util
import javawrappers.java.lang
import javawrappers.org.matsim.utils.objectattributes
import javawrappers.org.matsim.utils.objectattributes.attributable
import javawrappers.java.io
import javawrappers.org.xml.sax
import javawrappers.java.util.function

from jpype.types import *
from typing import Union

from typing import overload

class Attributes:
	def __init__(self, ): ...
	class EntryIterator:
		@overload
		def next(self, ) -> javawrappers.java.util.Map.Entry: ...
		@overload
		def next(self, ) -> javawrappers.java.lang.Object: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def hasNext(self, ) -> Union[int, JBoolean]: ...
		def forEachRemaining(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
		def remove(self, ) -> None: ...
		def notify(self, ) -> None: ...


	@overload
	def next(self, ) -> javawrappers.java.util.Map.Entry: ...
	@overload
	def next(self, ) -> javawrappers.java.lang.Object: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def remove(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def putAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def getAttribute(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def size(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def forEachRemaining(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def removeAttribute(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getAsMap(self, ) -> javawrappers.java.util.Map: ...


class AttributesXmlReaderDelegate:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def startTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.xml.sax.Attributes, arg2: javawrappers.java.util.Stack, arg3: javawrappers.org.matsim.utils.objectattributes.attributable.Attributes, ) -> None: ...
	def removeAttributeConverter(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.matsim.utils.objectattributes.AttributeConverter: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def putAttributeConverters(self, arg0: javawrappers.java.util.Map, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def endTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.util.Stack, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCurrentAttributes(self, ) -> javawrappers.org.matsim.utils.objectattributes.attributable.Attributes: ...
	def notify(self, ) -> None: ...
	def putAttributeConverter(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.org.matsim.utils.objectattributes.AttributeConverter, ) -> javawrappers.org.matsim.utils.objectattributes.AttributeConverter: ...


class Attributable:
	def getAttributes(self, ) -> javawrappers.org.matsim.utils.objectattributes.attributable.Attributes: ...


class AttributesXmlWriterDelegate:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def putAttributeConverters(self, arg0: javawrappers.java.util.Map, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def writeAttributes(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.io.BufferedWriter, arg2: javawrappers.org.matsim.utils.objectattributes.attributable.Attributes, ) -> None: ...


class AttributesUtils:
	def __init__(self, ): ...
	@staticmethod
	def copyTo(arg0: javawrappers.org.matsim.utils.objectattributes.attributable.Attributes, arg1: javawrappers.org.matsim.utils.objectattributes.attributable.Attributes, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def isEmpty(arg0: javawrappers.org.matsim.utils.objectattributes.attributable.Attributes, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def copyAttributesFromTo(arg0: javawrappers.org.matsim.utils.objectattributes.attributable.Attributable, arg1: javawrappers.org.matsim.utils.objectattributes.attributable.Attributable, ) -> None: ...


