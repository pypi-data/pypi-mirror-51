################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.matsim.core.population.io
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.matsim.utils.objectattributes
import javawrappers.java.net
import javawrappers.org.matsim.api.core.v01.population
import javawrappers.java.io
import javawrappers.org.matsim.utils.objectattributes.attributable
import javawrappers.org.matsim.core.population.algorithms
import javawrappers.org.xml.sax
import javawrappers.org.matsim.core.api.internal
import javawrappers.org.matsim.api.core.v01

from jpype.types import *
from typing import Union

from typing import overload

class StreamingDeprecated:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def addAlgorithm(arg0: javawrappers.org.matsim.api.core.v01.population.Population, arg1: javawrappers.org.matsim.core.population.algorithms.PersonAlgorithm, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def runAlgorithms(arg0: javawrappers.org.matsim.api.core.v01.population.Population, ) -> None: ...
	def notify(self, ) -> None: ...
	@overload
	@staticmethod
	def setIsStreaming(arg0: javawrappers.org.matsim.api.core.v01.population.Population, arg1: Union[int, JBoolean], ) -> None: ...
	@overload
	@staticmethod
	def setIsStreaming(arg0: javawrappers.org.matsim.core.population.io.StreamingPopulationReader, arg1: Union[int, JBoolean], ) -> None: ...


class PopulationReader:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.matsim.api.core.v01.Scenario, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.api.core.v01.Scenario, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def endPrefixMapping(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setNamespaceAware(self, arg0: Union[int, JBoolean], ) -> None: ...
	def error(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def notify(self, ) -> None: ...
	def notationDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def characters(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def startPrefixMapping(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def endElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def warning(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def setValidating(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setDocumentLocator(self, arg0: javawrappers.org.xml.sax.Locator, ) -> None: ...
	def readURL(self, arg0: javawrappers.java.net.URL, ) -> None: ...
	def ignorableWhitespace(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def startTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.xml.sax.Attributes, arg2: javawrappers.java.util.Stack, ) -> None: ...
	def startElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.org.xml.sax.Attributes, ) -> None: ...
	def putAttributeConverters(self, arg0: javawrappers.java.util.Map, ) -> None: ...
	def fatalError(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def endTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.util.Stack, ) -> None: ...
	def resolveEntity(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.xml.sax.InputSource: ...
	@overload
	def parse(self, arg0: javawrappers.java.io.InputStream, ) -> None: ...
	@overload
	def parse(self, arg0: javawrappers.java.net.URL, ) -> None: ...
	@overload
	def parse(self, arg0: javawrappers.org.xml.sax.InputSource, ) -> None: ...
	def startDocument(self, ) -> None: ...
	def endDocument(self, ) -> None: ...
	def getDoctype(self, ) -> javawrappers.java.lang.String: ...
	def setLocalDtdDirectory(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def readFile(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def skippedEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def unparsedEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def putAttributeConverter(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.org.matsim.utils.objectattributes.AttributeConverter, ) -> None: ...


class StreamingPopulationWriter:
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.core.utils.geometry.CoordinateTransformation, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.core.utils.geometry.CoordinateTransformation, arg1: Union[float, JDouble], ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], ): ...
	@overload
	def __init__(self, ): ...
	class DummyMatsimWriter:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def useCompression(self, arg0: Union[int, JBoolean], ) -> None: ...
		def notify(self, ) -> None: ...


	def closeStreaming(self, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def writeStartPlans(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def run(self, arg0: javawrappers.org.matsim.api.core.v01.population.Person, ) -> None: ...
	def useCompression(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setWriterHandler(self, arg0: javawrappers.org.matsim.core.population.io.PopulationWriterHandler, ) -> None: ...
	def notify(self, ) -> None: ...
	def writePerson(self, arg0: javawrappers.org.matsim.api.core.v01.population.Person, ) -> None: ...
	def startStreaming(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def writePersons(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def writeEndPlans(self, ) -> None: ...


class ZZEverythingInPackageIsPackageFinalOrEmpty:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class PopulationWriter:
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.api.core.v01.population.Population, arg1: javawrappers.org.matsim.api.core.v01.network.Network, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.api.core.v01.population.Population, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.core.utils.geometry.CoordinateTransformation, arg1: javawrappers.org.matsim.api.core.v01.population.Population, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.core.utils.geometry.CoordinateTransformation, arg1: javawrappers.org.matsim.api.core.v01.population.Population, arg2: javawrappers.org.matsim.api.core.v01.network.Network, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.core.utils.geometry.CoordinateTransformation, arg1: javawrappers.org.matsim.api.core.v01.population.Population, arg2: javawrappers.org.matsim.api.core.v01.network.Network, arg3: Union[float, JDouble], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.api.core.v01.population.Population, arg1: javawrappers.org.matsim.api.core.v01.network.Network, arg2: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def putAttributeConverters(self, arg0: javawrappers.java.util.Map, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def useCompression(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setWriterHandler(self, arg0: javawrappers.org.matsim.core.population.io.PopulationWriterHandler, ) -> None: ...
	def notify(self, ) -> None: ...
	def writeV0(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def writeV6(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def writeV6(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def writeV5(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def writeV4(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def write(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def write(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def putAttributeConverter(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.org.matsim.utils.objectattributes.AttributeConverter, ) -> None: ...


class PopulationWriterHandler:
	def writeHeaderAndStartElement(self, arg0: javawrappers.java.io.BufferedWriter, ) -> None: ...
	def writeSeparator(self, arg0: javawrappers.java.io.BufferedWriter, ) -> None: ...
	def putAttributeConverters(self, arg0: javawrappers.java.util.Map, ) -> None: ...
	def startPlans(self, arg0: javawrappers.org.matsim.api.core.v01.population.Population, arg1: javawrappers.java.io.BufferedWriter, ) -> None: ...
	def endPlans(self, arg0: javawrappers.java.io.BufferedWriter, ) -> None: ...
	def writePerson(self, arg0: javawrappers.org.matsim.api.core.v01.population.Person, arg1: javawrappers.java.io.BufferedWriter, ) -> None: ...


class StreamingPopulationReader:
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.api.core.v01.Scenario, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.matsim.api.core.v01.Scenario, ): ...
	class StreamingPopulation:
		def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def getAttributes(self, ) -> javawrappers.org.matsim.utils.objectattributes.attributable.Attributes: ...
		def getName(self, ) -> javawrappers.java.lang.String: ...
		def notifyAll(self, ) -> None: ...
		def removePerson(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> javawrappers.org.matsim.api.core.v01.population.Person: ...
		@overload
		def getFactory(self, ) -> javawrappers.org.matsim.core.api.internal.MatsimFactory: ...
		@overload
		def getFactory(self, ) -> javawrappers.org.matsim.api.core.v01.population.PopulationFactory: ...
		def addPerson(self, arg0: javawrappers.org.matsim.api.core.v01.population.Person, ) -> None: ...
		def notify(self, ) -> None: ...
		def getPersons(self, ) -> javawrappers.java.util.Map: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...


	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAttributes(self, ) -> javawrappers.org.matsim.utils.objectattributes.attributable.Attributes: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def removePerson(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> javawrappers.org.matsim.api.core.v01.population.Person: ...
	def clearAlgorithms(self, ) -> None: ...
	@overload
	def parse(self, arg0: javawrappers.java.net.URL, ) -> None: ...
	@overload
	def parse(self, arg0: javawrappers.java.io.InputStream, ) -> None: ...
	@overload
	def getFactory(self, ) -> javawrappers.org.matsim.core.api.internal.MatsimFactory: ...
	@overload
	def getFactory(self, ) -> javawrappers.org.matsim.api.core.v01.population.PopulationFactory: ...
	def addPerson(self, arg0: javawrappers.org.matsim.api.core.v01.population.Person, ) -> None: ...
	def notify(self, ) -> None: ...
	def getPersons(self, ) -> javawrappers.java.util.Map: ...
	def isStreaming(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def addAlgorithm(self, arg0: javawrappers.org.matsim.core.population.algorithms.PersonAlgorithm, ) -> None: ...
	def readFile(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def printPlansCount(self, ) -> None: ...
	def readURL(self, arg0: javawrappers.java.net.URL, ) -> None: ...


