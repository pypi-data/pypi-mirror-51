################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.matsim.api.core.v01.network
import javawrappers.org.matsim.core.network.filter

from jpype.types import *
from typing import Union

from typing import overload

class NetworkFilterManager:
	def __init__(self, arg0: javawrappers.org.matsim.api.core.v01.network.Network, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def applyFilters(self, ) -> javawrappers.org.matsim.api.core.v01.network.Network: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def addLinkFilter(self, arg0: javawrappers.org.matsim.core.network.filter.NetworkLinkFilter, ) -> None: ...
	def notify(self, ) -> None: ...
	def addNodeFilter(self, arg0: javawrappers.org.matsim.core.network.filter.NetworkNodeFilter, ) -> None: ...


class NetworkNodeFilter:
	def judgeNode(self, arg0: javawrappers.org.matsim.api.core.v01.network.Node, ) -> Union[int, JBoolean]: ...


class ZZEverythingInPackageIsPackageOrFinal:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class NetworkLinkFilter:
	def judgeLink(self, arg0: javawrappers.org.matsim.api.core.v01.network.Link, ) -> Union[int, JBoolean]: ...


class NetworkLinkDistanceFilter:
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.matsim.api.core.v01.network.Node, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def judgeLink(self, arg0: javawrappers.org.matsim.api.core.v01.network.Link, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


