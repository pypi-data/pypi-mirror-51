################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.matsim.api.core.v01.events
import javawrappers.java.util
import javawrappers.org.matsim.api.core.v01
import javawrappers.org.matsim.core.mobsim.jdeqsim

from jpype.types import *
from typing import Union

from typing import overload

class CppEventFileParser:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	@overload
	@staticmethod
	def equals(arg0: javawrappers.org.matsim.api.core.v01.events.Event, arg1: javawrappers.org.matsim.core.mobsim.jdeqsim.EventLog, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def equals(arg0: javawrappers.org.matsim.api.core.v01.events.Event, arg1: javawrappers.org.matsim.api.core.v01.Id, arg2: javawrappers.org.matsim.core.mobsim.jdeqsim.EventLog, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def parseFile(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.ArrayList: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def main(arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def parse(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...


class Timer:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def endTimer(self, ) -> None: ...
	def resetTimer(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def startTimer(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def printMeasuredTime(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getMeasuredTime(self, ) -> Union[long, JLong]: ...
	def notify(self, ) -> None: ...


