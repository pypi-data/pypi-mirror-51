################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.matsim.core.replanning.selectors
import javawrappers.java.lang
import javawrappers.org.matsim.api.core.v01.population

from jpype.types import *
from typing import Union

from typing import overload

class KeepSelected:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def selectPlan(self, arg0: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, ) -> javawrappers.org.matsim.api.core.v01.population.BasicPlan: ...


class AbstractPlanSelector:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	@overload
	def selectPlan(self, arg0: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, ) -> javawrappers.org.matsim.api.core.v01.population.BasicPlan: ...
	@overload
	def selectPlan(self, arg0: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, ) -> javawrappers.org.matsim.api.core.v01.population.Plan: ...


class RandomPlanSelector:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def selectPlan(self, arg0: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, ) -> javawrappers.org.matsim.api.core.v01.population.BasicPlan: ...


class BestPlanSelector:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def selectPlan(self, arg0: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, ) -> javawrappers.org.matsim.api.core.v01.population.BasicPlan: ...


class PlanSelector:
	def selectPlan(self, arg0: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, ) -> javawrappers.org.matsim.api.core.v01.population.BasicPlan: ...


class ExpBetaPlanChanger:
	def __init__(self, arg0: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def selectPlan(self, arg0: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, ) -> javawrappers.org.matsim.api.core.v01.population.BasicPlan: ...


class RandomUnscoredPlanSelector:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def selectPlan(self, arg0: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, ) -> javawrappers.org.matsim.api.core.v01.population.BasicPlan: ...


class PathSizeLogitSelector:
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.core.config.groups.PlanCalcScoreConfigGroup, arg1: javawrappers.org.matsim.api.core.v01.network.Network, ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: javawrappers.org.matsim.api.core.v01.network.Network, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	@overload
	def selectPlan(self, arg0: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, ) -> javawrappers.org.matsim.api.core.v01.population.BasicPlan: ...
	@overload
	def selectPlan(self, arg0: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, ) -> javawrappers.org.matsim.api.core.v01.population.Plan: ...


class ExpBetaPlanSelector:
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.core.config.groups.PlanCalcScoreConfigGroup, ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getSelectionProbability(arg0: javawrappers.org.matsim.core.replanning.selectors.ExpBetaPlanSelector, arg1: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, arg2: javawrappers.org.matsim.api.core.v01.population.BasicPlan, ) -> Union[float, JDouble]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def selectPlan(self, arg0: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, ) -> javawrappers.org.matsim.api.core.v01.population.BasicPlan: ...


class GenericWorstPlanForRemovalSelector:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def selectPlan(self, arg0: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, ) -> javawrappers.org.matsim.api.core.v01.population.BasicPlan: ...


class WorstPlanForRemovalSelector:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	@overload
	def selectPlan(self, arg0: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, ) -> javawrappers.org.matsim.api.core.v01.population.BasicPlan: ...
	@overload
	def selectPlan(self, arg0: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, ) -> javawrappers.org.matsim.api.core.v01.population.Plan: ...


