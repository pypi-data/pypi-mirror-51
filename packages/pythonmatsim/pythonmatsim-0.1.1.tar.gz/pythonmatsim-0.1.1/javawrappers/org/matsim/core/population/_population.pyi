################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.matsim.core.population.io
import javawrappers.java.util
import javawrappers.org.matsim.facilities
import javawrappers.org.matsim.api.core.v01.network
import javawrappers.java.lang
import javawrappers.com.google.inject
import javawrappers.org.matsim.core.router
import javawrappers.org.matsim.core.config.groups
import javawrappers.org.matsim.api.core.v01.population
import javawrappers.org.matsim.utils.objectattributes.attributable
import javawrappers.org.matsim.core.config
import javawrappers.org.matsim.core.controler
import javawrappers.org.matsim.api.core.v01

from jpype.types import *
from typing import Union

from typing import overload

class VspPlansCleanerModule:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def emptyModule() -> javawrappers.org.matsim.core.controler.AbstractModule: ...
	def install(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def override(arg0: javawrappers.java.lang.Iterable, arg1: javawrappers.org.matsim.core.controler.AbstractModule, ) -> javawrappers.org.matsim.core.controler.AbstractModule: ...
	def configure(self, arg0: javawrappers.com.google.inject.Binder, ) -> None: ...
	def notify(self, ) -> None: ...


class PersonAttributes:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def removeAllAttributes(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def putAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def getAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def removeAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class PersonUtils:
	@staticmethod
	def setLicence(arg0: javawrappers.org.matsim.api.core.v01.population.Person, arg1: javawrappers.java.lang.String, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@staticmethod
	def getAge(arg0: javawrappers.org.matsim.api.core.v01.population.Person, ) -> javawrappers.java.lang.Integer: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def setSex(arg0: javawrappers.org.matsim.api.core.v01.population.Person, arg1: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def setCarAvail(arg0: javawrappers.org.matsim.api.core.v01.population.Person, arg1: javawrappers.java.lang.String, ) -> None: ...
	@staticmethod
	def isEmployed(arg0: javawrappers.org.matsim.api.core.v01.population.Person, ) -> javawrappers.java.lang.Boolean: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def createAndAddPlan(arg0: javawrappers.org.matsim.api.core.v01.population.Person, arg1: Union[int, JBoolean], ) -> javawrappers.org.matsim.api.core.v01.population.Plan: ...
	@staticmethod
	def removeUnselectedPlans(arg0: javawrappers.org.matsim.api.core.v01.population.Person, ) -> None: ...
	@staticmethod
	def getCarAvail(arg0: javawrappers.org.matsim.api.core.v01.population.Person, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def hasLicense(arg0: javawrappers.org.matsim.api.core.v01.population.Person, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getTravelcards(arg0: javawrappers.org.matsim.api.core.v01.population.Person, ) -> javawrappers.java.util.TreeSet: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def addTravelcard(arg0: javawrappers.org.matsim.api.core.v01.population.Person, arg1: javawrappers.java.lang.String, ) -> None: ...
	@staticmethod
	def getLicense(arg0: javawrappers.org.matsim.api.core.v01.population.Person, ) -> javawrappers.java.lang.String: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getSex(arg0: javawrappers.org.matsim.api.core.v01.population.Person, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def isSelected(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def setEmployed(arg0: javawrappers.org.matsim.api.core.v01.population.Person, arg1: javawrappers.java.lang.Boolean, ) -> None: ...
	@staticmethod
	def setAge(arg0: javawrappers.org.matsim.api.core.v01.population.Person, arg1: javawrappers.java.lang.Integer, ) -> None: ...


class ZZEverythingInPackageIsPackageOrFinal:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class PopulationUtils:
	class UnmodifiablePlan:
		def __init__(self, arg0: javawrappers.org.matsim.api.core.v01.population.Plan, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def getAttributes(self, ) -> javawrappers.org.matsim.utils.objectattributes.attributable.Attributes: ...
		def notifyAll(self, ) -> None: ...
		def addActivity(self, arg0: javawrappers.org.matsim.api.core.v01.population.Activity, ) -> None: ...
		def getPlanElements(self, ) -> javawrappers.java.util.List: ...
		def setType(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def notify(self, ) -> None: ...
		def getCustomAttributes(self, ) -> javawrappers.java.util.Map: ...
		def getPerson(self, ) -> javawrappers.org.matsim.api.core.v01.population.Person: ...
		def getType(self, ) -> javawrappers.java.lang.String: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def setPerson(self, arg0: javawrappers.org.matsim.api.core.v01.population.Person, ) -> None: ...
		def addLeg(self, arg0: javawrappers.org.matsim.api.core.v01.population.Leg, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getScore(self, ) -> javawrappers.java.lang.Double: ...
		def setScore(self, arg0: javawrappers.java.lang.Double, ) -> None: ...


	class UnmodifiableActivity:
		def __init__(self, arg0: javawrappers.org.matsim.api.core.v01.population.Activity, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def setCoord(self, arg0: javawrappers.org.matsim.api.core.v01.Coord, ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def setFacilityId(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> None: ...
		def getAttributes(self, ) -> javawrappers.org.matsim.utils.objectattributes.attributable.Attributes: ...
		def setLinkId(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def getFacilityId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
		def setType(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def getMaximumDuration(self, ) -> Union[float, JDouble]: ...
		def notify(self, ) -> None: ...
		def getEndTime(self, ) -> Union[float, JDouble]: ...
		def getType(self, ) -> javawrappers.java.lang.String: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def getLinkId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def setEndTime(self, arg0: Union[float, JDouble], ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def setMaximumDuration(self, arg0: Union[float, JDouble], ) -> None: ...
		def setStartTime(self, arg0: Union[float, JDouble], ) -> None: ...
		def getCoord(self, ) -> javawrappers.org.matsim.api.core.v01.Coord: ...
		def getStartTime(self, ) -> Union[float, JDouble]: ...


	class UnmodifiableLeg:
		def __init__(self, arg0: javawrappers.org.matsim.api.core.v01.population.Leg, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def setRoute(self, arg0: javawrappers.org.matsim.api.core.v01.population.Route, ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def getAttributes(self, ) -> javawrappers.org.matsim.utils.objectattributes.attributable.Attributes: ...
		def setTravelTime(self, arg0: Union[float, JDouble], ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def setDepartureTime(self, arg0: Union[float, JDouble], ) -> None: ...
		def setMode(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def getDepartureTime(self, ) -> Union[float, JDouble]: ...
		def getRoute(self, ) -> javawrappers.org.matsim.api.core.v01.population.Route: ...
		def notify(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def getTravelTime(self, ) -> Union[float, JDouble]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getMode(self, ) -> javawrappers.java.lang.String: ...


	@staticmethod
	def getPreviousLeg(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, arg1: javawrappers.org.matsim.api.core.v01.population.Activity, ) -> javawrappers.org.matsim.api.core.v01.population.Leg: ...
	@staticmethod
	def getNextLeg(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, arg1: javawrappers.org.matsim.api.core.v01.population.Activity, ) -> javawrappers.org.matsim.api.core.v01.population.Leg: ...
	@staticmethod
	def resetRoutes(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@staticmethod
	def computeLinkIdFromActivity(arg0: javawrappers.org.matsim.api.core.v01.population.Activity, arg1: javawrappers.org.matsim.facilities.ActivityFacilities, arg2: javawrappers.org.matsim.core.config.Config, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def setTravelTime(self, arg0: Union[float, JDouble], ) -> None: ...
	@staticmethod
	def decideOnLinkIdForActivity(arg0: javawrappers.org.matsim.api.core.v01.population.Activity, arg1: javawrappers.org.matsim.api.core.v01.Scenario, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	@staticmethod
	def removeLeg(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, arg1: Union[int, JInt], ) -> None: ...
	@staticmethod
	def decideOnCoordForActivity(arg0: javawrappers.org.matsim.api.core.v01.population.Activity, arg1: javawrappers.org.matsim.api.core.v01.Scenario, ) -> javawrappers.org.matsim.api.core.v01.Coord: ...
	@staticmethod
	def getFirstActivityOfDayBeforeDepartingWithCar(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, ) -> javawrappers.org.matsim.api.core.v01.population.Activity: ...
	@staticmethod
	def unmodifiableActivity(arg0: javawrappers.org.matsim.api.core.v01.population.Activity, ) -> javawrappers.org.matsim.api.core.v01.population.Activity: ...
	@staticmethod
	def getLastActivity(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, ) -> javawrappers.org.matsim.api.core.v01.population.Activity: ...
	@staticmethod
	def unmodifiablePlan(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, ) -> javawrappers.org.matsim.api.core.v01.population.Plan: ...
	def getPlanElements(self, ) -> javawrappers.java.util.List: ...
	def getRoute(self, ) -> javawrappers.org.matsim.api.core.v01.population.Route: ...
	@staticmethod
	def getNextActivity(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, arg1: javawrappers.org.matsim.api.core.v01.population.Leg, ) -> javawrappers.org.matsim.api.core.v01.population.Activity: ...
	@staticmethod
	def putPersonAttribute(arg0: javawrappers.org.matsim.api.core.v01.population.Person, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@staticmethod
	def createAndAddActivityFromLinkId(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.matsim.api.core.v01.Id, ) -> javawrappers.org.matsim.api.core.v01.population.Activity: ...
	def getEndTime(self, ) -> Union[float, JDouble]: ...
	@overload
	@staticmethod
	def calculateSimilarity(arg0: javawrappers.java.util.List, arg1: javawrappers.java.util.List, arg2: javawrappers.org.matsim.api.core.v01.network.Network, arg3: Union[float, JDouble], arg4: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	@overload
	@staticmethod
	def calculateSimilarity(arg0: javawrappers.java.util.List, arg1: javawrappers.java.util.List, arg2: Union[float, JDouble], arg3: Union[float, JDouble], arg4: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	@staticmethod
	def getSortedPersons(arg0: javawrappers.org.matsim.api.core.v01.population.Population, ) -> javawrappers.java.util.SortedMap: ...
	def addLeg(self, arg0: javawrappers.org.matsim.api.core.v01.population.Leg, ) -> None: ...
	def getTravelTime(self, ) -> Union[float, JDouble]: ...
	@staticmethod
	def getLegs(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, ) -> javawrappers.java.util.List: ...
	@staticmethod
	def insertLegAct(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, arg1: Union[int, JInt], arg2: javawrappers.org.matsim.api.core.v01.population.Leg, arg3: javawrappers.org.matsim.api.core.v01.population.Activity, ) -> None: ...
	def getStartTime(self, ) -> Union[float, JDouble]: ...
	def getMode(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def sortPersons(arg0: javawrappers.org.matsim.api.core.v01.population.Population, ) -> None: ...
	def setRoute(self, arg0: javawrappers.org.matsim.api.core.v01.population.Route, ) -> None: ...
	@overload
	def getAttributes(self, ) -> javawrappers.org.matsim.utils.objectattributes.attributable.Attributes: ...
	@overload
	def getAttributes(self, ) -> javawrappers.org.matsim.utils.objectattributes.attributable.Attributes: ...
	@overload
	def getAttributes(self, ) -> javawrappers.org.matsim.utils.objectattributes.attributable.Attributes: ...
	@staticmethod
	def getPreviousActivity(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, arg1: javawrappers.org.matsim.api.core.v01.population.Leg, ) -> javawrappers.org.matsim.api.core.v01.population.Activity: ...
	def setLinkId(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> None: ...
	@staticmethod
	def createActivityFromCoordAndLinkId(arg0: javawrappers.java.lang.String, arg1: javawrappers.org.matsim.api.core.v01.Coord, arg2: javawrappers.org.matsim.api.core.v01.Id, ) -> javawrappers.org.matsim.api.core.v01.population.Activity: ...
	@staticmethod
	def comparePopulations(arg0: javawrappers.org.matsim.api.core.v01.population.Population, arg1: javawrappers.org.matsim.api.core.v01.population.Population, ) -> Union[int, JBoolean]: ...
	def getFacilityId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getDepartureTime(self, ) -> Union[float, JDouble]: ...
	@staticmethod
	def createAndAddActivityFromCoord(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.matsim.api.core.v01.Coord, ) -> javawrappers.org.matsim.api.core.v01.population.Activity: ...
	@staticmethod
	def createAndAddLeg(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.matsim.api.core.v01.population.Leg: ...
	@staticmethod
	def decideOnActivityEndTime(arg0: javawrappers.org.matsim.api.core.v01.population.Activity, arg1: Union[float, JDouble], arg2: javawrappers.org.matsim.core.config.Config, ) -> Union[float, JDouble]: ...
	def getPerson(self, ) -> javawrappers.org.matsim.api.core.v01.population.Person: ...
	@staticmethod
	def createActivityFromLinkId(arg0: javawrappers.java.lang.String, arg1: javawrappers.org.matsim.api.core.v01.Id, ) -> javawrappers.org.matsim.api.core.v01.population.Activity: ...
	@staticmethod
	def removePersonAttributes(arg0: javawrappers.org.matsim.api.core.v01.population.Person, arg1: javawrappers.org.matsim.api.core.v01.population.Population, ) -> None: ...
	@overload
	def getType(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getType(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def hasCarLeg(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getActivities(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, arg1: javawrappers.org.matsim.core.router.StageActivityTypes, ) -> javawrappers.java.util.List: ...
	@staticmethod
	def decideOnTravelTimeForLeg(arg0: javawrappers.org.matsim.api.core.v01.population.Leg, ) -> Union[float, JDouble]: ...
	def setMaximumDuration(self, arg0: Union[float, JDouble], ) -> None: ...
	@staticmethod
	def createAndAddActivity(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.matsim.api.core.v01.population.Activity: ...
	def setFacilityId(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def changePersonId(arg0: javawrappers.org.matsim.api.core.v01.population.Person, arg1: javawrappers.org.matsim.api.core.v01.Id, ) -> None: ...
	@staticmethod
	def getFirstActivity(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, ) -> javawrappers.org.matsim.api.core.v01.population.Activity: ...
	def notifyAll(self, ) -> None: ...
	def setDepartureTime(self, arg0: Union[float, JDouble], ) -> None: ...
	def getMaximumDuration(self, ) -> Union[float, JDouble]: ...
	@staticmethod
	def readPopulation(arg0: javawrappers.org.matsim.api.core.v01.population.Population, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	@staticmethod
	def copyFromTo(arg0: javawrappers.org.matsim.api.core.v01.population.Leg, arg1: javawrappers.org.matsim.api.core.v01.population.Leg, ) -> None: ...
	@overload
	@staticmethod
	def copyFromTo(arg0: javawrappers.org.matsim.api.core.v01.population.Activity, arg1: javawrappers.org.matsim.api.core.v01.population.Activity, ) -> None: ...
	@overload
	@staticmethod
	def copyFromTo(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, arg1: javawrappers.org.matsim.api.core.v01.population.Plan, ) -> None: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def getFirstActivityAfterLastCarLegOfDay(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, ) -> javawrappers.org.matsim.api.core.v01.population.Activity: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def createLeg(arg0: javawrappers.org.matsim.api.core.v01.population.Leg, ) -> javawrappers.org.matsim.api.core.v01.population.Leg: ...
	@overload
	@staticmethod
	def createLeg(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.matsim.api.core.v01.population.Leg: ...
	def setStartTime(self, arg0: Union[float, JDouble], ) -> None: ...
	@overload
	@staticmethod
	def createPopulation(arg0: javawrappers.org.matsim.core.config.Config, arg1: javawrappers.org.matsim.api.core.v01.network.Network, ) -> javawrappers.org.matsim.api.core.v01.population.Population: ...
	@overload
	@staticmethod
	def createPopulation(arg0: javawrappers.org.matsim.core.config.Config, ) -> javawrappers.org.matsim.api.core.v01.population.Population: ...
	@overload
	@staticmethod
	def createPopulation(arg0: javawrappers.org.matsim.core.config.groups.PlansConfigGroup, arg1: javawrappers.org.matsim.api.core.v01.network.Network, ) -> javawrappers.org.matsim.api.core.v01.population.Population: ...
	@overload
	@staticmethod
	def createPlan() -> javawrappers.org.matsim.api.core.v01.population.Plan: ...
	@overload
	@staticmethod
	def createPlan(arg0: javawrappers.org.matsim.api.core.v01.population.Person, ) -> javawrappers.org.matsim.api.core.v01.population.Plan: ...
	@staticmethod
	def unmodifiableLeg(arg0: javawrappers.org.matsim.api.core.v01.population.Leg, ) -> javawrappers.org.matsim.api.core.v01.population.Leg: ...
	def setCoord(self, arg0: javawrappers.org.matsim.api.core.v01.Coord, ) -> None: ...
	@staticmethod
	def writePopulation(arg0: javawrappers.org.matsim.api.core.v01.population.Population, arg1: javawrappers.java.lang.String, ) -> None: ...
	@staticmethod
	def createActivity(arg0: javawrappers.org.matsim.api.core.v01.population.Activity, ) -> javawrappers.org.matsim.api.core.v01.population.Activity: ...
	@staticmethod
	def createActivityFromCoord(arg0: javawrappers.java.lang.String, arg1: javawrappers.org.matsim.api.core.v01.Coord, ) -> javawrappers.org.matsim.api.core.v01.population.Activity: ...
	@staticmethod
	def removePersonAttribute(arg0: javawrappers.org.matsim.api.core.v01.population.Person, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def setMode(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def addActivity(self, arg0: javawrappers.org.matsim.api.core.v01.population.Activity, ) -> None: ...
	@staticmethod
	def getPersonAttribute(arg0: javawrappers.org.matsim.api.core.v01.population.HasPlansAndId, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def setType(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def setType(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@staticmethod
	def getFactory() -> javawrappers.org.matsim.api.core.v01.population.PopulationFactory: ...
	@staticmethod
	def sampleDown(arg0: javawrappers.org.matsim.api.core.v01.population.Population, arg1: Union[float, JDouble], ) -> None: ...
	@staticmethod
	def getActivityEndTime(arg0: javawrappers.org.matsim.api.core.v01.population.Activity, arg1: Union[float, JDouble], arg2: javawrappers.org.matsim.core.config.Config, ) -> Union[float, JDouble]: ...
	@overload
	@staticmethod
	def computeCoordFromActivity(arg0: javawrappers.org.matsim.api.core.v01.population.Activity, arg1: javawrappers.org.matsim.facilities.ActivityFacilities, arg2: javawrappers.org.matsim.core.config.Config, ) -> javawrappers.org.matsim.api.core.v01.Coord: ...
	@overload
	@staticmethod
	def computeCoordFromActivity(arg0: javawrappers.org.matsim.api.core.v01.population.Activity, arg1: javawrappers.org.matsim.facilities.ActivityFacilities, arg2: javawrappers.org.matsim.api.core.v01.network.Network, arg3: javawrappers.org.matsim.core.config.Config, ) -> javawrappers.org.matsim.api.core.v01.Coord: ...
	def getCustomAttributes(self, ) -> javawrappers.java.util.Map: ...
	@staticmethod
	def getActLegIndex(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, arg1: javawrappers.org.matsim.api.core.v01.population.PlanElement, ) -> Union[int, JInt]: ...
	@staticmethod
	def removeActivity(arg0: javawrappers.org.matsim.api.core.v01.population.Plan, arg1: Union[int, JInt], ) -> None: ...
	def getLinkId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def setEndTime(self, arg0: Union[float, JDouble], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setPerson(self, arg0: javawrappers.org.matsim.api.core.v01.population.Person, ) -> None: ...
	@staticmethod
	def equalPopulation(arg0: javawrappers.org.matsim.api.core.v01.population.Population, arg1: javawrappers.org.matsim.api.core.v01.population.Population, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCoord(self, ) -> javawrappers.org.matsim.api.core.v01.Coord: ...
	@overload
	@staticmethod
	def printPlansCount(arg0: javawrappers.org.matsim.api.core.v01.population.Population, ) -> None: ...
	@overload
	@staticmethod
	def printPlansCount(arg0: javawrappers.org.matsim.core.population.io.StreamingPopulationReader, ) -> None: ...
	def getScore(self, ) -> javawrappers.java.lang.Double: ...
	def setScore(self, arg0: javawrappers.java.lang.Double, ) -> None: ...


