################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.hibernate.validator.internal.metadata.facets
import javawrappers.java.lang.reflect
import javawrappers.java.util
import javawrappers.org.hibernate.validator.internal.metadata.raw
import javawrappers.org.hibernate.validator.internal.metadata.descriptor
import javawrappers.java.lang.annotation
import javawrappers.org.hibernate.validator.internal.engine
import javawrappers.org.hibernate.validator.internal.engine.valueextraction
import javawrappers.javax.validation.metadata
import javawrappers.java.lang
import javawrappers.org.hibernate.validator.internal.metadata.core
import javawrappers.org.hibernate.validator.internal.metadata.aggregated
import javawrappers.org.hibernate.validator.internal.engine.path
import javawrappers.org.hibernate.validator.internal.util
import javawrappers.java.util.function
import javawrappers.javax.validation
import javawrappers.org.hibernate.validator.internal.engine.groups

from jpype.types import *
from typing import Union

from typing import overload

class MetaDataBuilder:
	def add(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.ConstraintMetaData: ...
	def accepts(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getContainerElementConstraints(self, ) -> javawrappers.java.util.Set: ...


class FieldCascadable:
	class Builder:
		def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg1: javawrappers.java.lang.reflect.Field, arg2: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		@overload
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.FieldCascadable: ...
		@overload
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.facets.Cascadable: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def mergeCascadingMetaData(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getElementType(self, ) -> javawrappers.java.lang.annotation.ElementType: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getCascadingMetaData(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaData: ...
	def mergeCascadingMetaData(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.FieldCascadable: ...
	@overload
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.facets.Cascadable: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def appendTo(self, arg0: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCascadableType(self, ) -> javawrappers.java.lang.reflect.Type: ...


class ReturnValueMetaData:
	def __init__(self, arg0: javawrappers.java.lang.reflect.Type, arg1: javawrappers.java.util.Set, arg2: javawrappers.java.util.Set, arg3: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaData, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getCascadingMetaData(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaData: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def asDescriptor(self, arg0: Union[int, JBoolean], arg1: javawrappers.java.util.List, ) -> javawrappers.javax.validation.metadata.ElementDescriptor: ...
	@overload
	def asDescriptor(self, arg0: Union[int, JBoolean], arg1: javawrappers.java.util.List, ) -> javawrappers.javax.validation.metadata.ReturnValueDescriptor: ...
	def getContainerElementsConstraints(self, ) -> javawrappers.java.util.Set: ...
	def notifyAll(self, ) -> None: ...
	def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...
	def notify(self, ) -> None: ...
	def isCascading(self, ) -> Union[int, JBoolean]: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def appendTo(self, arg0: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ) -> None: ...
	def hasCascadables(self, ) -> Union[int, JBoolean]: ...
	def getElementType(self, ) -> javawrappers.java.lang.annotation.ElementType: ...
	def getCascadables(self, ) -> javawrappers.java.lang.Iterable: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def getValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def getAllConstraints(self, ) -> javawrappers.java.util.Set: ...
	def getType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isConstrained(self, ) -> Union[int, JBoolean]: ...
	def getCascadableType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def getDirectConstraints(self, ) -> javawrappers.java.util.Set: ...


class CascadingMetaData:
	def as_(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaData: ...
	def isMarkedForCascadingOnAnnotatedObjectOrContainerElements(self, ) -> Union[int, JBoolean]: ...
	def getTypeParameter(self, ) -> javawrappers.java.lang.reflect.TypeVariable: ...
	def isContainer(self, ) -> Union[int, JBoolean]: ...
	def addRuntimeContainerSupport(self, arg0: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaData: ...
	def getGroupConversionDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def isCascading(self, ) -> Union[int, JBoolean]: ...
	def convertGroup(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Class: ...


class GroupConversionHelper:
	def asDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def of(arg0: javawrappers.java.util.Map, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.GroupConversionHelper: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def convertGroup(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Class: ...


class ValidatableParametersMetaData:
	def __init__(self, arg0: javawrappers.java.util.List, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getCascadables(self, ) -> javawrappers.java.lang.Iterable: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def hasCascadables(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...


class PropertyMetaData:
	class Builder:
		@overload
		def __init__(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedField, arg2: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg3: javawrappers.org.hibernate.validator.internal.util.TypeResolutionHelper, arg4: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, ): ...
		@overload
		def __init__(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedExecutable, arg2: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg3: javawrappers.org.hibernate.validator.internal.util.TypeResolutionHelper, arg4: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, ): ...
		@overload
		def __init__(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedType, arg2: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg3: javawrappers.org.hibernate.validator.internal.util.TypeResolutionHelper, arg4: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, ): ...
		def add(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		@overload
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.PropertyMetaData: ...
		@overload
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.ConstraintMetaData: ...
		def accepts(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> Union[int, JBoolean]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...
		def getContainerElementConstraints(self, ) -> javawrappers.java.util.Set: ...


	def add(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getCascadables(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def asDescriptor(self, arg0: Union[int, JBoolean], arg1: javawrappers.java.util.List, ) -> javawrappers.javax.validation.metadata.ElementDescriptor: ...
	@overload
	def asDescriptor(self, arg0: Union[int, JBoolean], arg1: javawrappers.java.util.List, ) -> javawrappers.org.hibernate.validator.internal.metadata.descriptor.PropertyDescriptorImpl: ...
	def accepts(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> Union[int, JBoolean]: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def getContainerElementsConstraints(self, ) -> javawrappers.java.util.Set: ...
	def notifyAll(self, ) -> None: ...
	def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...
	def notify(self, ) -> None: ...
	def isCascading(self, ) -> Union[int, JBoolean]: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def getAllConstraints(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.PropertyMetaData: ...
	@overload
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.ConstraintMetaData: ...
	def getType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isConstrained(self, ) -> Union[int, JBoolean]: ...
	def getContainerElementConstraints(self, ) -> javawrappers.java.util.Set: ...
	def getDirectConstraints(self, ) -> javawrappers.java.util.Set: ...


class GetterCascadable:
	class Builder:
		def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg1: javawrappers.java.lang.reflect.Method, arg2: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		@overload
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.facets.Cascadable: ...
		@overload
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.GetterCascadable: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def mergeCascadingMetaData(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getElementType(self, ) -> javawrappers.java.lang.annotation.ElementType: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getCascadingMetaData(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaData: ...
	def mergeCascadingMetaData(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.facets.Cascadable: ...
	@overload
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.GetterCascadable: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def appendTo(self, arg0: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCascadableType(self, ) -> javawrappers.java.lang.reflect.Type: ...


class ConstraintMetaData:
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def asDescriptor(self, arg0: Union[int, JBoolean], arg1: javawrappers.java.util.List, ) -> javawrappers.javax.validation.metadata.ElementDescriptor: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def getType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...
	def isConstrained(self, ) -> Union[int, JBoolean]: ...
	def isCascading(self, ) -> Union[int, JBoolean]: ...


class BeanMetaData:
	def getCascadables(self, ) -> javawrappers.java.lang.Iterable: ...
	def getClassHierarchy(self, ) -> javawrappers.java.util.List: ...
	@overload
	def getMetaDataFor(self, arg0: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.java.util.Optional: ...
	@overload
	def getMetaDataFor(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.PropertyMetaData: ...
	def getDirectMetaConstraints(self, ) -> javawrappers.java.util.Set: ...
	def defaultGroupSequenceIsRedefined(self, ) -> Union[int, JBoolean]: ...
	def getBeanClass(self, ) -> javawrappers.java.lang.Class: ...
	def getMetaConstraints(self, ) -> javawrappers.java.util.Set: ...
	def getDefaultValidationSequence(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.util.Iterator: ...
	def hasCascadables(self, ) -> Union[int, JBoolean]: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def getBeanDescriptor(self, ) -> javawrappers.javax.validation.metadata.BeanDescriptor: ...
	def getDefaultGroupSequence(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.util.List: ...


class PotentiallyContainerCascadingMetaData:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def isMarkedForCascadingOnAnnotatedObjectOrContainerElements(self, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isContainer(self, ) -> Union[int, JBoolean]: ...
	def getGroupConversionDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def notify(self, ) -> None: ...
	def isCascading(self, ) -> Union[int, JBoolean]: ...
	def convertGroup(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Class: ...
	def as_(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaData: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def of(arg0: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder, arg1: javawrappers.java.util.Set, arg2: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.PotentiallyContainerCascadingMetaData: ...
	def getTypeParameter(self, ) -> javawrappers.java.lang.reflect.TypeVariable: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def addRuntimeContainerSupport(self, arg0: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaData: ...


class ParameterMetaData:
	class Builder:
		def __init__(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedParameter, arg2: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg3: javawrappers.org.hibernate.validator.internal.util.TypeResolutionHelper, arg4: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg5: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, ): ...
		def add(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		@overload
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.ParameterMetaData: ...
		@overload
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.ConstraintMetaData: ...
		def accepts(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> Union[int, JBoolean]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...
		def getContainerElementConstraints(self, ) -> javawrappers.java.util.Set: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getCascadingMetaData(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaData: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def asDescriptor(self, arg0: Union[int, JBoolean], arg1: javawrappers.java.util.List, ) -> javawrappers.javax.validation.metadata.ElementDescriptor: ...
	@overload
	def asDescriptor(self, arg0: Union[int, JBoolean], arg1: javawrappers.java.util.List, ) -> javawrappers.javax.validation.metadata.ParameterDescriptor: ...
	def getIndex(self, ) -> Union[int, JInt]: ...
	def getContainerElementsConstraints(self, ) -> javawrappers.java.util.Set: ...
	def notifyAll(self, ) -> None: ...
	def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...
	def notify(self, ) -> None: ...
	def isCascading(self, ) -> Union[int, JBoolean]: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	def appendTo(self, arg0: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ) -> None: ...
	def getContainerElementConstraints(self, ) -> javawrappers.java.util.Set: ...
	def add(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> None: ...
	def getElementType(self, ) -> javawrappers.java.lang.annotation.ElementType: ...
	def accepts(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> Union[int, JBoolean]: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def getValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def getAllConstraints(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.ParameterMetaData: ...
	@overload
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.ConstraintMetaData: ...
	def getType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isConstrained(self, ) -> Union[int, JBoolean]: ...
	def getCascadableType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def getDirectConstraints(self, ) -> javawrappers.java.util.Set: ...


class NonContainerCascadingMetaData:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def isMarkedForCascadingOnAnnotatedObjectOrContainerElements(self, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isContainer(self, ) -> Union[int, JBoolean]: ...
	def getGroupConversionDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def notify(self, ) -> None: ...
	def isCascading(self, ) -> Union[int, JBoolean]: ...
	def convertGroup(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Class: ...
	def as_(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaData: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def of(arg0: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder, arg1: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.NonContainerCascadingMetaData: ...
	def getTypeParameter(self, ) -> javawrappers.java.lang.reflect.TypeVariable: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def addRuntimeContainerSupport(self, arg0: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaData: ...


class ContainerCascadingMetaData:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def isMarkedForCascadingOnAnnotatedObjectOrContainerElements(self, ) -> Union[int, JBoolean]: ...
	def getDeclaredContainerClass(self, ) -> javawrappers.java.lang.Class: ...
	def notifyAll(self, ) -> None: ...
	def isContainer(self, ) -> Union[int, JBoolean]: ...
	def getValueExtractorCandidates(self, ) -> javawrappers.java.util.Set: ...
	def hasContainerElementsMarkedForCascading(self, ) -> Union[int, JBoolean]: ...
	def getGroupConversionDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def getEnclosingType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def getContainerElementTypesCascadingMetaData(self, ) -> javawrappers.java.util.List: ...
	def notify(self, ) -> None: ...
	def getDeclaredTypeParameterIndex(self, ) -> javawrappers.java.lang.Integer: ...
	def isCascading(self, ) -> Union[int, JBoolean]: ...
	def convertGroup(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Class: ...
	def as_(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaData: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def of(arg0: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg1: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder, arg2: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.ContainerCascadingMetaData: ...
	def getDeclaredTypeParameter(self, ) -> javawrappers.java.lang.reflect.TypeVariable: ...
	def getTypeParameter(self, ) -> javawrappers.java.lang.reflect.TypeVariable: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def addRuntimeContainerSupport(self, arg0: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaData: ...


class BeanMetaDataImpl:
	def __init__(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.util.List, arg2: javawrappers.org.hibernate.validator.spi.group.DefaultGroupSequenceProvider, arg3: javawrappers.java.util.Set, arg4: javawrappers.org.hibernate.validator.internal.engine.groups.ValidationOrderGenerator, ): ...
	class DefaultGroupSequenceContext:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class BuilderDelegate:
		def __init__(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, arg2: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg3: javawrappers.org.hibernate.validator.internal.util.ExecutableHelper, arg4: javawrappers.org.hibernate.validator.internal.util.TypeResolutionHelper, arg5: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg6: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg7: javawrappers.org.hibernate.validator.internal.engine.MethodValidationConfiguration, ): ...
		def add(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> Union[int, JBoolean]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def build(self, ) -> javawrappers.java.util.Set: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class BeanMetaDataBuilder:
		def add(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.BeanConfiguration, ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.BeanMetaDataImpl: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@staticmethod
		def getInstance(arg0: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg1: javawrappers.org.hibernate.validator.internal.util.ExecutableHelper, arg2: javawrappers.org.hibernate.validator.internal.util.TypeResolutionHelper, arg3: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg4: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg5: javawrappers.org.hibernate.validator.internal.engine.groups.ValidationOrderGenerator, arg6: javawrappers.java.lang.Class, arg7: javawrappers.org.hibernate.validator.internal.engine.MethodValidationConfiguration, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.BeanMetaDataImpl.BeanMetaDataBuilder: ...
		def notify(self, ) -> None: ...


	@overload
	def add(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> Union[int, JBoolean]: ...
	@overload
	def add(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.BeanConfiguration, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def getCascadables(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def getCascadables(self, ) -> javawrappers.java.lang.Iterable: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getClassHierarchy(self, ) -> javawrappers.java.util.List: ...
	@overload
	def getMetaDataFor(self, arg0: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.java.util.Optional: ...
	@overload
	def getMetaDataFor(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.PropertyMetaData: ...
	def getDirectMetaConstraints(self, ) -> javawrappers.java.util.Set: ...
	def defaultGroupSequenceIsRedefined(self, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getBeanDescriptor(self, ) -> javawrappers.javax.validation.metadata.BeanDescriptor: ...
	def getDefaultGroupSequence(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.util.List: ...
	@overload
	def build(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.BeanMetaDataImpl: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getBeanClass(self, ) -> javawrappers.java.lang.Class: ...
	def getMetaConstraints(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getInstance(arg0: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg1: javawrappers.org.hibernate.validator.internal.util.ExecutableHelper, arg2: javawrappers.org.hibernate.validator.internal.util.TypeResolutionHelper, arg3: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg4: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg5: javawrappers.org.hibernate.validator.internal.engine.groups.ValidationOrderGenerator, arg6: javawrappers.java.lang.Class, arg7: javawrappers.org.hibernate.validator.internal.engine.MethodValidationConfiguration, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.BeanMetaDataImpl.BeanMetaDataBuilder: ...
	def getDefaultValidationSequence(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.util.Iterator: ...
	def hasCascadables(self, ) -> Union[int, JBoolean]: ...


class ExecutableMetaData:
	class Builder:
		def __init__(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedExecutable, arg2: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg3: javawrappers.org.hibernate.validator.internal.util.ExecutableHelper, arg4: javawrappers.org.hibernate.validator.internal.util.TypeResolutionHelper, arg5: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg6: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg7: javawrappers.org.hibernate.validator.internal.engine.MethodValidationConfiguration, ): ...
		def add(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		@overload
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.ConstraintMetaData: ...
		@overload
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.ExecutableMetaData: ...
		def accepts(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> Union[int, JBoolean]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...
		def getContainerElementConstraints(self, ) -> javawrappers.java.util.Set: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getReturnValueMetaData(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.ReturnValueMetaData: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def asDescriptor(self, arg0: Union[int, JBoolean], arg1: javawrappers.java.util.List, ) -> javawrappers.org.hibernate.validator.internal.metadata.descriptor.ExecutableDescriptorImpl: ...
	@overload
	def asDescriptor(self, arg0: Union[int, JBoolean], arg1: javawrappers.java.util.List, ) -> javawrappers.javax.validation.metadata.ElementDescriptor: ...
	def getContainerElementsConstraints(self, ) -> javawrappers.java.util.Set: ...
	def notifyAll(self, ) -> None: ...
	def getSignatures(self, ) -> javawrappers.java.util.Set: ...
	def getParameterTypes(self, ) -> JArray(javawrappers.java.lang.Class, 1): ...
	def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...
	def notify(self, ) -> None: ...
	def isCascading(self, ) -> Union[int, JBoolean]: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def getParameterMetaData(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.ParameterMetaData: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getValidatableParametersMetaData(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.ValidatableParametersMetaData: ...
	def getContainerElementConstraints(self, ) -> javawrappers.java.util.Set: ...
	def add(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> None: ...
	def accepts(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement, ) -> Union[int, JBoolean]: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def getAllConstraints(self, ) -> javawrappers.java.util.Set: ...
	def getCrossParameterConstraints(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.ConstraintMetaData: ...
	@overload
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.ExecutableMetaData: ...
	def getType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isConstrained(self, ) -> Union[int, JBoolean]: ...
	def getDirectConstraints(self, ) -> javawrappers.java.util.Set: ...


class CascadingMetaDataBuilder:
	def __init__(self, arg0: javawrappers.java.lang.reflect.Type, arg1: javawrappers.java.lang.reflect.TypeVariable, arg2: Union[int, JBoolean], arg3: javawrappers.java.util.Map, arg4: javawrappers.java.util.Map, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def isMarkedForCascadingOnAnnotatedObjectOrContainerElements(self, ) -> Union[int, JBoolean]: ...
	def getDeclaredContainerClass(self, ) -> javawrappers.java.lang.Class: ...
	def notifyAll(self, ) -> None: ...
	def hasContainerElementsMarkedForCascading(self, ) -> Union[int, JBoolean]: ...
	def getEnclosingType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def getContainerElementTypesCascadingMetaData(self, ) -> javawrappers.java.util.Map: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def nonCascading() -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder: ...
	def isCascading(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def annotatedObject(arg0: javawrappers.java.lang.reflect.Type, arg1: Union[int, JBoolean], arg2: javawrappers.java.util.Map, arg3: javawrappers.java.util.Map, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder: ...
	def build(self, arg0: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg1: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaData: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def merge(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getDeclaredTypeParameter(self, ) -> javawrappers.java.lang.reflect.TypeVariable: ...
	def hasGroupConversionsOnAnnotatedObjectOrContainerElements(self, ) -> Union[int, JBoolean]: ...
	def getTypeParameter(self, ) -> javawrappers.java.lang.reflect.TypeVariable: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getGroupConversions(self, ) -> javawrappers.java.util.Map: ...


class AbstractConstraintMetaData:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.reflect.Type, arg2: javawrappers.java.util.Set, arg3: javawrappers.java.util.Set, arg4: Union[int, JBoolean], arg5: Union[int, JBoolean], ): ...
	class ContainerElementMetaDataTree:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def asDescriptor(self, arg0: Union[int, JBoolean], arg1: javawrappers.java.util.List, ) -> javawrappers.javax.validation.metadata.ElementDescriptor: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def getContainerElementsConstraints(self, ) -> javawrappers.java.util.Set: ...
	def notifyAll(self, ) -> None: ...
	def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...
	def notify(self, ) -> None: ...
	def isCascading(self, ) -> Union[int, JBoolean]: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def getAllConstraints(self, ) -> javawrappers.java.util.Set: ...
	def getType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isConstrained(self, ) -> Union[int, JBoolean]: ...
	def getDirectConstraints(self, ) -> javawrappers.java.util.Set: ...


