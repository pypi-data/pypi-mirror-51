################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.hibernate.validator.constraintvalidation
import javawrappers.java.lang.annotation
import javawrappers.java.time.temporal
import javawrappers.javax.validation.metadata
import javawrappers.javax.validation

from jpype.types import *
from typing import Union

from typing import overload

class PastOrPresentValidatorForReadablePartial:


class PastOrPresentValidatorForHijrahDate:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.time.temporal.TemporalAccessor, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForOffsetTime:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.time.temporal.TemporalAccessor, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForDate:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	def notify(self, ) -> None: ...


class AbstractPastOrPresentEpochBasedValidator:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForJapaneseDate:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.time.temporal.TemporalAccessor, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForLocalTime:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.time.temporal.TemporalAccessor, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForInstant:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.time.temporal.TemporalAccessor, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForReadableInstant:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForYearMonth:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.time.temporal.TemporalAccessor, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForMonthDay:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.time.temporal.TemporalAccessor, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForYear:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.time.temporal.TemporalAccessor, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForCalendar:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	def notify(self, ) -> None: ...


class AbstractPastOrPresentJavaTimeValidator:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.time.temporal.TemporalAccessor, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForOffsetDateTime:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.time.temporal.TemporalAccessor, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForZonedDateTime:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.time.temporal.TemporalAccessor, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForLocalDate:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.time.temporal.TemporalAccessor, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForMinguoDate:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.time.temporal.TemporalAccessor, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForLocalDateTime:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.time.temporal.TemporalAccessor, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	def notify(self, ) -> None: ...


class PastOrPresentValidatorForThaiBuddhistDate:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.time.temporal.TemporalAccessor, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	def notify(self, ) -> None: ...


class AbstractPastOrPresentInstantBasedValidator:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	def notify(self, ) -> None: ...


