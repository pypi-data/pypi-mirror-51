################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.javax.lang.model.element

from jpype.types import *
from typing import Union

from typing import overload

class AbstractElementVisitor:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.ap.internal.util.MessagerAdapter, arg1: javawrappers.org.hibernate.validator.ap.internal.util.Configuration, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def visitTypeAsEnum(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariableAsEnumConstant(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitExecutableAsStaticInit(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...
	def visitExecutableAsInstanceInit(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def visitTypeParameter(self, arg0: javawrappers.javax.lang.model.element.TypeParameterElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariable(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariableAsExceptionParameter(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitPackage(self, arg0: javawrappers.javax.lang.model.element.PackageElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitExecutable(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariableAsParameter(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariableAsResourceVariable(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitModule(self, arg0: javawrappers.javax.lang.model.element.ModuleElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitTypeAsAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitExecutableAsConstructor(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariableAsField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def visitTypeAsClass(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariableAsLocalVariable(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitExecutableAsMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitTypeAsInterface(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visitUnknown(self, arg0: javawrappers.javax.lang.model.element.Element, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.javax.lang.model.element.Element, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.javax.lang.model.element.Element, ) -> javawrappers.java.lang.Object: ...


class ConstraintAnnotationVisitor:
	def __init__(self, arg0: javawrappers.javax.annotation.processing.ProcessingEnvironment, arg1: javawrappers.org.hibernate.validator.ap.internal.util.MessagerAdapter, arg2: javawrappers.org.hibernate.validator.ap.internal.util.Configuration, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def visitTypeAsEnum(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visitTypeAsEnum(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.util.List, ) -> javawrappers.java.lang.Void: ...
	def visitVariableAsEnumConstant(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitExecutableAsStaticInit(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...
	def visitExecutableAsInstanceInit(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def visitTypeParameter(self, arg0: javawrappers.javax.lang.model.element.TypeParameterElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariable(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariableAsExceptionParameter(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitPackage(self, arg0: javawrappers.javax.lang.model.element.PackageElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitExecutable(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visitVariableAsParameter(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visitVariableAsParameter(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.util.List, ) -> javawrappers.java.lang.Void: ...
	def visitVariableAsResourceVariable(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitModule(self, arg0: javawrappers.javax.lang.model.element.ModuleElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visitTypeAsAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visitTypeAsAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.util.List, ) -> javawrappers.java.lang.Void: ...
	def visitExecutableAsConstructor(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visitVariableAsField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visitVariableAsField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.util.List, ) -> javawrappers.java.lang.Void: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def visitTypeAsClass(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.util.List, ) -> javawrappers.java.lang.Void: ...
	@overload
	def visitTypeAsClass(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariableAsLocalVariable(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visitExecutableAsMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visitExecutableAsMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.util.List, ) -> javawrappers.java.lang.Void: ...
	@overload
	def visitTypeAsInterface(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.util.List, ) -> javawrappers.java.lang.Void: ...
	@overload
	def visitTypeAsInterface(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visitUnknown(self, arg0: javawrappers.javax.lang.model.element.Element, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.javax.lang.model.element.Element, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.javax.lang.model.element.Element, ) -> javawrappers.java.lang.Object: ...


class ClassVisitor:
	def __init__(self, arg0: javawrappers.javax.annotation.processing.ProcessingEnvironment, arg1: javawrappers.org.hibernate.validator.ap.internal.util.MessagerAdapter, arg2: javawrappers.org.hibernate.validator.ap.internal.util.Configuration, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def visitTypeAsEnum(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariableAsEnumConstant(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitExecutableAsStaticInit(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...
	def visitExecutableAsInstanceInit(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def visitTypeParameter(self, arg0: javawrappers.javax.lang.model.element.TypeParameterElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariable(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariableAsExceptionParameter(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitPackage(self, arg0: javawrappers.javax.lang.model.element.PackageElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitExecutable(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariableAsParameter(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariableAsResourceVariable(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitModule(self, arg0: javawrappers.javax.lang.model.element.ModuleElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitTypeAsAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitExecutableAsConstructor(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def visitVariableAsField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def visitTypeAsClass(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visitTypeAsClass(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Void, ) -> javawrappers.java.lang.Void: ...
	def visitVariableAsLocalVariable(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visitExecutableAsMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visitExecutableAsMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.java.lang.Void, ) -> javawrappers.java.lang.Void: ...
	@overload
	def visitTypeAsInterface(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visitTypeAsInterface(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.java.lang.Void, ) -> javawrappers.java.lang.Void: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visitUnknown(self, arg0: javawrappers.javax.lang.model.element.Element, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.javax.lang.model.element.Element, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def visit(self, arg0: javawrappers.javax.lang.model.element.Element, ) -> javawrappers.java.lang.Object: ...


