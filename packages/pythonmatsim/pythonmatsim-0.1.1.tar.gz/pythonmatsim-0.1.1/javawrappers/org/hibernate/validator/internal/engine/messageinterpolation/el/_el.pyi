################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.javax.el

from jpype.types import *
from typing import Union

from typing import overload

class SimpleELContext:
	def __init__(self, arg0: javawrappers.javax.el.ExpressionFactory, ): ...
	def putContext(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def notifyAfterEvaluation(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getImportHandler(self, ) -> javawrappers.javax.el.ImportHandler: ...
	def addEvaluationListener(self, arg0: javawrappers.javax.el.EvaluationListener, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def exitLambdaScope(self, ) -> None: ...
	@overload
	def setPropertyResolved(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setPropertyResolved(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def isPropertyResolved(self, ) -> Union[int, JBoolean]: ...
	def getEvaluationListeners(self, ) -> javawrappers.java.util.List: ...
	def notify(self, ) -> None: ...
	def addELResolver(self, arg0: javawrappers.javax.el.ELResolver, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyPropertyResolved(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getFunctionMapper(self, ) -> javawrappers.javax.el.FunctionMapper: ...
	def notifyBeforeEvaluation(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def isLambdaArgument(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def getLambdaArgument(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def convertToType(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def getELResolver(self, ) -> javawrappers.javax.el.ELResolver: ...
	def enterLambdaScope(self, arg0: javawrappers.java.util.Map, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def getContext(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def getVariableMapper(self, ) -> javawrappers.javax.el.VariableMapper: ...


class RootResolver:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getCommonPropertyType(self, arg0: javawrappers.javax.el.ELContext, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def invoke(self, arg0: javawrappers.javax.el.ELContext, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: JArray(javawrappers.java.lang.Class, 1), arg4: JArray(javawrappers.java.lang.Object, 1), ) -> javawrappers.java.lang.Object: ...
	def convertToType(self, arg0: javawrappers.javax.el.ELContext, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...
	def getValue(self, arg0: javawrappers.javax.el.ELContext, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def isReadOnly(self, arg0: javawrappers.javax.el.ELContext, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getType(self, arg0: javawrappers.javax.el.ELContext, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Class: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setValue(self, arg0: javawrappers.javax.el.ELContext, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	def getFeatureDescriptors(self, arg0: javawrappers.javax.el.ELContext, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.util.Iterator: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


