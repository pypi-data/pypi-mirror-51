################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang.reflect
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.com.fasterxml.classmate.members
import javawrappers.java.net
import javawrappers.javax.xml.validation
import javawrappers.javax.xml.stream
import javawrappers.org.hibernate.validator.internal.util.privilegedactions
import javawrappers.java.lang.annotation
import javawrappers.com.fasterxml.classmate
import javawrappers.java.lang.invoke
import javawrappers.javax.xml.bind

from jpype.types import *
from typing import Union

from typing import overload

class GetMethod:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetMethod: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.reflect.Method: ...
	def notify(self, ) -> None: ...


class GetDeclaredConstructor:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.Class, *arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetDeclaredConstructor: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.reflect.Constructor: ...
	def notify(self, ) -> None: ...


class GetMethods:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetMethods: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> JArray(javawrappers.java.lang.reflect.Method, 1): ...
	def notify(self, ) -> None: ...


class GetDeclaredConstructors:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetDeclaredConstructors: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> JArray(javawrappers.java.lang.reflect.Constructor, 1): ...
	def notify(self, ) -> None: ...


class GetAnnotationAttribute:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.annotation.Annotation, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetAnnotationAttribute: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def run(self, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class GetDeclaredFields:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetDeclaredFields: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> JArray(javawrappers.java.lang.reflect.Field, 1): ...
	def notify(self, ) -> None: ...


class GetResolvedMemberMethods:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.com.fasterxml.classmate.ResolvedTypeWithMembers, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetResolvedMemberMethods: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> JArray(javawrappers.com.fasterxml.classmate.members.ResolvedMethod, 1): ...
	def notify(self, ) -> None: ...


class GetResource:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.ClassLoader, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetResource: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> javawrappers.java.net.URL: ...
	def notify(self, ) -> None: ...


class ConstructorInstance:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.reflect.Constructor, *arg1: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.ConstructorInstance: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def run(self, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class NewJaxbContext:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.NewJaxbContext: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> javawrappers.javax.xml.bind.JAXBContext: ...
	def notify(self, ) -> None: ...


class GetDeclaredField:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def andMakeAccessible(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetDeclaredField: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetDeclaredField: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.reflect.Field: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class GetAnnotationAttributes:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.annotation.Annotation, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetAnnotationAttributes: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> javawrappers.java.util.Map: ...
	def notify(self, ) -> None: ...


class NewSchema:
	def __init__(self, arg0: javawrappers.javax.xml.validation.SchemaFactory, arg1: javawrappers.java.net.URL, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.javax.xml.validation.SchemaFactory, arg1: javawrappers.java.net.URL, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.NewSchema: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> javawrappers.javax.xml.validation.Schema: ...
	def notify(self, ) -> None: ...


class LoadClass:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def action(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.ClassLoader, arg2: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.LoadClass: ...
	@overload
	@staticmethod
	def action(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.ClassLoader, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.LoadClass: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Class: ...
	def notify(self, ) -> None: ...


class GetClassLoader:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.ClassLoader: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@staticmethod
	def fromContext() -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetClassLoader: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def fromClass(arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetClassLoader: ...


class SetContextClassLoader:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.ClassLoader, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.SetContextClassLoader: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Void: ...
	def notify(self, ) -> None: ...


class Unmarshal:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.javax.xml.bind.Unmarshaller, arg1: javawrappers.javax.xml.stream.XMLEventReader, arg2: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.Unmarshal: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> javawrappers.javax.xml.bind.JAXBElement: ...
	def notify(self, ) -> None: ...


class NewInstance:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.NewInstance: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def run(self, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class GetDeclaredMethod:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def andMakeAccessible(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetDeclaredMethod: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetDeclaredMethod: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.reflect.Method: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class GetDeclaredMethods:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetDeclaredMethods: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> JArray(javawrappers.java.lang.reflect.Method, 1): ...
	def notify(self, ) -> None: ...


class GetMethodFromPropertyName:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetMethodFromPropertyName: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.reflect.Method: ...
	def notify(self, ) -> None: ...


class GetDeclaredMethodHandle:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def andMakeAccessible(arg0: javawrappers.java.lang.invoke.MethodHandles.Lookup, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.String, *arg3: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetDeclaredMethodHandle: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.invoke.MethodHandles.Lookup, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.String, *arg3: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetDeclaredMethodHandle: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.invoke.MethodHandle: ...
	def notify(self, ) -> None: ...


class GetInstancesFromServiceLoader:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.ClassLoader, arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetInstancesFromServiceLoader: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> javawrappers.java.util.List: ...
	def notify(self, ) -> None: ...


class GetResources:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.ClassLoader, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.util.privilegedactions.GetResources: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> javawrappers.java.util.Enumeration: ...
	def notify(self, ) -> None: ...


