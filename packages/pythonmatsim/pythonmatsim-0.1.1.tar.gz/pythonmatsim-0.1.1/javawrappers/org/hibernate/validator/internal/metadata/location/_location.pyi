################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang.reflect
import javawrappers.java.lang
import javawrappers.org.hibernate.validator.internal.engine.path
import javawrappers.org.hibernate.validator.internal.util
import javawrappers.org.hibernate.validator.internal.metadata.location

from jpype.types import *
from typing import Union

from typing import overload

class TypeArgumentConstraintLocation:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getTypeForValidatorResolution(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def getContainerClass(self, ) -> javawrappers.java.lang.Class: ...
	def notifyAll(self, ) -> None: ...
	def getMember(self, ) -> javawrappers.java.lang.reflect.Member: ...
	def getDelegate(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
	def notify(self, ) -> None: ...
	def getOuterDelegate(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def getValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getTypeParameter(self, ) -> javawrappers.java.lang.reflect.TypeVariable: ...
	def appendTo(self, arg0: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg1: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ConstraintLocation:
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def getValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def getTypeForValidatorResolution(self, ) -> javawrappers.java.lang.reflect.Type: ...
	@staticmethod
	def forParameter(arg0: javawrappers.java.lang.reflect.Executable, arg1: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
	def appendTo(self, arg0: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg1: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ) -> None: ...
	@staticmethod
	def forClass(arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
	def getMember(self, ) -> javawrappers.java.lang.reflect.Member: ...
	@staticmethod
	def forCrossParameter(arg0: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
	@staticmethod
	def forReturnValue(arg0: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
	@staticmethod
	def forTypeArgument(arg0: javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation, arg1: javawrappers.java.lang.reflect.TypeVariable, arg2: javawrappers.java.lang.reflect.Type, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
	@staticmethod
	def forField(arg0: javawrappers.java.lang.reflect.Field, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
	@staticmethod
	def forGetter(arg0: javawrappers.java.lang.reflect.Method, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...


class GetterConstraintLocation:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def getValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getTypeForValidatorResolution(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def appendTo(self, arg0: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg1: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ) -> None: ...
	@overload
	def getMember(self, ) -> javawrappers.java.lang.reflect.Method: ...
	@overload
	def getMember(self, ) -> javawrappers.java.lang.reflect.Member: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getPropertyName(self, ) -> javawrappers.java.lang.String: ...


class FieldConstraintLocation:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def getValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getTypeForValidatorResolution(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def appendTo(self, arg0: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg1: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ) -> None: ...
	def getMember(self, ) -> javawrappers.java.lang.reflect.Member: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getPropertyName(self, ) -> javawrappers.java.lang.String: ...


class ParameterConstraintLocation:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def getValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getIndex(self, ) -> Union[int, JInt]: ...
	def getTypeForValidatorResolution(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def appendTo(self, arg0: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg1: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ) -> None: ...
	def getMember(self, ) -> javawrappers.java.lang.reflect.Member: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


