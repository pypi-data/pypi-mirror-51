################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.hibernate.validator.cfg
import javawrappers.java.lang.annotation
import javawrappers.org.hibernate.validator.cfg.context

from jpype.types import *
from typing import Union

from typing import overload

class MethodConstraintMappingContext:
	def returnValue(self, ) -> javawrappers.org.hibernate.validator.cfg.context.ReturnValueConstraintMappingContext: ...
	def ignoreAnnotations(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.context.AnnotationIgnoreOptions: ...
	def crossParameter(self, ) -> javawrappers.org.hibernate.validator.cfg.context.CrossParameterConstraintMappingContext: ...
	def parameter(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.context.ParameterConstraintMappingContext: ...


class ConstraintDefinitionContext:
	class ValidationCallable:
		def isValid(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...


	class ConstraintValidatorDefinitionContext:
		def with(self, arg0: javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext.ValidationCallable, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...


	def with(self, arg0: javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext.ValidationCallable, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...
	def validateType(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext.ConstraintValidatorDefinitionContext: ...
	def includeExistingValidators(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...
	def isValid(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def constraintDefinition(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...
	def validatedBy(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...
	def type(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...


class ContainerElementTarget:
	@overload
	def containerElementType(self, ) -> javawrappers.org.hibernate.validator.cfg.context.ContainerElementConstraintMappingContext: ...
	@overload
	def containerElementType(self, arg0: Union[int, JInt], *arg1: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.context.ContainerElementConstraintMappingContext: ...


class AnnotationProcessingOptions:
	def ignoreAnnotations(self, ) -> javawrappers.org.hibernate.validator.cfg.context.AnnotationProcessingOptions: ...


class ParameterConstraintMappingContext:
	def valid(self, ) -> javawrappers.org.hibernate.validator.cfg.context.Cascadable: ...
	def returnValue(self, ) -> javawrappers.org.hibernate.validator.cfg.context.ReturnValueConstraintMappingContext: ...
	def method(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.MethodConstraintMappingContext: ...
	@overload
	def containerElementType(self, ) -> javawrappers.org.hibernate.validator.cfg.context.ContainerElementConstraintMappingContext: ...
	@overload
	def containerElementType(self, arg0: Union[int, JInt], *arg1: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.context.ContainerElementConstraintMappingContext: ...
	def ignoreAnnotations(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.context.AnnotationIgnoreOptions: ...
	def crossParameter(self, ) -> javawrappers.org.hibernate.validator.cfg.context.CrossParameterConstraintMappingContext: ...
	def parameter(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.context.ParameterConstraintMappingContext: ...
	def constructor(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstructorConstraintMappingContext: ...
	def constraint(self, arg0: javawrappers.org.hibernate.validator.cfg.ConstraintDef, ) -> javawrappers.org.hibernate.validator.cfg.context.Constrainable: ...
	def constraintDefinition(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...
	def type(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...
	def convertGroup(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.GroupConversionTargetContext: ...


class CrossParameterTarget:
	def crossParameter(self, ) -> javawrappers.org.hibernate.validator.cfg.context.CrossParameterConstraintMappingContext: ...


class GroupConversionTargetContext:
	def to(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...


class AnnotationIgnoreOptions:
	def ignoreAnnotations(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.context.AnnotationIgnoreOptions: ...


class ConstraintMappingTarget:
	def constraintDefinition(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...
	def type(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...


class ContainerElementConstraintMappingContext:
	def valid(self, ) -> javawrappers.org.hibernate.validator.cfg.context.Cascadable: ...
	def returnValue(self, ) -> javawrappers.org.hibernate.validator.cfg.context.ReturnValueConstraintMappingContext: ...
	def method(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.MethodConstraintMappingContext: ...
	@overload
	def containerElementType(self, ) -> javawrappers.org.hibernate.validator.cfg.context.ContainerElementConstraintMappingContext: ...
	@overload
	def containerElementType(self, arg0: Union[int, JInt], *arg1: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.context.ContainerElementConstraintMappingContext: ...
	def parameter(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.context.ParameterConstraintMappingContext: ...
	def constructor(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstructorConstraintMappingContext: ...
	def property(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.annotation.ElementType, ) -> javawrappers.org.hibernate.validator.cfg.context.PropertyConstraintMappingContext: ...
	def constraintDefinition(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...
	def constraint(self, arg0: javawrappers.org.hibernate.validator.cfg.ConstraintDef, ) -> javawrappers.org.hibernate.validator.cfg.context.Constrainable: ...
	def type(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...
	def convertGroup(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.GroupConversionTargetContext: ...


class ReturnValueTarget:
	def returnValue(self, ) -> javawrappers.org.hibernate.validator.cfg.context.ReturnValueConstraintMappingContext: ...


class Constrainable:
	def constraint(self, arg0: javawrappers.org.hibernate.validator.cfg.ConstraintDef, ) -> javawrappers.org.hibernate.validator.cfg.context.Constrainable: ...


class TypeConstraintMappingContext:
	def method(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.MethodConstraintMappingContext: ...
	@overload
	def ignoreAnnotations(self, ) -> javawrappers.org.hibernate.validator.cfg.context.AnnotationProcessingOptions: ...
	@overload
	def ignoreAnnotations(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.context.AnnotationIgnoreOptions: ...
	def constructor(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstructorConstraintMappingContext: ...
	def property(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.annotation.ElementType, ) -> javawrappers.org.hibernate.validator.cfg.context.PropertyConstraintMappingContext: ...
	def constraintDefinition(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...
	def constraint(self, arg0: javawrappers.org.hibernate.validator.cfg.ConstraintDef, ) -> javawrappers.org.hibernate.validator.cfg.context.Constrainable: ...
	def defaultGroupSequenceProviderClass(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...
	def type(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...
	def ignoreAllAnnotations(self, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...
	def defaultGroupSequence(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...


class MethodTarget:
	def method(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.MethodConstraintMappingContext: ...


class ConstraintDefinitionTarget:
	def constraintDefinition(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...


class ConstructorConstraintMappingContext:
	def returnValue(self, ) -> javawrappers.org.hibernate.validator.cfg.context.ReturnValueConstraintMappingContext: ...
	def ignoreAnnotations(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.context.AnnotationIgnoreOptions: ...
	def crossParameter(self, ) -> javawrappers.org.hibernate.validator.cfg.context.CrossParameterConstraintMappingContext: ...
	def parameter(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.context.ParameterConstraintMappingContext: ...


class PropertyTarget:
	def property(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.annotation.ElementType, ) -> javawrappers.org.hibernate.validator.cfg.context.PropertyConstraintMappingContext: ...


class CrossParameterConstraintMappingContext:
	def returnValue(self, ) -> javawrappers.org.hibernate.validator.cfg.context.ReturnValueConstraintMappingContext: ...
	def method(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.MethodConstraintMappingContext: ...
	def ignoreAnnotations(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.context.AnnotationIgnoreOptions: ...
	def parameter(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.context.ParameterConstraintMappingContext: ...
	def constructor(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstructorConstraintMappingContext: ...
	def constraint(self, arg0: javawrappers.org.hibernate.validator.cfg.ConstraintDef, ) -> javawrappers.org.hibernate.validator.cfg.context.Constrainable: ...
	def constraintDefinition(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...
	def type(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...


class PropertyConstraintMappingContext:
	def valid(self, ) -> javawrappers.org.hibernate.validator.cfg.context.Cascadable: ...
	def method(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.MethodConstraintMappingContext: ...
	@overload
	def containerElementType(self, ) -> javawrappers.org.hibernate.validator.cfg.context.ContainerElementConstraintMappingContext: ...
	@overload
	def containerElementType(self, arg0: Union[int, JInt], *arg1: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.context.ContainerElementConstraintMappingContext: ...
	@overload
	def ignoreAnnotations(self, ) -> javawrappers.org.hibernate.validator.cfg.context.AnnotationProcessingOptions: ...
	@overload
	def ignoreAnnotations(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.context.AnnotationIgnoreOptions: ...
	def constructor(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstructorConstraintMappingContext: ...
	def property(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.annotation.ElementType, ) -> javawrappers.org.hibernate.validator.cfg.context.PropertyConstraintMappingContext: ...
	def constraintDefinition(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...
	def constraint(self, arg0: javawrappers.org.hibernate.validator.cfg.ConstraintDef, ) -> javawrappers.org.hibernate.validator.cfg.context.Constrainable: ...
	def type(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...
	def convertGroup(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.GroupConversionTargetContext: ...


class Cascadable:
	def valid(self, ) -> javawrappers.org.hibernate.validator.cfg.context.Cascadable: ...
	def convertGroup(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.GroupConversionTargetContext: ...


class ParameterTarget:
	def parameter(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.context.ParameterConstraintMappingContext: ...


class TypeTarget:
	def type(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...


class ConstructorTarget:
	def constructor(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstructorConstraintMappingContext: ...


class ReturnValueConstraintMappingContext:
	def valid(self, ) -> javawrappers.org.hibernate.validator.cfg.context.Cascadable: ...
	def method(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.MethodConstraintMappingContext: ...
	@overload
	def containerElementType(self, ) -> javawrappers.org.hibernate.validator.cfg.context.ContainerElementConstraintMappingContext: ...
	@overload
	def containerElementType(self, arg0: Union[int, JInt], *arg1: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.context.ContainerElementConstraintMappingContext: ...
	def ignoreAnnotations(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.context.AnnotationIgnoreOptions: ...
	def crossParameter(self, ) -> javawrappers.org.hibernate.validator.cfg.context.CrossParameterConstraintMappingContext: ...
	def parameter(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.context.ParameterConstraintMappingContext: ...
	def constructor(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstructorConstraintMappingContext: ...
	def constraint(self, arg0: javawrappers.org.hibernate.validator.cfg.ConstraintDef, ) -> javawrappers.org.hibernate.validator.cfg.context.Constrainable: ...
	def constraintDefinition(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...
	def type(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...
	def convertGroup(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.GroupConversionTargetContext: ...


