################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang.reflect
import javawrappers.java.util
import javawrappers.org.hibernate.validator.internal.metadata.descriptor
import javawrappers.org.hibernate.validator.constraintvalidation
import javawrappers.org.hibernate.validator.spi.scripting
import javawrappers.org.hibernate.validator.internal.engine.constraintvalidation
import javawrappers.org.hibernate.validator.internal.engine
import javawrappers.org.hibernate.validator.cfg.context
import javawrappers.javax.validation.metadata
import javawrappers.java.lang
import javawrappers.java.time
import javawrappers.org.hibernate.validator.internal.engine.path
import javawrappers.javax.validation

from jpype.types import *
from typing import Union

from typing import overload

class ConstraintValidatorManager:
	def __init__(self, arg0: javawrappers.javax.validation.ConstraintValidatorFactory, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ): ...
	class CacheKey:
		def getConstraintValidatorFactory(self, ) -> javawrappers.javax.validation.ConstraintValidatorFactory: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def getConstraintValidatorInitializationContext(self, ) -> javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getConstraintValidatorFactory(self, ) -> javawrappers.javax.validation.ConstraintValidatorFactory: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getInitializedValidator(self, arg0: javawrappers.java.lang.reflect.Type, arg1: javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl, arg2: javawrappers.javax.validation.ConstraintValidatorFactory, arg3: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> javawrappers.javax.validation.ConstraintValidator: ...
	def notifyAll(self, ) -> None: ...
	def clear(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def numberOfCachedConstraintValidatorInstances(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getConstraintValidatorInitializationContext(self, ) -> javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDefaultConstraintValidatorFactory(self, ) -> javawrappers.javax.validation.ConstraintValidatorFactory: ...
	def getDefaultConstraintValidatorInitializationContext(self, ) -> javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext: ...


class ConstraintValidatorDescriptor:
	def getValidatedType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def getValidatorClass(self, ) -> javawrappers.java.lang.Class: ...
	def getValidationTargets(self, ) -> javawrappers.java.util.EnumSet: ...
	@staticmethod
	def forLambda(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Type, arg2: javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext.ValidationCallable, ) -> javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorDescriptor: ...
	@staticmethod
	def forClass(arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorDescriptor: ...
	def newInstance(self, arg0: javawrappers.javax.validation.ConstraintValidatorFactory, ) -> javawrappers.javax.validation.ConstraintValidator: ...


class ConstraintViolationCreationContext:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, arg2: javawrappers.java.util.Map, arg3: javawrappers.java.util.Map, arg4: javawrappers.java.lang.Object, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDynamicPayload(self, ) -> javawrappers.java.lang.Object: ...
	def getMessageParameters(self, ) -> javawrappers.java.util.Map: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getExpressionVariables(self, ) -> javawrappers.java.util.Map: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getPath(self, ) -> javawrappers.org.hibernate.validator.internal.engine.path.PathImpl: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ConstraintValidatorContextImpl:
	def __init__(self, arg0: javawrappers.java.util.List, arg1: javawrappers.javax.validation.ClockProvider, arg2: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, arg3: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg4: javawrappers.java.lang.Object, ): ...
	class DeferredNodeBuilder:
		@overload
		def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderDefinedContext: ...
		@overload
		def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
		@overload
		def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorContextImpl.NodeBuilder: ...
		@overload
		def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderDefinedContext: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
		def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
		def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		def notifyAll(self, ) -> None: ...
		@overload
		def inIterable(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeContextBuilder: ...
		@overload
		def inIterable(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeContextBuilder: ...
		@overload
		def inIterable(self, ) -> javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorContextImpl.DeferredNodeBuilder: ...
		@overload
		def inIterable(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeContextBuilder: ...
		def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		def notify(self, ) -> None: ...
		@overload
		def inContainer(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
		@overload
		def inContainer(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		@overload
		def inContainer(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Integer, ) -> javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorContextImpl.DeferredNodeBuilder: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@overload
		def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderDefinedContext: ...
		@overload
		def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderDefinedContext: ...
		@overload
		def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorContextImpl.NodeBuilder: ...
		@overload
		def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...


	class NodeBuilder:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
		def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
		def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
		def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		def notify(self, ) -> None: ...


	class ConstraintViolationBuilderImpl:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
		def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
		def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def addParameterNode(self, arg0: Union[int, JInt], ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
		def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		def notify(self, ) -> None: ...


	class NodeBuilderBase:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def buildConstraintViolationWithTemplate(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder: ...
	@overload
	def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
	@overload
	def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
	@overload
	def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
	@overload
	def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
	@overload
	def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	@overload
	def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	@overload
	def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	@overload
	def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	def notify(self, ) -> None: ...
	def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def getMethodParameterNames(self, ) -> javawrappers.java.util.List: ...
	def getClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...
	@overload
	def inContainer(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
	@overload
	def inContainer(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	@overload
	def inContainer(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Integer, ) -> javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorContextImpl.DeferredNodeBuilder: ...
	def disableDefaultConstraintViolation(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getDefaultConstraintMessageTemplate(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderDefinedContext: ...
	@overload
	def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
	@overload
	def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorContextImpl.NodeBuilder: ...
	@overload
	def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderDefinedContext: ...
	def getConstraintDescriptor(self, ) -> javawrappers.javax.validation.metadata.ConstraintDescriptor: ...
	@overload
	def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
	@overload
	def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
	@overload
	def inIterable(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeContextBuilder: ...
	@overload
	def inIterable(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeContextBuilder: ...
	@overload
	def inIterable(self, ) -> javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorContextImpl.DeferredNodeBuilder: ...
	@overload
	def inIterable(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeContextBuilder: ...
	def getConstraintViolationCreationContexts(self, ) -> javawrappers.java.util.List: ...
	def addMessageParameter(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorContext: ...
	def getConstraintValidatorPayload(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def addParameterNode(self, arg0: Union[int, JInt], ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderDefinedContext: ...
	@overload
	def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderDefinedContext: ...
	@overload
	def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorContextImpl.NodeBuilder: ...
	@overload
	def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
	@overload
	def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
	@overload
	def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
	def addExpressionVariable(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorContext: ...
	def withDynamicPayload(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorContext: ...


class ConstraintValidatorFactoryImpl:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def releaseInstance(self, arg0: javawrappers.javax.validation.ConstraintValidator, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getInstance(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintValidator: ...
	def notify(self, ) -> None: ...


class ConstraintTree:
	def getDescriptor(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getValidatedValueType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def validateConstraints(self, arg0: javawrappers.org.hibernate.validator.internal.engine.ValidationContext, arg1: javawrappers.org.hibernate.validator.internal.engine.ValueContext, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def of(arg0: javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl, arg1: javawrappers.java.lang.reflect.Type, ) -> javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class HibernateConstraintValidatorInitializationContextImpl:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory, arg1: javawrappers.javax.validation.ClockProvider, arg2: javawrappers.java.time.Duration, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getTemporalValidationTolerance(self, ) -> javawrappers.java.time.Duration: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def of(arg0: javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.HibernateConstraintValidatorInitializationContextImpl, arg1: javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory, arg2: javawrappers.javax.validation.ClockProvider, arg3: javawrappers.java.time.Duration, ) -> javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.HibernateConstraintValidatorInitializationContextImpl: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getScriptEvaluatorForLanguage(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluator: ...
	def notify(self, ) -> None: ...
	def getClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...


