################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.hibernate.validator.internal.util.classhierarchy
import javawrappers.java.lang
import javawrappers.java.util

from jpype.types import *
from typing import Union

from typing import overload

class Filter:
	def accepts(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...


class Filters:
	class WeldProxyFilter:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def accepts(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class InterfacesFilter:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def accepts(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def accepts(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	@overload
	def accepts(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def excludeProxies() -> javawrappers.org.hibernate.validator.internal.util.classhierarchy.Filter: ...
	@staticmethod
	def excludeInterfaces() -> javawrappers.org.hibernate.validator.internal.util.classhierarchy.Filter: ...


class ClassHierarchyHelper:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getDirectlyImplementedInterfaces(arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def getHierarchy(arg0: javawrappers.java.lang.Class, *arg1: javawrappers.org.hibernate.validator.internal.util.classhierarchy.Filter, ) -> javawrappers.java.util.List: ...


