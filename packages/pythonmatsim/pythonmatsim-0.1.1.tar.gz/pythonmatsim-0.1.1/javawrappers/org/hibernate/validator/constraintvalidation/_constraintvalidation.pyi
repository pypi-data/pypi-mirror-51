################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.time
import javawrappers.java.lang
import javawrappers.org.hibernate.validator.spi.scripting
import javawrappers.org.hibernate.validator.constraintvalidation
import javawrappers.java.lang.annotation
import javawrappers.javax.validation.metadata
import javawrappers.javax.validation

from jpype.types import *
from typing import Union

from typing import overload

class HibernateConstraintValidatorInitializationContext:
	def getTemporalValidationTolerance(self, ) -> javawrappers.java.time.Duration: ...
	def getScriptEvaluatorForLanguage(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluator: ...
	def getClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...


class HibernateConstraintValidator:
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def initialize(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...


class HibernateConstraintValidatorContext:
	def addMessageParameter(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorContext: ...
	def buildConstraintViolationWithTemplate(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder: ...
	def disableDefaultConstraintViolation(self, ) -> None: ...
	def getConstraintValidatorPayload(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def getDefaultConstraintMessageTemplate(self, ) -> javawrappers.java.lang.String: ...
	def addExpressionVariable(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorContext: ...
	def withDynamicPayload(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorContext: ...
	def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def getClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...


