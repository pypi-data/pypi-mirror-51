################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.hibernate.validator.internal.xml
import javawrappers.javax.validation.spi
import javawrappers.org.hibernate.validator.internal.metadata.core
import javawrappers.java.io
import javawrappers.javax.xml.stream
import javawrappers.org.hibernate.validator.internal.engine.valueextraction
import javawrappers.java.util.function
import javawrappers.javax.xml.stream.events
import javawrappers.javax.validation

from jpype.types import *
from typing import Union

from typing import overload

class MappingXmlParser:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg1: javawrappers.org.hibernate.validator.internal.util.TypeResolutionHelper, arg2: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg3: javawrappers.java.lang.ClassLoader, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getConstrainedElementsForClass(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAnnotationProcessingOptions(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.core.AnnotationProcessingOptions: ...
	def parse(self, arg0: javawrappers.java.util.Set, ) -> None: ...
	def getDefaultSequenceForClass(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.util.List: ...
	def notify(self, ) -> None: ...
	def getXmlConfiguredClasses(self, ) -> javawrappers.java.util.Set: ...


class ValidationXmlParser:
	def __init__(self, arg0: javawrappers.java.lang.ClassLoader, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def parseValidationXml(self, ) -> javawrappers.javax.validation.BootstrapConfiguration: ...
	def notify(self, ) -> None: ...


class ContainerElementTypePath:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def root() -> javawrappers.org.hibernate.validator.internal.xml.ContainerElementTypePath: ...
	@staticmethod
	def of(arg0: javawrappers.org.hibernate.validator.internal.xml.ContainerElementTypePath, arg1: javawrappers.java.lang.Integer, ) -> javawrappers.org.hibernate.validator.internal.xml.ContainerElementTypePath: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class BootstrapConfigurationImpl:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, arg5: javawrappers.java.lang.String, arg6: javawrappers.java.lang.String, arg7: javawrappers.java.util.Set, arg8: javawrappers.java.util.EnumSet, arg9: Union[int, JBoolean], arg10: javawrappers.java.util.Set, arg11: javawrappers.java.util.Map, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getMessageInterpolatorClassName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getScriptEvaluatorFactoryClassName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getProperties(self, ) -> javawrappers.java.util.Map: ...
	def getParameterNameProviderClassName(self, ) -> javawrappers.java.lang.String: ...
	def getTraversableResolverClassName(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def isExecutableValidationEnabled(self, ) -> Union[int, JBoolean]: ...
	def getValueExtractorClassNames(self, ) -> javawrappers.java.util.Set: ...
	def getClockProviderClassName(self, ) -> javawrappers.java.lang.String: ...
	def getConstraintMappingResourcePaths(self, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getDefaultBootstrapConfiguration() -> javawrappers.javax.validation.BootstrapConfiguration: ...
	def getDefaultProviderClassName(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDefaultValidatedExecutableTypes(self, ) -> javawrappers.java.util.Set: ...
	def getConstraintValidatorFactoryClassName(self, ) -> javawrappers.java.lang.String: ...


class LocalNamespace:
	VALIDATION_1_CONFIGURATION: LocalNamespace = ...
	VALIDATION_1_MAPPING: LocalNamespace = ...
	VALIDATION_2_CONFIGURATION: LocalNamespace = ...
	VALIDATION_2_MAPPING: LocalNamespace = ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.xml.LocalNamespace: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.hibernate.validator.internal.xml.LocalNamespace, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getNamespaceURI(self, ) -> javawrappers.java.lang.String: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class ValidationBootstrapParameters:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.javax.validation.BootstrapConfiguration, arg1: javawrappers.java.lang.ClassLoader, ): ...
	def getConstraintValidatorFactory(self, ) -> javawrappers.javax.validation.ConstraintValidatorFactory: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def addMapping(self, arg0: javawrappers.java.io.InputStream, ) -> None: ...
	def setProvider(self, arg0: javawrappers.javax.validation.spi.ValidationProvider, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getProviderClass(self, ) -> javawrappers.java.lang.Class: ...
	def addValueExtractorDescriptor(self, arg0: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorDescriptor, ) -> None: ...
	def notify(self, ) -> None: ...
	def getClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...
	def getValueExtractorDescriptors(self, ) -> javawrappers.java.util.Map: ...
	def setTraversableResolver(self, arg0: javawrappers.javax.validation.TraversableResolver, ) -> None: ...
	def addConfigProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def getMessageInterpolator(self, ) -> javawrappers.javax.validation.MessageInterpolator: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getProvider(self, ) -> javawrappers.javax.validation.spi.ValidationProvider: ...
	def setConstraintValidatorFactory(self, arg0: javawrappers.javax.validation.ConstraintValidatorFactory, ) -> None: ...
	def setMessageInterpolator(self, arg0: javawrappers.javax.validation.MessageInterpolator, ) -> None: ...
	def setClockProvider(self, arg0: javawrappers.javax.validation.ClockProvider, ) -> None: ...
	def getTraversableResolver(self, ) -> javawrappers.javax.validation.TraversableResolver: ...
	def getMappings(self, ) -> javawrappers.java.util.Set: ...
	def setProviderClass(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	def getConfigProperties(self, ) -> javawrappers.java.util.Map: ...
	def getParameterNameProvider(self, ) -> javawrappers.javax.validation.ParameterNameProvider: ...
	def setParameterNameProvider(self, arg0: javawrappers.javax.validation.ParameterNameProvider, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def addAllMappings(self, arg0: javawrappers.java.util.Set, ) -> None: ...


class XmlParserHelper:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getSchemaVersion(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.xml.stream.XMLEventReader, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def createXmlEventReader(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.io.InputStream, ) -> javawrappers.javax.xml.stream.XMLEventReader: ...
	def notify(self, ) -> None: ...


class NamespaceNormalizingXMLEventReaderDelegate:
	def __init__(self, arg0: javawrappers.javax.xml.stream.XMLEventReader, arg1: javawrappers.javax.xml.stream.XMLEventFactory, arg2: javawrappers.java.util.Map, ): ...
	def next(self, ) -> javawrappers.java.lang.Object: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.javax.xml.stream.XMLEventReader: ...
	def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def notifyAll(self, ) -> None: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def remove(self, ) -> None: ...
	def peek(self, ) -> javawrappers.javax.xml.stream.events.XMLEvent: ...
	def nextTag(self, ) -> javawrappers.javax.xml.stream.events.XMLEvent: ...
	def getElementText(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def nextEvent(self, ) -> javawrappers.javax.xml.stream.events.XMLEvent: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def forEachRemaining(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def setParent(self, arg0: javawrappers.javax.xml.stream.XMLEventReader, ) -> None: ...
	def close(self, ) -> None: ...


