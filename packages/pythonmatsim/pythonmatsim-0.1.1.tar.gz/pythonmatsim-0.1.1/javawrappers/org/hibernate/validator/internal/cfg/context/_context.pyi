################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.hibernate.validator.cfg
import javawrappers.org.hibernate.validator.internal.metadata.core
import javawrappers.org.hibernate.validator.internal.cfg.context
import javawrappers.java.lang.annotation
import javawrappers.org.hibernate.validator.internal.util
import javawrappers.org.hibernate.validator.internal.engine.valueextraction
import javawrappers.org.hibernate.validator.cfg.context
import javawrappers.org.hibernate.validator.internal.metadata.location

from jpype.types import *
from typing import Union

from typing import overload

class ContainerElementConstraintMappingContextImpl:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def returnValue(self, ) -> javawrappers.org.hibernate.validator.cfg.context.ReturnValueConstraintMappingContext: ...
	def method(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.MethodConstraintMappingContext: ...
	@overload
	def containerElementType(self, arg0: Union[int, JInt], *arg1: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.context.ContainerElementConstraintMappingContext: ...
	@overload
	def containerElementType(self, ) -> javawrappers.org.hibernate.validator.cfg.context.ContainerElementConstraintMappingContext: ...
	def notifyAll(self, ) -> None: ...
	def constructor(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstructorConstraintMappingContext: ...
	def constraintDefinition(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...
	def type(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...
	def notify(self, ) -> None: ...
	def isCascading(self, ) -> Union[int, JBoolean]: ...
	def convertGroup(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.GroupConversionTargetContext: ...
	def valid(self, ) -> javawrappers.org.hibernate.validator.cfg.context.Cascadable: ...
	def addGroupConversion(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Class, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def parameter(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.context.ParameterConstraintMappingContext: ...
	def property(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.annotation.ElementType, ) -> javawrappers.org.hibernate.validator.cfg.context.PropertyConstraintMappingContext: ...
	@overload
	def constraint(self, arg0: javawrappers.org.hibernate.validator.cfg.ConstraintDef, ) -> javawrappers.org.hibernate.validator.cfg.context.Constrainable: ...
	@overload
	def constraint(self, arg0: javawrappers.org.hibernate.validator.cfg.ConstraintDef, ) -> javawrappers.org.hibernate.validator.cfg.context.ContainerElementConstraintMappingContext: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def containerElement(self, arg0: javawrappers.org.hibernate.validator.cfg.context.ContainerElementTarget, arg1: javawrappers.org.hibernate.validator.internal.cfg.context.TypeConstraintMappingContextImpl, arg2: javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation, arg3: Union[int, JInt], arg4: JArray(Union[int, JInt], 1), ) -> javawrappers.org.hibernate.validator.cfg.context.ContainerElementConstraintMappingContext: ...
	@overload
	def containerElement(self, arg0: javawrappers.org.hibernate.validator.cfg.context.ContainerElementTarget, arg1: javawrappers.org.hibernate.validator.internal.cfg.context.TypeConstraintMappingContextImpl, arg2: javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation, ) -> javawrappers.org.hibernate.validator.cfg.context.ContainerElementConstraintMappingContext: ...


class TypeConstraintMappingContextImpl:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def method(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.MethodConstraintMappingContext: ...
	@overload
	def ignoreAnnotations(self, ) -> javawrappers.org.hibernate.validator.cfg.context.AnnotationProcessingOptions: ...
	@overload
	def ignoreAnnotations(self, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...
	@overload
	def ignoreAnnotations(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.context.AnnotationIgnoreOptions: ...
	@overload
	def ignoreAnnotations(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...
	def notifyAll(self, ) -> None: ...
	def constructor(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstructorConstraintMappingContext: ...
	def constraintDefinition(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...
	def defaultGroupSequenceProviderClass(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...
	def type(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...
	def notify(self, ) -> None: ...
	def defaultGroupSequence(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def property(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.annotation.ElementType, ) -> javawrappers.org.hibernate.validator.cfg.context.PropertyConstraintMappingContext: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def constraint(self, arg0: javawrappers.org.hibernate.validator.cfg.ConstraintDef, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...
	@overload
	def constraint(self, arg0: javawrappers.org.hibernate.validator.cfg.ConstraintDef, ) -> javawrappers.org.hibernate.validator.cfg.context.Constrainable: ...
	def ignoreAllAnnotations(self, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...


class DefaultConstraintMapping:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getConfiguredTypes(self, ) -> javawrappers.java.util.Set: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getConstraintDefinitionContributions(self, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def constraintDefinition(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...
	def getAnnotationProcessingOptions(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.core.AnnotationProcessingOptionsImpl: ...
	def getBeanConfigurations(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg1: javawrappers.org.hibernate.validator.internal.util.TypeResolutionHelper, arg2: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, ) -> javawrappers.java.util.Set: ...
	def type(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...
	def notify(self, ) -> None: ...


