################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang.reflect
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.hibernate.validator.internal.metadata.raw
import javawrappers.org.hibernate.validator.internal.metadata.aggregated
import javawrappers.java.util.function
import javawrappers.org.hibernate.validator.spi.group

from jpype.types import *
from typing import Union

from typing import overload

class ConstrainedParameter:
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource, arg1: javawrappers.java.lang.reflect.Executable, arg2: javawrappers.java.lang.reflect.Type, arg3: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource, arg1: javawrappers.java.lang.reflect.Executable, arg2: javawrappers.java.lang.reflect.Type, arg3: Union[int, JInt], arg4: javawrappers.java.util.Set, arg5: javawrappers.java.util.Set, arg6: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getIndex(self, ) -> Union[int, JInt]: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def getExecutable(self, ) -> javawrappers.java.lang.reflect.Executable: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getTypeArgumentConstraints(self, ) -> javawrappers.java.util.Set: ...
	def getKind(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement.ConstrainedElementKind: ...
	def notify(self, ) -> None: ...
	def getCascadingMetaDataBuilder(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder: ...
	def getConstraints(self, ) -> javawrappers.java.util.Set: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def getType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def getSource(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def merge(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedParameter, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedParameter: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isConstrained(self, ) -> Union[int, JBoolean]: ...


class BeanConfiguration:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.util.Set, arg3: javawrappers.java.util.List, arg4: javawrappers.org.hibernate.validator.spi.group.DefaultGroupSequenceProvider, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getSource(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getBeanClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstrainedElements(self, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDefaultGroupSequenceProvider(self, ) -> javawrappers.org.hibernate.validator.spi.group.DefaultGroupSequenceProvider: ...
	def notify(self, ) -> None: ...
	def getDefaultGroupSequence(self, ) -> javawrappers.java.util.List: ...


class ConstrainedElement:
	class ConstrainedElementKind:
		TYPE: ConstrainedElement.ConstrainedElementKind = ...
		FIELD: ConstrainedElement.ConstrainedElementKind = ...
		CONSTRUCTOR: ConstrainedElement.ConstrainedElementKind = ...
		METHOD: ConstrainedElement.ConstrainedElementKind = ...
		PARAMETER: ConstrainedElement.ConstrainedElementKind = ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement.ConstrainedElementKind: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@staticmethod
		def values() -> JArray(javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement.ConstrainedElementKind, 1): ...
		def name(self, ) -> javawrappers.java.lang.String: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def ordinal(self, ) -> Union[int, JInt]: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement.ConstrainedElementKind: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement.ConstrainedElementKind, 1): ...
	def getTypeArgumentConstraints(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def getKind(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement.ConstrainedElementKind: ...
	def notify(self, ) -> None: ...
	def getCascadingMetaDataBuilder(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstraints(self, ) -> javawrappers.java.util.Set: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getSource(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isConstrained(self, ) -> Union[int, JBoolean]: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class ConstrainedExecutable:
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource, arg1: javawrappers.java.lang.reflect.Executable, arg2: javawrappers.java.util.List, arg3: javawrappers.java.util.Set, arg4: javawrappers.java.util.Set, arg5: javawrappers.java.util.Set, arg6: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource, arg1: javawrappers.java.lang.reflect.Executable, arg2: javawrappers.java.util.Set, arg3: javawrappers.java.util.Set, arg4: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def getExecutable(self, ) -> javawrappers.java.lang.reflect.Executable: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getTypeArgumentConstraints(self, ) -> javawrappers.java.util.Set: ...
	def getKind(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement.ConstrainedElementKind: ...
	def notify(self, ) -> None: ...
	def getCascadingMetaDataBuilder(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder: ...
	def isEquallyParameterConstrained(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedExecutable, ) -> Union[int, JBoolean]: ...
	def getConstraints(self, ) -> javawrappers.java.util.Set: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def isGetterMethod(self, ) -> Union[int, JBoolean]: ...
	def getCrossParameterConstraints(self, ) -> javawrappers.java.util.Set: ...
	def getParameterMetaData(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedParameter: ...
	def getSource(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def merge(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedExecutable, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedExecutable: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def hasParameterConstraints(self, ) -> Union[int, JBoolean]: ...
	def isConstrained(self, ) -> Union[int, JBoolean]: ...
	def getAllParameterMetaData(self, ) -> javawrappers.java.util.List: ...


class ConstrainedType:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.util.Set, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getTypeArgumentConstraints(self, ) -> javawrappers.java.util.Set: ...
	def getKind(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement.ConstrainedElementKind: ...
	def notify(self, ) -> None: ...
	def getCascadingMetaDataBuilder(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder: ...
	def getConstraints(self, ) -> javawrappers.java.util.Set: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def getSource(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getBeanClass(self, ) -> javawrappers.java.lang.Class: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isConstrained(self, ) -> Union[int, JBoolean]: ...


class ConfigurationSource:
	ANNOTATION: ConfigurationSource = ...
	XML: ConfigurationSource = ...
	API: ConfigurationSource = ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def max(arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource, arg1: javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def getPriority(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class AbstractConstrainedElement:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource, arg1: javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement.ConstrainedElementKind, arg2: javawrappers.java.util.Set, arg3: javawrappers.java.util.Set, arg4: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getTypeArgumentConstraints(self, ) -> javawrappers.java.util.Set: ...
	def getKind(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement.ConstrainedElementKind: ...
	def notify(self, ) -> None: ...
	def getCascadingMetaDataBuilder(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder: ...
	def getConstraints(self, ) -> javawrappers.java.util.Set: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getSource(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isConstrained(self, ) -> Union[int, JBoolean]: ...


class ConstrainedField:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource, arg1: javawrappers.java.lang.reflect.Field, arg2: javawrappers.java.util.Set, arg3: javawrappers.java.util.Set, arg4: javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getTypeArgumentConstraints(self, ) -> javawrappers.java.util.Set: ...
	def getField(self, ) -> javawrappers.java.lang.reflect.Field: ...
	def getKind(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConstrainedElement.ConstrainedElementKind: ...
	def notify(self, ) -> None: ...
	def getCascadingMetaDataBuilder(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.CascadingMetaDataBuilder: ...
	def getConstraints(self, ) -> javawrappers.java.util.Set: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def getSource(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.ConfigurationSource: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isConstrained(self, ) -> Union[int, JBoolean]: ...


