################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.util
import javawrappers.java.awt.image
import javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer
import javawrappers.java.awt.dnd
import javawrappers.java.beans
import javawrappers.javax.swing.event
import javawrappers.java.awt.im
import javawrappers.javax.swing.text
import javawrappers.org.apache.log4j.lf5
import javawrappers.java.awt
import javawrappers.java.lang
import javawrappers.javax.accessibility
import javawrappers.java.io
import javawrappers.javax.swing.plaf
import javawrappers.java.awt.event
import javawrappers.javax.swing.tree
import javawrappers.javax.swing.border
import javawrappers.javax.swing

from jpype.types import *
from typing import Union

from typing import overload

class CategoryExplorerModel:
	def __init__(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode, ): ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def getCategoryNode(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath, ) -> javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode: ...
	@overload
	def getCategoryNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getPathToRoot(self, arg0: javawrappers.javax.swing.tree.TreeNode, ) -> JArray(javawrappers.javax.swing.tree.TreeNode, 1): ...
	def addLogRecord(self, arg0: javawrappers.org.apache.log4j.lf5.LogRecord, ) -> None: ...
	def getIndexOfChild(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def valueForPathChanged(self, arg0: javawrappers.javax.swing.tree.TreePath, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def update(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode, arg1: Union[int, JBoolean], ) -> None: ...
	def addTreeModelListener(self, arg0: javawrappers.javax.swing.event.TreeModelListener, ) -> None: ...
	def nodesWereInserted(self, arg0: javawrappers.javax.swing.tree.TreeNode, arg1: JArray(Union[int, JInt], 1), ) -> None: ...
	def isLeaf(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def addCategory(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath, ) -> javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode: ...
	def insertNodeInto(self, arg0: javawrappers.javax.swing.tree.MutableTreeNode, arg1: javawrappers.javax.swing.tree.MutableTreeNode, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def reload(self, arg0: javawrappers.javax.swing.tree.TreeNode, ) -> None: ...
	@overload
	def reload(self, ) -> None: ...
	def removeActionListener(self, arg0: javawrappers.java.awt.event.ActionListener, ) -> None: ...
	def asksAllowsChildren(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def isCategoryPathActive(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath, ) -> Union[int, JBoolean]: ...
	def setDescendantSelection(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode, arg1: Union[int, JBoolean], ) -> None: ...
	def nodesChanged(self, arg0: javawrappers.javax.swing.tree.TreeNode, arg1: JArray(Union[int, JInt], 1), ) -> None: ...
	def setAsksAllowsChildren(self, arg0: Union[int, JBoolean], ) -> None: ...
	def resetAllNodeCounts(self, ) -> None: ...
	def getRoot(self, ) -> javawrappers.java.lang.Object: ...
	def removeNodeFromParent(self, arg0: javawrappers.javax.swing.tree.MutableTreeNode, ) -> None: ...
	def nodeChanged(self, arg0: javawrappers.javax.swing.tree.TreeNode, ) -> None: ...
	def nodeStructureChanged(self, arg0: javawrappers.javax.swing.tree.TreeNode, ) -> None: ...
	def setParentSelection(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode, arg1: Union[int, JBoolean], ) -> None: ...
	def getChild(self, arg0: javawrappers.java.lang.Object, arg1: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	def addActionListener(self, arg0: javawrappers.java.awt.event.ActionListener, ) -> None: ...
	def setRoot(self, arg0: javawrappers.javax.swing.tree.TreeNode, ) -> None: ...
	def getTreeModelListeners(self, ) -> JArray(javawrappers.javax.swing.event.TreeModelListener, 1): ...
	def nodesWereRemoved(self, arg0: javawrappers.javax.swing.tree.TreeNode, arg1: JArray(Union[int, JInt], 1), arg2: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def removeTreeModelListener(self, arg0: javawrappers.javax.swing.event.TreeModelListener, ) -> None: ...
	def getChildCount(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def getRootCategoryNode(self, ) -> javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getTreePathToRoot(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode, ) -> javawrappers.javax.swing.tree.TreePath: ...


class CategoryNodeRenderer:
	def __init__(self, ): ...
	@overload
	def getLocation(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Point: ...
	@overload
	def getLocation(self, ) -> javawrappers.java.awt.Point: ...
	@overload
	def requestFocusInWindow(self, ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocusInWindow(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> Union[int, JBoolean]: ...
	def getInputVerifier(self, ) -> javawrappers.javax.swing.InputVerifier: ...
	def isOpaque(self, ) -> Union[int, JBoolean]: ...
	def setDoubleBuffered(self, arg0: Union[int, JBoolean], ) -> None: ...
	def paint(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getInputMethodListeners(self, ) -> JArray(javawrappers.java.awt.event.InputMethodListener, 1): ...
	def setLayout(self, arg0: javawrappers.java.awt.LayoutManager, ) -> None: ...
	def mouseDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getTextNonSelectionColor(self, ) -> javawrappers.java.awt.Color: ...
	def getInputMethodRequests(self, ) -> javawrappers.java.awt.im.InputMethodRequests: ...
	def requestDefaultFocus(self, ) -> Union[int, JBoolean]: ...
	def addHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def removeAll(self, ) -> None: ...
	def getMinimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getAlignmentY(self, ) -> Union[float, JFloat]: ...
	def setAutoscrolls(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setOpenIcon(self, arg0: javawrappers.javax.swing.Icon, ) -> None: ...
	def getAlignmentX(self, ) -> Union[float, JFloat]: ...
	def setAlignmentY(self, arg0: Union[float, JFloat], ) -> None: ...
	def dispatchEvent(self, arg0: javawrappers.java.awt.AWTEvent, ) -> None: ...
	def isOptimizedDrawingEnabled(self, ) -> Union[int, JBoolean]: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	def reshape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def setAlignmentX(self, arg0: Union[float, JFloat], ) -> None: ...
	def postEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JBoolean]: ...
	def size(self, ) -> javawrappers.java.awt.Dimension: ...
	def unregisterKeyboardAction(self, arg0: javawrappers.javax.swing.KeyStroke, ) -> None: ...
	def mouseUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def enableInputMethods(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def removeVetoableChangeListener(self, arg0: javawrappers.java.beans.VetoableChangeListener, ) -> None: ...
	def addComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def setDisabledIcon(self, arg0: javawrappers.javax.swing.Icon, ) -> None: ...
	def setHorizontalAlignment(self, arg0: Union[int, JInt], ) -> None: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def getClientProperty(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def removeHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def setDisplayedMnemonicIndex(self, arg0: Union[int, JInt], ) -> None: ...
	def isRequestFocusEnabled(self, ) -> Union[int, JBoolean]: ...
	def getFontMetrics(self, arg0: javawrappers.java.awt.Font, ) -> javawrappers.java.awt.FontMetrics: ...
	def getHeight(self, ) -> Union[int, JInt]: ...
	def getAncestorListeners(self, ) -> JArray(javawrappers.javax.swing.event.AncestorListener, 1): ...
	def getIgnoreRepaint(self, ) -> Union[int, JBoolean]: ...
	def getBaselineResizeBehavior(self, ) -> javawrappers.java.awt.Component.BaselineResizeBehavior: ...
	def removeMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def applyComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def validate(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.java.awt.Container: ...
	def isMinimumSizeSet(self, ) -> Union[int, JBoolean]: ...
	def setComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def getVerifyInputWhenFocusTarget(self, ) -> Union[int, JBoolean]: ...
	def getClosedIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def setTextNonSelectionColor(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	@overload
	def setBounds(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def getDefaultOpenIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def getVerticalAlignment(self, ) -> Union[int, JInt]: ...
	def isValidateRoot(self, ) -> Union[int, JBoolean]: ...
	def addNotify(self, ) -> None: ...
	def addInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFocusCycleRootAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def setBorderSelectionColor(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def getToolTipLocation(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> javawrappers.java.awt.Point: ...
	def setIconTextGap(self, arg0: Union[int, JInt], ) -> None: ...
	def setLabelFor(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def setFocusTraversalPolicyProvider(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getConditionForKeyStroke(self, arg0: javawrappers.javax.swing.KeyStroke, ) -> Union[int, JInt]: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def countComponents(self, ) -> Union[int, JInt]: ...
	def isFocusTraversable(self, ) -> Union[int, JBoolean]: ...
	def inside(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getInputContext(self, ) -> javawrappers.java.awt.im.InputContext: ...
	def nextFocus(self, ) -> None: ...
	def getFocusTraversalKeys(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.Set: ...
	def isCursorSet(self, ) -> Union[int, JBoolean]: ...
	def getDisplayedMnemonicIndex(self, ) -> Union[int, JInt]: ...
	def setVerifyInputWhenFocusTarget(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setActionMap(self, arg0: javawrappers.javax.swing.ActionMap, ) -> None: ...
	def getMouseWheelListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseWheelListener, 1): ...
	def getDisplayedMnemonic(self, ) -> Union[int, JInt]: ...
	def getComponents(self, ) -> JArray(javawrappers.java.awt.Component, 1): ...
	def getLeafIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def getOpenIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def setInputVerifier(self, arg0: javawrappers.javax.swing.InputVerifier, ) -> None: ...
	def setBackgroundSelectionColor(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def removeMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def doLayout(self, ) -> None: ...
	def getNextFocusableComponent(self, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.PopupMenu, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def putClientProperty(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def setFocusCycleRoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDisplayedMnemonic(self, arg0: Union[string, JString], ) -> None: ...
	@overload
	def setDisplayedMnemonic(self, arg0: Union[int, JInt], ) -> None: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def setNextFocusableComponent(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def setDropTarget(self, arg0: javawrappers.java.awt.dnd.DropTarget, ) -> None: ...
	@overload
	def list(self, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, arg1: Union[int, JInt], ) -> None: ...
	def setTextSelectionColor(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def getCheckBoxOffset(self, ) -> javawrappers.java.awt.Dimension: ...
	def revalidate(self, ) -> None: ...
	def createToolTip(self, ) -> javawrappers.javax.swing.JToolTip: ...
	def getDefaultLeafIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	@staticmethod
	def setDefaultLocale(arg0: javawrappers.java.util.Locale, ) -> None: ...
	def removeNotify(self, ) -> None: ...
	def gotFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def removeAncestorListener(self, arg0: javawrappers.javax.swing.event.AncestorListener, ) -> None: ...
	def scrollRectToVisible(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def getRegisteredKeyStrokes(self, ) -> JArray(javawrappers.javax.swing.KeyStroke, 1): ...
	def handleEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isForegroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def show(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def show(self, ) -> None: ...
	def update(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def isFocusTraversalPolicySet(self, ) -> Union[int, JBoolean]: ...
	def getUIClassID(self, ) -> javawrappers.java.lang.String: ...
	def setMaximumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.MenuComponent, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	def addMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def imageUpdate(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	def getLayout(self, ) -> javawrappers.java.awt.LayoutManager: ...
	def getBorderSelectionColor(self, ) -> javawrappers.java.awt.Color: ...
	def addKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getContainerListeners(self, ) -> JArray(javawrappers.java.awt.event.ContainerListener, 1): ...
	def setLeafIcon(self, arg0: javawrappers.javax.swing.Icon, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getComponentListeners(self, ) -> JArray(javawrappers.java.awt.event.ComponentListener, 1): ...
	def isMaximumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def getTreeCellRendererComponent(self, arg0: javawrappers.javax.swing.JTree, arg1: javawrappers.java.lang.Object, arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], arg4: Union[int, JBoolean], arg5: Union[int, JInt], arg6: Union[int, JBoolean], ) -> javawrappers.java.awt.Component: ...
	def getCursor(self, ) -> javawrappers.java.awt.Cursor: ...
	@overload
	def createImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Image: ...
	@overload
	def createImage(self, arg0: javawrappers.java.awt.image.ImageProducer, ) -> javawrappers.java.awt.Image: ...
	def mouseMove(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def areFocusTraversalKeysSet(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getKeyListeners(self, ) -> JArray(javawrappers.java.awt.event.KeyListener, 1): ...
	@overload
	def registerKeyboardAction(self, arg0: javawrappers.java.awt.event.ActionListener, arg1: javawrappers.javax.swing.KeyStroke, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def registerKeyboardAction(self, arg0: javawrappers.java.awt.event.ActionListener, arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.swing.KeyStroke, arg3: Union[int, JInt], ) -> None: ...
	def addAncestorListener(self, arg0: javawrappers.javax.swing.event.AncestorListener, ) -> None: ...
	def layout(self, ) -> None: ...
	def print_(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getComponentPopupMenu(self, ) -> javawrappers.javax.swing.JPopupMenu: ...
	def getBaseline(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def setUI(self, arg0: javawrappers.javax.swing.plaf.LabelUI, ) -> None: ...
	def getHorizontalAlignment(self, ) -> Union[int, JInt]: ...
	def paintComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setBorder(self, arg0: javawrappers.javax.swing.border.Border, ) -> None: ...
	def getFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.FocusListener, 1): ...
	@overload
	def resize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def resize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.awt.ImageCapabilities, ) -> javawrappers.java.awt.image.VolatileImage: ...
	def location(self, ) -> javawrappers.java.awt.Point: ...
	def lostFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def keyDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getDropTarget(self, ) -> javawrappers.java.awt.dnd.DropTarget: ...
	def getTransferHandler(self, ) -> javawrappers.javax.swing.TransferHandler: ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def setText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getHierarchyBoundsListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyBoundsListener, 1): ...
	def getRootPane(self, ) -> javawrappers.javax.swing.JRootPane: ...
	def getAutoscrolls(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def getBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> javawrappers.java.awt.Rectangle: ...
	def setPreferredSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def setInputMap(self, arg0: Union[int, JInt], arg1: javawrappers.javax.swing.InputMap, ) -> None: ...
	@overload
	def enable(self, ) -> None: ...
	@overload
	def enable(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def paintImmediately(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	@overload
	def paintImmediately(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def getMousePosition(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.awt.Point: ...
	@overload
	def getMousePosition(self, ) -> javawrappers.java.awt.Point: ...
	def isManagingFocus(self, ) -> Union[int, JBoolean]: ...
	def action(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def addContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def setHorizontalTextPosition(self, arg0: Union[int, JInt], ) -> None: ...
	def setComponentZOrder(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: JByte, arg2: JByte, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], arg2: Union[int, JShort], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], arg2: Union[string, JString], ) -> None: ...
	def getBackgroundNonSelectionColor(self, ) -> javawrappers.java.awt.Color: ...
	def addMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def getComponentOrientation(self, ) -> javawrappers.java.awt.ComponentOrientation: ...
	def setFocusable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getTreeLock(self, ) -> javawrappers.java.lang.Object: ...
	def addHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def isBackgroundSet(self, ) -> Union[int, JBoolean]: ...
	def getBackgroundSelectionColor(self, ) -> javawrappers.java.awt.Color: ...
	@overload
	def findComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def findComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setOpaque(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setComponentPopupMenu(self, arg0: javawrappers.javax.swing.JPopupMenu, ) -> None: ...
	def setEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLightweight(self, ) -> Union[int, JBoolean]: ...
	def setTransferHandler(self, arg0: javawrappers.javax.swing.TransferHandler, ) -> None: ...
	def isEnabled(self, ) -> Union[int, JBoolean]: ...
	def minimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def bounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def repaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def repaint(self, ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def getMouseMotionListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseMotionListener, 1): ...
	def setMinimumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def transferFocus(self, ) -> None: ...
	def printComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	@overload
	def getInputMap(self, ) -> javawrappers.javax.swing.InputMap: ...
	@overload
	def getInputMap(self, arg0: Union[int, JInt], ) -> javawrappers.javax.swing.InputMap: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setRequestFocusEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getMaximumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getLocationOnScreen(self, ) -> javawrappers.java.awt.Point: ...
	def keyUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getWidth(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def setFocusTraversalPolicy(self, arg0: javawrappers.java.awt.FocusTraversalPolicy, ) -> None: ...
	def paintAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setFocusTraversalKeys(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ) -> None: ...
	def getIconTextGap(self, ) -> Union[int, JInt]: ...
	def setDebugGraphicsOptions(self, arg0: Union[int, JInt], ) -> None: ...
	def isPaintingTile(self, ) -> Union[int, JBoolean]: ...
	def getDefaultClosedIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def hasFocus(self, ) -> Union[int, JBoolean]: ...
	def isPreferredSizeSet(self, ) -> Union[int, JBoolean]: ...
	def isDoubleBuffered(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getPropertyChangeListeners(self, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	@overload
	def getPropertyChangeListeners(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	def getColorModel(self, ) -> javawrappers.java.awt.image.ColorModel: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getVerticalTextPosition(self, ) -> Union[int, JInt]: ...
	@overload
	def getInsets(self, arg0: javawrappers.java.awt.Insets, ) -> javawrappers.java.awt.Insets: ...
	@overload
	def getInsets(self, ) -> javawrappers.java.awt.Insets: ...
	def getFocusTraversalKeysEnabled(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getDefaultLocale() -> javawrappers.java.util.Locale: ...
	def getIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def hide(self, ) -> None: ...
	def getPreferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def disable(self, ) -> None: ...
	def setVerticalAlignment(self, arg0: Union[int, JInt], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	def isFocusable(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getToolTipText(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> javawrappers.java.lang.String: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getBorder(self, ) -> javawrappers.javax.swing.border.Border: ...
	def isPaintingForPrint(self, ) -> Union[int, JBoolean]: ...
	def getTextSelectionColor(self, ) -> javawrappers.java.awt.Color: ...
	def insets(self, ) -> javawrappers.java.awt.Insets: ...
	def setMixingCutoutShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def setBackgroundNonSelectionColor(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def mouseExit(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getHierarchyListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyListener, 1): ...
	def computeVisibleRect(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def isShowing(self, ) -> Union[int, JBoolean]: ...
	def mouseEnter(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def mouseDrag(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def preferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getMouseListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseListener, 1): ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def setInheritsPopupMenu(self, arg0: Union[int, JBoolean], ) -> None: ...
	def deliverEvent(self, arg0: javawrappers.java.awt.Event, ) -> None: ...
	def getActionMap(self, ) -> javawrappers.javax.swing.ActionMap: ...
	def getForeground(self, ) -> javawrappers.java.awt.Color: ...
	def isAncestorOf(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def getComponentCount(self, ) -> Union[int, JInt]: ...
	def setVerticalTextPosition(self, arg0: Union[int, JInt], ) -> None: ...
	def setIcon(self, arg0: javawrappers.javax.swing.Icon, ) -> None: ...
	def setClosedIcon(self, arg0: javawrappers.javax.swing.Icon, ) -> None: ...
	@overload
	def getUI(self, ) -> javawrappers.javax.swing.plaf.LabelUI: ...
	@overload
	def getUI(self, ) -> javawrappers.javax.swing.plaf.ComponentUI: ...
	def getTopLevelAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def getActionForKeyStroke(self, arg0: javawrappers.javax.swing.KeyStroke, ) -> javawrappers.java.awt.event.ActionListener: ...
	def grabFocus(self, ) -> None: ...
	def getPopupLocation(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> javawrappers.java.awt.Point: ...
	def setCursor(self, arg0: javawrappers.java.awt.Cursor, ) -> None: ...
	def getLabelFor(self, ) -> javawrappers.java.awt.Component: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def isDisplayable(self, ) -> Union[int, JBoolean]: ...
	def getGraphicsConfiguration(self, ) -> javawrappers.java.awt.GraphicsConfiguration: ...
	def getComponent(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def removeComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	@overload
	def requestFocus(self, arg0: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocus(self, ) -> None: ...
	@overload
	def requestFocus(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> None: ...
	def addVetoableChangeListener(self, arg0: javawrappers.java.beans.VetoableChangeListener, ) -> None: ...
	def locate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def addFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def getInheritsPopupMenu(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def getComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def updateUI(self, ) -> None: ...
	@overload
	def isFocusCycleRoot(self, arg0: javawrappers.java.awt.Container, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, ) -> Union[int, JBoolean]: ...
	def resetKeyboardActions(self, ) -> None: ...
	def setFocusTraversalKeysEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getComponentZOrder(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JInt]: ...
	def setBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def printAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getToolkit(self, ) -> javawrappers.java.awt.Toolkit: ...
	def getVetoableChangeListeners(self, ) -> JArray(javawrappers.java.beans.VetoableChangeListener, 1): ...
	def getHorizontalTextPosition(self, ) -> Union[int, JInt]: ...
	def transferFocusUpCycle(self, ) -> None: ...
	def isFontSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def setLocation(self, arg0: javawrappers.java.awt.Point, ) -> None: ...
	@overload
	def setLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def isFocusTraversalPolicyProvider(self, ) -> Union[int, JBoolean]: ...
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	def removeFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def setIgnoreRepaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getVisibleRect(self, ) -> javawrappers.java.awt.Rectangle: ...
	def transferFocusBackward(self, ) -> None: ...
	def move(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def transferFocusDownCycle(self, ) -> None: ...
	@staticmethod
	def isLightweightComponent(arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def setForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def getDisabledIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def invalidate(self, ) -> None: ...
	def getAccessibleContext(self, ) -> javawrappers.javax.accessibility.AccessibleContext: ...
	def isFocusOwner(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getSize(self, arg0: javawrappers.java.awt.Dimension, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def getSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getX(self, ) -> Union[int, JInt]: ...
	def removeHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def getY(self, ) -> Union[int, JInt]: ...
	def getFocusTraversalPolicy(self, ) -> javawrappers.java.awt.FocusTraversalPolicy: ...
	def removeMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def getBackground(self, ) -> javawrappers.java.awt.Color: ...
	def getDebugGraphicsOptions(self, ) -> Union[int, JInt]: ...
	def addMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...


class CategoryNode:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getUserObjectPath(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getNextSibling(self, ) -> javawrappers.javax.swing.tree.DefaultMutableTreeNode: ...
	def getIndex(self, arg0: javawrappers.javax.swing.tree.TreeNode, ) -> Union[int, JInt]: ...
	def isRoot(self, ) -> Union[int, JBoolean]: ...
	def setSelected(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLeaf(self, ) -> Union[int, JBoolean]: ...
	def preorderEnumeration(self, ) -> javawrappers.java.util.Enumeration: ...
	def getTitle(self, ) -> javawrappers.java.lang.String: ...
	def children(self, ) -> javawrappers.java.util.Enumeration: ...
	def getPath(self, ) -> JArray(javawrappers.javax.swing.tree.TreeNode, 1): ...
	def pathFromAncestorEnumeration(self, arg0: javawrappers.javax.swing.tree.TreeNode, ) -> javawrappers.java.util.Enumeration: ...
	def getSiblingCount(self, ) -> Union[int, JInt]: ...
	def setUserObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def add(self, arg0: javawrappers.javax.swing.tree.MutableTreeNode, ) -> None: ...
	def getPreviousSibling(self, ) -> javawrappers.javax.swing.tree.DefaultMutableTreeNode: ...
	def isNodeAncestor(self, arg0: javawrappers.javax.swing.tree.TreeNode, ) -> Union[int, JBoolean]: ...
	def breadthFirstEnumeration(self, ) -> javawrappers.java.util.Enumeration: ...
	def addRecord(self, ) -> None: ...
	def getLastChild(self, ) -> javawrappers.javax.swing.tree.TreeNode: ...
	def getFirstLeaf(self, ) -> javawrappers.javax.swing.tree.DefaultMutableTreeNode: ...
	def getChildCount(self, ) -> Union[int, JInt]: ...
	def removeFromParent(self, ) -> None: ...
	def getUserObject(self, ) -> javawrappers.java.lang.Object: ...
	def getNextNode(self, ) -> javawrappers.javax.swing.tree.DefaultMutableTreeNode: ...
	def setHasFatalChildren(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getPreviousLeaf(self, ) -> javawrappers.javax.swing.tree.DefaultMutableTreeNode: ...
	def isNodeChild(self, arg0: javawrappers.javax.swing.tree.TreeNode, ) -> Union[int, JBoolean]: ...
	def setAllDescendantsDeSelected(self, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDepth(self, ) -> Union[int, JInt]: ...
	def isNodeDescendant(self, arg0: javawrappers.javax.swing.tree.DefaultMutableTreeNode, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def insert(self, arg0: javawrappers.javax.swing.tree.MutableTreeNode, arg1: Union[int, JInt], ) -> None: ...
	def getLeafCount(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.javax.swing.tree.MutableTreeNode, ) -> None: ...
	def getChildAfter(self, arg0: javawrappers.javax.swing.tree.TreeNode, ) -> javawrappers.javax.swing.tree.TreeNode: ...
	def getNumberOfContainedRecords(self, ) -> Union[int, JInt]: ...
	def getSharedAncestor(self, arg0: javawrappers.javax.swing.tree.DefaultMutableTreeNode, ) -> javawrappers.javax.swing.tree.TreeNode: ...
	def getLastLeaf(self, ) -> javawrappers.javax.swing.tree.DefaultMutableTreeNode: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getPreviousNode(self, ) -> javawrappers.javax.swing.tree.DefaultMutableTreeNode: ...
	def isSelected(self, ) -> Union[int, JBoolean]: ...
	def getFirstChild(self, ) -> javawrappers.javax.swing.tree.TreeNode: ...
	def getNextLeaf(self, ) -> javawrappers.javax.swing.tree.DefaultMutableTreeNode: ...
	def setParent(self, arg0: javawrappers.javax.swing.tree.MutableTreeNode, ) -> None: ...
	def isNodeSibling(self, arg0: javawrappers.javax.swing.tree.TreeNode, ) -> Union[int, JBoolean]: ...
	def getRoot(self, ) -> javawrappers.javax.swing.tree.TreeNode: ...
	def resetNumberOfContainedRecords(self, ) -> None: ...
	def depthFirstEnumeration(self, ) -> javawrappers.java.util.Enumeration: ...
	def postorderEnumeration(self, ) -> javawrappers.java.util.Enumeration: ...
	def getParent(self, ) -> javawrappers.javax.swing.tree.TreeNode: ...
	def isNodeRelated(self, arg0: javawrappers.javax.swing.tree.DefaultMutableTreeNode, ) -> Union[int, JBoolean]: ...
	def hasFatalChildren(self, ) -> Union[int, JBoolean]: ...
	def setAllDescendantsSelected(self, ) -> None: ...
	def removeAllChildren(self, ) -> None: ...
	def hasFatalRecords(self, ) -> Union[int, JBoolean]: ...
	def getChildAt(self, arg0: Union[int, JInt], ) -> javawrappers.javax.swing.tree.TreeNode: ...
	def getLevel(self, ) -> Union[int, JInt]: ...
	def setAllowsChildren(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getAllowsChildren(self, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def getChildBefore(self, arg0: javawrappers.javax.swing.tree.TreeNode, ) -> javawrappers.javax.swing.tree.TreeNode: ...
	def setHasFatalRecords(self, arg0: Union[int, JBoolean], ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class CategoryExplorerTree:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel, ): ...
	@overload
	def getLocation(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Point: ...
	@overload
	def getLocation(self, ) -> javawrappers.java.awt.Point: ...
	@overload
	def requestFocusInWindow(self, ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocusInWindow(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> Union[int, JBoolean]: ...
	def getInvokesStopCellEditing(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isCollapsed(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> Union[int, JBoolean]: ...
	@overload
	def isCollapsed(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getInputVerifier(self, ) -> javawrappers.javax.swing.InputVerifier: ...
	def isOpaque(self, ) -> Union[int, JBoolean]: ...
	def getMaxSelectionRow(self, ) -> Union[int, JInt]: ...
	def setDoubleBuffered(self, arg0: Union[int, JBoolean], ) -> None: ...
	def paint(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getInputMethodListeners(self, ) -> JArray(javawrappers.java.awt.event.InputMethodListener, 1): ...
	def setLayout(self, arg0: javawrappers.java.awt.LayoutManager, ) -> None: ...
	def makeVisible(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> None: ...
	def mouseDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getInputMethodRequests(self, ) -> javawrappers.java.awt.im.InputMethodRequests: ...
	def requestDefaultFocus(self, ) -> Union[int, JBoolean]: ...
	def addHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def removeAll(self, ) -> None: ...
	def setSelectionRow(self, arg0: Union[int, JInt], ) -> None: ...
	def getMinimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def clearSelection(self, ) -> None: ...
	def getAlignmentY(self, ) -> Union[float, JFloat]: ...
	def setAutoscrolls(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getAlignmentX(self, ) -> Union[float, JFloat]: ...
	def setAlignmentY(self, arg0: Union[float, JFloat], ) -> None: ...
	def dispatchEvent(self, arg0: javawrappers.java.awt.AWTEvent, ) -> None: ...
	def isOptimizedDrawingEnabled(self, ) -> Union[int, JBoolean]: ...
	def getRowCount(self, ) -> Union[int, JInt]: ...
	def getLastSelectedPathComponent(self, ) -> javawrappers.java.lang.Object: ...
	def setShowsRootHandles(self, arg0: Union[int, JBoolean], ) -> None: ...
	def reshape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def setCellEditor(self, arg0: javawrappers.javax.swing.tree.TreeCellEditor, ) -> None: ...
	def setAlignmentX(self, arg0: Union[float, JFloat], ) -> None: ...
	def getMinSelectionRow(self, ) -> Union[int, JInt]: ...
	def postEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JBoolean]: ...
	def size(self, ) -> javawrappers.java.awt.Dimension: ...
	def unregisterKeyboardAction(self, arg0: javawrappers.javax.swing.KeyStroke, ) -> None: ...
	def mouseUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def enableInputMethods(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def removeVetoableChangeListener(self, arg0: javawrappers.java.beans.VetoableChangeListener, ) -> None: ...
	def addComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def fireTreeExpanded(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> None: ...
	def getAnchorSelectionPath(self, ) -> javawrappers.javax.swing.tree.TreePath: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def getClientProperty(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def removeHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def fireTreeCollapsed(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> None: ...
	def isRequestFocusEnabled(self, ) -> Union[int, JBoolean]: ...
	def getFontMetrics(self, arg0: javawrappers.java.awt.Font, ) -> javawrappers.java.awt.FontMetrics: ...
	def getHeight(self, ) -> Union[int, JInt]: ...
	def addSelectionRows(self, arg0: JArray(Union[int, JInt], 1), ) -> None: ...
	def getAncestorListeners(self, ) -> JArray(javawrappers.javax.swing.event.AncestorListener, 1): ...
	def getIgnoreRepaint(self, ) -> Union[int, JBoolean]: ...
	def getBaselineResizeBehavior(self, ) -> javawrappers.java.awt.Component.BaselineResizeBehavior: ...
	def removeSelectionRows(self, arg0: JArray(Union[int, JInt], 1), ) -> None: ...
	def removeMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def setVisibleRowCount(self, arg0: Union[int, JInt], ) -> None: ...
	def getRowForPath(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> Union[int, JInt]: ...
	def getCellEditor(self, ) -> javawrappers.javax.swing.tree.TreeCellEditor: ...
	def applyComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def validate(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.java.awt.Container: ...
	def isMinimumSizeSet(self, ) -> Union[int, JBoolean]: ...
	def setExpandsSelectedPaths(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def getVerifyInputWhenFocusTarget(self, ) -> Union[int, JBoolean]: ...
	def getEditingPath(self, ) -> javawrappers.javax.swing.tree.TreePath: ...
	def setSelectionRows(self, arg0: JArray(Union[int, JInt], 1), ) -> None: ...
	@overload
	def setBounds(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def isValidateRoot(self, ) -> Union[int, JBoolean]: ...
	def treeDidChange(self, ) -> None: ...
	def addNotify(self, ) -> None: ...
	def addSelectionPaths(self, arg0: JArray(javawrappers.javax.swing.tree.TreePath, 1), ) -> None: ...
	def addInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def getClosestPathForLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.javax.swing.tree.TreePath: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFocusCycleRootAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def setToggleClickCount(self, arg0: Union[int, JInt], ) -> None: ...
	def getToolTipLocation(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> javawrappers.java.awt.Point: ...
	def getLeadSelectionRow(self, ) -> Union[int, JInt]: ...
	def convertValueToText(self, arg0: javawrappers.java.lang.Object, arg1: Union[int, JBoolean], arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], arg4: Union[int, JInt], arg5: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	def setFocusTraversalPolicyProvider(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getConditionForKeyStroke(self, arg0: javawrappers.javax.swing.KeyStroke, ) -> Union[int, JInt]: ...
	def removeTreeSelectionListener(self, arg0: javawrappers.javax.swing.event.TreeSelectionListener, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def isPathEditable(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> Union[int, JBoolean]: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def countComponents(self, ) -> Union[int, JInt]: ...
	def isFocusTraversable(self, ) -> Union[int, JBoolean]: ...
	def removeSelectionRow(self, arg0: Union[int, JInt], ) -> None: ...
	def inside(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getInputContext(self, ) -> javawrappers.java.awt.im.InputContext: ...
	def nextFocus(self, ) -> None: ...
	def getFocusTraversalKeys(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.Set: ...
	def isCursorSet(self, ) -> Union[int, JBoolean]: ...
	def setVerifyInputWhenFocusTarget(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setActionMap(self, arg0: javawrappers.javax.swing.ActionMap, ) -> None: ...
	def getMouseWheelListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseWheelListener, 1): ...
	def getDragEnabled(self, ) -> Union[int, JBoolean]: ...
	def removeSelectionPath(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> None: ...
	def setCellRenderer(self, arg0: javawrappers.javax.swing.tree.TreeCellRenderer, ) -> None: ...
	def getComponents(self, ) -> JArray(javawrappers.java.awt.Component, 1): ...
	def setInputVerifier(self, arg0: javawrappers.javax.swing.InputVerifier, ) -> None: ...
	def removeMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def doLayout(self, ) -> None: ...
	def getNextFocusableComponent(self, ) -> javawrappers.java.awt.Component: ...
	def isSelectionEmpty(self, ) -> Union[int, JBoolean]: ...
	def getSelectionRows(self, ) -> JArray(Union[int, JInt], 1): ...
	def addSelectionPath(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.PopupMenu, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getScrollableTracksViewportHeight(self, ) -> Union[int, JBoolean]: ...
	def putClientProperty(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def setFocusCycleRoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setSelectionPath(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> None: ...
	def getDropMode(self, ) -> javawrappers.javax.swing.DropMode: ...
	def setNextFocusableComponent(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isVisible(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> Union[int, JBoolean]: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def setDropTarget(self, arg0: javawrappers.java.awt.dnd.DropTarget, ) -> None: ...
	@overload
	def list(self, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, arg1: Union[int, JInt], ) -> None: ...
	def revalidate(self, ) -> None: ...
	def createToolTip(self, ) -> javawrappers.javax.swing.JToolTip: ...
	@staticmethod
	def setDefaultLocale(arg0: javawrappers.java.util.Locale, ) -> None: ...
	def setModel(self, arg0: javawrappers.javax.swing.tree.TreeModel, ) -> None: ...
	def removeNotify(self, ) -> None: ...
	def setDragEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def gotFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def startEditingAtPath(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> None: ...
	def removeAncestorListener(self, arg0: javawrappers.javax.swing.event.AncestorListener, ) -> None: ...
	def scrollRectToVisible(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def getRegisteredKeyStrokes(self, ) -> JArray(javawrappers.javax.swing.KeyStroke, 1): ...
	def handleEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isForegroundSet(self, ) -> Union[int, JBoolean]: ...
	def collapsePath(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> None: ...
	def getRowHeight(self, ) -> Union[int, JInt]: ...
	@overload
	def show(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def show(self, ) -> None: ...
	def update(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def isFocusTraversalPolicySet(self, ) -> Union[int, JBoolean]: ...
	def getUIClassID(self, ) -> javawrappers.java.lang.String: ...
	def setMaximumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def getScrollableBlockIncrement(self, arg0: javawrappers.java.awt.Rectangle, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JInt]: ...
	def setLeadSelectionPath(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.MenuComponent, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	def addMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def imageUpdate(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	def getLayout(self, ) -> javawrappers.java.awt.LayoutManager: ...
	def addKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getContainerListeners(self, ) -> JArray(javawrappers.java.awt.event.ContainerListener, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getComponentListeners(self, ) -> JArray(javawrappers.java.awt.event.ComponentListener, 1): ...
	def isPathSelected(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> Union[int, JBoolean]: ...
	def isMaximumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def getLeadSelectionPath(self, ) -> javawrappers.javax.swing.tree.TreePath: ...
	def getCursor(self, ) -> javawrappers.java.awt.Cursor: ...
	def fireTreeWillCollapse(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> None: ...
	@overload
	def createImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Image: ...
	@overload
	def createImage(self, arg0: javawrappers.java.awt.image.ImageProducer, ) -> javawrappers.java.awt.Image: ...
	def mouseMove(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def areFocusTraversalKeysSet(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def setSelectionInterval(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def getKeyListeners(self, ) -> JArray(javawrappers.java.awt.event.KeyListener, 1): ...
	@overload
	def registerKeyboardAction(self, arg0: javawrappers.java.awt.event.ActionListener, arg1: javawrappers.javax.swing.KeyStroke, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def registerKeyboardAction(self, arg0: javawrappers.java.awt.event.ActionListener, arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.swing.KeyStroke, arg3: Union[int, JInt], ) -> None: ...
	def getPreferredScrollableViewportSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def addAncestorListener(self, arg0: javawrappers.javax.swing.event.AncestorListener, ) -> None: ...
	def layout(self, ) -> None: ...
	def print_(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getComponentPopupMenu(self, ) -> javawrappers.javax.swing.JPopupMenu: ...
	def getBaseline(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def setUI(self, arg0: javawrappers.javax.swing.plaf.TreeUI, ) -> None: ...
	def setEditable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def paintComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setBorder(self, arg0: javawrappers.javax.swing.border.Border, ) -> None: ...
	def getFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.FocusListener, 1): ...
	def getRowBounds(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def resize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def resize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.awt.ImageCapabilities, ) -> javawrappers.java.awt.image.VolatileImage: ...
	def location(self, ) -> javawrappers.java.awt.Point: ...
	def lostFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getPathForLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.javax.swing.tree.TreePath: ...
	def keyDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getDropTarget(self, ) -> javawrappers.java.awt.dnd.DropTarget: ...
	def getTransferHandler(self, ) -> javawrappers.javax.swing.TransferHandler: ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def getHierarchyBoundsListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyBoundsListener, 1): ...
	def getRootPane(self, ) -> javawrappers.javax.swing.JRootPane: ...
	def hasBeenExpanded(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> Union[int, JBoolean]: ...
	def getAutoscrolls(self, ) -> Union[int, JBoolean]: ...
	def getScrollableTracksViewportWidth(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def getBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> javawrappers.java.awt.Rectangle: ...
	def setPreferredSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def setInputMap(self, arg0: Union[int, JInt], arg1: javawrappers.javax.swing.InputMap, ) -> None: ...
	@overload
	def enable(self, ) -> None: ...
	@overload
	def enable(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def paintImmediately(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	@overload
	def paintImmediately(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def getVisibleRowCount(self, ) -> Union[int, JInt]: ...
	@overload
	def getMousePosition(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.awt.Point: ...
	@overload
	def getMousePosition(self, ) -> javawrappers.java.awt.Point: ...
	def isManagingFocus(self, ) -> Union[int, JBoolean]: ...
	def action(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getDropLocation(self, ) -> javawrappers.javax.swing.JTree.DropLocation: ...
	def addContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	@overload
	def isExpanded(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> Union[int, JBoolean]: ...
	@overload
	def isExpanded(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def setComponentZOrder(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], arg2: Union[string, JString], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: JByte, arg2: JByte, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], arg2: Union[int, JShort], ) -> None: ...
	def getSelectionModel(self, ) -> javawrappers.javax.swing.tree.TreeSelectionModel: ...
	def addMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def getNextMatch(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.javax.swing.text.Position.Bias, ) -> javawrappers.javax.swing.tree.TreePath: ...
	def getComponentOrientation(self, ) -> javawrappers.java.awt.ComponentOrientation: ...
	def setFocusable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getTreeLock(self, ) -> javawrappers.java.lang.Object: ...
	def addHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def isBackgroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def findComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def findComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setOpaque(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setComponentPopupMenu(self, arg0: javawrappers.javax.swing.JPopupMenu, ) -> None: ...
	def setEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLightweight(self, ) -> Union[int, JBoolean]: ...
	def setSelectionModel(self, arg0: javawrappers.javax.swing.tree.TreeSelectionModel, ) -> None: ...
	def setSelectionPaths(self, arg0: JArray(javawrappers.javax.swing.tree.TreePath, 1), ) -> None: ...
	def setTransferHandler(self, arg0: javawrappers.javax.swing.TransferHandler, ) -> None: ...
	def isEnabled(self, ) -> Union[int, JBoolean]: ...
	def minimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def bounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	def getShowsRootHandles(self, ) -> Union[int, JBoolean]: ...
	@overload
	def repaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def repaint(self, ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def getMouseMotionListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseMotionListener, 1): ...
	def setMinimumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def transferFocus(self, ) -> None: ...
	def printComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	@overload
	def getInputMap(self, ) -> javawrappers.javax.swing.InputMap: ...
	@overload
	def getInputMap(self, arg0: Union[int, JInt], ) -> javawrappers.javax.swing.InputMap: ...
	def getSelectionPaths(self, ) -> JArray(javawrappers.javax.swing.tree.TreePath, 1): ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getExpandedDescendants(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> javawrappers.java.util.Enumeration: ...
	def setRequestFocusEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getMaximumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def setAnchorSelectionPath(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> None: ...
	def getLocationOnScreen(self, ) -> javawrappers.java.awt.Point: ...
	def keyUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getSelectionPath(self, ) -> javawrappers.javax.swing.tree.TreePath: ...
	def addSelectionRow(self, arg0: Union[int, JInt], ) -> None: ...
	def getWidth(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def addSelectionInterval(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def setFocusTraversalPolicy(self, arg0: javawrappers.java.awt.FocusTraversalPolicy, ) -> None: ...
	def paintAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def scrollRowToVisible(self, arg0: Union[int, JInt], ) -> None: ...
	def getExplorerModel(self, ) -> javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel: ...
	def setFocusTraversalKeys(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ) -> None: ...
	def fireTreeWillExpand(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> None: ...
	def setDebugGraphicsOptions(self, arg0: Union[int, JInt], ) -> None: ...
	def isPaintingTile(self, ) -> Union[int, JBoolean]: ...
	def hasFocus(self, ) -> Union[int, JBoolean]: ...
	def removeTreeExpansionListener(self, arg0: javawrappers.javax.swing.event.TreeExpansionListener, ) -> None: ...
	def isPreferredSizeSet(self, ) -> Union[int, JBoolean]: ...
	def isRowSelected(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def isDoubleBuffered(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getPropertyChangeListeners(self, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	@overload
	def getPropertyChangeListeners(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	def getColorModel(self, ) -> javawrappers.java.awt.image.ColorModel: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getPathForRow(self, arg0: Union[int, JInt], ) -> javawrappers.javax.swing.tree.TreePath: ...
	@overload
	def getInsets(self, arg0: javawrappers.java.awt.Insets, ) -> javawrappers.java.awt.Insets: ...
	@overload
	def getInsets(self, ) -> javawrappers.java.awt.Insets: ...
	def getFocusTraversalKeysEnabled(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getDefaultLocale() -> javawrappers.java.util.Locale: ...
	def hide(self, ) -> None: ...
	def setDropMode(self, arg0: javawrappers.javax.swing.DropMode, ) -> None: ...
	def getPreferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def disable(self, ) -> None: ...
	def getTreeWillExpandListeners(self, ) -> JArray(javawrappers.javax.swing.event.TreeWillExpandListener, 1): ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	def getToggleClickCount(self, ) -> Union[int, JInt]: ...
	def getTreeExpansionListeners(self, ) -> JArray(javawrappers.javax.swing.event.TreeExpansionListener, 1): ...
	def addTreeSelectionListener(self, arg0: javawrappers.javax.swing.event.TreeSelectionListener, ) -> None: ...
	def isFocusable(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getToolTipText(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> javawrappers.java.lang.String: ...
	@overload
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def isLargeModel(self, ) -> Union[int, JBoolean]: ...
	def isFixedRowHeight(self, ) -> Union[int, JBoolean]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getBorder(self, ) -> javawrappers.javax.swing.border.Border: ...
	def isPaintingForPrint(self, ) -> Union[int, JBoolean]: ...
	def insets(self, ) -> javawrappers.java.awt.Insets: ...
	def setMixingCutoutShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def getClosestRowForLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def mouseExit(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getHierarchyListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyListener, 1): ...
	def computeVisibleRect(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def getSelectionCount(self, ) -> Union[int, JInt]: ...
	def isShowing(self, ) -> Union[int, JBoolean]: ...
	def mouseEnter(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def isEditable(self, ) -> Union[int, JBoolean]: ...
	def mouseDrag(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def preferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getRowForLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def getMouseListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseListener, 1): ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def setInheritsPopupMenu(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getModel(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def deliverEvent(self, arg0: javawrappers.java.awt.Event, ) -> None: ...
	def getCellRenderer(self, ) -> javawrappers.javax.swing.tree.TreeCellRenderer: ...
	def getActionMap(self, ) -> javawrappers.javax.swing.ActionMap: ...
	def getForeground(self, ) -> javawrappers.java.awt.Color: ...
	def isAncestorOf(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def getComponentCount(self, ) -> Union[int, JInt]: ...
	@overload
	def getUI(self, ) -> javawrappers.javax.swing.plaf.ComponentUI: ...
	@overload
	def getUI(self, ) -> javawrappers.javax.swing.plaf.TreeUI: ...
	def setLargeModel(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getTopLevelAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def removeSelectionInterval(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def getActionForKeyStroke(self, arg0: javawrappers.javax.swing.KeyStroke, ) -> javawrappers.java.awt.event.ActionListener: ...
	def grabFocus(self, ) -> None: ...
	def addTreeWillExpandListener(self, arg0: javawrappers.javax.swing.event.TreeWillExpandListener, ) -> None: ...
	def getPopupLocation(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> javawrappers.java.awt.Point: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def setCursor(self, arg0: javawrappers.java.awt.Cursor, ) -> None: ...
	def isDisplayable(self, ) -> Union[int, JBoolean]: ...
	def getGraphicsConfiguration(self, ) -> javawrappers.java.awt.GraphicsConfiguration: ...
	def getComponent(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def getExpandsSelectedPaths(self, ) -> Union[int, JBoolean]: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def removeComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	@overload
	def requestFocus(self, arg0: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocus(self, ) -> None: ...
	@overload
	def requestFocus(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> None: ...
	def addVetoableChangeListener(self, arg0: javawrappers.java.beans.VetoableChangeListener, ) -> None: ...
	def locate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setRootVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def addFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def isRootVisible(self, ) -> Union[int, JBoolean]: ...
	def getInheritsPopupMenu(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def getComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def updateUI(self, ) -> None: ...
	@overload
	def isFocusCycleRoot(self, arg0: javawrappers.java.awt.Container, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, ) -> Union[int, JBoolean]: ...
	def resetKeyboardActions(self, ) -> None: ...
	def setInvokesStopCellEditing(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setFocusTraversalKeysEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getComponentZOrder(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JInt]: ...
	def setBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def getScrollsOnExpand(self, ) -> Union[int, JBoolean]: ...
	def printAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getTreeSelectionListeners(self, ) -> JArray(javawrappers.javax.swing.event.TreeSelectionListener, 1): ...
	def getToolkit(self, ) -> javawrappers.java.awt.Toolkit: ...
	def getVetoableChangeListeners(self, ) -> JArray(javawrappers.java.beans.VetoableChangeListener, 1): ...
	def getScrollableUnitIncrement(self, arg0: javawrappers.java.awt.Rectangle, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JInt]: ...
	def transferFocusUpCycle(self, ) -> None: ...
	def scrollPathToVisible(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> None: ...
	def isFontSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def setLocation(self, arg0: javawrappers.java.awt.Point, ) -> None: ...
	@overload
	def setLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def isFocusTraversalPolicyProvider(self, ) -> Union[int, JBoolean]: ...
	def stopEditing(self, ) -> Union[int, JBoolean]: ...
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	def removeFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def setIgnoreRepaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getVisibleRect(self, ) -> javawrappers.java.awt.Rectangle: ...
	def addTreeExpansionListener(self, arg0: javawrappers.javax.swing.event.TreeExpansionListener, ) -> None: ...
	def setRowHeight(self, arg0: Union[int, JInt], ) -> None: ...
	def transferFocusBackward(self, ) -> None: ...
	def move(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def transferFocusDownCycle(self, ) -> None: ...
	def removeSelectionPaths(self, arg0: JArray(javawrappers.javax.swing.tree.TreePath, 1), ) -> None: ...
	def getPathBounds(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> javawrappers.java.awt.Rectangle: ...
	def isEditing(self, ) -> Union[int, JBoolean]: ...
	def setScrollsOnExpand(self, arg0: Union[int, JBoolean], ) -> None: ...
	@staticmethod
	def isLightweightComponent(arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def setForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def cancelEditing(self, ) -> None: ...
	def collapseRow(self, arg0: Union[int, JInt], ) -> None: ...
	def expandRow(self, arg0: Union[int, JInt], ) -> None: ...
	def invalidate(self, ) -> None: ...
	def getAccessibleContext(self, ) -> javawrappers.javax.accessibility.AccessibleContext: ...
	def isFocusOwner(self, ) -> Union[int, JBoolean]: ...
	def removeTreeWillExpandListener(self, arg0: javawrappers.javax.swing.event.TreeWillExpandListener, ) -> None: ...
	@overload
	def getSize(self, arg0: javawrappers.java.awt.Dimension, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def getSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getX(self, ) -> Union[int, JInt]: ...
	def removeHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def getY(self, ) -> Union[int, JInt]: ...
	def expandPath(self, arg0: javawrappers.javax.swing.tree.TreePath, ) -> None: ...
	def getFocusTraversalPolicy(self, ) -> javawrappers.java.awt.FocusTraversalPolicy: ...
	def removeMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def getBackground(self, ) -> javawrappers.java.awt.Color: ...
	def getDebugGraphicsOptions(self, ) -> Union[int, JInt]: ...
	def addMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...


class CategoryImmediateEditor:
	def __init__(self, arg0: javawrappers.javax.swing.JTree, arg1: javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer, arg2: javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor, ): ...
	def addCellEditorListener(self, arg0: javawrappers.javax.swing.event.CellEditorListener, ) -> None: ...
	def inCheckBoxHitRegion(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> Union[int, JBoolean]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def valueChanged(self, arg0: javawrappers.javax.swing.event.TreeSelectionEvent, ) -> None: ...
	def getCellEditorValue(self, ) -> javawrappers.java.lang.Object: ...
	def shouldSelectCell(self, arg0: javawrappers.java.util.EventObject, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def removeCellEditorListener(self, arg0: javawrappers.javax.swing.event.CellEditorListener, ) -> None: ...
	def notify(self, ) -> None: ...
	def getTreeCellEditorComponent(self, arg0: javawrappers.javax.swing.JTree, arg1: javawrappers.java.lang.Object, arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], arg4: Union[int, JBoolean], arg5: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def stopCellEditing(self, ) -> Union[int, JBoolean]: ...
	def actionPerformed(self, arg0: javawrappers.java.awt.event.ActionEvent, ) -> None: ...
	def getBorderSelectionColor(self, ) -> javawrappers.java.awt.Color: ...
	def cancelCellEditing(self, ) -> None: ...
	def isCellEditable(self, arg0: javawrappers.java.util.EventObject, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getCellEditorListeners(self, ) -> JArray(javawrappers.javax.swing.event.CellEditorListener, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def setBorderSelectionColor(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...


class CategoryElement:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getTitle(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setTitle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class CategoryExplorerLogRecordFilter:
	def __init__(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def passes(self, arg0: javawrappers.org.apache.log4j.lf5.LogRecord, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def reset(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class CategoryNodeEditor:
	def __init__(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel, ): ...
	def addCellEditorListener(self, arg0: javawrappers.javax.swing.event.CellEditorListener, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getCellEditorValue(self, ) -> javawrappers.java.lang.Object: ...
	def shouldSelectCell(self, arg0: javawrappers.java.util.EventObject, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def removeCellEditorListener(self, arg0: javawrappers.javax.swing.event.CellEditorListener, ) -> None: ...
	def getTableCellEditorComponent(self, arg0: javawrappers.javax.swing.JTable, arg1: javawrappers.java.lang.Object, arg2: Union[int, JBoolean], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setClickCountToStart(self, arg0: Union[int, JInt], ) -> None: ...
	def notify(self, ) -> None: ...
	def stopCellEditing(self, ) -> Union[int, JBoolean]: ...
	def getTreeCellEditorComponent(self, arg0: javawrappers.javax.swing.JTree, arg1: javawrappers.java.lang.Object, arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], arg4: Union[int, JBoolean], arg5: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def getClickCountToStart(self, ) -> Union[int, JInt]: ...
	def cancelCellEditing(self, ) -> None: ...
	def isCellEditable(self, arg0: javawrappers.java.util.EventObject, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setCellEditorValue(self, arg0: javawrappers.java.lang.Object, ) -> None: ...


class CategoryPath:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def size(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def categoryElementAt(self, arg0: Union[int, JInt], ) -> javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryElement: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def removeAllCategoryElements(self, ) -> None: ...
	def addCategoryElement(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryElement, ) -> None: ...
	def notify(self, ) -> None: ...


class TreeModelAdapter:
	def __init__(self, ): ...
	def treeNodesRemoved(self, arg0: javawrappers.javax.swing.event.TreeModelEvent, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def treeStructureChanged(self, arg0: javawrappers.javax.swing.event.TreeModelEvent, ) -> None: ...
	def treeNodesChanged(self, arg0: javawrappers.javax.swing.event.TreeModelEvent, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def treeNodesInserted(self, arg0: javawrappers.javax.swing.event.TreeModelEvent, ) -> None: ...


class CategoryAbstractCellEditor:
	def __init__(self, ): ...
	def addCellEditorListener(self, arg0: javawrappers.javax.swing.event.CellEditorListener, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getCellEditorValue(self, ) -> javawrappers.java.lang.Object: ...
	def shouldSelectCell(self, arg0: javawrappers.java.util.EventObject, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def removeCellEditorListener(self, arg0: javawrappers.javax.swing.event.CellEditorListener, ) -> None: ...
	def getTableCellEditorComponent(self, arg0: javawrappers.javax.swing.JTable, arg1: javawrappers.java.lang.Object, arg2: Union[int, JBoolean], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setClickCountToStart(self, arg0: Union[int, JInt], ) -> None: ...
	def notify(self, ) -> None: ...
	def getTreeCellEditorComponent(self, arg0: javawrappers.javax.swing.JTree, arg1: javawrappers.java.lang.Object, arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], arg4: Union[int, JBoolean], arg5: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def stopCellEditing(self, ) -> Union[int, JBoolean]: ...
	def getClickCountToStart(self, ) -> Union[int, JInt]: ...
	def cancelCellEditing(self, ) -> None: ...
	def isCellEditable(self, arg0: javawrappers.java.util.EventObject, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setCellEditorValue(self, arg0: javawrappers.java.lang.Object, ) -> None: ...


class CategoryNodeEditorRenderer:
	def __init__(self, ): ...
	@overload
	def getLocation(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Point: ...
	@overload
	def getLocation(self, ) -> javawrappers.java.awt.Point: ...
	@overload
	def requestFocusInWindow(self, ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocusInWindow(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> Union[int, JBoolean]: ...
	def getInputVerifier(self, ) -> javawrappers.javax.swing.InputVerifier: ...
	def isOpaque(self, ) -> Union[int, JBoolean]: ...
	def setDoubleBuffered(self, arg0: Union[int, JBoolean], ) -> None: ...
	def paint(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getInputMethodListeners(self, ) -> JArray(javawrappers.java.awt.event.InputMethodListener, 1): ...
	def setLayout(self, arg0: javawrappers.java.awt.LayoutManager, ) -> None: ...
	def mouseDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getTextNonSelectionColor(self, ) -> javawrappers.java.awt.Color: ...
	def getInputMethodRequests(self, ) -> javawrappers.java.awt.im.InputMethodRequests: ...
	def requestDefaultFocus(self, ) -> Union[int, JBoolean]: ...
	def addHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def removeAll(self, ) -> None: ...
	def getMinimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getAlignmentY(self, ) -> Union[float, JFloat]: ...
	def setAutoscrolls(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setOpenIcon(self, arg0: javawrappers.javax.swing.Icon, ) -> None: ...
	def getAlignmentX(self, ) -> Union[float, JFloat]: ...
	def setAlignmentY(self, arg0: Union[float, JFloat], ) -> None: ...
	def dispatchEvent(self, arg0: javawrappers.java.awt.AWTEvent, ) -> None: ...
	def isOptimizedDrawingEnabled(self, ) -> Union[int, JBoolean]: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	def reshape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def setAlignmentX(self, arg0: Union[float, JFloat], ) -> None: ...
	def postEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JBoolean]: ...
	def size(self, ) -> javawrappers.java.awt.Dimension: ...
	def unregisterKeyboardAction(self, arg0: javawrappers.javax.swing.KeyStroke, ) -> None: ...
	def mouseUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def enableInputMethods(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def removeVetoableChangeListener(self, arg0: javawrappers.java.beans.VetoableChangeListener, ) -> None: ...
	def addComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def setDisabledIcon(self, arg0: javawrappers.javax.swing.Icon, ) -> None: ...
	def setHorizontalAlignment(self, arg0: Union[int, JInt], ) -> None: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def getClientProperty(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def removeHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def setDisplayedMnemonicIndex(self, arg0: Union[int, JInt], ) -> None: ...
	def isRequestFocusEnabled(self, ) -> Union[int, JBoolean]: ...
	def getFontMetrics(self, arg0: javawrappers.java.awt.Font, ) -> javawrappers.java.awt.FontMetrics: ...
	def getHeight(self, ) -> Union[int, JInt]: ...
	def getAncestorListeners(self, ) -> JArray(javawrappers.javax.swing.event.AncestorListener, 1): ...
	def getIgnoreRepaint(self, ) -> Union[int, JBoolean]: ...
	def getBaselineResizeBehavior(self, ) -> javawrappers.java.awt.Component.BaselineResizeBehavior: ...
	def removeMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def applyComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def validate(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.java.awt.Container: ...
	def isMinimumSizeSet(self, ) -> Union[int, JBoolean]: ...
	def setComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def getVerifyInputWhenFocusTarget(self, ) -> Union[int, JBoolean]: ...
	def getClosedIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def setTextNonSelectionColor(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	@overload
	def setBounds(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def getCheckBox(self, ) -> javawrappers.javax.swing.JCheckBox: ...
	def getDefaultOpenIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def getVerticalAlignment(self, ) -> Union[int, JInt]: ...
	def isValidateRoot(self, ) -> Union[int, JBoolean]: ...
	def addNotify(self, ) -> None: ...
	def addInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFocusCycleRootAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def setBorderSelectionColor(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def getToolTipLocation(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> javawrappers.java.awt.Point: ...
	def setIconTextGap(self, arg0: Union[int, JInt], ) -> None: ...
	def setLabelFor(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def setFocusTraversalPolicyProvider(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getConditionForKeyStroke(self, arg0: javawrappers.javax.swing.KeyStroke, ) -> Union[int, JInt]: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def countComponents(self, ) -> Union[int, JInt]: ...
	def isFocusTraversable(self, ) -> Union[int, JBoolean]: ...
	def inside(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getInputContext(self, ) -> javawrappers.java.awt.im.InputContext: ...
	def nextFocus(self, ) -> None: ...
	def getFocusTraversalKeys(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.Set: ...
	def isCursorSet(self, ) -> Union[int, JBoolean]: ...
	def getDisplayedMnemonicIndex(self, ) -> Union[int, JInt]: ...
	def setVerifyInputWhenFocusTarget(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setActionMap(self, arg0: javawrappers.javax.swing.ActionMap, ) -> None: ...
	def getMouseWheelListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseWheelListener, 1): ...
	def getDisplayedMnemonic(self, ) -> Union[int, JInt]: ...
	def getComponents(self, ) -> JArray(javawrappers.java.awt.Component, 1): ...
	def getLeafIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def getOpenIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def setInputVerifier(self, arg0: javawrappers.javax.swing.InputVerifier, ) -> None: ...
	def setBackgroundSelectionColor(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def removeMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def doLayout(self, ) -> None: ...
	def getNextFocusableComponent(self, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.PopupMenu, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def putClientProperty(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def setFocusCycleRoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDisplayedMnemonic(self, arg0: Union[string, JString], ) -> None: ...
	@overload
	def setDisplayedMnemonic(self, arg0: Union[int, JInt], ) -> None: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def setNextFocusableComponent(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def setDropTarget(self, arg0: javawrappers.java.awt.dnd.DropTarget, ) -> None: ...
	@overload
	def list(self, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, arg1: Union[int, JInt], ) -> None: ...
	def setTextSelectionColor(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def getCheckBoxOffset(self, ) -> javawrappers.java.awt.Dimension: ...
	def revalidate(self, ) -> None: ...
	def createToolTip(self, ) -> javawrappers.javax.swing.JToolTip: ...
	def getDefaultLeafIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	@staticmethod
	def setDefaultLocale(arg0: javawrappers.java.util.Locale, ) -> None: ...
	def removeNotify(self, ) -> None: ...
	def gotFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def removeAncestorListener(self, arg0: javawrappers.javax.swing.event.AncestorListener, ) -> None: ...
	def scrollRectToVisible(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def getRegisteredKeyStrokes(self, ) -> JArray(javawrappers.javax.swing.KeyStroke, 1): ...
	def handleEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isForegroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def show(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def show(self, ) -> None: ...
	def update(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def isFocusTraversalPolicySet(self, ) -> Union[int, JBoolean]: ...
	def getUIClassID(self, ) -> javawrappers.java.lang.String: ...
	def setMaximumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.MenuComponent, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	def addMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def imageUpdate(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	def getLayout(self, ) -> javawrappers.java.awt.LayoutManager: ...
	def getBorderSelectionColor(self, ) -> javawrappers.java.awt.Color: ...
	def addKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getContainerListeners(self, ) -> JArray(javawrappers.java.awt.event.ContainerListener, 1): ...
	def setLeafIcon(self, arg0: javawrappers.javax.swing.Icon, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getComponentListeners(self, ) -> JArray(javawrappers.java.awt.event.ComponentListener, 1): ...
	def isMaximumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def getTreeCellRendererComponent(self, arg0: javawrappers.javax.swing.JTree, arg1: javawrappers.java.lang.Object, arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], arg4: Union[int, JBoolean], arg5: Union[int, JInt], arg6: Union[int, JBoolean], ) -> javawrappers.java.awt.Component: ...
	def getCursor(self, ) -> javawrappers.java.awt.Cursor: ...
	@overload
	def createImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Image: ...
	@overload
	def createImage(self, arg0: javawrappers.java.awt.image.ImageProducer, ) -> javawrappers.java.awt.Image: ...
	def mouseMove(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def areFocusTraversalKeysSet(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getKeyListeners(self, ) -> JArray(javawrappers.java.awt.event.KeyListener, 1): ...
	@overload
	def registerKeyboardAction(self, arg0: javawrappers.java.awt.event.ActionListener, arg1: javawrappers.javax.swing.KeyStroke, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def registerKeyboardAction(self, arg0: javawrappers.java.awt.event.ActionListener, arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.swing.KeyStroke, arg3: Union[int, JInt], ) -> None: ...
	def addAncestorListener(self, arg0: javawrappers.javax.swing.event.AncestorListener, ) -> None: ...
	def layout(self, ) -> None: ...
	def print_(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getComponentPopupMenu(self, ) -> javawrappers.javax.swing.JPopupMenu: ...
	def getBaseline(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def setUI(self, arg0: javawrappers.javax.swing.plaf.LabelUI, ) -> None: ...
	def getHorizontalAlignment(self, ) -> Union[int, JInt]: ...
	def paintComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setBorder(self, arg0: javawrappers.javax.swing.border.Border, ) -> None: ...
	def getFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.FocusListener, 1): ...
	@overload
	def resize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def resize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.awt.ImageCapabilities, ) -> javawrappers.java.awt.image.VolatileImage: ...
	def location(self, ) -> javawrappers.java.awt.Point: ...
	def lostFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def keyDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getDropTarget(self, ) -> javawrappers.java.awt.dnd.DropTarget: ...
	def getTransferHandler(self, ) -> javawrappers.javax.swing.TransferHandler: ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def setText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getHierarchyBoundsListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyBoundsListener, 1): ...
	def getRootPane(self, ) -> javawrappers.javax.swing.JRootPane: ...
	def getAutoscrolls(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def getBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> javawrappers.java.awt.Rectangle: ...
	def setPreferredSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def setInputMap(self, arg0: Union[int, JInt], arg1: javawrappers.javax.swing.InputMap, ) -> None: ...
	@overload
	def enable(self, ) -> None: ...
	@overload
	def enable(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def paintImmediately(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	@overload
	def paintImmediately(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def getMousePosition(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.awt.Point: ...
	@overload
	def getMousePosition(self, ) -> javawrappers.java.awt.Point: ...
	def isManagingFocus(self, ) -> Union[int, JBoolean]: ...
	def action(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def addContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def setHorizontalTextPosition(self, arg0: Union[int, JInt], ) -> None: ...
	def setComponentZOrder(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: JByte, arg2: JByte, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], arg2: Union[int, JShort], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], arg2: Union[string, JString], ) -> None: ...
	def getBackgroundNonSelectionColor(self, ) -> javawrappers.java.awt.Color: ...
	def addMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def getComponentOrientation(self, ) -> javawrappers.java.awt.ComponentOrientation: ...
	def setFocusable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getTreeLock(self, ) -> javawrappers.java.lang.Object: ...
	def addHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def isBackgroundSet(self, ) -> Union[int, JBoolean]: ...
	def getBackgroundSelectionColor(self, ) -> javawrappers.java.awt.Color: ...
	@overload
	def findComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def findComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setOpaque(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setComponentPopupMenu(self, arg0: javawrappers.javax.swing.JPopupMenu, ) -> None: ...
	def setEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLightweight(self, ) -> Union[int, JBoolean]: ...
	def setTransferHandler(self, arg0: javawrappers.javax.swing.TransferHandler, ) -> None: ...
	def isEnabled(self, ) -> Union[int, JBoolean]: ...
	def minimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def bounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def repaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def repaint(self, ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def getMouseMotionListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseMotionListener, 1): ...
	def setMinimumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def transferFocus(self, ) -> None: ...
	def printComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	@overload
	def getInputMap(self, ) -> javawrappers.javax.swing.InputMap: ...
	@overload
	def getInputMap(self, arg0: Union[int, JInt], ) -> javawrappers.javax.swing.InputMap: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setRequestFocusEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getMaximumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getLocationOnScreen(self, ) -> javawrappers.java.awt.Point: ...
	def keyUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getWidth(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def setFocusTraversalPolicy(self, arg0: javawrappers.java.awt.FocusTraversalPolicy, ) -> None: ...
	def paintAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setFocusTraversalKeys(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ) -> None: ...
	def getIconTextGap(self, ) -> Union[int, JInt]: ...
	def setDebugGraphicsOptions(self, arg0: Union[int, JInt], ) -> None: ...
	def isPaintingTile(self, ) -> Union[int, JBoolean]: ...
	def getDefaultClosedIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def hasFocus(self, ) -> Union[int, JBoolean]: ...
	def isPreferredSizeSet(self, ) -> Union[int, JBoolean]: ...
	def isDoubleBuffered(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getPropertyChangeListeners(self, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	@overload
	def getPropertyChangeListeners(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	def getColorModel(self, ) -> javawrappers.java.awt.image.ColorModel: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getVerticalTextPosition(self, ) -> Union[int, JInt]: ...
	@overload
	def getInsets(self, arg0: javawrappers.java.awt.Insets, ) -> javawrappers.java.awt.Insets: ...
	@overload
	def getInsets(self, ) -> javawrappers.java.awt.Insets: ...
	def getFocusTraversalKeysEnabled(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getDefaultLocale() -> javawrappers.java.util.Locale: ...
	def getIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def hide(self, ) -> None: ...
	def getPreferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def disable(self, ) -> None: ...
	def setVerticalAlignment(self, arg0: Union[int, JInt], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	def isFocusable(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getToolTipText(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> javawrappers.java.lang.String: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getBorder(self, ) -> javawrappers.javax.swing.border.Border: ...
	def isPaintingForPrint(self, ) -> Union[int, JBoolean]: ...
	def getTextSelectionColor(self, ) -> javawrappers.java.awt.Color: ...
	def insets(self, ) -> javawrappers.java.awt.Insets: ...
	def setMixingCutoutShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def setBackgroundNonSelectionColor(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def mouseExit(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getHierarchyListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyListener, 1): ...
	def computeVisibleRect(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def isShowing(self, ) -> Union[int, JBoolean]: ...
	def mouseEnter(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def mouseDrag(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def preferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getMouseListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseListener, 1): ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def setInheritsPopupMenu(self, arg0: Union[int, JBoolean], ) -> None: ...
	def deliverEvent(self, arg0: javawrappers.java.awt.Event, ) -> None: ...
	def getActionMap(self, ) -> javawrappers.javax.swing.ActionMap: ...
	def getForeground(self, ) -> javawrappers.java.awt.Color: ...
	def isAncestorOf(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def getComponentCount(self, ) -> Union[int, JInt]: ...
	def setVerticalTextPosition(self, arg0: Union[int, JInt], ) -> None: ...
	def setIcon(self, arg0: javawrappers.javax.swing.Icon, ) -> None: ...
	def setClosedIcon(self, arg0: javawrappers.javax.swing.Icon, ) -> None: ...
	@overload
	def getUI(self, ) -> javawrappers.javax.swing.plaf.LabelUI: ...
	@overload
	def getUI(self, ) -> javawrappers.javax.swing.plaf.ComponentUI: ...
	def getTopLevelAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def getActionForKeyStroke(self, arg0: javawrappers.javax.swing.KeyStroke, ) -> javawrappers.java.awt.event.ActionListener: ...
	def grabFocus(self, ) -> None: ...
	def getPopupLocation(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> javawrappers.java.awt.Point: ...
	def setCursor(self, arg0: javawrappers.java.awt.Cursor, ) -> None: ...
	def getLabelFor(self, ) -> javawrappers.java.awt.Component: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def isDisplayable(self, ) -> Union[int, JBoolean]: ...
	def getGraphicsConfiguration(self, ) -> javawrappers.java.awt.GraphicsConfiguration: ...
	def getComponent(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def removeComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	@overload
	def requestFocus(self, arg0: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocus(self, ) -> None: ...
	@overload
	def requestFocus(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> None: ...
	def addVetoableChangeListener(self, arg0: javawrappers.java.beans.VetoableChangeListener, ) -> None: ...
	def locate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def addFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def getInheritsPopupMenu(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def getComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def updateUI(self, ) -> None: ...
	@overload
	def isFocusCycleRoot(self, arg0: javawrappers.java.awt.Container, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, ) -> Union[int, JBoolean]: ...
	def resetKeyboardActions(self, ) -> None: ...
	def setFocusTraversalKeysEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getComponentZOrder(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JInt]: ...
	def setBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def printAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getToolkit(self, ) -> javawrappers.java.awt.Toolkit: ...
	def getVetoableChangeListeners(self, ) -> JArray(javawrappers.java.beans.VetoableChangeListener, 1): ...
	def getHorizontalTextPosition(self, ) -> Union[int, JInt]: ...
	def transferFocusUpCycle(self, ) -> None: ...
	def isFontSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def setLocation(self, arg0: javawrappers.java.awt.Point, ) -> None: ...
	@overload
	def setLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def isFocusTraversalPolicyProvider(self, ) -> Union[int, JBoolean]: ...
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	def removeFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def setIgnoreRepaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getVisibleRect(self, ) -> javawrappers.java.awt.Rectangle: ...
	def transferFocusBackward(self, ) -> None: ...
	def move(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def transferFocusDownCycle(self, ) -> None: ...
	@staticmethod
	def isLightweightComponent(arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def setForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def getDisabledIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def invalidate(self, ) -> None: ...
	def getAccessibleContext(self, ) -> javawrappers.javax.accessibility.AccessibleContext: ...
	def isFocusOwner(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getSize(self, arg0: javawrappers.java.awt.Dimension, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def getSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getX(self, ) -> Union[int, JInt]: ...
	def removeHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def getY(self, ) -> Union[int, JInt]: ...
	def getFocusTraversalPolicy(self, ) -> javawrappers.java.awt.FocusTraversalPolicy: ...
	def removeMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def getBackground(self, ) -> javawrappers.java.awt.Color: ...
	def getDebugGraphicsOptions(self, ) -> Union[int, JInt]: ...
	def addMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...


