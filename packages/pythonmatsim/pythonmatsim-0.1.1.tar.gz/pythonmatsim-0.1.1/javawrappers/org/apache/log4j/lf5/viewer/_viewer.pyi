################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.util
import javawrappers.java.awt.image
import javawrappers.java.awt.dnd
import javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer
import javawrappers.java.beans
import javawrappers.javax.swing.table
import javawrappers.javax.swing.event
import javawrappers.java.awt.im
import javawrappers.org.apache.log4j.lf5.viewer
import javawrappers.org.apache.log4j.lf5
import javawrappers.java.awt
import javawrappers.java.lang
import javawrappers.javax.accessibility
import javawrappers.java.text
import javawrappers.java.awt.print
import javawrappers.java.io
import javawrappers.javax.swing.plaf
import javawrappers.java.awt.event
import javawrappers.javax.print
import javawrappers.javax.swing.border
import javawrappers.org.apache.log4j.lf5.util
import javawrappers.javax.print.attribute
import javawrappers.javax.swing

from jpype.types import *
from typing import Union

from typing import overload

class LogTableModel:
	def __init__(self, arg0: JArray(javawrappers.java.lang.Object, 1), arg1: Union[int, JInt], ): ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def removeTableModelListener(self, arg0: javawrappers.javax.swing.event.TableModelListener, ) -> None: ...
	def addTableModelListener(self, arg0: javawrappers.javax.swing.event.TableModelListener, ) -> None: ...
	def setNumRows(self, arg0: Union[int, JInt], ) -> None: ...
	def fireTableStructureChanged(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def findColumn(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JInt]: ...
	def fireTableChanged(self, arg0: javawrappers.javax.swing.event.TableModelEvent, ) -> None: ...
	def getColumnName(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def setDataVector(self, arg0: JArray(JArray(javawrappers.java.lang.Object, 1), 1), arg1: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	@overload
	def setDataVector(self, arg0: javawrappers.java.util.Vector, arg1: javawrappers.java.util.Vector, ) -> None: ...
	def getColumnClass(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Class: ...
	@overload
	def addRow(self, arg0: javawrappers.java.util.Vector, ) -> None: ...
	@overload
	def addRow(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def notify(self, ) -> None: ...
	def setValueAt(self, arg0: javawrappers.java.lang.Object, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def setColumnIdentifiers(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	@overload
	def setColumnIdentifiers(self, arg0: javawrappers.java.util.Vector, ) -> None: ...
	def getValueAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def moveRow(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def removeRow(self, arg0: Union[int, JInt], ) -> None: ...
	def fireTableDataChanged(self, ) -> None: ...
	@overload
	def addColumn(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def addColumn(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.util.Vector, ) -> None: ...
	@overload
	def addColumn(self, arg0: javawrappers.java.lang.Object, arg1: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def newRowsAdded(self, arg0: javawrappers.javax.swing.event.TableModelEvent, ) -> None: ...
	def getDataVector(self, ) -> javawrappers.java.util.Vector: ...
	def newDataAvailable(self, arg0: javawrappers.javax.swing.event.TableModelEvent, ) -> None: ...
	def getRowCount(self, ) -> Union[int, JInt]: ...
	def fireTableRowsUpdated(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def fireTableRowsDeleted(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def getColumnCount(self, ) -> Union[int, JInt]: ...
	def fireTableCellUpdated(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def fireTableRowsInserted(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def getTableModelListeners(self, ) -> JArray(javawrappers.javax.swing.event.TableModelListener, 1): ...
	@overload
	def insertRow(self, arg0: Union[int, JInt], arg1: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	@overload
	def insertRow(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Vector, ) -> None: ...
	def rowsRemoved(self, arg0: javawrappers.javax.swing.event.TableModelEvent, ) -> None: ...
	def isCellEditable(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def setRowCount(self, arg0: Union[int, JInt], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setColumnCount(self, arg0: Union[int, JInt], ) -> None: ...


class LogTableColumnFormatException:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class LogFactor5Dialog:
	@overload
	def getLocation(self, ) -> javawrappers.java.awt.Point: ...
	@overload
	def getLocation(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Point: ...
	@overload
	def requestFocusInWindow(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocusInWindow(self, ) -> Union[int, JBoolean]: ...
	def isOpaque(self, ) -> Union[int, JBoolean]: ...
	def setModalExclusionType(self, arg0: javawrappers.java.awt.Dialog.ModalExclusionType, ) -> None: ...
	def paint(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def removeWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def getInputMethodListeners(self, ) -> JArray(javawrappers.java.awt.event.InputMethodListener, 1): ...
	def setLayout(self, arg0: javawrappers.java.awt.LayoutManager, ) -> None: ...
	def mouseDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getOwner(self, ) -> javawrappers.java.awt.Window: ...
	def getInputMethodRequests(self, ) -> javawrappers.java.awt.im.InputMethodRequests: ...
	def addHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def removeAll(self, ) -> None: ...
	def getMinimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getAlignmentY(self, ) -> Union[float, JFloat]: ...
	def getWindowStateListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowStateListener, 1): ...
	def getAlignmentX(self, ) -> Union[float, JFloat]: ...
	def dispatchEvent(self, arg0: javawrappers.java.awt.AWTEvent, ) -> None: ...
	def setFocusableWindowState(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getMostRecentFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def reshape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def pack(self, ) -> None: ...
	def postEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def toBack(self, ) -> None: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.BufferCapabilities, ) -> None: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def contains(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JBoolean]: ...
	def size(self, ) -> javawrappers.java.awt.Dimension: ...
	def setModal(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getType(self, ) -> javawrappers.java.awt.Window.Type: ...
	def mouseUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def enableInputMethods(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setLayeredPane(self, arg0: javawrappers.javax.swing.JLayeredPane, ) -> None: ...
	def removeContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def addComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	@staticmethod
	def setDefaultLookAndFeelDecorated(arg0: Union[int, JBoolean], ) -> None: ...
	def removeHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def removeWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getFontMetrics(self, arg0: javawrappers.java.awt.Font, ) -> javawrappers.java.awt.FontMetrics: ...
	def getHeight(self, ) -> Union[int, JInt]: ...
	def getIgnoreRepaint(self, ) -> Union[int, JBoolean]: ...
	def getBaselineResizeBehavior(self, ) -> javawrappers.java.awt.Component.BaselineResizeBehavior: ...
	def removeMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def applyComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def isAlwaysOnTopSupported(self, ) -> Union[int, JBoolean]: ...
	def validate(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.java.awt.Container: ...
	def isMinimumSizeSet(self, ) -> Union[int, JBoolean]: ...
	def getWindowFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowFocusListener, 1): ...
	def setComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	@overload
	def setBounds(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	@staticmethod
	def getWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def isValidateRoot(self, ) -> Union[int, JBoolean]: ...
	def addNotify(self, ) -> None: ...
	def addInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFocusCycleRootAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def setFocusTraversalPolicyProvider(self, arg0: Union[int, JBoolean], ) -> None: ...
	def addWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def countComponents(self, ) -> Union[int, JInt]: ...
	def isFocusTraversable(self, ) -> Union[int, JBoolean]: ...
	def inside(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def nextFocus(self, ) -> None: ...
	def getFocusTraversalKeys(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.Set: ...
	def getInputContext(self, ) -> javawrappers.java.awt.im.InputContext: ...
	def isCursorSet(self, ) -> Union[int, JBoolean]: ...
	def getMouseWheelListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseWheelListener, 1): ...
	def getComponents(self, ) -> JArray(javawrappers.java.awt.Component, 1): ...
	def removeMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def doLayout(self, ) -> None: ...
	def isLocationByPlatform(self, ) -> Union[int, JBoolean]: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.PopupMenu, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def setFocusCycleRoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setTitle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def isResizable(self, ) -> Union[int, JBoolean]: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def setDropTarget(self, arg0: javawrappers.java.awt.dnd.DropTarget, ) -> None: ...
	@overload
	def list(self, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, arg1: Union[int, JInt], ) -> None: ...
	def isFocused(self, ) -> Union[int, JBoolean]: ...
	def revalidate(self, ) -> None: ...
	def removeWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def setContentPane(self, arg0: javawrappers.java.awt.Container, ) -> None: ...
	def removeNotify(self, ) -> None: ...
	def getWarningString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getOwnerlessWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def isModal(self, ) -> Union[int, JBoolean]: ...
	def gotFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def handleEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isForegroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def show(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def show(self, ) -> None: ...
	def getShape(self, ) -> javawrappers.java.awt.Shape: ...
	def update(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def isFocusTraversalPolicySet(self, ) -> Union[int, JBoolean]: ...
	def setMaximumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.MenuComponent, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def addMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def imageUpdate(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	def getLayout(self, ) -> javawrappers.java.awt.LayoutManager: ...
	def addKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getContainerListeners(self, ) -> JArray(javawrappers.java.awt.event.ContainerListener, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getComponentListeners(self, ) -> JArray(javawrappers.java.awt.event.ComponentListener, 1): ...
	def getLayeredPane(self, ) -> javawrappers.javax.swing.JLayeredPane: ...
	def isMaximumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def getWindowListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowListener, 1): ...
	def getCursor(self, ) -> javawrappers.java.awt.Cursor: ...
	@overload
	def createImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Image: ...
	@overload
	def createImage(self, arg0: javawrappers.java.awt.image.ImageProducer, ) -> javawrappers.java.awt.Image: ...
	def mouseMove(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def areFocusTraversalKeysSet(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getKeyListeners(self, ) -> JArray(javawrappers.java.awt.event.KeyListener, 1): ...
	def getContentPane(self, ) -> javawrappers.java.awt.Container: ...
	def setModalityType(self, arg0: javawrappers.java.awt.Dialog.ModalityType, ) -> None: ...
	def setType(self, arg0: javawrappers.java.awt.Window.Type, ) -> None: ...
	def layout(self, ) -> None: ...
	def getBaseline(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def print_(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def paintComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.FocusListener, 1): ...
	@overload
	def resize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def resize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.awt.ImageCapabilities, ) -> javawrappers.java.awt.image.VolatileImage: ...
	def isAutoRequestFocus(self, ) -> Union[int, JBoolean]: ...
	def location(self, ) -> javawrappers.java.awt.Point: ...
	def lostFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def keyDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getDropTarget(self, ) -> javawrappers.java.awt.dnd.DropTarget: ...
	def getTransferHandler(self, ) -> javawrappers.javax.swing.TransferHandler: ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def setGlassPane(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def setOpacity(self, arg0: Union[float, JFloat], ) -> None: ...
	def getHierarchyBoundsListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyBoundsListener, 1): ...
	def getRootPane(self, ) -> javawrappers.javax.swing.JRootPane: ...
	@overload
	def getBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def getBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	def setPreferredSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def getJMenuBar(self, ) -> javawrappers.javax.swing.JMenuBar: ...
	@overload
	def enable(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def enable(self, ) -> None: ...
	@overload
	def getMousePosition(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.awt.Point: ...
	@overload
	def getMousePosition(self, ) -> javawrappers.java.awt.Point: ...
	def action(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setIconImages(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def setDefaultCloseOperation(self, arg0: Union[int, JInt], ) -> None: ...
	def addContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def setComponentZOrder(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: JByte, arg2: JByte, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], arg2: Union[string, JString], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], arg2: Union[int, JShort], ) -> None: ...
	def addMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	@staticmethod
	def isDefaultLookAndFeelDecorated() -> Union[int, JBoolean]: ...
	def getComponentOrientation(self, ) -> javawrappers.java.awt.ComponentOrientation: ...
	def setFocusable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getTreeLock(self, ) -> javawrappers.java.lang.Object: ...
	def addHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def isBackgroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def findComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def findComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocationByPlatform(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLightweight(self, ) -> Union[int, JBoolean]: ...
	def setTransferHandler(self, arg0: javawrappers.javax.swing.TransferHandler, ) -> None: ...
	def isEnabled(self, ) -> Union[int, JBoolean]: ...
	def minimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def bounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def repaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def repaint(self, ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	def getMouseMotionListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseMotionListener, 1): ...
	def getModalExclusionType(self, ) -> javawrappers.java.awt.Dialog.ModalExclusionType: ...
	def setMinimumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def transferFocus(self, ) -> None: ...
	def printComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	def setJMenuBar(self, arg0: javawrappers.javax.swing.JMenuBar, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getMaximumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getLocationOnScreen(self, ) -> javawrappers.java.awt.Point: ...
	def keyUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getWidth(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def setFocusTraversalPolicy(self, arg0: javawrappers.java.awt.FocusTraversalPolicy, ) -> None: ...
	def addWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def paintAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setFocusTraversalKeys(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ) -> None: ...
	def hasFocus(self, ) -> Union[int, JBoolean]: ...
	def isPreferredSizeSet(self, ) -> Union[int, JBoolean]: ...
	def addWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def getFocusableWindowState(self, ) -> Union[int, JBoolean]: ...
	def getIconImages(self, ) -> javawrappers.java.util.List: ...
	def isDoubleBuffered(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getPropertyChangeListeners(self, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	@overload
	def getPropertyChangeListeners(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	def getColorModel(self, ) -> javawrappers.java.awt.image.ColorModel: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getInsets(self, ) -> javawrappers.java.awt.Insets: ...
	def getFocusTraversalKeysEnabled(self, ) -> Union[int, JBoolean]: ...
	def hide(self, ) -> None: ...
	def getPreferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def setUndecorated(self, arg0: Union[int, JBoolean], ) -> None: ...
	def disable(self, ) -> None: ...
	def isUndecorated(self, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	def isFocusableWindow(self, ) -> Union[int, JBoolean]: ...
	def isFocusable(self, ) -> Union[int, JBoolean]: ...
	def setLocationRelativeTo(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def insets(self, ) -> javawrappers.java.awt.Insets: ...
	def setIconImage(self, arg0: javawrappers.java.awt.Image, ) -> None: ...
	def setMixingCutoutShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def isActive(self, ) -> Union[int, JBoolean]: ...
	def mouseExit(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getHierarchyListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyListener, 1): ...
	def getOpacity(self, ) -> Union[float, JFloat]: ...
	def isShowing(self, ) -> Union[int, JBoolean]: ...
	def mouseEnter(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getTitle(self, ) -> javawrappers.java.lang.String: ...
	def mouseDrag(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def preferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getDefaultCloseOperation(self, ) -> Union[int, JInt]: ...
	def getMouseListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseListener, 1): ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def setAutoRequestFocus(self, arg0: Union[int, JBoolean], ) -> None: ...
	def toFront(self, ) -> None: ...
	def getGlassPane(self, ) -> javawrappers.java.awt.Component: ...
	def deliverEvent(self, arg0: javawrappers.java.awt.Event, ) -> None: ...
	def getForeground(self, ) -> javawrappers.java.awt.Color: ...
	def isAncestorOf(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def getComponentCount(self, ) -> Union[int, JInt]: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def dispose(self, ) -> None: ...
	def setCursor(self, arg0: javawrappers.java.awt.Cursor, ) -> None: ...
	def isDisplayable(self, ) -> Union[int, JBoolean]: ...
	def getGraphicsConfiguration(self, ) -> javawrappers.java.awt.GraphicsConfiguration: ...
	def getComponent(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def getModalityType(self, ) -> javawrappers.java.awt.Dialog.ModalityType: ...
	def removeComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	@overload
	def requestFocus(self, ) -> None: ...
	@overload
	def requestFocus(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> None: ...
	def locate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def addFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	@overload
	def getComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def getComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def isAlwaysOnTop(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, arg0: javawrappers.java.awt.Container, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, ) -> Union[int, JBoolean]: ...
	def setFocusTraversalKeysEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getComponentZOrder(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JInt]: ...
	def setBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def printAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getToolkit(self, ) -> javawrappers.java.awt.Toolkit: ...
	def transferFocusUpCycle(self, ) -> None: ...
	def isFontSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def isFocusTraversalPolicyProvider(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setLocation(self, arg0: javawrappers.java.awt.Point, ) -> None: ...
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	def removeFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def setIgnoreRepaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def transferFocusBackward(self, ) -> None: ...
	def getOwnedWindows(self, ) -> JArray(javawrappers.java.awt.Window, 1): ...
	def move(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def transferFocusDownCycle(self, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.util.ResourceBundle, ) -> None: ...
	def setResizable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def invalidate(self, ) -> None: ...
	def getBufferStrategy(self, ) -> javawrappers.java.awt.image.BufferStrategy: ...
	def getAccessibleContext(self, ) -> javawrappers.javax.accessibility.AccessibleContext: ...
	def setShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def isFocusOwner(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getSize(self, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def getSize(self, arg0: javawrappers.java.awt.Dimension, ) -> javawrappers.java.awt.Dimension: ...
	def getX(self, ) -> Union[int, JInt]: ...
	def removeHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def getY(self, ) -> Union[int, JInt]: ...
	def getFocusTraversalPolicy(self, ) -> javawrappers.java.awt.FocusTraversalPolicy: ...
	def setAlwaysOnTop(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def removeMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def getBackground(self, ) -> javawrappers.java.awt.Color: ...
	def addMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...


class LogTableRowRenderer:
	def __init__(self, ): ...
	@overload
	def getLocation(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Point: ...
	@overload
	def getLocation(self, ) -> javawrappers.java.awt.Point: ...
	@overload
	def requestFocusInWindow(self, ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocusInWindow(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> Union[int, JBoolean]: ...
	def getInputVerifier(self, ) -> javawrappers.javax.swing.InputVerifier: ...
	def isOpaque(self, ) -> Union[int, JBoolean]: ...
	def setDoubleBuffered(self, arg0: Union[int, JBoolean], ) -> None: ...
	def paint(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getInputMethodListeners(self, ) -> JArray(javawrappers.java.awt.event.InputMethodListener, 1): ...
	def setLayout(self, arg0: javawrappers.java.awt.LayoutManager, ) -> None: ...
	def mouseDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getInputMethodRequests(self, ) -> javawrappers.java.awt.im.InputMethodRequests: ...
	def requestDefaultFocus(self, ) -> Union[int, JBoolean]: ...
	def addHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def removeAll(self, ) -> None: ...
	def getMinimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getAlignmentY(self, ) -> Union[float, JFloat]: ...
	def setAutoscrolls(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getAlignmentX(self, ) -> Union[float, JFloat]: ...
	def setAlignmentY(self, arg0: Union[float, JFloat], ) -> None: ...
	def dispatchEvent(self, arg0: javawrappers.java.awt.AWTEvent, ) -> None: ...
	def isOptimizedDrawingEnabled(self, ) -> Union[int, JBoolean]: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	def reshape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def setAlignmentX(self, arg0: Union[float, JFloat], ) -> None: ...
	def postEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JBoolean]: ...
	def size(self, ) -> javawrappers.java.awt.Dimension: ...
	def unregisterKeyboardAction(self, arg0: javawrappers.javax.swing.KeyStroke, ) -> None: ...
	def mouseUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def enableInputMethods(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def removeVetoableChangeListener(self, arg0: javawrappers.java.beans.VetoableChangeListener, ) -> None: ...
	def addComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def setDisabledIcon(self, arg0: javawrappers.javax.swing.Icon, ) -> None: ...
	def setHorizontalAlignment(self, arg0: Union[int, JInt], ) -> None: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def getClientProperty(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def removeHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def setDisplayedMnemonicIndex(self, arg0: Union[int, JInt], ) -> None: ...
	def isRequestFocusEnabled(self, ) -> Union[int, JBoolean]: ...
	def getFontMetrics(self, arg0: javawrappers.java.awt.Font, ) -> javawrappers.java.awt.FontMetrics: ...
	def getHeight(self, ) -> Union[int, JInt]: ...
	def getAncestorListeners(self, ) -> JArray(javawrappers.javax.swing.event.AncestorListener, 1): ...
	def getIgnoreRepaint(self, ) -> Union[int, JBoolean]: ...
	def getBaselineResizeBehavior(self, ) -> javawrappers.java.awt.Component.BaselineResizeBehavior: ...
	def removeMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def applyComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def validate(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.java.awt.Container: ...
	def isMinimumSizeSet(self, ) -> Union[int, JBoolean]: ...
	def setComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def getVerifyInputWhenFocusTarget(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setBounds(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def getVerticalAlignment(self, ) -> Union[int, JInt]: ...
	def isValidateRoot(self, ) -> Union[int, JBoolean]: ...
	def addNotify(self, ) -> None: ...
	def addInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFocusCycleRootAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def getToolTipLocation(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> javawrappers.java.awt.Point: ...
	def setIconTextGap(self, arg0: Union[int, JInt], ) -> None: ...
	def setLabelFor(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def setFocusTraversalPolicyProvider(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getConditionForKeyStroke(self, arg0: javawrappers.javax.swing.KeyStroke, ) -> Union[int, JInt]: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def countComponents(self, ) -> Union[int, JInt]: ...
	def isFocusTraversable(self, ) -> Union[int, JBoolean]: ...
	def inside(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getInputContext(self, ) -> javawrappers.java.awt.im.InputContext: ...
	def nextFocus(self, ) -> None: ...
	def getFocusTraversalKeys(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.Set: ...
	def isCursorSet(self, ) -> Union[int, JBoolean]: ...
	def getDisplayedMnemonicIndex(self, ) -> Union[int, JInt]: ...
	def setVerifyInputWhenFocusTarget(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setActionMap(self, arg0: javawrappers.javax.swing.ActionMap, ) -> None: ...
	def getMouseWheelListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseWheelListener, 1): ...
	def getDisplayedMnemonic(self, ) -> Union[int, JInt]: ...
	def getComponents(self, ) -> JArray(javawrappers.java.awt.Component, 1): ...
	def setInputVerifier(self, arg0: javawrappers.javax.swing.InputVerifier, ) -> None: ...
	def removeMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def doLayout(self, ) -> None: ...
	def getNextFocusableComponent(self, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.PopupMenu, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def putClientProperty(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def setFocusCycleRoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def setDisplayedMnemonic(self, arg0: Union[string, JString], ) -> None: ...
	@overload
	def setDisplayedMnemonic(self, arg0: Union[int, JInt], ) -> None: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def setNextFocusableComponent(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def setDropTarget(self, arg0: javawrappers.java.awt.dnd.DropTarget, ) -> None: ...
	@overload
	def list(self, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, arg1: Union[int, JInt], ) -> None: ...
	def revalidate(self, ) -> None: ...
	def createToolTip(self, ) -> javawrappers.javax.swing.JToolTip: ...
	@staticmethod
	def setDefaultLocale(arg0: javawrappers.java.util.Locale, ) -> None: ...
	def removeNotify(self, ) -> None: ...
	def gotFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def removeAncestorListener(self, arg0: javawrappers.javax.swing.event.AncestorListener, ) -> None: ...
	def scrollRectToVisible(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def getRegisteredKeyStrokes(self, ) -> JArray(javawrappers.javax.swing.KeyStroke, 1): ...
	def handleEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isForegroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def show(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def show(self, ) -> None: ...
	def update(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def isFocusTraversalPolicySet(self, ) -> Union[int, JBoolean]: ...
	def getUIClassID(self, ) -> javawrappers.java.lang.String: ...
	def setMaximumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.MenuComponent, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	def addMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def imageUpdate(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	def getLayout(self, ) -> javawrappers.java.awt.LayoutManager: ...
	def addKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getContainerListeners(self, ) -> JArray(javawrappers.java.awt.event.ContainerListener, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getComponentListeners(self, ) -> JArray(javawrappers.java.awt.event.ComponentListener, 1): ...
	def isMaximumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def getCursor(self, ) -> javawrappers.java.awt.Cursor: ...
	@overload
	def createImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Image: ...
	@overload
	def createImage(self, arg0: javawrappers.java.awt.image.ImageProducer, ) -> javawrappers.java.awt.Image: ...
	def mouseMove(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def areFocusTraversalKeysSet(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getKeyListeners(self, ) -> JArray(javawrappers.java.awt.event.KeyListener, 1): ...
	@overload
	def registerKeyboardAction(self, arg0: javawrappers.java.awt.event.ActionListener, arg1: javawrappers.javax.swing.KeyStroke, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def registerKeyboardAction(self, arg0: javawrappers.java.awt.event.ActionListener, arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.swing.KeyStroke, arg3: Union[int, JInt], ) -> None: ...
	def addAncestorListener(self, arg0: javawrappers.javax.swing.event.AncestorListener, ) -> None: ...
	def layout(self, ) -> None: ...
	def print_(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getComponentPopupMenu(self, ) -> javawrappers.javax.swing.JPopupMenu: ...
	def getBaseline(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def setUI(self, arg0: javawrappers.javax.swing.plaf.LabelUI, ) -> None: ...
	def getHorizontalAlignment(self, ) -> Union[int, JInt]: ...
	def paintComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setBorder(self, arg0: javawrappers.javax.swing.border.Border, ) -> None: ...
	def getFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.FocusListener, 1): ...
	@overload
	def resize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def resize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.awt.ImageCapabilities, ) -> javawrappers.java.awt.image.VolatileImage: ...
	def location(self, ) -> javawrappers.java.awt.Point: ...
	def lostFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def keyDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getDropTarget(self, ) -> javawrappers.java.awt.dnd.DropTarget: ...
	def getTransferHandler(self, ) -> javawrappers.javax.swing.TransferHandler: ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def setText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getHierarchyBoundsListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyBoundsListener, 1): ...
	def getRootPane(self, ) -> javawrappers.javax.swing.JRootPane: ...
	def getAutoscrolls(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def getBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> javawrappers.java.awt.Rectangle: ...
	def setPreferredSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def setInputMap(self, arg0: Union[int, JInt], arg1: javawrappers.javax.swing.InputMap, ) -> None: ...
	@overload
	def enable(self, ) -> None: ...
	@overload
	def enable(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def paintImmediately(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	@overload
	def paintImmediately(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def getMousePosition(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.awt.Point: ...
	@overload
	def getMousePosition(self, ) -> javawrappers.java.awt.Point: ...
	def isManagingFocus(self, ) -> Union[int, JBoolean]: ...
	def action(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def addContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def setHorizontalTextPosition(self, arg0: Union[int, JInt], ) -> None: ...
	def setComponentZOrder(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], arg2: Union[string, JString], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: JByte, arg2: JByte, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], arg2: Union[int, JShort], ) -> None: ...
	def addMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def getTableCellRendererComponent(self, arg0: javawrappers.javax.swing.JTable, arg1: javawrappers.java.lang.Object, arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def getComponentOrientation(self, ) -> javawrappers.java.awt.ComponentOrientation: ...
	def setFocusable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getTreeLock(self, ) -> javawrappers.java.lang.Object: ...
	def addHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def isBackgroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def findComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def findComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setOpaque(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setComponentPopupMenu(self, arg0: javawrappers.javax.swing.JPopupMenu, ) -> None: ...
	def setEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLightweight(self, ) -> Union[int, JBoolean]: ...
	def setTransferHandler(self, arg0: javawrappers.javax.swing.TransferHandler, ) -> None: ...
	def isEnabled(self, ) -> Union[int, JBoolean]: ...
	def minimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def bounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def repaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, ) -> None: ...
	@overload
	def repaint(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def getMouseMotionListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseMotionListener, 1): ...
	def setMinimumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def transferFocus(self, ) -> None: ...
	def printComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	@overload
	def getInputMap(self, ) -> javawrappers.javax.swing.InputMap: ...
	@overload
	def getInputMap(self, arg0: Union[int, JInt], ) -> javawrappers.javax.swing.InputMap: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setRequestFocusEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getMaximumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getLocationOnScreen(self, ) -> javawrappers.java.awt.Point: ...
	def keyUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getWidth(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def setFocusTraversalPolicy(self, arg0: javawrappers.java.awt.FocusTraversalPolicy, ) -> None: ...
	def paintAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setFocusTraversalKeys(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ) -> None: ...
	def getIconTextGap(self, ) -> Union[int, JInt]: ...
	def setDebugGraphicsOptions(self, arg0: Union[int, JInt], ) -> None: ...
	def isPaintingTile(self, ) -> Union[int, JBoolean]: ...
	def hasFocus(self, ) -> Union[int, JBoolean]: ...
	def isPreferredSizeSet(self, ) -> Union[int, JBoolean]: ...
	def isDoubleBuffered(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getPropertyChangeListeners(self, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	@overload
	def getPropertyChangeListeners(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	def getColorModel(self, ) -> javawrappers.java.awt.image.ColorModel: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getVerticalTextPosition(self, ) -> Union[int, JInt]: ...
	@overload
	def getInsets(self, arg0: javawrappers.java.awt.Insets, ) -> javawrappers.java.awt.Insets: ...
	@overload
	def getInsets(self, ) -> javawrappers.java.awt.Insets: ...
	def getFocusTraversalKeysEnabled(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getDefaultLocale() -> javawrappers.java.util.Locale: ...
	def getIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def hide(self, ) -> None: ...
	def getPreferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def disable(self, ) -> None: ...
	def setVerticalAlignment(self, arg0: Union[int, JInt], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	def isFocusable(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getToolTipText(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> javawrappers.java.lang.String: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getBorder(self, ) -> javawrappers.javax.swing.border.Border: ...
	def isPaintingForPrint(self, ) -> Union[int, JBoolean]: ...
	def insets(self, ) -> javawrappers.java.awt.Insets: ...
	def setMixingCutoutShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def mouseExit(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getHierarchyListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyListener, 1): ...
	def computeVisibleRect(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def isShowing(self, ) -> Union[int, JBoolean]: ...
	def mouseEnter(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def mouseDrag(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def preferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getMouseListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseListener, 1): ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def setInheritsPopupMenu(self, arg0: Union[int, JBoolean], ) -> None: ...
	def deliverEvent(self, arg0: javawrappers.java.awt.Event, ) -> None: ...
	def getActionMap(self, ) -> javawrappers.javax.swing.ActionMap: ...
	def getForeground(self, ) -> javawrappers.java.awt.Color: ...
	def isAncestorOf(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def getComponentCount(self, ) -> Union[int, JInt]: ...
	def setVerticalTextPosition(self, arg0: Union[int, JInt], ) -> None: ...
	def setIcon(self, arg0: javawrappers.javax.swing.Icon, ) -> None: ...
	@overload
	def getUI(self, ) -> javawrappers.javax.swing.plaf.LabelUI: ...
	@overload
	def getUI(self, ) -> javawrappers.javax.swing.plaf.ComponentUI: ...
	def getTopLevelAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def getActionForKeyStroke(self, arg0: javawrappers.javax.swing.KeyStroke, ) -> javawrappers.java.awt.event.ActionListener: ...
	def grabFocus(self, ) -> None: ...
	def getPopupLocation(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> javawrappers.java.awt.Point: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def setCursor(self, arg0: javawrappers.java.awt.Cursor, ) -> None: ...
	def getLabelFor(self, ) -> javawrappers.java.awt.Component: ...
	def isDisplayable(self, ) -> Union[int, JBoolean]: ...
	def getGraphicsConfiguration(self, ) -> javawrappers.java.awt.GraphicsConfiguration: ...
	def getComponent(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def removeComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	@overload
	def requestFocus(self, arg0: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocus(self, ) -> None: ...
	@overload
	def requestFocus(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> None: ...
	def addVetoableChangeListener(self, arg0: javawrappers.java.beans.VetoableChangeListener, ) -> None: ...
	def locate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def addFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def getInheritsPopupMenu(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def getComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def updateUI(self, ) -> None: ...
	@overload
	def isFocusCycleRoot(self, arg0: javawrappers.java.awt.Container, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, ) -> Union[int, JBoolean]: ...
	def resetKeyboardActions(self, ) -> None: ...
	def setFocusTraversalKeysEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getComponentZOrder(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JInt]: ...
	def setBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def printAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getToolkit(self, ) -> javawrappers.java.awt.Toolkit: ...
	def getVetoableChangeListeners(self, ) -> JArray(javawrappers.java.beans.VetoableChangeListener, 1): ...
	def getHorizontalTextPosition(self, ) -> Union[int, JInt]: ...
	def transferFocusUpCycle(self, ) -> None: ...
	def isFontSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def setLocation(self, arg0: javawrappers.java.awt.Point, ) -> None: ...
	@overload
	def setLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def isFocusTraversalPolicyProvider(self, ) -> Union[int, JBoolean]: ...
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	def removeFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def setIgnoreRepaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getVisibleRect(self, ) -> javawrappers.java.awt.Rectangle: ...
	def transferFocusBackward(self, ) -> None: ...
	def move(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def transferFocusDownCycle(self, ) -> None: ...
	@staticmethod
	def isLightweightComponent(arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def setForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def getDisabledIcon(self, ) -> javawrappers.javax.swing.Icon: ...
	def invalidate(self, ) -> None: ...
	def getAccessibleContext(self, ) -> javawrappers.javax.accessibility.AccessibleContext: ...
	def isFocusOwner(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getSize(self, arg0: javawrappers.java.awt.Dimension, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def getSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getX(self, ) -> Union[int, JInt]: ...
	def removeHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def getY(self, ) -> Union[int, JInt]: ...
	def getFocusTraversalPolicy(self, ) -> javawrappers.java.awt.FocusTraversalPolicy: ...
	def removeMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def getBackground(self, ) -> javawrappers.java.awt.Color: ...
	def getDebugGraphicsOptions(self, ) -> Union[int, JInt]: ...
	def addMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...


class FilteredLogTableModel:
	def __init__(self, ): ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getTotalRowCount(self, ) -> Union[int, JInt]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def addLogRecord(self, arg0: javawrappers.org.apache.log4j.lf5.LogRecord, ) -> Union[int, JBoolean]: ...
	def removeTableModelListener(self, arg0: javawrappers.javax.swing.event.TableModelListener, ) -> None: ...
	def addTableModelListener(self, arg0: javawrappers.javax.swing.event.TableModelListener, ) -> None: ...
	def fireTableStructureChanged(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def findColumn(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JInt]: ...
	def fireTableChanged(self, arg0: javawrappers.javax.swing.event.TableModelEvent, ) -> None: ...
	def getColumnName(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def setLogRecordFilter(self, arg0: javawrappers.org.apache.log4j.lf5.LogRecordFilter, ) -> None: ...
	def getColumnClass(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Class: ...
	def notify(self, ) -> None: ...
	def setValueAt(self, arg0: javawrappers.java.lang.Object, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def getValueAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def fireTableDataChanged(self, ) -> None: ...
	def setMaxNumberOfLogRecords(self, arg0: Union[int, JInt], ) -> None: ...
	def getRowCount(self, ) -> Union[int, JInt]: ...
	def fireTableRowsUpdated(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def fireTableRowsDeleted(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def clear(self, ) -> None: ...
	def refresh(self, ) -> None: ...
	def getColumnCount(self, ) -> Union[int, JInt]: ...
	def fireTableCellUpdated(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def fireTableRowsInserted(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def getTableModelListeners(self, ) -> JArray(javawrappers.javax.swing.event.TableModelListener, 1): ...
	def isCellEditable(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fastRefresh(self, ) -> None: ...
	def getLogRecordFilter(self, ) -> javawrappers.org.apache.log4j.lf5.LogRecordFilter: ...


class LogFactor5InputDialog:
	@overload
	def __init__(self, arg0: javawrappers.javax.swing.JFrame, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.javax.swing.JFrame, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ): ...
	@overload
	def getLocation(self, ) -> javawrappers.java.awt.Point: ...
	@overload
	def getLocation(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Point: ...
	@overload
	def requestFocusInWindow(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocusInWindow(self, ) -> Union[int, JBoolean]: ...
	def isOpaque(self, ) -> Union[int, JBoolean]: ...
	def setModalExclusionType(self, arg0: javawrappers.java.awt.Dialog.ModalExclusionType, ) -> None: ...
	def paint(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def removeWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def getInputMethodListeners(self, ) -> JArray(javawrappers.java.awt.event.InputMethodListener, 1): ...
	def setLayout(self, arg0: javawrappers.java.awt.LayoutManager, ) -> None: ...
	def mouseDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getOwner(self, ) -> javawrappers.java.awt.Window: ...
	def getInputMethodRequests(self, ) -> javawrappers.java.awt.im.InputMethodRequests: ...
	def addHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def removeAll(self, ) -> None: ...
	def getMinimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getAlignmentY(self, ) -> Union[float, JFloat]: ...
	def getWindowStateListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowStateListener, 1): ...
	def getAlignmentX(self, ) -> Union[float, JFloat]: ...
	def dispatchEvent(self, arg0: javawrappers.java.awt.AWTEvent, ) -> None: ...
	def setFocusableWindowState(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	def getMostRecentFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def reshape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def pack(self, ) -> None: ...
	def postEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def toBack(self, ) -> None: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.BufferCapabilities, ) -> None: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def contains(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JBoolean]: ...
	def size(self, ) -> javawrappers.java.awt.Dimension: ...
	def setModal(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getType(self, ) -> javawrappers.java.awt.Window.Type: ...
	def mouseUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def enableInputMethods(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setLayeredPane(self, arg0: javawrappers.javax.swing.JLayeredPane, ) -> None: ...
	def removeContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def addComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	@staticmethod
	def setDefaultLookAndFeelDecorated(arg0: Union[int, JBoolean], ) -> None: ...
	def removeHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def removeWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getFontMetrics(self, arg0: javawrappers.java.awt.Font, ) -> javawrappers.java.awt.FontMetrics: ...
	def getHeight(self, ) -> Union[int, JInt]: ...
	def getIgnoreRepaint(self, ) -> Union[int, JBoolean]: ...
	def getBaselineResizeBehavior(self, ) -> javawrappers.java.awt.Component.BaselineResizeBehavior: ...
	def removeMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def applyComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def isAlwaysOnTopSupported(self, ) -> Union[int, JBoolean]: ...
	def validate(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.java.awt.Container: ...
	def isMinimumSizeSet(self, ) -> Union[int, JBoolean]: ...
	def getWindowFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowFocusListener, 1): ...
	def setComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	@overload
	def setBounds(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	@staticmethod
	def getWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def isValidateRoot(self, ) -> Union[int, JBoolean]: ...
	def addNotify(self, ) -> None: ...
	def addInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFocusCycleRootAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def setFocusTraversalPolicyProvider(self, arg0: Union[int, JBoolean], ) -> None: ...
	def addWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def countComponents(self, ) -> Union[int, JInt]: ...
	def isFocusTraversable(self, ) -> Union[int, JBoolean]: ...
	def inside(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def nextFocus(self, ) -> None: ...
	def getFocusTraversalKeys(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.Set: ...
	def getInputContext(self, ) -> javawrappers.java.awt.im.InputContext: ...
	def isCursorSet(self, ) -> Union[int, JBoolean]: ...
	def getMouseWheelListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseWheelListener, 1): ...
	def getComponents(self, ) -> JArray(javawrappers.java.awt.Component, 1): ...
	def removeMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def doLayout(self, ) -> None: ...
	def isLocationByPlatform(self, ) -> Union[int, JBoolean]: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.PopupMenu, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def setFocusCycleRoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setTitle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def isResizable(self, ) -> Union[int, JBoolean]: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def setDropTarget(self, arg0: javawrappers.java.awt.dnd.DropTarget, ) -> None: ...
	@overload
	def list(self, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, arg1: Union[int, JInt], ) -> None: ...
	def isFocused(self, ) -> Union[int, JBoolean]: ...
	def revalidate(self, ) -> None: ...
	def removeWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def setContentPane(self, arg0: javawrappers.java.awt.Container, ) -> None: ...
	def removeNotify(self, ) -> None: ...
	def getWarningString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getOwnerlessWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def isModal(self, ) -> Union[int, JBoolean]: ...
	def gotFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def handleEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isForegroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def show(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def show(self, ) -> None: ...
	def getShape(self, ) -> javawrappers.java.awt.Shape: ...
	def update(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def isFocusTraversalPolicySet(self, ) -> Union[int, JBoolean]: ...
	def setMaximumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.MenuComponent, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def addMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def imageUpdate(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	def getLayout(self, ) -> javawrappers.java.awt.LayoutManager: ...
	def addKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getContainerListeners(self, ) -> JArray(javawrappers.java.awt.event.ContainerListener, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getComponentListeners(self, ) -> JArray(javawrappers.java.awt.event.ComponentListener, 1): ...
	def getLayeredPane(self, ) -> javawrappers.javax.swing.JLayeredPane: ...
	def isMaximumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def getWindowListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowListener, 1): ...
	def getCursor(self, ) -> javawrappers.java.awt.Cursor: ...
	@overload
	def createImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Image: ...
	@overload
	def createImage(self, arg0: javawrappers.java.awt.image.ImageProducer, ) -> javawrappers.java.awt.Image: ...
	def mouseMove(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def areFocusTraversalKeysSet(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getKeyListeners(self, ) -> JArray(javawrappers.java.awt.event.KeyListener, 1): ...
	def getContentPane(self, ) -> javawrappers.java.awt.Container: ...
	def setModalityType(self, arg0: javawrappers.java.awt.Dialog.ModalityType, ) -> None: ...
	def setType(self, arg0: javawrappers.java.awt.Window.Type, ) -> None: ...
	def layout(self, ) -> None: ...
	def getBaseline(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def print_(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def paintComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.FocusListener, 1): ...
	@overload
	def resize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def resize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.awt.ImageCapabilities, ) -> javawrappers.java.awt.image.VolatileImage: ...
	def isAutoRequestFocus(self, ) -> Union[int, JBoolean]: ...
	def location(self, ) -> javawrappers.java.awt.Point: ...
	def lostFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def keyDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getDropTarget(self, ) -> javawrappers.java.awt.dnd.DropTarget: ...
	def getTransferHandler(self, ) -> javawrappers.javax.swing.TransferHandler: ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def setGlassPane(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def setOpacity(self, arg0: Union[float, JFloat], ) -> None: ...
	def getHierarchyBoundsListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyBoundsListener, 1): ...
	def getRootPane(self, ) -> javawrappers.javax.swing.JRootPane: ...
	@overload
	def getBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def getBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	def setPreferredSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def getJMenuBar(self, ) -> javawrappers.javax.swing.JMenuBar: ...
	@overload
	def enable(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def enable(self, ) -> None: ...
	@overload
	def getMousePosition(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.awt.Point: ...
	@overload
	def getMousePosition(self, ) -> javawrappers.java.awt.Point: ...
	def action(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setIconImages(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def setDefaultCloseOperation(self, arg0: Union[int, JInt], ) -> None: ...
	def addContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def setComponentZOrder(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: JByte, arg2: JByte, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], arg2: Union[string, JString], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], arg2: Union[int, JShort], ) -> None: ...
	def addMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	@staticmethod
	def isDefaultLookAndFeelDecorated() -> Union[int, JBoolean]: ...
	def getComponentOrientation(self, ) -> javawrappers.java.awt.ComponentOrientation: ...
	def setFocusable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getTreeLock(self, ) -> javawrappers.java.lang.Object: ...
	def addHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def isBackgroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def findComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def findComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocationByPlatform(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLightweight(self, ) -> Union[int, JBoolean]: ...
	def setTransferHandler(self, arg0: javawrappers.javax.swing.TransferHandler, ) -> None: ...
	def isEnabled(self, ) -> Union[int, JBoolean]: ...
	def minimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def bounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def repaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def repaint(self, ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	def getMouseMotionListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseMotionListener, 1): ...
	def getModalExclusionType(self, ) -> javawrappers.java.awt.Dialog.ModalExclusionType: ...
	def setMinimumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def transferFocus(self, ) -> None: ...
	def printComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	def setJMenuBar(self, arg0: javawrappers.javax.swing.JMenuBar, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getMaximumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getLocationOnScreen(self, ) -> javawrappers.java.awt.Point: ...
	def keyUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getWidth(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def setFocusTraversalPolicy(self, arg0: javawrappers.java.awt.FocusTraversalPolicy, ) -> None: ...
	def addWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def paintAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setFocusTraversalKeys(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ) -> None: ...
	def hasFocus(self, ) -> Union[int, JBoolean]: ...
	def isPreferredSizeSet(self, ) -> Union[int, JBoolean]: ...
	def addWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def getFocusableWindowState(self, ) -> Union[int, JBoolean]: ...
	def getIconImages(self, ) -> javawrappers.java.util.List: ...
	def isDoubleBuffered(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getPropertyChangeListeners(self, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	@overload
	def getPropertyChangeListeners(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	def getColorModel(self, ) -> javawrappers.java.awt.image.ColorModel: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getInsets(self, ) -> javawrappers.java.awt.Insets: ...
	def getFocusTraversalKeysEnabled(self, ) -> Union[int, JBoolean]: ...
	def hide(self, ) -> None: ...
	def getPreferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def setUndecorated(self, arg0: Union[int, JBoolean], ) -> None: ...
	def disable(self, ) -> None: ...
	def isUndecorated(self, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	def isFocusableWindow(self, ) -> Union[int, JBoolean]: ...
	def isFocusable(self, ) -> Union[int, JBoolean]: ...
	def setLocationRelativeTo(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def insets(self, ) -> javawrappers.java.awt.Insets: ...
	def setIconImage(self, arg0: javawrappers.java.awt.Image, ) -> None: ...
	def setMixingCutoutShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def isActive(self, ) -> Union[int, JBoolean]: ...
	def mouseExit(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getHierarchyListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyListener, 1): ...
	def getOpacity(self, ) -> Union[float, JFloat]: ...
	def isShowing(self, ) -> Union[int, JBoolean]: ...
	def mouseEnter(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getTitle(self, ) -> javawrappers.java.lang.String: ...
	def mouseDrag(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def preferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getDefaultCloseOperation(self, ) -> Union[int, JInt]: ...
	def getMouseListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseListener, 1): ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def setAutoRequestFocus(self, arg0: Union[int, JBoolean], ) -> None: ...
	def toFront(self, ) -> None: ...
	def getGlassPane(self, ) -> javawrappers.java.awt.Component: ...
	def deliverEvent(self, arg0: javawrappers.java.awt.Event, ) -> None: ...
	def getForeground(self, ) -> javawrappers.java.awt.Color: ...
	def isAncestorOf(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def getComponentCount(self, ) -> Union[int, JInt]: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def dispose(self, ) -> None: ...
	def setCursor(self, arg0: javawrappers.java.awt.Cursor, ) -> None: ...
	def isDisplayable(self, ) -> Union[int, JBoolean]: ...
	def getGraphicsConfiguration(self, ) -> javawrappers.java.awt.GraphicsConfiguration: ...
	def getComponent(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def getModalityType(self, ) -> javawrappers.java.awt.Dialog.ModalityType: ...
	def removeComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	@overload
	def requestFocus(self, ) -> None: ...
	@overload
	def requestFocus(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> None: ...
	def locate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def addFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	@overload
	def getComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def getComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def isAlwaysOnTop(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, arg0: javawrappers.java.awt.Container, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, ) -> Union[int, JBoolean]: ...
	def setFocusTraversalKeysEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getComponentZOrder(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JInt]: ...
	def setBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def printAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getToolkit(self, ) -> javawrappers.java.awt.Toolkit: ...
	def transferFocusUpCycle(self, ) -> None: ...
	def isFontSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def isFocusTraversalPolicyProvider(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setLocation(self, arg0: javawrappers.java.awt.Point, ) -> None: ...
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	def removeFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def setIgnoreRepaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def transferFocusBackward(self, ) -> None: ...
	def getOwnedWindows(self, ) -> JArray(javawrappers.java.awt.Window, 1): ...
	def move(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def transferFocusDownCycle(self, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.util.ResourceBundle, ) -> None: ...
	def setResizable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def invalidate(self, ) -> None: ...
	def getBufferStrategy(self, ) -> javawrappers.java.awt.image.BufferStrategy: ...
	def getAccessibleContext(self, ) -> javawrappers.javax.accessibility.AccessibleContext: ...
	def setShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def isFocusOwner(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getSize(self, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def getSize(self, arg0: javawrappers.java.awt.Dimension, ) -> javawrappers.java.awt.Dimension: ...
	def getX(self, ) -> Union[int, JInt]: ...
	def removeHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def getY(self, ) -> Union[int, JInt]: ...
	def getFocusTraversalPolicy(self, ) -> javawrappers.java.awt.FocusTraversalPolicy: ...
	def setAlwaysOnTop(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def removeMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def getBackground(self, ) -> javawrappers.java.awt.Color: ...
	def addMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...


class LogTableColumn:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@staticmethod
	def getLogTableColumns() -> javawrappers.java.util.List: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getLabel(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.apache.log4j.lf5.viewer.LogTableColumn: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getLogTableColumnArray() -> JArray(javawrappers.org.apache.log4j.lf5.viewer.LogTableColumn, 1): ...
	def notify(self, ) -> None: ...


class LogFactor5ErrorDialog:
	def __init__(self, arg0: javawrappers.javax.swing.JFrame, arg1: javawrappers.java.lang.String, ): ...
	@overload
	def getLocation(self, ) -> javawrappers.java.awt.Point: ...
	@overload
	def getLocation(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Point: ...
	@overload
	def requestFocusInWindow(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocusInWindow(self, ) -> Union[int, JBoolean]: ...
	def isOpaque(self, ) -> Union[int, JBoolean]: ...
	def setModalExclusionType(self, arg0: javawrappers.java.awt.Dialog.ModalExclusionType, ) -> None: ...
	def paint(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def removeWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def getInputMethodListeners(self, ) -> JArray(javawrappers.java.awt.event.InputMethodListener, 1): ...
	def setLayout(self, arg0: javawrappers.java.awt.LayoutManager, ) -> None: ...
	def mouseDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getOwner(self, ) -> javawrappers.java.awt.Window: ...
	def getInputMethodRequests(self, ) -> javawrappers.java.awt.im.InputMethodRequests: ...
	def addHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def removeAll(self, ) -> None: ...
	def getMinimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getAlignmentY(self, ) -> Union[float, JFloat]: ...
	def getWindowStateListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowStateListener, 1): ...
	def getAlignmentX(self, ) -> Union[float, JFloat]: ...
	def dispatchEvent(self, arg0: javawrappers.java.awt.AWTEvent, ) -> None: ...
	def setFocusableWindowState(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getMostRecentFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def reshape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def pack(self, ) -> None: ...
	def postEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def toBack(self, ) -> None: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.BufferCapabilities, ) -> None: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def contains(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JBoolean]: ...
	def size(self, ) -> javawrappers.java.awt.Dimension: ...
	def setModal(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getType(self, ) -> javawrappers.java.awt.Window.Type: ...
	def mouseUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def enableInputMethods(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setLayeredPane(self, arg0: javawrappers.javax.swing.JLayeredPane, ) -> None: ...
	def removeContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def addComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	@staticmethod
	def setDefaultLookAndFeelDecorated(arg0: Union[int, JBoolean], ) -> None: ...
	def removeHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def removeWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getFontMetrics(self, arg0: javawrappers.java.awt.Font, ) -> javawrappers.java.awt.FontMetrics: ...
	def getHeight(self, ) -> Union[int, JInt]: ...
	def getIgnoreRepaint(self, ) -> Union[int, JBoolean]: ...
	def getBaselineResizeBehavior(self, ) -> javawrappers.java.awt.Component.BaselineResizeBehavior: ...
	def removeMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def applyComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def isAlwaysOnTopSupported(self, ) -> Union[int, JBoolean]: ...
	def validate(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.java.awt.Container: ...
	def isMinimumSizeSet(self, ) -> Union[int, JBoolean]: ...
	def getWindowFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowFocusListener, 1): ...
	def setComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	@overload
	def setBounds(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	@staticmethod
	def getWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def isValidateRoot(self, ) -> Union[int, JBoolean]: ...
	def addNotify(self, ) -> None: ...
	def addInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFocusCycleRootAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def setFocusTraversalPolicyProvider(self, arg0: Union[int, JBoolean], ) -> None: ...
	def addWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def countComponents(self, ) -> Union[int, JInt]: ...
	def isFocusTraversable(self, ) -> Union[int, JBoolean]: ...
	def inside(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def nextFocus(self, ) -> None: ...
	def getFocusTraversalKeys(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.Set: ...
	def getInputContext(self, ) -> javawrappers.java.awt.im.InputContext: ...
	def isCursorSet(self, ) -> Union[int, JBoolean]: ...
	def getMouseWheelListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseWheelListener, 1): ...
	def getComponents(self, ) -> JArray(javawrappers.java.awt.Component, 1): ...
	def removeMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def doLayout(self, ) -> None: ...
	def isLocationByPlatform(self, ) -> Union[int, JBoolean]: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.PopupMenu, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def setFocusCycleRoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setTitle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def isResizable(self, ) -> Union[int, JBoolean]: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def setDropTarget(self, arg0: javawrappers.java.awt.dnd.DropTarget, ) -> None: ...
	@overload
	def list(self, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, arg1: Union[int, JInt], ) -> None: ...
	def isFocused(self, ) -> Union[int, JBoolean]: ...
	def revalidate(self, ) -> None: ...
	def removeWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def setContentPane(self, arg0: javawrappers.java.awt.Container, ) -> None: ...
	def removeNotify(self, ) -> None: ...
	def getWarningString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getOwnerlessWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def isModal(self, ) -> Union[int, JBoolean]: ...
	def gotFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def handleEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isForegroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def show(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def show(self, ) -> None: ...
	def getShape(self, ) -> javawrappers.java.awt.Shape: ...
	def update(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def isFocusTraversalPolicySet(self, ) -> Union[int, JBoolean]: ...
	def setMaximumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.MenuComponent, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def addMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def imageUpdate(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	def getLayout(self, ) -> javawrappers.java.awt.LayoutManager: ...
	def addKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getContainerListeners(self, ) -> JArray(javawrappers.java.awt.event.ContainerListener, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getComponentListeners(self, ) -> JArray(javawrappers.java.awt.event.ComponentListener, 1): ...
	def getLayeredPane(self, ) -> javawrappers.javax.swing.JLayeredPane: ...
	def isMaximumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def getWindowListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowListener, 1): ...
	def getCursor(self, ) -> javawrappers.java.awt.Cursor: ...
	@overload
	def createImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Image: ...
	@overload
	def createImage(self, arg0: javawrappers.java.awt.image.ImageProducer, ) -> javawrappers.java.awt.Image: ...
	def mouseMove(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def areFocusTraversalKeysSet(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getKeyListeners(self, ) -> JArray(javawrappers.java.awt.event.KeyListener, 1): ...
	def getContentPane(self, ) -> javawrappers.java.awt.Container: ...
	def setModalityType(self, arg0: javawrappers.java.awt.Dialog.ModalityType, ) -> None: ...
	def setType(self, arg0: javawrappers.java.awt.Window.Type, ) -> None: ...
	def layout(self, ) -> None: ...
	def getBaseline(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def print_(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def paintComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.FocusListener, 1): ...
	@overload
	def resize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def resize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.awt.ImageCapabilities, ) -> javawrappers.java.awt.image.VolatileImage: ...
	def isAutoRequestFocus(self, ) -> Union[int, JBoolean]: ...
	def location(self, ) -> javawrappers.java.awt.Point: ...
	def lostFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def keyDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getDropTarget(self, ) -> javawrappers.java.awt.dnd.DropTarget: ...
	def getTransferHandler(self, ) -> javawrappers.javax.swing.TransferHandler: ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def setGlassPane(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def setOpacity(self, arg0: Union[float, JFloat], ) -> None: ...
	def getHierarchyBoundsListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyBoundsListener, 1): ...
	def getRootPane(self, ) -> javawrappers.javax.swing.JRootPane: ...
	@overload
	def getBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def getBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	def setPreferredSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def getJMenuBar(self, ) -> javawrappers.javax.swing.JMenuBar: ...
	@overload
	def enable(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def enable(self, ) -> None: ...
	@overload
	def getMousePosition(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.awt.Point: ...
	@overload
	def getMousePosition(self, ) -> javawrappers.java.awt.Point: ...
	def action(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setIconImages(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def setDefaultCloseOperation(self, arg0: Union[int, JInt], ) -> None: ...
	def addContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def setComponentZOrder(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: JByte, arg2: JByte, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], arg2: Union[string, JString], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], arg2: Union[int, JShort], ) -> None: ...
	def addMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	@staticmethod
	def isDefaultLookAndFeelDecorated() -> Union[int, JBoolean]: ...
	def getComponentOrientation(self, ) -> javawrappers.java.awt.ComponentOrientation: ...
	def setFocusable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getTreeLock(self, ) -> javawrappers.java.lang.Object: ...
	def addHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def isBackgroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def findComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def findComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocationByPlatform(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLightweight(self, ) -> Union[int, JBoolean]: ...
	def setTransferHandler(self, arg0: javawrappers.javax.swing.TransferHandler, ) -> None: ...
	def isEnabled(self, ) -> Union[int, JBoolean]: ...
	def minimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def bounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def repaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def repaint(self, ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	def getMouseMotionListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseMotionListener, 1): ...
	def getModalExclusionType(self, ) -> javawrappers.java.awt.Dialog.ModalExclusionType: ...
	def setMinimumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def transferFocus(self, ) -> None: ...
	def printComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	def setJMenuBar(self, arg0: javawrappers.javax.swing.JMenuBar, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getMaximumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getLocationOnScreen(self, ) -> javawrappers.java.awt.Point: ...
	def keyUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getWidth(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def setFocusTraversalPolicy(self, arg0: javawrappers.java.awt.FocusTraversalPolicy, ) -> None: ...
	def addWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def paintAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setFocusTraversalKeys(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ) -> None: ...
	def hasFocus(self, ) -> Union[int, JBoolean]: ...
	def isPreferredSizeSet(self, ) -> Union[int, JBoolean]: ...
	def addWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def getFocusableWindowState(self, ) -> Union[int, JBoolean]: ...
	def getIconImages(self, ) -> javawrappers.java.util.List: ...
	def isDoubleBuffered(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getPropertyChangeListeners(self, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	@overload
	def getPropertyChangeListeners(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	def getColorModel(self, ) -> javawrappers.java.awt.image.ColorModel: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getInsets(self, ) -> javawrappers.java.awt.Insets: ...
	def getFocusTraversalKeysEnabled(self, ) -> Union[int, JBoolean]: ...
	def hide(self, ) -> None: ...
	def getPreferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def setUndecorated(self, arg0: Union[int, JBoolean], ) -> None: ...
	def disable(self, ) -> None: ...
	def isUndecorated(self, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	def isFocusableWindow(self, ) -> Union[int, JBoolean]: ...
	def isFocusable(self, ) -> Union[int, JBoolean]: ...
	def setLocationRelativeTo(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def insets(self, ) -> javawrappers.java.awt.Insets: ...
	def setIconImage(self, arg0: javawrappers.java.awt.Image, ) -> None: ...
	def setMixingCutoutShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def isActive(self, ) -> Union[int, JBoolean]: ...
	def mouseExit(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getHierarchyListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyListener, 1): ...
	def getOpacity(self, ) -> Union[float, JFloat]: ...
	def isShowing(self, ) -> Union[int, JBoolean]: ...
	def mouseEnter(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getTitle(self, ) -> javawrappers.java.lang.String: ...
	def mouseDrag(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def preferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getDefaultCloseOperation(self, ) -> Union[int, JInt]: ...
	def getMouseListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseListener, 1): ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def setAutoRequestFocus(self, arg0: Union[int, JBoolean], ) -> None: ...
	def toFront(self, ) -> None: ...
	def getGlassPane(self, ) -> javawrappers.java.awt.Component: ...
	def deliverEvent(self, arg0: javawrappers.java.awt.Event, ) -> None: ...
	def getForeground(self, ) -> javawrappers.java.awt.Color: ...
	def isAncestorOf(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def getComponentCount(self, ) -> Union[int, JInt]: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def dispose(self, ) -> None: ...
	def setCursor(self, arg0: javawrappers.java.awt.Cursor, ) -> None: ...
	def isDisplayable(self, ) -> Union[int, JBoolean]: ...
	def getGraphicsConfiguration(self, ) -> javawrappers.java.awt.GraphicsConfiguration: ...
	def getComponent(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def getModalityType(self, ) -> javawrappers.java.awt.Dialog.ModalityType: ...
	def removeComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	@overload
	def requestFocus(self, ) -> None: ...
	@overload
	def requestFocus(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> None: ...
	def locate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def addFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	@overload
	def getComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def getComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def isAlwaysOnTop(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, arg0: javawrappers.java.awt.Container, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, ) -> Union[int, JBoolean]: ...
	def setFocusTraversalKeysEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getComponentZOrder(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JInt]: ...
	def setBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def printAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getToolkit(self, ) -> javawrappers.java.awt.Toolkit: ...
	def transferFocusUpCycle(self, ) -> None: ...
	def isFontSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def isFocusTraversalPolicyProvider(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setLocation(self, arg0: javawrappers.java.awt.Point, ) -> None: ...
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	def removeFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def setIgnoreRepaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def transferFocusBackward(self, ) -> None: ...
	def getOwnedWindows(self, ) -> JArray(javawrappers.java.awt.Window, 1): ...
	def move(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def transferFocusDownCycle(self, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.util.ResourceBundle, ) -> None: ...
	def setResizable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def invalidate(self, ) -> None: ...
	def getBufferStrategy(self, ) -> javawrappers.java.awt.image.BufferStrategy: ...
	def getAccessibleContext(self, ) -> javawrappers.javax.accessibility.AccessibleContext: ...
	def setShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def isFocusOwner(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getSize(self, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def getSize(self, arg0: javawrappers.java.awt.Dimension, ) -> javawrappers.java.awt.Dimension: ...
	def getX(self, ) -> Union[int, JInt]: ...
	def removeHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def getY(self, ) -> Union[int, JInt]: ...
	def getFocusTraversalPolicy(self, ) -> javawrappers.java.awt.FocusTraversalPolicy: ...
	def setAlwaysOnTop(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def removeMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def getBackground(self, ) -> javawrappers.java.awt.Color: ...
	def addMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...


class LogFactor5LoadingDialog:
	def __init__(self, arg0: javawrappers.javax.swing.JFrame, arg1: javawrappers.java.lang.String, ): ...
	@overload
	def getLocation(self, ) -> javawrappers.java.awt.Point: ...
	@overload
	def getLocation(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Point: ...
	@overload
	def requestFocusInWindow(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocusInWindow(self, ) -> Union[int, JBoolean]: ...
	def isOpaque(self, ) -> Union[int, JBoolean]: ...
	def setModalExclusionType(self, arg0: javawrappers.java.awt.Dialog.ModalExclusionType, ) -> None: ...
	def paint(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def removeWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def getInputMethodListeners(self, ) -> JArray(javawrappers.java.awt.event.InputMethodListener, 1): ...
	def setLayout(self, arg0: javawrappers.java.awt.LayoutManager, ) -> None: ...
	def mouseDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getOwner(self, ) -> javawrappers.java.awt.Window: ...
	def getInputMethodRequests(self, ) -> javawrappers.java.awt.im.InputMethodRequests: ...
	def addHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def removeAll(self, ) -> None: ...
	def getMinimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getAlignmentY(self, ) -> Union[float, JFloat]: ...
	def getWindowStateListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowStateListener, 1): ...
	def getAlignmentX(self, ) -> Union[float, JFloat]: ...
	def dispatchEvent(self, arg0: javawrappers.java.awt.AWTEvent, ) -> None: ...
	def setFocusableWindowState(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getMostRecentFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def reshape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def pack(self, ) -> None: ...
	def postEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def toBack(self, ) -> None: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.BufferCapabilities, ) -> None: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def contains(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JBoolean]: ...
	def size(self, ) -> javawrappers.java.awt.Dimension: ...
	def setModal(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getType(self, ) -> javawrappers.java.awt.Window.Type: ...
	def mouseUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def enableInputMethods(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setLayeredPane(self, arg0: javawrappers.javax.swing.JLayeredPane, ) -> None: ...
	def removeContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def addComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	@staticmethod
	def setDefaultLookAndFeelDecorated(arg0: Union[int, JBoolean], ) -> None: ...
	def removeHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def removeWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getFontMetrics(self, arg0: javawrappers.java.awt.Font, ) -> javawrappers.java.awt.FontMetrics: ...
	def getHeight(self, ) -> Union[int, JInt]: ...
	def getIgnoreRepaint(self, ) -> Union[int, JBoolean]: ...
	def getBaselineResizeBehavior(self, ) -> javawrappers.java.awt.Component.BaselineResizeBehavior: ...
	def removeMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def applyComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def isAlwaysOnTopSupported(self, ) -> Union[int, JBoolean]: ...
	def validate(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.java.awt.Container: ...
	def isMinimumSizeSet(self, ) -> Union[int, JBoolean]: ...
	def getWindowFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowFocusListener, 1): ...
	def setComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	@overload
	def setBounds(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	@staticmethod
	def getWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def isValidateRoot(self, ) -> Union[int, JBoolean]: ...
	def addNotify(self, ) -> None: ...
	def addInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFocusCycleRootAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def setFocusTraversalPolicyProvider(self, arg0: Union[int, JBoolean], ) -> None: ...
	def addWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def countComponents(self, ) -> Union[int, JInt]: ...
	def isFocusTraversable(self, ) -> Union[int, JBoolean]: ...
	def inside(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def nextFocus(self, ) -> None: ...
	def getFocusTraversalKeys(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.Set: ...
	def getInputContext(self, ) -> javawrappers.java.awt.im.InputContext: ...
	def isCursorSet(self, ) -> Union[int, JBoolean]: ...
	def getMouseWheelListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseWheelListener, 1): ...
	def getComponents(self, ) -> JArray(javawrappers.java.awt.Component, 1): ...
	def removeMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def doLayout(self, ) -> None: ...
	def isLocationByPlatform(self, ) -> Union[int, JBoolean]: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.PopupMenu, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def setFocusCycleRoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setTitle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def isResizable(self, ) -> Union[int, JBoolean]: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def setDropTarget(self, arg0: javawrappers.java.awt.dnd.DropTarget, ) -> None: ...
	@overload
	def list(self, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, arg1: Union[int, JInt], ) -> None: ...
	def isFocused(self, ) -> Union[int, JBoolean]: ...
	def revalidate(self, ) -> None: ...
	def removeWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def setContentPane(self, arg0: javawrappers.java.awt.Container, ) -> None: ...
	def removeNotify(self, ) -> None: ...
	def getWarningString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getOwnerlessWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def isModal(self, ) -> Union[int, JBoolean]: ...
	def gotFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def handleEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isForegroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def show(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def show(self, ) -> None: ...
	def getShape(self, ) -> javawrappers.java.awt.Shape: ...
	def update(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def isFocusTraversalPolicySet(self, ) -> Union[int, JBoolean]: ...
	def setMaximumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.MenuComponent, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def addMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def imageUpdate(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	def getLayout(self, ) -> javawrappers.java.awt.LayoutManager: ...
	def addKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getContainerListeners(self, ) -> JArray(javawrappers.java.awt.event.ContainerListener, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getComponentListeners(self, ) -> JArray(javawrappers.java.awt.event.ComponentListener, 1): ...
	def getLayeredPane(self, ) -> javawrappers.javax.swing.JLayeredPane: ...
	def isMaximumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def getWindowListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowListener, 1): ...
	def getCursor(self, ) -> javawrappers.java.awt.Cursor: ...
	@overload
	def createImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Image: ...
	@overload
	def createImage(self, arg0: javawrappers.java.awt.image.ImageProducer, ) -> javawrappers.java.awt.Image: ...
	def mouseMove(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def areFocusTraversalKeysSet(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getKeyListeners(self, ) -> JArray(javawrappers.java.awt.event.KeyListener, 1): ...
	def getContentPane(self, ) -> javawrappers.java.awt.Container: ...
	def setModalityType(self, arg0: javawrappers.java.awt.Dialog.ModalityType, ) -> None: ...
	def setType(self, arg0: javawrappers.java.awt.Window.Type, ) -> None: ...
	def layout(self, ) -> None: ...
	def getBaseline(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def print_(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def paintComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.FocusListener, 1): ...
	@overload
	def resize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def resize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.awt.ImageCapabilities, ) -> javawrappers.java.awt.image.VolatileImage: ...
	def isAutoRequestFocus(self, ) -> Union[int, JBoolean]: ...
	def location(self, ) -> javawrappers.java.awt.Point: ...
	def lostFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def keyDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getDropTarget(self, ) -> javawrappers.java.awt.dnd.DropTarget: ...
	def getTransferHandler(self, ) -> javawrappers.javax.swing.TransferHandler: ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def setGlassPane(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def setOpacity(self, arg0: Union[float, JFloat], ) -> None: ...
	def getHierarchyBoundsListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyBoundsListener, 1): ...
	def getRootPane(self, ) -> javawrappers.javax.swing.JRootPane: ...
	@overload
	def getBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def getBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	def setPreferredSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def getJMenuBar(self, ) -> javawrappers.javax.swing.JMenuBar: ...
	@overload
	def enable(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def enable(self, ) -> None: ...
	@overload
	def getMousePosition(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.awt.Point: ...
	@overload
	def getMousePosition(self, ) -> javawrappers.java.awt.Point: ...
	def action(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setIconImages(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def setDefaultCloseOperation(self, arg0: Union[int, JInt], ) -> None: ...
	def addContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def setComponentZOrder(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: JByte, arg2: JByte, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], arg2: Union[string, JString], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], arg2: Union[int, JShort], ) -> None: ...
	def addMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	@staticmethod
	def isDefaultLookAndFeelDecorated() -> Union[int, JBoolean]: ...
	def getComponentOrientation(self, ) -> javawrappers.java.awt.ComponentOrientation: ...
	def setFocusable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getTreeLock(self, ) -> javawrappers.java.lang.Object: ...
	def addHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def isBackgroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def findComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def findComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocationByPlatform(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLightweight(self, ) -> Union[int, JBoolean]: ...
	def setTransferHandler(self, arg0: javawrappers.javax.swing.TransferHandler, ) -> None: ...
	def isEnabled(self, ) -> Union[int, JBoolean]: ...
	def minimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def bounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def repaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def repaint(self, ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	def getMouseMotionListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseMotionListener, 1): ...
	def getModalExclusionType(self, ) -> javawrappers.java.awt.Dialog.ModalExclusionType: ...
	def setMinimumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def transferFocus(self, ) -> None: ...
	def printComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	def setJMenuBar(self, arg0: javawrappers.javax.swing.JMenuBar, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getMaximumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getLocationOnScreen(self, ) -> javawrappers.java.awt.Point: ...
	def keyUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getWidth(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def setFocusTraversalPolicy(self, arg0: javawrappers.java.awt.FocusTraversalPolicy, ) -> None: ...
	def addWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def paintAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setFocusTraversalKeys(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ) -> None: ...
	def hasFocus(self, ) -> Union[int, JBoolean]: ...
	def isPreferredSizeSet(self, ) -> Union[int, JBoolean]: ...
	def addWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def getFocusableWindowState(self, ) -> Union[int, JBoolean]: ...
	def getIconImages(self, ) -> javawrappers.java.util.List: ...
	def isDoubleBuffered(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getPropertyChangeListeners(self, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	@overload
	def getPropertyChangeListeners(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	def getColorModel(self, ) -> javawrappers.java.awt.image.ColorModel: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getInsets(self, ) -> javawrappers.java.awt.Insets: ...
	def getFocusTraversalKeysEnabled(self, ) -> Union[int, JBoolean]: ...
	def hide(self, ) -> None: ...
	def getPreferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def setUndecorated(self, arg0: Union[int, JBoolean], ) -> None: ...
	def disable(self, ) -> None: ...
	def isUndecorated(self, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	def isFocusableWindow(self, ) -> Union[int, JBoolean]: ...
	def isFocusable(self, ) -> Union[int, JBoolean]: ...
	def setLocationRelativeTo(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def insets(self, ) -> javawrappers.java.awt.Insets: ...
	def setIconImage(self, arg0: javawrappers.java.awt.Image, ) -> None: ...
	def setMixingCutoutShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def isActive(self, ) -> Union[int, JBoolean]: ...
	def mouseExit(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getHierarchyListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyListener, 1): ...
	def getOpacity(self, ) -> Union[float, JFloat]: ...
	def isShowing(self, ) -> Union[int, JBoolean]: ...
	def mouseEnter(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getTitle(self, ) -> javawrappers.java.lang.String: ...
	def mouseDrag(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def preferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getDefaultCloseOperation(self, ) -> Union[int, JInt]: ...
	def getMouseListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseListener, 1): ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def setAutoRequestFocus(self, arg0: Union[int, JBoolean], ) -> None: ...
	def toFront(self, ) -> None: ...
	def getGlassPane(self, ) -> javawrappers.java.awt.Component: ...
	def deliverEvent(self, arg0: javawrappers.java.awt.Event, ) -> None: ...
	def getForeground(self, ) -> javawrappers.java.awt.Color: ...
	def isAncestorOf(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def getComponentCount(self, ) -> Union[int, JInt]: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def dispose(self, ) -> None: ...
	def setCursor(self, arg0: javawrappers.java.awt.Cursor, ) -> None: ...
	def isDisplayable(self, ) -> Union[int, JBoolean]: ...
	def getGraphicsConfiguration(self, ) -> javawrappers.java.awt.GraphicsConfiguration: ...
	def getComponent(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def getModalityType(self, ) -> javawrappers.java.awt.Dialog.ModalityType: ...
	def removeComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	@overload
	def requestFocus(self, ) -> None: ...
	@overload
	def requestFocus(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> None: ...
	def locate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def addFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	@overload
	def getComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def getComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def isAlwaysOnTop(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, arg0: javawrappers.java.awt.Container, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, ) -> Union[int, JBoolean]: ...
	def setFocusTraversalKeysEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getComponentZOrder(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JInt]: ...
	def setBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def printAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getToolkit(self, ) -> javawrappers.java.awt.Toolkit: ...
	def transferFocusUpCycle(self, ) -> None: ...
	def isFontSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def isFocusTraversalPolicyProvider(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setLocation(self, arg0: javawrappers.java.awt.Point, ) -> None: ...
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	def removeFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def setIgnoreRepaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def transferFocusBackward(self, ) -> None: ...
	def getOwnedWindows(self, ) -> JArray(javawrappers.java.awt.Window, 1): ...
	def move(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def transferFocusDownCycle(self, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.util.ResourceBundle, ) -> None: ...
	def setResizable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def invalidate(self, ) -> None: ...
	def getBufferStrategy(self, ) -> javawrappers.java.awt.image.BufferStrategy: ...
	def getAccessibleContext(self, ) -> javawrappers.javax.accessibility.AccessibleContext: ...
	def setShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def isFocusOwner(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getSize(self, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def getSize(self, arg0: javawrappers.java.awt.Dimension, ) -> javawrappers.java.awt.Dimension: ...
	def getX(self, ) -> Union[int, JInt]: ...
	def removeHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def getY(self, ) -> Union[int, JInt]: ...
	def getFocusTraversalPolicy(self, ) -> javawrappers.java.awt.FocusTraversalPolicy: ...
	def setAlwaysOnTop(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def removeMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def getBackground(self, ) -> javawrappers.java.awt.Color: ...
	def addMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...


class LogTable:
	def __init__(self, arg0: javawrappers.javax.swing.JTextArea, ): ...
	class LogTableListSelectionListener:
		def __init__(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.LogTable, arg1: javawrappers.javax.swing.JTable, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def valueChanged(self, arg0: javawrappers.javax.swing.event.ListSelectionEvent, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	@overload
	def getLocation(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Point: ...
	@overload
	def getLocation(self, ) -> javawrappers.java.awt.Point: ...
	@overload
	def requestFocusInWindow(self, ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocusInWindow(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> Union[int, JBoolean]: ...
	def getInputVerifier(self, ) -> javawrappers.javax.swing.InputVerifier: ...
	def getColumnClass(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Class: ...
	def setLayout(self, arg0: javawrappers.java.awt.LayoutManager, ) -> None: ...
	def mouseDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def clearSelection(self, ) -> None: ...
	def setAutoscrolls(self, arg0: Union[int, JBoolean], ) -> None: ...
	def editingStopped(self, arg0: javawrappers.javax.swing.event.ChangeEvent, ) -> None: ...
	def isOptimizedDrawingEnabled(self, ) -> Union[int, JBoolean]: ...
	def getRowCount(self, ) -> Union[int, JInt]: ...
	def reshape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def setCellEditor(self, arg0: javawrappers.javax.swing.table.TableCellEditor, ) -> None: ...
	def postEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JBoolean]: ...
	def size(self, ) -> javawrappers.java.awt.Dimension: ...
	def mouseUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def enableInputMethods(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def tableChanged(self, arg0: javawrappers.javax.swing.event.TableModelEvent, ) -> None: ...
	def setShowGrid(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getClientProperty(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def getSelectionForeground(self, ) -> javawrappers.java.awt.Color: ...
	def getDateFormatManager(self, ) -> javawrappers.org.apache.log4j.lf5.util.DateFormatManager: ...
	def setShowHorizontalLines(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isRequestFocusEnabled(self, ) -> Union[int, JBoolean]: ...
	def getFontMetrics(self, arg0: javawrappers.java.awt.Font, ) -> javawrappers.java.awt.FontMetrics: ...
	def getHeight(self, ) -> Union[int, JInt]: ...
	def setUpdateSelectionOnSort(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getAncestorListeners(self, ) -> JArray(javawrappers.javax.swing.event.AncestorListener, 1): ...
	@overload
	def getCellEditor(self, ) -> javawrappers.javax.swing.table.TableCellEditor: ...
	@overload
	def getCellEditor(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.javax.swing.table.TableCellEditor: ...
	def isMinimumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setBounds(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def setCellSelectionEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def columnSelectionChanged(self, arg0: javawrappers.javax.swing.event.ListSelectionEvent, ) -> None: ...
	def addNotify(self, ) -> None: ...
	def setView(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def setDetailedView(self, ) -> None: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFocusCycleRootAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def isFocusTraversable(self, ) -> Union[int, JBoolean]: ...
	def getInputContext(self, ) -> javawrappers.java.awt.im.InputContext: ...
	def getFocusTraversalKeys(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.Set: ...
	def isCursorSet(self, ) -> Union[int, JBoolean]: ...
	def setVerifyInputWhenFocusTarget(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getComponents(self, ) -> JArray(javawrappers.java.awt.Component, 1): ...
	def setInputVerifier(self, arg0: javawrappers.javax.swing.InputVerifier, ) -> None: ...
	def setRowSelectionInterval(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def doLayout(self, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.PopupMenu, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getScrollableTracksViewportHeight(self, ) -> Union[int, JBoolean]: ...
	def putClientProperty(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def setFocusCycleRoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def editCellAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def editCellAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.util.EventObject, ) -> Union[int, JBoolean]: ...
	def getDropMode(self, ) -> javawrappers.javax.swing.DropMode: ...
	def setNextFocusableComponent(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def getColumnCount(self, ) -> Union[int, JInt]: ...
	def setDropTarget(self, arg0: javawrappers.java.awt.dnd.DropTarget, ) -> None: ...
	@overload
	def list(self, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, arg1: Union[int, JInt], ) -> None: ...
	def moveColumn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def setColumnSelectionAllowed(self, arg0: Union[int, JBoolean], ) -> None: ...
	@staticmethod
	def setDefaultLocale(arg0: javawrappers.java.util.Locale, ) -> None: ...
	def setModel(self, arg0: javawrappers.javax.swing.table.TableModel, ) -> None: ...
	def removeNotify(self, ) -> None: ...
	def setDefaultEditor(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.javax.swing.table.TableCellEditor, ) -> None: ...
	def getAutoCreateColumnsFromModel(self, ) -> Union[int, JBoolean]: ...
	def getRegisteredKeyStrokes(self, ) -> JArray(javawrappers.javax.swing.KeyStroke, 1): ...
	def columnRemoved(self, arg0: javawrappers.javax.swing.event.TableColumnModelEvent, ) -> None: ...
	def setRowSelectionAllowed(self, arg0: Union[int, JBoolean], ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def getRowHeight(self, ) -> Union[int, JInt]: ...
	@overload
	def getRowHeight(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def getUIClassID(self, ) -> javawrappers.java.lang.String: ...
	def setMaximumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def getScrollableBlockIncrement(self, arg0: javawrappers.java.awt.Rectangle, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JInt]: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.MenuComponent, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	def getLayout(self, ) -> javawrappers.java.awt.LayoutManager: ...
	def setRowSorter(self, arg0: javawrappers.javax.swing.RowSorter, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getComponentListeners(self, ) -> JArray(javawrappers.java.awt.event.ComponentListener, 1): ...
	@overload
	def createImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Image: ...
	@overload
	def createImage(self, arg0: javawrappers.java.awt.image.ImageProducer, ) -> javawrappers.java.awt.Image: ...
	def mouseMove(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def areFocusTraversalKeysSet(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getPreferredScrollableViewportSize(self, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def sizeColumnsToFit(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def sizeColumnsToFit(self, arg0: Union[int, JInt], ) -> None: ...
	def rowAtPoint(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JInt]: ...
	@overload
	def print_(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	@overload
	def print_(self, arg0: javawrappers.javax.swing.JTable.PrintMode, arg1: javawrappers.java.text.MessageFormat, arg2: javawrappers.java.text.MessageFormat, arg3: Union[int, JBoolean], arg4: javawrappers.javax.print.attribute.PrintRequestAttributeSet, arg5: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	@overload
	def print_(self, arg0: javawrappers.javax.swing.JTable.PrintMode, arg1: javawrappers.java.text.MessageFormat, arg2: javawrappers.java.text.MessageFormat, ) -> Union[int, JBoolean]: ...
	@overload
	def print_(self, arg0: javawrappers.javax.swing.JTable.PrintMode, arg1: javawrappers.java.text.MessageFormat, arg2: javawrappers.java.text.MessageFormat, arg3: Union[int, JBoolean], arg4: javawrappers.javax.print.attribute.PrintRequestAttributeSet, arg5: Union[int, JBoolean], arg6: javawrappers.javax.print.PrintService, ) -> Union[int, JBoolean]: ...
	@overload
	def print_(self, arg0: javawrappers.javax.swing.JTable.PrintMode, ) -> Union[int, JBoolean]: ...
	@overload
	def print_(self, ) -> Union[int, JBoolean]: ...
	def setUI(self, arg0: javawrappers.javax.swing.plaf.TableUI, ) -> None: ...
	def getFillsViewportHeight(self, ) -> Union[int, JBoolean]: ...
	def paintComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.FocusListener, 1): ...
	@overload
	def resize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def resize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def lostFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getEditingColumn(self, ) -> Union[int, JInt]: ...
	def keyDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getDropTarget(self, ) -> javawrappers.java.awt.dnd.DropTarget: ...
	def setAutoCreateRowSorter(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getRootPane(self, ) -> javawrappers.javax.swing.JRootPane: ...
	def getRowSorter(self, ) -> javawrappers.javax.swing.RowSorter: ...
	def convertColumnIndexToView(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def setPreferredSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def setInputMap(self, arg0: Union[int, JInt], arg1: javawrappers.javax.swing.InputMap, ) -> None: ...
	def columnMarginChanged(self, arg0: javawrappers.javax.swing.event.ChangeEvent, ) -> None: ...
	def getColumnSelectionAllowed(self, ) -> Union[int, JBoolean]: ...
	@overload
	def paintImmediately(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	@overload
	def paintImmediately(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def isManagingFocus(self, ) -> Union[int, JBoolean]: ...
	def action(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getDropLocation(self, ) -> javawrappers.javax.swing.JTable.DropLocation: ...
	def getCellSelectionEnabled(self, ) -> Union[int, JBoolean]: ...
	def removeRowSelectionInterval(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def addContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def isCellSelected(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def setComponentZOrder(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> None: ...
	def getComponentOrientation(self, ) -> javawrappers.java.awt.ComponentOrientation: ...
	def getTreeLock(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def findComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def findComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setComponentPopupMenu(self, arg0: javawrappers.javax.swing.JPopupMenu, ) -> None: ...
	def setEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLightweight(self, ) -> Union[int, JBoolean]: ...
	def setRowMargin(self, arg0: Union[int, JInt], ) -> None: ...
	def minimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def transferFocus(self, ) -> None: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	@overload
	def getInputMap(self, ) -> javawrappers.javax.swing.InputMap: ...
	@overload
	def getInputMap(self, arg0: Union[int, JInt], ) -> javawrappers.javax.swing.InputMap: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def columnAtPoint(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JInt]: ...
	def getLocationOnScreen(self, ) -> javawrappers.java.awt.Point: ...
	def getIntercellSpacing(self, ) -> javawrappers.java.awt.Dimension: ...
	def getWidth(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def convertRowIndexToModel(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def isPaintingTile(self, ) -> Union[int, JBoolean]: ...
	def hasFocus(self, ) -> Union[int, JBoolean]: ...
	def isDoubleBuffered(self, ) -> Union[int, JBoolean]: ...
	def getEditorComponent(self, ) -> javawrappers.java.awt.Component: ...
	def getFocusTraversalKeysEnabled(self, ) -> Union[int, JBoolean]: ...
	def setSurrendersFocusOnKeystroke(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeColumn(self, arg0: javawrappers.javax.swing.table.TableColumn, ) -> None: ...
	def hide(self, ) -> None: ...
	def getPreferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def disable(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def getToolTipText(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> javawrappers.java.lang.String: ...
	@overload
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def getBorder(self, ) -> javawrappers.javax.swing.border.Border: ...
	def getSelectedColumnCount(self, ) -> Union[int, JInt]: ...
	def isPaintingForPrint(self, ) -> Union[int, JBoolean]: ...
	def editingCanceled(self, arg0: javawrappers.javax.swing.event.ChangeEvent, ) -> None: ...
	def removeColumnSelectionInterval(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def mouseExit(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def mouseDrag(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def setSelectionBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def getModel(self, ) -> javawrappers.javax.swing.table.TableModel: ...
	def changeSelection(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], ) -> None: ...
	def deliverEvent(self, arg0: javawrappers.java.awt.Event, ) -> None: ...
	def getCellRenderer(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.javax.swing.table.TableCellRenderer: ...
	def getForeground(self, ) -> javawrappers.java.awt.Color: ...
	def getComponentCount(self, ) -> Union[int, JInt]: ...
	def setDefaultRenderer(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.javax.swing.table.TableCellRenderer, ) -> None: ...
	@overload
	def getUI(self, ) -> javawrappers.javax.swing.plaf.TableUI: ...
	@overload
	def getUI(self, ) -> javawrappers.javax.swing.plaf.ComponentUI: ...
	def getActionForKeyStroke(self, arg0: javawrappers.javax.swing.KeyStroke, ) -> javawrappers.java.awt.event.ActionListener: ...
	def grabFocus(self, ) -> None: ...
	def getPopupLocation(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> javawrappers.java.awt.Point: ...
	def setCursor(self, arg0: javawrappers.java.awt.Cursor, ) -> None: ...
	def getGraphicsConfiguration(self, ) -> javawrappers.java.awt.GraphicsConfiguration: ...
	def getComponent(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def columnMoved(self, arg0: javawrappers.javax.swing.event.TableColumnModelEvent, ) -> None: ...
	def locate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def addFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	@overload
	def isFocusCycleRoot(self, arg0: javawrappers.java.awt.Container, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, ) -> Union[int, JBoolean]: ...
	def getComponentZOrder(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JInt]: ...
	def printAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setValueAt(self, arg0: javawrappers.java.lang.Object, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def transferFocusUpCycle(self, ) -> None: ...
	def isFontSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def getSelectedRows(self, ) -> JArray(Union[int, JInt], 1): ...
	@overload
	def setLocation(self, arg0: javawrappers.java.awt.Point, ) -> None: ...
	@overload
	def setLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def isFocusTraversalPolicyProvider(self, ) -> Union[int, JBoolean]: ...
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	def getVisibleRect(self, ) -> javawrappers.java.awt.Rectangle: ...
	def getSelectedColumns(self, ) -> JArray(Union[int, JInt], 1): ...
	@overload
	def setRowHeight(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setRowHeight(self, arg0: Union[int, JInt], ) -> None: ...
	def isEditing(self, ) -> Union[int, JBoolean]: ...
	def setForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def addRowSelectionInterval(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def getRowMargin(self, ) -> Union[int, JInt]: ...
	def isCellEditable(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getFocusTraversalPolicy(self, ) -> javawrappers.java.awt.FocusTraversalPolicy: ...
	def getDefaultEditor(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.swing.table.TableCellEditor: ...
	def getDebugGraphicsOptions(self, ) -> Union[int, JInt]: ...
	def addMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def isOpaque(self, ) -> Union[int, JBoolean]: ...
	def setDoubleBuffered(self, arg0: Union[int, JBoolean], ) -> None: ...
	def paint(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def prepareRenderer(self, arg0: javawrappers.javax.swing.table.TableCellRenderer, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def getInputMethodListeners(self, ) -> JArray(javawrappers.java.awt.event.InputMethodListener, 1): ...
	def getInputMethodRequests(self, ) -> javawrappers.java.awt.im.InputMethodRequests: ...
	def requestDefaultFocus(self, ) -> Union[int, JBoolean]: ...
	def prepareEditor(self, arg0: javawrappers.javax.swing.table.TableCellEditor, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def getUpdateSelectionOnSort(self, ) -> Union[int, JBoolean]: ...
	def addHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def removeAll(self, ) -> None: ...
	def getDefaultRenderer(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.swing.table.TableCellRenderer: ...
	def getEditingRow(self, ) -> Union[int, JInt]: ...
	def getMinimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def setEditingRow(self, arg0: Union[int, JInt], ) -> None: ...
	def getAlignmentY(self, ) -> Union[float, JFloat]: ...
	def getColumn(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.swing.table.TableColumn: ...
	def getAlignmentX(self, ) -> Union[float, JFloat]: ...
	def setAlignmentY(self, arg0: Union[float, JFloat], ) -> None: ...
	def dispatchEvent(self, arg0: javawrappers.java.awt.AWTEvent, ) -> None: ...
	def setSelectionMode(self, arg0: Union[int, JInt], ) -> None: ...
	def setAlignmentX(self, arg0: Union[float, JFloat], ) -> None: ...
	def getAutoCreateRowSorter(self, ) -> Union[int, JBoolean]: ...
	def unregisterKeyboardAction(self, arg0: javawrappers.javax.swing.KeyStroke, ) -> None: ...
	def setShowVerticalLines(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeVetoableChangeListener(self, arg0: javawrappers.java.beans.VetoableChangeListener, ) -> None: ...
	def addComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def removeInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def removeHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def createDefaultColumnsFromModel(self, ) -> None: ...
	def getColumnName(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def getAutoResizeMode(self, ) -> Union[int, JInt]: ...
	def getIgnoreRepaint(self, ) -> Union[int, JBoolean]: ...
	def getBaselineResizeBehavior(self, ) -> javawrappers.java.awt.Component.BaselineResizeBehavior: ...
	def removeMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def applyComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def validate(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.java.awt.Container: ...
	def setComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def getVerifyInputWhenFocusTarget(self, ) -> Union[int, JBoolean]: ...
	def setIntercellSpacing(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def setTableHeader(self, arg0: javawrappers.javax.swing.table.JTableHeader, ) -> None: ...
	def isValidateRoot(self, ) -> Union[int, JBoolean]: ...
	def addInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def getToolTipLocation(self, arg0: javawrappers.java.awt.event.MouseEvent, ) -> javawrappers.java.awt.Point: ...
	def setFocusTraversalPolicyProvider(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getConditionForKeyStroke(self, arg0: javawrappers.javax.swing.KeyStroke, ) -> Union[int, JInt]: ...
	def setFillsViewportHeight(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getPrintable(self, arg0: javawrappers.javax.swing.JTable.PrintMode, arg1: javawrappers.java.text.MessageFormat, arg2: javawrappers.java.text.MessageFormat, ) -> javawrappers.java.awt.print.Printable: ...
	def countComponents(self, ) -> Union[int, JInt]: ...
	def inside(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def nextFocus(self, ) -> None: ...
	def setActionMap(self, arg0: javawrappers.javax.swing.ActionMap, ) -> None: ...
	def getMouseWheelListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseWheelListener, 1): ...
	def getDragEnabled(self, ) -> Union[int, JBoolean]: ...
	def removeMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def getNextFocusableComponent(self, ) -> javawrappers.java.awt.Component: ...
	def clearLogRecords(self, ) -> None: ...
	def isColumnSelected(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getSurrendersFocusOnKeystroke(self, ) -> Union[int, JBoolean]: ...
	def setAutoResizeMode(self, arg0: Union[int, JInt], ) -> None: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def selectAll(self, ) -> None: ...
	def revalidate(self, ) -> None: ...
	def createToolTip(self, ) -> javawrappers.javax.swing.JToolTip: ...
	def setDragEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def gotFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def removeAncestorListener(self, arg0: javawrappers.javax.swing.event.AncestorListener, ) -> None: ...
	def scrollRectToVisible(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def handleEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def isForegroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def show(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def show(self, ) -> None: ...
	def update(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def isFocusTraversalPolicySet(self, ) -> Union[int, JBoolean]: ...
	def setColumnModel(self, arg0: javawrappers.javax.swing.table.TableColumnModel, ) -> None: ...
	@staticmethod
	def createScrollPaneForTable(arg0: javawrappers.javax.swing.JTable, ) -> javawrappers.javax.swing.JScrollPane: ...
	def addMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def imageUpdate(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	def addKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getContainerListeners(self, ) -> JArray(javawrappers.java.awt.event.ContainerListener, 1): ...
	def getValueAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	def isMaximumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def getCursor(self, ) -> javawrappers.java.awt.Cursor: ...
	def getKeyListeners(self, ) -> JArray(javawrappers.java.awt.event.KeyListener, 1): ...
	@overload
	def registerKeyboardAction(self, arg0: javawrappers.java.awt.event.ActionListener, arg1: javawrappers.javax.swing.KeyStroke, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def registerKeyboardAction(self, arg0: javawrappers.java.awt.event.ActionListener, arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.swing.KeyStroke, arg3: Union[int, JInt], ) -> None: ...
	def addAncestorListener(self, arg0: javawrappers.javax.swing.event.AncestorListener, ) -> None: ...
	def getFilteredLogTableModel(self, ) -> javawrappers.org.apache.log4j.lf5.viewer.FilteredLogTableModel: ...
	def layout(self, ) -> None: ...
	def getComponentPopupMenu(self, ) -> javawrappers.javax.swing.JPopupMenu: ...
	def getBaseline(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def setAutoCreateColumnsFromModel(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getSelectedRow(self, ) -> Union[int, JInt]: ...
	def getCellRect(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JBoolean], ) -> javawrappers.java.awt.Rectangle: ...
	def setBorder(self, arg0: javawrappers.javax.swing.border.Border, ) -> None: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.awt.ImageCapabilities, ) -> javawrappers.java.awt.image.VolatileImage: ...
	def location(self, ) -> javawrappers.java.awt.Point: ...
	def getTransferHandler(self, ) -> javawrappers.javax.swing.TransferHandler: ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def getHierarchyBoundsListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyBoundsListener, 1): ...
	def getAutoscrolls(self, ) -> Union[int, JBoolean]: ...
	def getScrollableTracksViewportWidth(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def getBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> javawrappers.java.awt.Rectangle: ...
	def setSelectionForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	@overload
	def enable(self, ) -> None: ...
	@overload
	def enable(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def getMousePosition(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.awt.Point: ...
	@overload
	def getMousePosition(self, ) -> javawrappers.java.awt.Point: ...
	def convertColumnIndexToModel(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def setDateFormatManager(self, arg0: javawrappers.org.apache.log4j.lf5.util.DateFormatManager, ) -> None: ...
	def addColumn(self, arg0: javawrappers.javax.swing.table.TableColumn, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], arg2: Union[string, JString], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: JByte, arg2: JByte, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], arg2: Union[int, JShort], ) -> None: ...
	def getSelectionModel(self, ) -> javawrappers.javax.swing.ListSelectionModel: ...
	def addMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def getColumnModel(self, ) -> javawrappers.javax.swing.table.TableColumnModel: ...
	def setFocusable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def addHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def isBackgroundSet(self, ) -> Union[int, JBoolean]: ...
	def setOpaque(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getSelectedColumn(self, ) -> Union[int, JInt]: ...
	def getTableHeader(self, ) -> javawrappers.javax.swing.table.JTableHeader: ...
	def setColumnSelectionInterval(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def setSelectionModel(self, arg0: javawrappers.javax.swing.ListSelectionModel, ) -> None: ...
	def getGridColor(self, ) -> javawrappers.java.awt.Color: ...
	def setTransferHandler(self, arg0: javawrappers.javax.swing.TransferHandler, ) -> None: ...
	def isEnabled(self, ) -> Union[int, JBoolean]: ...
	def bounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def repaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def repaint(self, ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def getMouseMotionListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseMotionListener, 1): ...
	def setMinimumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def getShowVerticalLines(self, ) -> Union[int, JBoolean]: ...
	def printComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setRequestFocusEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getMaximumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def keyUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def removeEditor(self, ) -> None: ...
	def setFocusTraversalPolicy(self, arg0: javawrappers.java.awt.FocusTraversalPolicy, ) -> None: ...
	def paintAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setFocusTraversalKeys(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ) -> None: ...
	def setDebugGraphicsOptions(self, arg0: Union[int, JInt], ) -> None: ...
	def isPreferredSizeSet(self, ) -> Union[int, JBoolean]: ...
	def isRowSelected(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def getPropertyChangeListeners(self, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	@overload
	def getPropertyChangeListeners(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	def getColorModel(self, ) -> javawrappers.java.awt.image.ColorModel: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getInsets(self, arg0: javawrappers.java.awt.Insets, ) -> javawrappers.java.awt.Insets: ...
	@overload
	def getInsets(self, ) -> javawrappers.java.awt.Insets: ...
	def getRowSelectionAllowed(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getDefaultLocale() -> javawrappers.java.util.Locale: ...
	def setDropMode(self, arg0: javawrappers.javax.swing.DropMode, ) -> None: ...
	def isFocusable(self, ) -> Union[int, JBoolean]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def insets(self, ) -> javawrappers.java.awt.Insets: ...
	def setMixingCutoutShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def getHierarchyListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyListener, 1): ...
	def computeVisibleRect(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def isShowing(self, ) -> Union[int, JBoolean]: ...
	def mouseEnter(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def preferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getMouseListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseListener, 1): ...
	def addColumnSelectionInterval(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def setInheritsPopupMenu(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getSelectedRowCount(self, ) -> Union[int, JInt]: ...
	def getActionMap(self, ) -> javawrappers.javax.swing.ActionMap: ...
	def isAncestorOf(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def getTopLevelAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def setEditingColumn(self, arg0: Union[int, JInt], ) -> None: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def isDisplayable(self, ) -> Union[int, JBoolean]: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def removeComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	@overload
	def requestFocus(self, arg0: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocus(self, ) -> None: ...
	@overload
	def requestFocus(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> None: ...
	def addVetoableChangeListener(self, arg0: javawrappers.java.beans.VetoableChangeListener, ) -> None: ...
	def getInheritsPopupMenu(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def getComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def updateUI(self, ) -> None: ...
	def resetKeyboardActions(self, ) -> None: ...
	def setFocusTraversalKeysEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def getToolkit(self, ) -> javawrappers.java.awt.Toolkit: ...
	def getVetoableChangeListeners(self, ) -> JArray(javawrappers.java.beans.VetoableChangeListener, 1): ...
	def getScrollableUnitIncrement(self, arg0: javawrappers.java.awt.Rectangle, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JInt]: ...
	def columnAdded(self, arg0: javawrappers.javax.swing.event.TableColumnModelEvent, ) -> None: ...
	def removeFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def setIgnoreRepaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def transferFocusBackward(self, ) -> None: ...
	def move(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def transferFocusDownCycle(self, ) -> None: ...
	def sorterChanged(self, arg0: javawrappers.javax.swing.event.RowSorterEvent, ) -> None: ...
	@overload
	def valueChanged(self, arg0: javawrappers.javax.swing.event.ListSelectionEvent, ) -> None: ...
	@overload
	def valueChanged(self, arg0: javawrappers.javax.swing.event.ListSelectionEvent, ) -> None: ...
	@staticmethod
	def isLightweightComponent(arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def invalidate(self, ) -> None: ...
	def getAccessibleContext(self, ) -> javawrappers.javax.accessibility.AccessibleContext: ...
	def getSelectionBackground(self, ) -> javawrappers.java.awt.Color: ...
	def isFocusOwner(self, ) -> Union[int, JBoolean]: ...
	def convertRowIndexToView(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	@overload
	def getSize(self, arg0: javawrappers.java.awt.Dimension, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def getSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getX(self, ) -> Union[int, JInt]: ...
	def removeHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def getY(self, ) -> Union[int, JInt]: ...
	def removeMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def setGridColor(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def getBackground(self, ) -> javawrappers.java.awt.Color: ...
	def setPreferredScrollableViewportSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def getShowHorizontalLines(self, ) -> Union[int, JBoolean]: ...


class LF5SwingUtils:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def selectRow(arg0: Union[int, JInt], arg1: javawrappers.javax.swing.JTable, arg2: javawrappers.javax.swing.JScrollPane, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def makeVerticalScrollBarTrack(arg0: javawrappers.javax.swing.JScrollPane, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def makeScrollBarTrack(arg0: javawrappers.java.awt.Adjustable, ) -> None: ...
	def notify(self, ) -> None: ...


class TrackingAdjustmentListener:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def adjustmentValueChanged(self, arg0: javawrappers.java.awt.event.AdjustmentEvent, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class LogBrokerMonitor:
	def __init__(self, arg0: javawrappers.java.util.List, ): ...
	class LogBrokerMonitorWindowAdaptor:
		def __init__(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.LogBrokerMonitor, arg1: javawrappers.org.apache.log4j.lf5.viewer.LogBrokerMonitor, ): ...
		def windowDeactivated(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def windowOpened(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def windowStateChanged(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
		def notify(self, ) -> None: ...
		def windowIconified(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
		def windowLostFocus(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
		def windowClosed(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
		def windowActivated(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
		def windowClosing(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def windowDeiconified(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def windowGainedFocus(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getNDCTextFilter(self, ) -> javawrappers.java.lang.String: ...
	def addDisplayedProperty(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def windowOpened(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDateFormatManager(self, ) -> javawrappers.org.apache.log4j.lf5.util.DateFormatManager: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def show(self, ) -> None: ...
	@overload
	def show(self, arg0: Union[int, JInt], ) -> None: ...
	def getCategoryExplorerTree(self, ) -> javawrappers.org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: ...
	def notify(self, ) -> None: ...
	def addMessage(self, arg0: javawrappers.org.apache.log4j.lf5.LogRecord, ) -> None: ...
	def getLogTableColumnMenuItems(self, ) -> javawrappers.java.util.Map: ...
	def windowLostFocus(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def windowActivated(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def windowClosing(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setMaxNumberOfLogRecords(self, arg0: Union[int, JInt], ) -> None: ...
	def windowDeactivated(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def setDateFormatManager(self, arg0: javawrappers.org.apache.log4j.lf5.util.DateFormatManager, ) -> None: ...
	def getBaseFrame(self, ) -> javawrappers.javax.swing.JFrame: ...
	def getTableColumnMenuItem(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.LogTableColumn, ) -> javawrappers.javax.swing.JCheckBoxMenuItem: ...
	def windowStateChanged(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def getLogLevelMenuItems(self, ) -> javawrappers.java.util.Map: ...
	def setTitle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def windowIconified(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def setFontSize(self, arg0: Union[int, JInt], ) -> None: ...
	def windowClosed(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def setCallSystemExitOnClose(self, arg0: Union[int, JBoolean], ) -> None: ...
	def hide(self, ) -> None: ...
	def setFrameSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def getCallSystemExitOnClose(self, ) -> Union[int, JBoolean]: ...
	def windowDeiconified(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def dispose(self, ) -> None: ...
	def setNDCLogRecordFilter(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def windowGainedFocus(self, arg0: javawrappers.java.awt.event.WindowEvent, ) -> None: ...


