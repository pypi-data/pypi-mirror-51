################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.apache.log4j.or
import javawrappers.org.apache.log4j.spi

from jpype.types import *
from typing import Union

from typing import overload

class RendererMap:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def findAndRender(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.String: ...
	def getDefaultRenderer(self, ) -> javawrappers.org.apache.log4j.or.ObjectRenderer: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.apache.log4j.or.ObjectRenderer: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.apache.log4j.or.ObjectRenderer: ...
	def clear(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def addRenderer(arg0: javawrappers.org.apache.log4j.spi.RendererSupport, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def put(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.org.apache.log4j.or.ObjectRenderer, ) -> None: ...


class ObjectRenderer:
	def doRender(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.String: ...


class ThreadGroupRenderer:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def doRender(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


