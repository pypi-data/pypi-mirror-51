################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.apache.log4j
import javawrappers.org.apache.log4j.spi

from jpype.types import *
from typing import Union

from typing import overload

class NTEventLogAppender:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.log4j.Layout, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.apache.log4j.Layout, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.apache.log4j.Layout, ): ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setSource(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def setThreshold(self, arg0: javawrappers.org.apache.log4j.Priority, ) -> None: ...
	def clearFilters(self, ) -> None: ...
	def setLayout(self, arg0: javawrappers.org.apache.log4j.Layout, ) -> None: ...
	def notify(self, ) -> None: ...
	def activateOptions(self, ) -> None: ...
	def getErrorHandler(self, ) -> javawrappers.org.apache.log4j.spi.ErrorHandler: ...
	def getLayout(self, ) -> javawrappers.org.apache.log4j.Layout: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def doAppend(self, arg0: javawrappers.org.apache.log4j.spi.LoggingEvent, ) -> None: ...
	def close(self, ) -> None: ...
	def getFirstFilter(self, ) -> javawrappers.org.apache.log4j.spi.Filter: ...
	def getFilter(self, ) -> javawrappers.org.apache.log4j.spi.Filter: ...
	def getSource(self, ) -> javawrappers.java.lang.String: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setErrorHandler(self, arg0: javawrappers.org.apache.log4j.spi.ErrorHandler, ) -> None: ...
	def isAsSevereAsThreshold(self, arg0: javawrappers.org.apache.log4j.Priority, ) -> Union[int, JBoolean]: ...
	def addFilter(self, arg0: javawrappers.org.apache.log4j.spi.Filter, ) -> None: ...
	def requiresLayout(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getThreshold(self, ) -> javawrappers.org.apache.log4j.Priority: ...
	def finalize(self, ) -> None: ...
	def append(self, arg0: javawrappers.org.apache.log4j.spi.LoggingEvent, ) -> None: ...


