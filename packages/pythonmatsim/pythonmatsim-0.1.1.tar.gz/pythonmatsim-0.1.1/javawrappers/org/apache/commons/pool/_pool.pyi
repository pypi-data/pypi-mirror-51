################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.apache.commons.pool

from jpype.types import *
from typing import Union

from typing import overload

class BasePoolableObjectFactory:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def destroyObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def validateObject(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def makeObject(self, ) -> javawrappers.java.lang.Object: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def passivateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def notify(self, ) -> None: ...
	def activateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...


class PoolUtils:
	def __init__(self, ): ...
	class ErodingPerKeyKeyedObjectPool:
		def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedObjectPool, arg1: Union[float, JFloat], ): ...
		@overload
		def getNumIdle(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def getNumIdle(self, ) -> Union[int, JInt]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def setFactory(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def invalidateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		@overload
		def clear(self, ) -> None: ...
		@overload
		def clear(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		@overload
		def getNumActive(self, ) -> Union[int, JInt]: ...
		@overload
		def getNumActive(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def returnObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def borrowObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def addObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def close(self, ) -> None: ...


	class ErodingKeyedObjectPool:
		def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedObjectPool, arg1: Union[float, JFloat], ): ...
		@overload
		def getNumIdle(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def getNumIdle(self, ) -> Union[int, JInt]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def setFactory(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def invalidateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		@overload
		def clear(self, ) -> None: ...
		@overload
		def clear(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		@overload
		def getNumActive(self, ) -> Union[int, JInt]: ...
		@overload
		def getNumActive(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def returnObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def borrowObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def addObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def close(self, ) -> None: ...


	class ErodingObjectPool:
		def __init__(self, arg0: javawrappers.org.apache.commons.pool.ObjectPool, arg1: Union[float, JFloat], ): ...
		def getNumIdle(self, ) -> Union[int, JInt]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def setFactory(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def invalidateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def clear(self, ) -> None: ...
		def getNumActive(self, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def returnObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def borrowObject(self, ) -> javawrappers.java.lang.Object: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def addObject(self, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def close(self, ) -> None: ...


	class ErodingFactor:
		def __init__(self, arg0: Union[float, JFloat], ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def getNextShrink(self, ) -> Union[long, JLong]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@overload
		def update(self, arg0: Union[int, JInt], ) -> None: ...
		@overload
		def update(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class SynchronizedKeyedPoolableObjectFactory:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def destroyObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def validateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def makeObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def passivateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def notify(self, ) -> None: ...
		def activateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...


	class SynchronizedPoolableObjectFactory:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def destroyObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def validateObject(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def makeObject(self, ) -> javawrappers.java.lang.Object: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def passivateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def notify(self, ) -> None: ...
		def activateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...


	class SynchronizedKeyedObjectPool:
		@overload
		def getNumIdle(self, ) -> Union[int, JInt]: ...
		@overload
		def getNumIdle(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def setFactory(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def invalidateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		@overload
		def clear(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		@overload
		def clear(self, ) -> None: ...
		@overload
		def getNumActive(self, ) -> Union[int, JInt]: ...
		@overload
		def getNumActive(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def returnObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def borrowObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def addObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def close(self, ) -> None: ...


	class SynchronizedObjectPool:
		def getNumIdle(self, ) -> Union[int, JInt]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def setFactory(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def invalidateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def clear(self, ) -> None: ...
		def getNumActive(self, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def returnObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def borrowObject(self, ) -> javawrappers.java.lang.Object: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def addObject(self, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def close(self, ) -> None: ...


	class KeyedObjectPoolMinIdleTimerTask:
		def cancel(self, ) -> Union[int, JBoolean]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def scheduledExecutionTime(self, ) -> Union[long, JLong]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def run(self, ) -> None: ...
		def notify(self, ) -> None: ...


	class ObjectPoolMinIdleTimerTask:
		def cancel(self, ) -> Union[int, JBoolean]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def scheduledExecutionTime(self, ) -> Union[long, JLong]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def run(self, ) -> None: ...
		def notify(self, ) -> None: ...


	class CheckedKeyedObjectPool:
		@overload
		def getNumIdle(self, ) -> Union[int, JInt]: ...
		@overload
		def getNumIdle(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def setFactory(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def invalidateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		@overload
		def clear(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		@overload
		def clear(self, ) -> None: ...
		@overload
		def getNumActive(self, ) -> Union[int, JInt]: ...
		@overload
		def getNumActive(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def returnObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def borrowObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def addObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def close(self, ) -> None: ...


	class CheckedObjectPool:
		def getNumIdle(self, ) -> Union[int, JInt]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def setFactory(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def invalidateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def clear(self, ) -> None: ...
		def getNumActive(self, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def returnObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def borrowObject(self, ) -> javawrappers.java.lang.Object: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def addObject(self, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def close(self, ) -> None: ...


	class KeyedObjectPoolAdaptor:
		@overload
		def getNumIdle(self, ) -> Union[int, JInt]: ...
		@overload
		def getNumIdle(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def setFactory(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def invalidateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		@overload
		def clear(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		@overload
		def clear(self, ) -> None: ...
		@overload
		def getNumActive(self, ) -> Union[int, JInt]: ...
		@overload
		def getNumActive(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def returnObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def borrowObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def addObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def close(self, ) -> None: ...


	class ObjectPoolAdaptor:
		def getNumIdle(self, ) -> Union[int, JInt]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def setFactory(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def invalidateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def clear(self, ) -> None: ...
		def getNumActive(self, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def returnObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def borrowObject(self, ) -> javawrappers.java.lang.Object: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def addObject(self, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def close(self, ) -> None: ...


	class KeyedPoolableObjectFactoryAdaptor:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def destroyObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def validateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def makeObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def passivateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def notify(self, ) -> None: ...
		def activateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...


	class PoolableObjectFactoryAdaptor:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def destroyObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def validateObject(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def makeObject(self, ) -> javawrappers.java.lang.Object: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def passivateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
		def notify(self, ) -> None: ...
		def activateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...


	def cancel(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def destroyObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def destroyObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def destroyObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def destroyObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def makeObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def makeObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def makeObject(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def makeObject(self, ) -> javawrappers.java.lang.Object: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def update(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def update(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def run(self, ) -> None: ...
	@overload
	def run(self, ) -> None: ...
	def notify(self, ) -> None: ...
	@overload
	@staticmethod
	def synchronizedPoolableFactory(arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ) -> javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory: ...
	@overload
	@staticmethod
	def synchronizedPoolableFactory(arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ) -> javawrappers.org.apache.commons.pool.PoolableObjectFactory: ...
	def getNextShrink(self, ) -> Union[long, JLong]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def erodingPool(arg0: javawrappers.org.apache.commons.pool.ObjectPool, arg1: Union[float, JFloat], ) -> javawrappers.org.apache.commons.pool.ObjectPool: ...
	@overload
	@staticmethod
	def erodingPool(arg0: javawrappers.org.apache.commons.pool.KeyedObjectPool, ) -> javawrappers.org.apache.commons.pool.KeyedObjectPool: ...
	@overload
	@staticmethod
	def erodingPool(arg0: javawrappers.org.apache.commons.pool.KeyedObjectPool, arg1: Union[float, JFloat], ) -> javawrappers.org.apache.commons.pool.KeyedObjectPool: ...
	@overload
	@staticmethod
	def erodingPool(arg0: javawrappers.org.apache.commons.pool.ObjectPool, ) -> javawrappers.org.apache.commons.pool.ObjectPool: ...
	@overload
	@staticmethod
	def erodingPool(arg0: javawrappers.org.apache.commons.pool.KeyedObjectPool, arg1: Union[float, JFloat], arg2: Union[int, JBoolean], ) -> javawrappers.org.apache.commons.pool.KeyedObjectPool: ...
	@overload
	@staticmethod
	def checkMinIdle(arg0: javawrappers.org.apache.commons.pool.KeyedObjectPool, arg1: javawrappers.java.util.Collection, arg2: Union[int, JInt], arg3: Union[long, JLong], ) -> javawrappers.java.util.Map: ...
	@overload
	@staticmethod
	def checkMinIdle(arg0: javawrappers.org.apache.commons.pool.ObjectPool, arg1: Union[int, JInt], arg2: Union[long, JLong], ) -> javawrappers.java.util.TimerTask: ...
	@overload
	@staticmethod
	def checkMinIdle(arg0: javawrappers.org.apache.commons.pool.KeyedObjectPool, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], arg3: Union[long, JLong], ) -> javawrappers.java.util.TimerTask: ...
	@overload
	@staticmethod
	def synchronizedPool(arg0: javawrappers.org.apache.commons.pool.ObjectPool, ) -> javawrappers.org.apache.commons.pool.ObjectPool: ...
	@overload
	@staticmethod
	def synchronizedPool(arg0: javawrappers.org.apache.commons.pool.KeyedObjectPool, ) -> javawrappers.org.apache.commons.pool.KeyedObjectPool: ...
	@overload
	def close(self, ) -> None: ...
	@overload
	def close(self, ) -> None: ...
	@overload
	def close(self, ) -> None: ...
	@overload
	def close(self, ) -> None: ...
	@overload
	def close(self, ) -> None: ...
	@overload
	def close(self, ) -> None: ...
	@overload
	def close(self, ) -> None: ...
	@overload
	def close(self, ) -> None: ...
	@overload
	def activateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def activateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def activateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def activateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ) -> None: ...
	@overload
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ) -> None: ...
	@overload
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ) -> None: ...
	@overload
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ) -> None: ...
	@overload
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ) -> None: ...
	@overload
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ) -> None: ...
	@overload
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ) -> None: ...
	@overload
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ) -> None: ...
	@overload
	@staticmethod
	def adapt(arg0: javawrappers.org.apache.commons.pool.ObjectPool, ) -> javawrappers.org.apache.commons.pool.KeyedObjectPool: ...
	@overload
	@staticmethod
	def adapt(arg0: javawrappers.org.apache.commons.pool.KeyedObjectPool, arg1: javawrappers.java.lang.Object, ) -> javawrappers.org.apache.commons.pool.ObjectPool: ...
	@overload
	@staticmethod
	def adapt(arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: javawrappers.java.lang.Object, ) -> javawrappers.org.apache.commons.pool.PoolableObjectFactory: ...
	@overload
	@staticmethod
	def adapt(arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ) -> javawrappers.org.apache.commons.pool.PoolableObjectFactory: ...
	@overload
	@staticmethod
	def adapt(arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ) -> javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory: ...
	@overload
	@staticmethod
	def adapt(arg0: javawrappers.org.apache.commons.pool.KeyedObjectPool, ) -> javawrappers.org.apache.commons.pool.ObjectPool: ...
	@overload
	@staticmethod
	def prefill(arg0: javawrappers.org.apache.commons.pool.KeyedObjectPool, arg1: javawrappers.java.util.Collection, arg2: Union[int, JInt], ) -> None: ...
	@overload
	@staticmethod
	def prefill(arg0: javawrappers.org.apache.commons.pool.KeyedObjectPool, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	@staticmethod
	def prefill(arg0: javawrappers.org.apache.commons.pool.ObjectPool, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def clear(self, ) -> None: ...
	@overload
	def clear(self, ) -> None: ...
	@overload
	def clear(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def clear(self, ) -> None: ...
	@overload
	def clear(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def clear(self, ) -> None: ...
	@overload
	def clear(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def clear(self, ) -> None: ...
	@overload
	def clear(self, ) -> None: ...
	@overload
	def clear(self, ) -> None: ...
	@overload
	def clear(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def clear(self, ) -> None: ...
	@overload
	def getNumActive(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumActive(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumActive(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def getNumActive(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumActive(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumActive(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumActive(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def getNumActive(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumActive(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumActive(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def getNumActive(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumActive(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def returnObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def returnObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def returnObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def returnObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def returnObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def returnObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def returnObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def returnObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def borrowObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def borrowObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def borrowObject(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def borrowObject(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def borrowObject(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def borrowObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def borrowObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def borrowObject(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def validateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def validateObject(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def validateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def validateObject(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def checkedPool(arg0: javawrappers.org.apache.commons.pool.KeyedObjectPool, arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.apache.commons.pool.KeyedObjectPool: ...
	@overload
	@staticmethod
	def checkedPool(arg0: javawrappers.org.apache.commons.pool.ObjectPool, arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.apache.commons.pool.ObjectPool: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def addObject(self, ) -> None: ...
	@overload
	def addObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def addObject(self, ) -> None: ...
	@overload
	def addObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def addObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def addObject(self, ) -> None: ...
	@overload
	def addObject(self, ) -> None: ...
	@overload
	def addObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def scheduledExecutionTime(self, ) -> Union[long, JLong]: ...
	@overload
	def passivateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def passivateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def passivateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def passivateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ObjectPool:
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ) -> None: ...
	def returnObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def borrowObject(self, ) -> javawrappers.java.lang.Object: ...
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def clear(self, ) -> None: ...
	def addObject(self, ) -> None: ...
	def getNumActive(self, ) -> Union[int, JInt]: ...
	def close(self, ) -> None: ...


class BaseObjectPool:
	def __init__(self, ): ...
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def clear(self, ) -> None: ...
	def getNumActive(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def returnObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def borrowObject(self, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def addObject(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def close(self, ) -> None: ...


class KeyedObjectPoolFactory:
	def createPool(self, ) -> javawrappers.org.apache.commons.pool.KeyedObjectPool: ...


class BaseKeyedPoolableObjectFactory:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def destroyObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def validateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def makeObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def passivateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def notify(self, ) -> None: ...
	def activateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...


class ObjectPoolFactory:
	def createPool(self, ) -> javawrappers.org.apache.commons.pool.ObjectPool: ...


class PoolableObjectFactory:
	def destroyObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def validateObject(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def makeObject(self, ) -> javawrappers.java.lang.Object: ...
	def passivateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def activateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...


class KeyedObjectPool:
	@overload
	def getNumIdle(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ) -> None: ...
	def returnObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def borrowObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def clear(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def clear(self, ) -> None: ...
	def addObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def getNumActive(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def getNumActive(self, ) -> Union[int, JInt]: ...
	def close(self, ) -> None: ...


class KeyedPoolableObjectFactory:
	def destroyObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def validateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def makeObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def passivateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def activateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...


class BaseKeyedObjectPool:
	def __init__(self, ): ...
	@overload
	def getNumIdle(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def clear(self, ) -> None: ...
	@overload
	def clear(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def getNumActive(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def getNumActive(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def returnObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def borrowObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def addObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def close(self, ) -> None: ...


