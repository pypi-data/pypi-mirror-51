################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.apache.commons.pool.impl
import javawrappers.org.apache.commons.pool

from jpype.types import *
from typing import Union

from typing import overload

class StackKeyedObjectPool:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], ): ...
	@overload
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def clear(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def clear(self, ) -> None: ...
	@overload
	def getNumActive(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumActive(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def returnObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def borrowObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def addObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def close(self, ) -> None: ...


class StackObjectPool:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: Union[int, JInt], ): ...
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def clear(self, ) -> None: ...
	def getNumActive(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def returnObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def borrowObject(self, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def addObject(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def close(self, ) -> None: ...


class StackObjectPoolFactory:
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: Union[int, JInt], ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def createPool(self, ) -> javawrappers.org.apache.commons.pool.ObjectPool: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class GenericObjectPool:
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: javawrappers.org.apache.commons.pool.impl.GenericObjectPool.Config, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JBoolean], arg7: Union[int, JBoolean], arg8: Union[long, JLong], arg9: Union[int, JInt], arg10: Union[long, JLong], arg11: Union[int, JBoolean], arg12: Union[long, JLong], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JBoolean], arg7: Union[int, JBoolean], arg8: Union[long, JLong], arg9: Union[int, JInt], arg10: Union[long, JLong], arg11: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JBoolean], arg6: Union[int, JBoolean], arg7: Union[long, JLong], arg8: Union[int, JInt], arg9: Union[long, JLong], arg10: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JBoolean], arg6: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JBoolean], arg5: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JBoolean], arg7: Union[int, JBoolean], arg8: Union[long, JLong], arg9: Union[int, JInt], arg10: Union[long, JLong], arg11: Union[int, JBoolean], arg12: Union[long, JLong], arg13: Union[int, JBoolean], ): ...
	class :
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class Latch:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class Config:
		def __init__(self, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class Evictor:
		def cancel(self, ) -> Union[int, JBoolean]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def scheduledExecutionTime(self, ) -> Union[long, JLong]: ...
		def run(self, ) -> None: ...
		def notify(self, ) -> None: ...


	def cancel(self, ) -> Union[int, JBoolean]: ...
	def setMinEvictableIdleTimeMillis(self, arg0: Union[long, JLong], ) -> None: ...
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setLifo(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setTimeBetweenEvictionRunsMillis(self, arg0: Union[long, JLong], ) -> None: ...
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def run(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def evict(self, ) -> None: ...
	def setConfig(self, arg0: javawrappers.org.apache.commons.pool.impl.GenericObjectPool.Config, ) -> None: ...
	def getWhenExhaustedAction(self, ) -> JByte: ...
	def getTestOnBorrow(self, ) -> Union[int, JBoolean]: ...
	def getMinEvictableIdleTimeMillis(self, ) -> Union[long, JLong]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def close(self, ) -> None: ...
	def getMaxWait(self, ) -> Union[long, JLong]: ...
	def getTestOnReturn(self, ) -> Union[int, JBoolean]: ...
	def setMaxIdle(self, arg0: Union[int, JInt], ) -> None: ...
	def getSoftMinEvictableIdleTimeMillis(self, ) -> Union[long, JLong]: ...
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ) -> None: ...
	def setWhenExhaustedAction(self, arg0: JByte, ) -> None: ...
	def getMinIdle(self, ) -> Union[int, JInt]: ...
	def setTestWhileIdle(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setMinIdle(self, arg0: Union[int, JInt], ) -> None: ...
	def clear(self, ) -> None: ...
	def getNumActive(self, ) -> Union[int, JInt]: ...
	def getTimeBetweenEvictionRunsMillis(self, ) -> Union[long, JLong]: ...
	def setSoftMinEvictableIdleTimeMillis(self, arg0: Union[long, JLong], ) -> None: ...
	def setTestOnReturn(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getNumTestsPerEvictionRun(self, ) -> Union[int, JInt]: ...
	def returnObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def borrowObject(self, ) -> javawrappers.java.lang.Object: ...
	def getMaxActive(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setMaxWait(self, arg0: Union[long, JLong], ) -> None: ...
	def addObject(self, ) -> None: ...
	def setTestOnBorrow(self, arg0: Union[int, JBoolean], ) -> None: ...
	def scheduledExecutionTime(self, ) -> Union[long, JLong]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setNumTestsPerEvictionRun(self, arg0: Union[int, JInt], ) -> None: ...
	def getMaxIdle(self, ) -> Union[int, JInt]: ...
	def getTestWhileIdle(self, ) -> Union[int, JBoolean]: ...
	def getLifo(self, ) -> Union[int, JBoolean]: ...
	def setMaxActive(self, arg0: Union[int, JInt], ) -> None: ...


class StackKeyedObjectPoolFactory:
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: Union[int, JInt], ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def createPool(self, ) -> javawrappers.org.apache.commons.pool.KeyedObjectPool: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class SoftReferenceObjectPool:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], ): ...
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def clear(self, ) -> None: ...
	def getNumActive(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def returnObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def borrowObject(self, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def addObject(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def close(self, ) -> None: ...


class GenericKeyedObjectPoolFactory:
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JBoolean], arg7: Union[int, JBoolean], arg8: Union[long, JLong], arg9: Union[int, JInt], arg10: Union[long, JLong], arg11: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JBoolean], arg6: Union[int, JBoolean], arg7: Union[long, JLong], arg8: Union[int, JInt], arg9: Union[long, JLong], arg10: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JBoolean], arg6: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JInt], arg7: Union[int, JBoolean], arg8: Union[int, JBoolean], arg9: Union[long, JLong], arg10: Union[int, JInt], arg11: Union[long, JLong], arg12: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JInt], arg7: Union[int, JBoolean], arg8: Union[int, JBoolean], arg9: Union[long, JLong], arg10: Union[int, JInt], arg11: Union[long, JLong], arg12: Union[int, JBoolean], arg13: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: javawrappers.org.apache.commons.pool.impl.GenericKeyedObjectPool.Config, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JBoolean], arg5: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def createPool(self, ) -> javawrappers.org.apache.commons.pool.KeyedObjectPool: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class GenericKeyedObjectPool:
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JBoolean], arg6: Union[int, JBoolean], arg7: Union[long, JLong], arg8: Union[int, JInt], arg9: Union[long, JLong], arg10: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JBoolean], arg7: Union[int, JBoolean], arg8: Union[long, JLong], arg9: Union[int, JInt], arg10: Union[long, JLong], arg11: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JInt], arg7: Union[int, JBoolean], arg8: Union[int, JBoolean], arg9: Union[long, JLong], arg10: Union[int, JInt], arg11: Union[long, JLong], arg12: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JInt], arg7: Union[int, JBoolean], arg8: Union[int, JBoolean], arg9: Union[long, JLong], arg10: Union[int, JInt], arg11: Union[long, JLong], arg12: Union[int, JBoolean], arg13: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JBoolean], arg5: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: javawrappers.org.apache.commons.pool.impl.GenericKeyedObjectPool.Config, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JBoolean], arg6: Union[int, JBoolean], ): ...
	class :
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class Latch:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class Config:
		def __init__(self, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class Evictor:
		def cancel(self, ) -> Union[int, JBoolean]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def scheduledExecutionTime(self, ) -> Union[long, JLong]: ...
		def run(self, ) -> None: ...
		def notify(self, ) -> None: ...


	class ObjectTimestampPair:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def compareTo(self, arg0: javawrappers.org.apache.commons.pool.impl.GenericKeyedObjectPool.ObjectTimestampPair, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...


	class ObjectQueue:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def cancel(self, ) -> Union[int, JBoolean]: ...
	def setMinEvictableIdleTimeMillis(self, arg0: Union[long, JLong], ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def preparePool(self, arg0: javawrappers.java.lang.Object, arg1: Union[int, JBoolean], ) -> None: ...
	def setTimeBetweenEvictionRunsMillis(self, arg0: Union[long, JLong], ) -> None: ...
	def run(self, ) -> None: ...
	def setMaxTotal(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.apache.commons.pool.impl.GenericKeyedObjectPool.ObjectTimestampPair, ) -> Union[int, JInt]: ...
	def evict(self, ) -> None: ...
	def clearOldest(self, ) -> None: ...
	def setMaxIdle(self, arg0: Union[int, JInt], ) -> None: ...
	def setWhenExhaustedAction(self, arg0: JByte, ) -> None: ...
	def getMinIdle(self, ) -> Union[int, JInt]: ...
	def getMaxTotal(self, ) -> Union[int, JInt]: ...
	def setTestWhileIdle(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setMinIdle(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def getNumActive(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumActive(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def getTimeBetweenEvictionRunsMillis(self, ) -> Union[long, JLong]: ...
	def setTestOnReturn(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getNumTestsPerEvictionRun(self, ) -> Union[int, JInt]: ...
	def getMaxActive(self, ) -> Union[int, JInt]: ...
	def setMaxWait(self, arg0: Union[long, JLong], ) -> None: ...
	def setTestOnBorrow(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getMaxIdle(self, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def getNumIdle(self, ) -> Union[int, JInt]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setLifo(self, arg0: Union[int, JBoolean], ) -> None: ...
	def invalidateObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def setConfig(self, arg0: javawrappers.org.apache.commons.pool.impl.GenericKeyedObjectPool.Config, ) -> None: ...
	def getWhenExhaustedAction(self, ) -> JByte: ...
	def getTestOnBorrow(self, ) -> Union[int, JBoolean]: ...
	def getMinEvictableIdleTimeMillis(self, ) -> Union[long, JLong]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def close(self, ) -> None: ...
	def getMaxWait(self, ) -> Union[long, JLong]: ...
	def getTestOnReturn(self, ) -> Union[int, JBoolean]: ...
	def setFactory(self, arg0: javawrappers.org.apache.commons.pool.KeyedPoolableObjectFactory, ) -> None: ...
	@overload
	def clear(self, ) -> None: ...
	@overload
	def clear(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def returnObject(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def borrowObject(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def addObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def scheduledExecutionTime(self, ) -> Union[long, JLong]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setNumTestsPerEvictionRun(self, arg0: Union[int, JInt], ) -> None: ...
	def getTestWhileIdle(self, ) -> Union[int, JBoolean]: ...
	def getLifo(self, ) -> Union[int, JBoolean]: ...
	def setMaxActive(self, arg0: Union[int, JInt], ) -> None: ...


class GenericObjectPoolFactory:
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JBoolean], arg7: Union[int, JBoolean], arg8: Union[long, JLong], arg9: Union[int, JInt], arg10: Union[long, JLong], arg11: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JBoolean], arg6: Union[int, JBoolean], arg7: Union[long, JLong], arg8: Union[int, JInt], arg9: Union[long, JLong], arg10: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JBoolean], arg6: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JBoolean], arg7: Union[int, JBoolean], arg8: Union[long, JLong], arg9: Union[int, JInt], arg10: Union[long, JLong], arg11: Union[int, JBoolean], arg12: Union[long, JLong], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JBoolean], arg7: Union[int, JBoolean], arg8: Union[long, JLong], arg9: Union[int, JInt], arg10: Union[long, JLong], arg11: Union[int, JBoolean], arg12: Union[long, JLong], arg13: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: javawrappers.org.apache.commons.pool.impl.GenericObjectPool.Config, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JBoolean], arg5: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.apache.commons.pool.PoolableObjectFactory, arg1: Union[int, JInt], arg2: JByte, arg3: Union[long, JLong], arg4: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def createPool(self, ) -> javawrappers.org.apache.commons.pool.ObjectPool: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


