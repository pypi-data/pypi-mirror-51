################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.security
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.net
import javawrappers.java.io
import javawrappers.com.sun.net.ssl
import javawrappers.javax.net.ssl
import javawrappers.java.security.cert

from jpype.types import *
from typing import Union

from typing import overload

class KeyManagerFactory:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def init(self, arg0: javawrappers.java.security.KeyStore, arg1: JArray(Union[string, JString], 1), ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getAlgorithm(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getDefaultAlgorithm() -> javawrappers.java.lang.String: ...
	def getProvider(self, ) -> javawrappers.java.security.Provider: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, ) -> javawrappers.com.sun.net.ssl.KeyManagerFactory: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.com.sun.net.ssl.KeyManagerFactory: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.Provider, ) -> javawrappers.com.sun.net.ssl.KeyManagerFactory: ...
	def getKeyManagers(self, ) -> JArray(javawrappers.com.sun.net.ssl.KeyManager, 1): ...
	def notify(self, ) -> None: ...


class X509KeyManager:
	def getClientAliases(self, arg0: javawrappers.java.lang.String, arg1: JArray(javawrappers.java.security.Principal, 1), ) -> JArray(javawrappers.java.lang.String, 1): ...
	def getCertificateChain(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...
	def chooseClientAlias(self, arg0: javawrappers.java.lang.String, arg1: JArray(javawrappers.java.security.Principal, 1), ) -> javawrappers.java.lang.String: ...
	def getServerAliases(self, arg0: javawrappers.java.lang.String, arg1: JArray(javawrappers.java.security.Principal, 1), ) -> JArray(javawrappers.java.lang.String, 1): ...
	def getPrivateKey(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.security.PrivateKey: ...
	def chooseServerAlias(self, arg0: javawrappers.java.lang.String, arg1: JArray(javawrappers.java.security.Principal, 1), ) -> javawrappers.java.lang.String: ...


class KeyManager:


class KeyManagerFactorySpi:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class X509TrustManager:
	def isServerTrusted(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), ) -> Union[int, JBoolean]: ...
	def getAcceptedIssuers(self, ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...
	def isClientTrusted(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), ) -> Union[int, JBoolean]: ...


class HttpsURLConnection:
	def __init__(self, arg0: javawrappers.java.net.URL, ): ...
	def getCipherSuite(self, ) -> javawrappers.java.lang.String: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def disconnect(self, ) -> None: ...
	def getInstanceFollowRedirects(self, ) -> Union[int, JBoolean]: ...
	def setConnectTimeout(self, arg0: Union[int, JInt], ) -> None: ...
	def getHeaderFieldLong(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], ) -> Union[long, JLong]: ...
	def setUseCaches(self, arg0: Union[int, JBoolean], ) -> None: ...
	@staticmethod
	def setFollowRedirects(arg0: Union[int, JBoolean], ) -> None: ...
	def setRequestProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def getDoInput(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def setDefaultHostnameVerifier(arg0: javawrappers.com.sun.net.ssl.HostnameVerifier, ) -> None: ...
	@staticmethod
	def setDefaultSSLSocketFactory(arg0: javawrappers.javax.net.ssl.SSLSocketFactory, ) -> None: ...
	def getIfModifiedSince(self, ) -> Union[long, JLong]: ...
	def getPermission(self, ) -> javawrappers.java.security.Permission: ...
	@staticmethod
	def getDefaultAllowUserInteraction() -> Union[int, JBoolean]: ...
	@overload
	def getDefaultUseCaches(self, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def getDefaultUseCaches(arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def getAllowUserInteraction(self, ) -> Union[int, JBoolean]: ...
	def getConnectTimeout(self, ) -> Union[int, JInt]: ...
	def getContentLength(self, ) -> Union[int, JInt]: ...
	def getInputStream(self, ) -> javawrappers.java.io.InputStream: ...
	def setAllowUserInteraction(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getRequestProperties(self, ) -> javawrappers.java.util.Map: ...
	def getURL(self, ) -> javawrappers.java.net.URL: ...
	@overload
	def getHeaderField(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def getHeaderField(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def getHeaderFields(self, ) -> javawrappers.java.util.Map: ...
	def getContentLengthLong(self, ) -> Union[long, JLong]: ...
	@staticmethod
	def setDefaultAllowUserInteraction(arg0: Union[int, JBoolean], ) -> None: ...
	def getContentType(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def setFixedLengthStreamingMode(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def setFixedLengthStreamingMode(self, arg0: Union[int, JInt], ) -> None: ...
	def getServerCertificates(self, ) -> JArray(javawrappers.java.security.cert.Certificate, 1): ...
	def usingProxy(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setDefaultUseCaches(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	@staticmethod
	def setDefaultUseCaches(arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> None: ...
	def setDoOutput(self, arg0: Union[int, JBoolean], ) -> None: ...
	@staticmethod
	def guessContentTypeFromName(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getLastModified(self, ) -> Union[long, JLong]: ...
	def setRequestMethod(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setIfModifiedSince(self, arg0: Union[long, JLong], ) -> None: ...
	def setSSLSocketFactory(self, arg0: javawrappers.javax.net.ssl.SSLSocketFactory, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def getContent(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getContent(self, arg0: JArray(javawrappers.java.lang.Class, 1), ) -> javawrappers.java.lang.Object: ...
	def getReadTimeout(self, ) -> Union[int, JInt]: ...
	def setInstanceFollowRedirects(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getSSLSocketFactory(self, ) -> javawrappers.javax.net.ssl.SSLSocketFactory: ...
	def getResponseMessage(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getHeaderFieldInt(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def getRequestProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def guessContentTypeFromStream(arg0: javawrappers.java.io.InputStream, ) -> javawrappers.java.lang.String: ...
	def getErrorStream(self, ) -> javawrappers.java.io.InputStream: ...
	def setAuthenticator(self, arg0: javawrappers.java.net.Authenticator, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def setDefaultRequestProperty(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def getHeaderFieldDate(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], ) -> Union[long, JLong]: ...
	def getDate(self, ) -> Union[long, JLong]: ...
	@staticmethod
	def getFileNameMap() -> javawrappers.java.net.FileNameMap: ...
	def setHostnameVerifier(self, arg0: javawrappers.com.sun.net.ssl.HostnameVerifier, ) -> None: ...
	def connect(self, ) -> None: ...
	def getHeaderFieldKey(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def setContentHandlerFactory(arg0: javawrappers.java.net.ContentHandlerFactory, ) -> None: ...
	def getContentEncoding(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getFollowRedirects() -> Union[int, JBoolean]: ...
	def getHostnameVerifier(self, ) -> javawrappers.com.sun.net.ssl.HostnameVerifier: ...
	def getUseCaches(self, ) -> Union[int, JBoolean]: ...
	def setDoInput(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getRequestMethod(self, ) -> javawrappers.java.lang.String: ...
	def addRequestProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def setReadTimeout(self, arg0: Union[int, JInt], ) -> None: ...
	def getExpiration(self, ) -> Union[long, JLong]: ...
	def setChunkedStreamingMode(self, arg0: Union[int, JInt], ) -> None: ...
	@staticmethod
	def getDefaultRequestProperty(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getDefaultSSLSocketFactory() -> javawrappers.javax.net.ssl.SSLSocketFactory: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getResponseCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def setFileNameMap(arg0: javawrappers.java.net.FileNameMap, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getOutputStream(self, ) -> javawrappers.java.io.OutputStream: ...
	def getDoOutput(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getDefaultHostnameVerifier() -> javawrappers.com.sun.net.ssl.HostnameVerifier: ...


class TrustManagerFactorySpi:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class TrustManager:


class SSLContext:
	def getServerSocketFactory(self, ) -> javawrappers.javax.net.ssl.SSLServerSocketFactory: ...
	def getSocketFactory(self, ) -> javawrappers.javax.net.ssl.SSLSocketFactory: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def init(self, arg0: JArray(javawrappers.com.sun.net.ssl.KeyManager, 1), arg1: JArray(javawrappers.com.sun.net.ssl.TrustManager, 1), arg2: javawrappers.java.security.SecureRandom, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getProvider(self, ) -> javawrappers.java.security.Provider: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getProtocol(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.Provider, ) -> javawrappers.com.sun.net.ssl.SSLContext: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.com.sun.net.ssl.SSLContext: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, ) -> javawrappers.com.sun.net.ssl.SSLContext: ...
	def notify(self, ) -> None: ...


class SSLContextSpi:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class SSLPermission:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def checkGuard(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def newPermissionCollection(self, ) -> javawrappers.java.security.PermissionCollection: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getActions(self, ) -> javawrappers.java.lang.String: ...
	def implies(self, arg0: javawrappers.java.security.Permission, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...


class TrustManagerFactory:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def init(self, arg0: javawrappers.java.security.KeyStore, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getAlgorithm(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getDefaultAlgorithm() -> javawrappers.java.lang.String: ...
	def getProvider(self, ) -> javawrappers.java.security.Provider: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, ) -> javawrappers.com.sun.net.ssl.TrustManagerFactory: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.com.sun.net.ssl.TrustManagerFactory: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.Provider, ) -> javawrappers.com.sun.net.ssl.TrustManagerFactory: ...
	def getTrustManagers(self, ) -> JArray(javawrappers.com.sun.net.ssl.TrustManager, 1): ...
	def notify(self, ) -> None: ...


class HostnameVerifier:
	def verify(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...


