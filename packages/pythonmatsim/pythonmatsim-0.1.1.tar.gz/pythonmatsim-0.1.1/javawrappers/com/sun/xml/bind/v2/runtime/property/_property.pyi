################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.com.sun.xml.bind.v2.model.runtime
import javawrappers.com.sun.xml.bind.v2.runtime.property
import javawrappers.java.lang
import javawrappers.com.sun.xml.bind.v2.runtime
import javawrappers.com.sun.xml.bind.v2.runtime.reflect
import javawrappers.com.sun.xml.bind.v2.model.core
import javawrappers.com.sun.xml.bind.v2.util

from jpype.types import *
from typing import Union

from typing import overload

class Property:
	def hasSerializeURIAction(self, ) -> Union[int, JBoolean]: ...
	def serializeBody(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.runtime.XMLSerializer, arg2: javawrappers.java.lang.Object, ) -> None: ...
	def wrapUp(self, ) -> None: ...
	def getInfo(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: ...
	def setHiddenByOverride(self, arg0: Union[int, JBoolean], ) -> None: ...
	def reset(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def isHiddenByOverride(self, ) -> Union[int, JBoolean]: ...
	def getIdValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.String: ...
	def getKind(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def getFieldName(self, ) -> javawrappers.java.lang.String: ...
	def buildChildElementUnmarshallers(self, arg0: javawrappers.com.sun.xml.bind.v2.runtime.property.UnmarshallerChain, arg1: javawrappers.com.sun.xml.bind.v2.util.QNameMap, ) -> None: ...
	def serializeURIs(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.runtime.XMLSerializer, ) -> None: ...
	def getElementPropertyAccessor(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.com.sun.xml.bind.v2.runtime.reflect.Accessor: ...


class UnmarshallerChain:
	def __init__(self, arg0: javawrappers.com.sun.xml.bind.v2.runtime.JAXBContextImpl, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getScopeSize(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def allocateOffset(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...


class StructureLoaderBuilder:
	def buildChildElementUnmarshallers(self, arg0: javawrappers.com.sun.xml.bind.v2.runtime.property.UnmarshallerChain, arg1: javawrappers.com.sun.xml.bind.v2.util.QNameMap, ) -> None: ...


class AttributeProperty:
	def __init__(self, arg0: javawrappers.com.sun.xml.bind.v2.runtime.JAXBContextImpl, arg1: javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeAttributePropertyInfo, ): ...
	def hasSerializeURIAction(self, ) -> Union[int, JBoolean]: ...
	def serializeBody(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.runtime.XMLSerializer, arg2: javawrappers.java.lang.Object, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def wrapUp(self, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getInfo(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: ...
	def notifyAll(self, ) -> None: ...
	def getIdValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.String: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.com.sun.xml.bind.v2.runtime.property.AttributeProperty, ) -> Union[int, JInt]: ...
	def getKind(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def serializeURIs(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.runtime.XMLSerializer, ) -> None: ...
	def notify(self, ) -> None: ...
	def serializeAttributes(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.runtime.XMLSerializer, ) -> None: ...
	def setHiddenByOverride(self, arg0: Union[int, JBoolean], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def reset(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def isHiddenByOverride(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFieldName(self, ) -> javawrappers.java.lang.String: ...
	def buildChildElementUnmarshallers(self, arg0: javawrappers.com.sun.xml.bind.v2.runtime.property.UnmarshallerChain, arg1: javawrappers.com.sun.xml.bind.v2.util.QNameMap, ) -> None: ...
	def getElementPropertyAccessor(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.com.sun.xml.bind.v2.runtime.reflect.Accessor: ...


class ValueProperty:
	def __init__(self, arg0: javawrappers.com.sun.xml.bind.v2.runtime.JAXBContextImpl, arg1: javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeValuePropertyInfo, ): ...
	def hasSerializeURIAction(self, ) -> Union[int, JBoolean]: ...
	def serializeBody(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.runtime.XMLSerializer, arg2: javawrappers.java.lang.Object, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def wrapUp(self, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getInfo(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: ...
	def notifyAll(self, ) -> None: ...
	def getIdValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.String: ...
	def getKind(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def serializeURIs(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.runtime.XMLSerializer, ) -> None: ...
	def notify(self, ) -> None: ...
	def setHiddenByOverride(self, arg0: Union[int, JBoolean], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def reset(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def isHiddenByOverride(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFieldName(self, ) -> javawrappers.java.lang.String: ...
	def buildChildElementUnmarshallers(self, arg0: javawrappers.com.sun.xml.bind.v2.runtime.property.UnmarshallerChain, arg1: javawrappers.com.sun.xml.bind.v2.util.QNameMap, ) -> None: ...
	def getElementPropertyAccessor(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.com.sun.xml.bind.v2.runtime.reflect.Accessor: ...


class PropertyFactory:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def create(arg0: javawrappers.com.sun.xml.bind.v2.runtime.JAXBContextImpl, arg1: javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo, ) -> javawrappers.com.sun.xml.bind.v2.runtime.property.Property: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


