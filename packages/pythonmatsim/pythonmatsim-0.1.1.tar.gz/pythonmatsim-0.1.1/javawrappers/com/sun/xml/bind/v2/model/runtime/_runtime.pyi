################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.com.sun.xml.bind.v2.model.runtime
import javawrappers.java.lang.reflect
import javawrappers.javax.xml.bind.annotation
import javawrappers.java.util
import javawrappers.com.sun.xml.bind.v2.model.nav
import javawrappers.java.lang.annotation
import javawrappers.com.sun.xml.bind.v2.runtime
import javawrappers.com.sun.xml.bind.v2.runtime.reflect
import javawrappers.com.sun.xml.bind.v2.model.core
import javawrappers.javax.xml.transform
import javawrappers.java.lang
import javawrappers.javax.xml.namespace
import javawrappers.com.sun.xml.bind.v2.model.annotation
import javawrappers.javax.activation

from jpype.types import *
from typing import Union

from typing import overload

class RuntimeArrayInfo:
	def isSimpleType(self, ) -> Union[int, JBoolean]: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	@overload
	def getType(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getItemType(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeNonElement: ...
	@overload
	def getItemType(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	def getTransducer(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Transducer: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def getTypeName(self, ) -> javawrappers.javax.xml.namespace.QName: ...


class RuntimeMapPropertyInfo:
	def getAdapter(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Adapter: ...
	def hasAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def parent(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.TypeInfo: ...
	def getIndividualType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def getRawType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def displayName(self, ) -> javawrappers.java.lang.String: ...
	def kind(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def isCollection(self, ) -> Union[int, JBoolean]: ...
	def elementOnlyContent(self, ) -> Union[int, JBoolean]: ...
	def inlineBinaryData(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getKeyType(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	@overload
	def getKeyType(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeNonElement: ...
	def ref(self, ) -> javawrappers.java.util.Collection: ...
	def getSchemaType(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getAccessor(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.reflect.Accessor: ...
	def readAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def isCollectionNillable(self, ) -> Union[int, JBoolean]: ...
	def id(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ID: ...
	def getXmlName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	@overload
	def getValueType(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	@overload
	def getValueType(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeNonElement: ...
	def getExpectedMimeType(self, ) -> javawrappers.javax.activation.MimeType: ...


class RuntimeAttributePropertyInfo:
	def getAdapter(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Adapter: ...
	def getIndividualType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def hasAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def parent(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.TypeInfo: ...
	def isRequired(self, ) -> Union[int, JBoolean]: ...
	def getRawType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def displayName(self, ) -> javawrappers.java.lang.String: ...
	def kind(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def isCollection(self, ) -> Union[int, JBoolean]: ...
	def elementOnlyContent(self, ) -> Union[int, JBoolean]: ...
	def inlineBinaryData(self, ) -> Union[int, JBoolean]: ...
	def ref(self, ) -> javawrappers.java.util.Collection: ...
	@overload
	def getTarget(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	@overload
	def getTarget(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeNonElement: ...
	def getSchemaType(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	@overload
	def getSource(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyInfo: ...
	@overload
	def getSource(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: ...
	def getAccessor(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.reflect.Accessor: ...
	def readAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getTransducer(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Transducer: ...
	def id(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ID: ...
	def getXmlName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getExpectedMimeType(self, ) -> javawrappers.javax.activation.MimeType: ...


class RuntimeTypeRef:
	@overload
	def getTarget(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeNonElement: ...
	@overload
	def getTarget(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	@overload
	def getSource(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyInfo: ...
	@overload
	def getSource(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: ...
	def getTagName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getTransducer(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Transducer: ...
	def isNillable(self, ) -> Union[int, JBoolean]: ...
	def getDefaultValue(self, ) -> javawrappers.java.lang.String: ...


class RuntimeElementPropertyInfo:
	def getAdapter(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Adapter: ...
	def getIndividualType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def hasAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def parent(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.TypeInfo: ...
	def isRequired(self, ) -> Union[int, JBoolean]: ...
	def getRawType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def displayName(self, ) -> javawrappers.java.lang.String: ...
	def kind(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def isCollection(self, ) -> Union[int, JBoolean]: ...
	def elementOnlyContent(self, ) -> Union[int, JBoolean]: ...
	def inlineBinaryData(self, ) -> Union[int, JBoolean]: ...
	def isValueList(self, ) -> Union[int, JBoolean]: ...
	def ref(self, ) -> javawrappers.java.util.Collection: ...
	def getSchemaType(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getAccessor(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.reflect.Accessor: ...
	def readAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def isCollectionRequired(self, ) -> Union[int, JBoolean]: ...
	def isCollectionNillable(self, ) -> Union[int, JBoolean]: ...
	def id(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ID: ...
	def getTypes(self, ) -> javawrappers.java.util.List: ...
	def getXmlName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getExpectedMimeType(self, ) -> javawrappers.javax.activation.MimeType: ...


class RuntimeLeafInfo:
	def isSimpleType(self, ) -> Union[int, JBoolean]: ...
	def getClazz(self, ) -> javawrappers.java.lang.Class: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getTypeNames(self, ) -> JArray(javawrappers.javax.xml.namespace.QName, 1): ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def isElement(self, ) -> Union[int, JBoolean]: ...
	def asElement(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Element: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def getTransducer(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Transducer: ...
	def getTypeName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getElementName(self, ) -> javawrappers.javax.xml.namespace.QName: ...


class RuntimeTypeInfo:
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...


class RuntimeValuePropertyInfo:
	def getAdapter(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Adapter: ...
	def getIndividualType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def hasAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def parent(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.TypeInfo: ...
	def getRawType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def displayName(self, ) -> javawrappers.java.lang.String: ...
	def kind(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def isCollection(self, ) -> Union[int, JBoolean]: ...
	def elementOnlyContent(self, ) -> Union[int, JBoolean]: ...
	def inlineBinaryData(self, ) -> Union[int, JBoolean]: ...
	def ref(self, ) -> javawrappers.java.util.Collection: ...
	@overload
	def getTarget(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	@overload
	def getTarget(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeNonElement: ...
	def getSchemaType(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	@overload
	def getSource(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyInfo: ...
	@overload
	def getSource(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: ...
	def getAccessor(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.reflect.Accessor: ...
	def readAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getTransducer(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Transducer: ...
	def id(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ID: ...
	def getExpectedMimeType(self, ) -> javawrappers.javax.activation.MimeType: ...


class RuntimeClassInfo:
	def isSimpleType(self, ) -> Union[int, JBoolean]: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def hasProperties(self, ) -> Union[int, JBoolean]: ...
	def declaresAttributeWildcard(self, ) -> Union[int, JBoolean]: ...
	def getElementName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def asElement(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Element: ...
	def inheritsAttributeWildcard(self, ) -> Union[int, JBoolean]: ...
	def getTransducer(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Transducer: ...
	def isFinal(self, ) -> Union[int, JBoolean]: ...
	def getTypeName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def isOrdered(self, ) -> Union[int, JBoolean]: ...
	def getFactoryMethod(self, ) -> javawrappers.java.lang.reflect.Method: ...
	def getClazz(self, ) -> javawrappers.java.lang.Object: ...
	def hasValueProperty(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyInfo: ...
	@overload
	def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: ...
	def isElement(self, ) -> Union[int, JBoolean]: ...
	def hasAttributeWildcard(self, ) -> Union[int, JBoolean]: ...
	def getProperties(self, ) -> javawrappers.java.util.List: ...
	def getLocatorField(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.reflect.Accessor: ...
	def hasSubClasses(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getBaseClass(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ClassInfo: ...
	@overload
	def getBaseClass(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: ...
	def isAbstract(self, ) -> Union[int, JBoolean]: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def getAttributeWildcard(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.reflect.Accessor: ...


class RuntimeNonElement:
	def isSimpleType(self, ) -> Union[int, JBoolean]: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def getTransducer(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Transducer: ...
	def getTypeName(self, ) -> javawrappers.javax.xml.namespace.QName: ...


class RuntimeElement:
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def getSubstitutionHead(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Element: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def getScope(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ClassInfo: ...
	def getElementName(self, ) -> javawrappers.javax.xml.namespace.QName: ...


class RuntimeElementInfo:
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	@overload
	def getProperty(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo: ...
	@overload
	def getProperty(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ElementPropertyInfo: ...
	@overload
	def getType(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getSubstitutionHead(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Element: ...
	@overload
	def getSubstitutionHead(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ElementInfo: ...
	@overload
	def getContentType(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	@overload
	def getContentType(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeNonElement: ...
	def getSubstitutionMembers(self, ) -> javawrappers.java.util.Collection: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def getContentInMemoryType(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getScope(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ClassInfo: ...
	@overload
	def getScope(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: ...
	def getElementName(self, ) -> javawrappers.javax.xml.namespace.QName: ...


class RuntimeEnumLeafInfo:
	def isSimpleType(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getClazz(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getClazz(self, ) -> javawrappers.java.lang.Class: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def isElement(self, ) -> Union[int, JBoolean]: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def getElementName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getTypeNames(self, ) -> JArray(javawrappers.javax.xml.namespace.QName, 1): ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def asElement(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Element: ...
	def getTransducer(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Transducer: ...
	def getConstants(self, ) -> javawrappers.java.lang.Iterable: ...
	def getTypeName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getBaseType(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...


class RuntimeNonElementRef:
	@overload
	def getTarget(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	@overload
	def getTarget(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeNonElement: ...
	@overload
	def getSource(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyInfo: ...
	@overload
	def getSource(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: ...
	def getTransducer(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Transducer: ...


class RuntimeBuiltinLeafInfo:
	def getClazz(self, ) -> javawrappers.java.lang.Class: ...
	def isSimpleType(self, ) -> Union[int, JBoolean]: ...
	def getTypeNames(self, ) -> JArray(javawrappers.javax.xml.namespace.QName, 1): ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def isElement(self, ) -> Union[int, JBoolean]: ...
	def asElement(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Element: ...
	def getTransducer(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Transducer: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def getTypeName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getElementName(self, ) -> javawrappers.javax.xml.namespace.QName: ...


class RuntimeTypeInfoSet:
	@overload
	def getClassInfo(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	@overload
	def getClassInfo(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeNonElement: ...
	@overload
	def getElementInfo(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.javax.xml.namespace.QName, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo: ...
	@overload
	def getElementInfo(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.xml.namespace.QName, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ElementInfo: ...
	def getAttributeFormDefault(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.xml.bind.annotation.XmlNsForm: ...
	def getXmlNs(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Map: ...
	def getNavigator(self, ) -> javawrappers.com.sun.xml.bind.v2.model.nav.Navigator: ...
	def enums(self, ) -> javawrappers.java.util.Map: ...
	def getAllElements(self, ) -> javawrappers.java.lang.Iterable: ...
	def builtins(self, ) -> javawrappers.java.util.Map: ...
	@overload
	def getAnyTypeInfo(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	@overload
	def getAnyTypeInfo(self, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeNonElement: ...
	def getSchemaLocations(self, ) -> javawrappers.java.util.Map: ...
	def getElementFormDefault(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.xml.bind.annotation.XmlNsForm: ...
	def beans(self, ) -> javawrappers.java.util.Map: ...
	def dump(self, arg0: javawrappers.javax.xml.transform.Result, ) -> None: ...
	@overload
	def getTypeInfo(self, arg0: javawrappers.java.lang.reflect.Type, ) -> javawrappers.com.sun.xml.bind.v2.model.runtime.RuntimeNonElement: ...
	@overload
	def getTypeInfo(self, arg0: javawrappers.com.sun.xml.bind.v2.model.core.Ref, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	@overload
	def getTypeInfo(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	def arrays(self, ) -> javawrappers.java.util.Map: ...
	@overload
	def getElementMappings(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Map: ...
	@overload
	def getElementMappings(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.util.Map: ...


class RuntimeReferencePropertyInfo:
	def getAdapter(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Adapter: ...
	def getIndividualType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def hasAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def parent(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.TypeInfo: ...
	def isRequired(self, ) -> Union[int, JBoolean]: ...
	def getRawType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def displayName(self, ) -> javawrappers.java.lang.String: ...
	def kind(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def isCollection(self, ) -> Union[int, JBoolean]: ...
	def elementOnlyContent(self, ) -> Union[int, JBoolean]: ...
	def isMixed(self, ) -> Union[int, JBoolean]: ...
	def inlineBinaryData(self, ) -> Union[int, JBoolean]: ...
	@overload
	def ref(self, ) -> javawrappers.java.util.Collection: ...
	@overload
	def ref(self, ) -> javawrappers.java.util.Collection: ...
	def getDOMHandler(self, ) -> javawrappers.java.lang.Object: ...
	def getSchemaType(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getAccessor(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.reflect.Accessor: ...
	def getElements(self, ) -> javawrappers.java.util.Set: ...
	def readAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def isCollectionRequired(self, ) -> Union[int, JBoolean]: ...
	def isCollectionNillable(self, ) -> Union[int, JBoolean]: ...
	def id(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ID: ...
	def getXmlName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getExpectedMimeType(self, ) -> javawrappers.javax.activation.MimeType: ...
	def getWildcard(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.WildcardMode: ...


class RuntimePropertyInfo:
	def getAdapter(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Adapter: ...
	def hasAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def parent(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.TypeInfo: ...
	def getIndividualType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def getRawType(self, ) -> javawrappers.java.lang.reflect.Type: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def displayName(self, ) -> javawrappers.java.lang.String: ...
	def kind(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def isCollection(self, ) -> Union[int, JBoolean]: ...
	def elementOnlyContent(self, ) -> Union[int, JBoolean]: ...
	def inlineBinaryData(self, ) -> Union[int, JBoolean]: ...
	def ref(self, ) -> javawrappers.java.util.Collection: ...
	def getSchemaType(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getAccessor(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.reflect.Accessor: ...
	def readAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def id(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ID: ...
	def getExpectedMimeType(self, ) -> javawrappers.javax.activation.MimeType: ...


