################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang.reflect
import javawrappers.java.lang
import javawrappers.java.lang.annotation
import javawrappers.com.sun.xml.bind.v2.runtime
import javawrappers.com.sun.xml.bind.v2.model.core
import javawrappers.com.sun.xml.bind.v2.model.annotation

from jpype.types import *
from typing import Union

from typing import overload

class MethodLocatable:
	def __init__(self, arg0: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.nav.Navigator, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class FieldLocatable:
	def __init__(self, arg0: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.nav.Navigator, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class LocatableAnnotation:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def create(arg0: javawrappers.java.lang.annotation.Annotation, arg1: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def invoke(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.reflect.Method, arg2: JArray(javawrappers.java.lang.Object, 1), ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...


class AbstractInlineAnnotationReaderImpl:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getClassValue(self, arg0: javawrappers.java.lang.annotation.Annotation, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def notifyAll(self, ) -> None: ...
	def getPackageAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getClassAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getAllFieldAnnotations(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> JArray(javawrappers.java.lang.annotation.Annotation, 1): ...
	def notify(self, ) -> None: ...
	def getErrorHandler(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ErrorHandler: ...
	def getFieldAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getMethodParameterAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], arg3: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def hasFieldAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setErrorHandler(self, arg0: javawrappers.com.sun.xml.bind.v2.model.core.ErrorHandler, ) -> None: ...
	def getAllMethodAnnotations(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> JArray(javawrappers.java.lang.annotation.Annotation, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def hasClassAnnotation(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def getClassArrayValue(self, arg0: javawrappers.java.lang.annotation.Annotation, arg1: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def getMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def getMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def hasMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def hasMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> Union[int, JBoolean]: ...


class RuntimeInlineAnnotationReader:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getClassValue(self, arg0: javawrappers.java.lang.annotation.Annotation, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getClassValue(self, arg0: javawrappers.java.lang.annotation.Annotation, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Class: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def getPackageAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Class, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def getPackageAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def getClassAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Class, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def getClassAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def getAllFieldAnnotations(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> JArray(javawrappers.java.lang.annotation.Annotation, 1): ...
	@overload
	def getAllFieldAnnotations(self, arg0: javawrappers.java.lang.reflect.Field, arg1: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> JArray(javawrappers.java.lang.annotation.Annotation, 1): ...
	def notify(self, ) -> None: ...
	def getErrorHandler(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ErrorHandler: ...
	@overload
	def getFieldAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def getFieldAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Field, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def getMethodParameterAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], arg3: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def getMethodParameterAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Method, arg2: Union[int, JInt], arg3: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hasFieldAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Field, ) -> Union[int, JBoolean]: ...
	@overload
	def hasFieldAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setErrorHandler(self, arg0: javawrappers.com.sun.xml.bind.v2.model.core.ErrorHandler, ) -> None: ...
	@overload
	def getAllMethodAnnotations(self, arg0: javawrappers.java.lang.reflect.Method, arg1: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> JArray(javawrappers.java.lang.annotation.Annotation, 1): ...
	@overload
	def getAllMethodAnnotations(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> JArray(javawrappers.java.lang.annotation.Annotation, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def hasClassAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	@overload
	def hasClassAnnotation(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	@overload
	def getMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def getMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Method, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def getMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def getClassArrayValue(self, arg0: javawrappers.java.lang.annotation.Annotation, arg1: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def getClassArrayValue(self, arg0: javawrappers.java.lang.annotation.Annotation, arg1: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.lang.Class, 1): ...
	@overload
	def hasMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def hasMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Method, ) -> Union[int, JBoolean]: ...
	@overload
	def hasMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> Union[int, JBoolean]: ...


class Locatable:
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...


class RuntimeAnnotationReader:
	def getFieldAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getMethodParameterAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], arg3: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getClassValue(self, arg0: javawrappers.java.lang.annotation.Annotation, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def hasFieldAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setErrorHandler(self, arg0: javawrappers.com.sun.xml.bind.v2.model.core.ErrorHandler, ) -> None: ...
	def getAllMethodAnnotations(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> JArray(javawrappers.java.lang.annotation.Annotation, 1): ...
	def hasClassAnnotation(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	@overload
	def getMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def getMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getClassArrayValue(self, arg0: javawrappers.java.lang.annotation.Annotation, arg1: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def hasMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> Union[int, JBoolean]: ...
	@overload
	def hasMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getPackageAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getClassAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getAllFieldAnnotations(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> JArray(javawrappers.java.lang.annotation.Annotation, 1): ...


class AnnotationReader:
	def getFieldAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getMethodParameterAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], arg3: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getClassValue(self, arg0: javawrappers.java.lang.annotation.Annotation, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def hasFieldAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setErrorHandler(self, arg0: javawrappers.com.sun.xml.bind.v2.model.core.ErrorHandler, ) -> None: ...
	def getAllMethodAnnotations(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> JArray(javawrappers.java.lang.annotation.Annotation, 1): ...
	def hasClassAnnotation(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	@overload
	def getMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def getMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getClassArrayValue(self, arg0: javawrappers.java.lang.annotation.Annotation, arg1: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def hasMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> Union[int, JBoolean]: ...
	@overload
	def hasMethodAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getPackageAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getClassAnnotation(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getAllFieldAnnotations(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, ) -> JArray(javawrappers.java.lang.annotation.Annotation, 1): ...


class AnnotationSource:
	def hasAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def readAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.annotation.Annotation: ...


class Quick:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def annotationType(self, ) -> javawrappers.java.lang.Class: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ClassLocatable:
	def __init__(self, arg0: javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable, arg1: javawrappers.java.lang.Object, arg2: javawrappers.com.sun.xml.bind.v2.model.nav.Navigator, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


