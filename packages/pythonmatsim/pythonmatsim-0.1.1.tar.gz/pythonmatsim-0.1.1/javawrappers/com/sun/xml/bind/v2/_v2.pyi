################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang.reflect
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.com.sun.xml.bind.api
import javawrappers.com.sun.xml.bind.v2
import javawrappers.com.sun.xml.bind.v2.model.annotation
import javawrappers.javax.xml.bind

from jpype.types import *
from typing import Union

from typing import overload

class TODO:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def checkSpec() -> None: ...
	@overload
	@staticmethod
	def checkSpec(arg0: javawrappers.java.lang.String, ) -> None: ...
	@staticmethod
	def schemaGenerator(arg0: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def prototype(arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	@staticmethod
	def prototype() -> None: ...
	def notify(self, ) -> None: ...


class WellKnownNamespace:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ClassFactory:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def cleanCache() -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def create(arg0: javawrappers.java.lang.reflect.Method, ) -> javawrappers.java.lang.Object: ...
	@overload
	@staticmethod
	def create(arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def create0(arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	@staticmethod
	def inferImplClass(arg0: javawrappers.java.lang.Class, arg1: JArray(javawrappers.java.lang.Class, 1), ) -> javawrappers.java.lang.Class: ...
	def notify(self, ) -> None: ...


class ContextFactory:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def createContext(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.ClassLoader, arg2: javawrappers.java.util.Map, ) -> javawrappers.javax.xml.bind.JAXBContext: ...
	@overload
	@staticmethod
	def createContext(arg0: JArray(javawrappers.java.lang.Class, 1), arg1: javawrappers.java.util.Collection, arg2: javawrappers.java.util.Map, arg3: javawrappers.java.lang.String, arg4: Union[int, JBoolean], arg5: javawrappers.com.sun.xml.bind.v2.model.annotation.RuntimeAnnotationReader, arg6: Union[int, JBoolean], arg7: Union[int, JBoolean], arg8: Union[int, JBoolean], arg9: Union[int, JBoolean], ) -> javawrappers.com.sun.xml.bind.api.JAXBRIContext: ...
	@overload
	@staticmethod
	def createContext(arg0: JArray(javawrappers.java.lang.Class, 1), arg1: javawrappers.java.util.Collection, arg2: javawrappers.java.util.Map, arg3: javawrappers.java.lang.String, arg4: Union[int, JBoolean], arg5: javawrappers.com.sun.xml.bind.v2.model.annotation.RuntimeAnnotationReader, arg6: Union[int, JBoolean], arg7: Union[int, JBoolean], arg8: Union[int, JBoolean], ) -> javawrappers.com.sun.xml.bind.api.JAXBRIContext: ...
	@overload
	@staticmethod
	def createContext(arg0: JArray(javawrappers.java.lang.Class, 1), arg1: javawrappers.java.util.Map, ) -> javawrappers.javax.xml.bind.JAXBContext: ...
	def notify(self, ) -> None: ...


class Messages:
	ILLEGAL_ENTRY: Messages = ...
	ERROR_LOADING_CLASS: Messages = ...
	INVALID_PROPERTY_VALUE: Messages = ...
	UNSUPPORTED_PROPERTY: Messages = ...
	BROKEN_CONTEXTPATH: Messages = ...
	NO_DEFAULT_CONSTRUCTOR_IN_INNER_CLASS: Messages = ...
	INVALID_TYPE_IN_MAP: Messages = ...
	INVALID_JAXP_IMPLEMENTATION: Messages = ...
	JAXP_SUPPORTED_PROPERTY: Messages = ...
	JAXP_UNSUPPORTED_PROPERTY: Messages = ...
	JAXP_XML_SECURITY_DISABLED: Messages = ...
	JAXP_EXTERNAL_ACCESS_CONFIGURED: Messages = ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.com.sun.xml.bind.v2.Messages: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.com.sun.xml.bind.v2.Messages, 1): ...
	def format(self, *arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.String: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


