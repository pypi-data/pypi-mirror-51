################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.xml.sax.ext
import javawrappers.com.sun.xml.txw2.output
import javawrappers.java.lang
import javawrappers.java.io
import javawrappers.com.sun.xml.txw2
import javawrappers.javax.xml.namespace
import javawrappers.org.xml.sax
import javawrappers.javax.xml.transform

from jpype.types import *
from typing import Union

from typing import overload

class StreamSerializer:
	@overload
	def __init__(self, arg0: javawrappers.java.io.OutputStream, arg1: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.Writer, ): ...
	@overload
	def __init__(self, arg0: javawrappers.javax.xml.transform.stream.StreamResult, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.OutputStream, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def beginStartTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def endStartTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def endTag(self, ) -> None: ...
	def endDocument(self, ) -> None: ...
	def startDocument(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def cdata(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def writeXmlns(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def flush(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def comment(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def text(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def writeAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.StringBuilder, ) -> None: ...


class DumpSerializer:
	def __init__(self, arg0: javawrappers.java.io.PrintStream, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def beginStartTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def endStartTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def endTag(self, ) -> None: ...
	def endDocument(self, ) -> None: ...
	def startDocument(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def cdata(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def writeXmlns(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def flush(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def comment(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def text(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def writeAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.StringBuilder, ) -> None: ...


class StaxSerializer:
	@overload
	def __init__(self, arg0: javawrappers.javax.xml.stream.XMLStreamWriter, arg1: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.javax.xml.stream.XMLStreamWriter, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def beginStartTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def endStartTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def endTag(self, ) -> None: ...
	def endDocument(self, ) -> None: ...
	def startDocument(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def cdata(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def writeXmlns(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def flush(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def comment(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def text(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def writeAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.StringBuilder, ) -> None: ...


class DataWriter:
	@overload
	def __init__(self, arg0: javawrappers.java.io.Writer, arg1: javawrappers.java.lang.String, arg2: javawrappers.com.sun.xml.txw2.output.CharacterEscapeHandler, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.Writer, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.Writer, arg1: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def endPrefixMapping(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setDTDHandler(self, arg0: javawrappers.org.xml.sax.DTDHandler, ) -> None: ...
	def notationDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def setHeader(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getErrorHandler(self, ) -> javawrappers.org.xml.sax.ErrorHandler: ...
	def setContentHandler(self, arg0: javawrappers.org.xml.sax.ContentHandler, ) -> None: ...
	def getContentHandler(self, ) -> javawrappers.org.xml.sax.ContentHandler: ...
	def warning(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def setDocumentLocator(self, arg0: javawrappers.org.xml.sax.Locator, ) -> None: ...
	def ignorableWhitespace(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def setXmlDecl(self, arg0: Union[int, JBoolean], ) -> None: ...
	def fatalError(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def getEntityResolver(self, ) -> javawrappers.org.xml.sax.EntityResolver: ...
	def endEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def endDocument(self, ) -> None: ...
	def getFeature(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def setProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def unparsedEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	def reset(self, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setEntityResolver(self, arg0: javawrappers.org.xml.sax.EntityResolver, ) -> None: ...
	def setEncoding(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def endCDATA(self, ) -> None: ...
	def error(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def notify(self, ) -> None: ...
	def startCDATA(self, ) -> None: ...
	@overload
	def characters(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def characters(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def startPrefixMapping(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def endElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def endElement(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def endElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def flush(self, ) -> None: ...
	def setFeature(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setParent(self, arg0: javawrappers.org.xml.sax.XMLReader, ) -> None: ...
	def setOutput(self, arg0: javawrappers.java.io.Writer, arg1: javawrappers.java.lang.String, ) -> None: ...
	def getIndentStep(self, ) -> Union[int, JInt]: ...
	def getParent(self, ) -> javawrappers.org.xml.sax.XMLReader: ...
	def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def startElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.org.xml.sax.Attributes, ) -> None: ...
	@overload
	def startElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def startElement(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def startEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def resolveEntity(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.xml.sax.InputSource: ...
	@overload
	def parse(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def parse(self, arg0: javawrappers.org.xml.sax.InputSource, ) -> None: ...
	@overload
	def dataElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def dataElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def dataElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.org.xml.sax.Attributes, arg4: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def setIndentStep(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def setIndentStep(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def startDocument(self, ) -> None: ...
	def startDTD(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def endDTD(self, ) -> None: ...
	def getDTDHandler(self, ) -> javawrappers.org.xml.sax.DTDHandler: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def skippedEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setErrorHandler(self, arg0: javawrappers.org.xml.sax.ErrorHandler, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def comment(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...


class TXWSerializer:
	def __init__(self, arg0: javawrappers.com.sun.xml.txw2.TypedXmlWriter, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def beginStartTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def endStartTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def endTag(self, ) -> None: ...
	def endDocument(self, ) -> None: ...
	def startDocument(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def cdata(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def writeXmlns(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def flush(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def comment(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def text(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def writeAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.StringBuilder, ) -> None: ...


class TXWResult:
	def __init__(self, arg0: javawrappers.com.sun.xml.txw2.TypedXmlWriter, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setWriter(self, arg0: javawrappers.com.sun.xml.txw2.TypedXmlWriter, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getSystemId(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getWriter(self, ) -> javawrappers.com.sun.xml.txw2.TypedXmlWriter: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setSystemId(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class XMLWriter:
	@overload
	def __init__(self, arg0: javawrappers.java.io.Writer, arg1: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.Writer, arg1: javawrappers.java.lang.String, arg2: javawrappers.com.sun.xml.txw2.output.CharacterEscapeHandler, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def endPrefixMapping(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setDTDHandler(self, arg0: javawrappers.org.xml.sax.DTDHandler, ) -> None: ...
	def notationDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def setHeader(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getErrorHandler(self, ) -> javawrappers.org.xml.sax.ErrorHandler: ...
	def setContentHandler(self, arg0: javawrappers.org.xml.sax.ContentHandler, ) -> None: ...
	def getContentHandler(self, ) -> javawrappers.org.xml.sax.ContentHandler: ...
	def warning(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def setDocumentLocator(self, arg0: javawrappers.org.xml.sax.Locator, ) -> None: ...
	def ignorableWhitespace(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def setXmlDecl(self, arg0: Union[int, JBoolean], ) -> None: ...
	def fatalError(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def getEntityResolver(self, ) -> javawrappers.org.xml.sax.EntityResolver: ...
	def endEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def endDocument(self, ) -> None: ...
	def getFeature(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def setProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def unparsedEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	def reset(self, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setEntityResolver(self, arg0: javawrappers.org.xml.sax.EntityResolver, ) -> None: ...
	def setEncoding(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def endCDATA(self, ) -> None: ...
	def error(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def notify(self, ) -> None: ...
	def startCDATA(self, ) -> None: ...
	@overload
	def characters(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def characters(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def startPrefixMapping(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def endElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def endElement(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def endElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def flush(self, ) -> None: ...
	def setFeature(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setParent(self, arg0: javawrappers.org.xml.sax.XMLReader, ) -> None: ...
	def setOutput(self, arg0: javawrappers.java.io.Writer, arg1: javawrappers.java.lang.String, ) -> None: ...
	def getParent(self, ) -> javawrappers.org.xml.sax.XMLReader: ...
	def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def startElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def startElement(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def startElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.org.xml.sax.Attributes, ) -> None: ...
	def startEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def resolveEntity(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.xml.sax.InputSource: ...
	@overload
	def parse(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def parse(self, arg0: javawrappers.org.xml.sax.InputSource, ) -> None: ...
	@overload
	def dataElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def dataElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def dataElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.org.xml.sax.Attributes, arg4: javawrappers.java.lang.String, ) -> None: ...
	def startDocument(self, ) -> None: ...
	def startDTD(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def endDTD(self, ) -> None: ...
	def getDTDHandler(self, ) -> javawrappers.org.xml.sax.DTDHandler: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def skippedEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setErrorHandler(self, arg0: javawrappers.org.xml.sax.ErrorHandler, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def comment(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...


class CharacterEscapeHandler:
	def escape(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JBoolean], arg4: javawrappers.java.io.Writer, ) -> None: ...


class DumbEscapeHandler:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def escape(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JBoolean], arg4: javawrappers.java.io.Writer, ) -> None: ...
	def notify(self, ) -> None: ...


class ResultFactory:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def createSerializer(arg0: javawrappers.javax.xml.transform.Result, ) -> javawrappers.com.sun.xml.txw2.output.XmlSerializer: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class DomSerializer:
	@overload
	def __init__(self, arg0: javawrappers.javax.xml.transform.dom.DOMResult, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.w3c.dom.Node, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def beginStartTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def endStartTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def endTag(self, ) -> None: ...
	def endDocument(self, ) -> None: ...
	def startDocument(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def cdata(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def writeXmlns(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def flush(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def comment(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def text(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def writeAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.StringBuilder, ) -> None: ...


class IndentingXMLStreamWriter:
	def __init__(self, arg0: javawrappers.javax.xml.stream.XMLStreamWriter, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def writeNamespace(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def writeComment(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def writeDTD(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def writeDefaultNamespace(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def writeProcessingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def writeProcessingInstruction(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def flush(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def close(self, ) -> None: ...
	def writeEndElement(self, ) -> None: ...
	def getIndentStep(self, ) -> Union[int, JInt]: ...
	@overload
	def writeAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def writeAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def writeAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def writeEndDocument(self, ) -> None: ...
	def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getPrefix(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def setNamespaceContext(self, arg0: javawrappers.javax.xml.namespace.NamespaceContext, ) -> None: ...
	@overload
	def writeEmptyElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def writeEmptyElement(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def writeEmptyElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def writeEntityRef(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def setIndentStep(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def setIndentStep(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def writeCharacters(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def writeCharacters(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setDefaultNamespace(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setPrefix(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def writeCData(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def writeStartDocument(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def writeStartDocument(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def writeStartDocument(self, ) -> None: ...
	def getNamespaceContext(self, ) -> javawrappers.javax.xml.namespace.NamespaceContext: ...
	@overload
	def writeStartElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def writeStartElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def writeStartElement(self, arg0: javawrappers.java.lang.String, ) -> None: ...


class SaxSerializer:
	@overload
	def __init__(self, arg0: javawrappers.org.xml.sax.ContentHandler, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.xml.sax.ContentHandler, arg1: javawrappers.org.xml.sax.ext.LexicalHandler, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.xml.sax.ContentHandler, arg1: javawrappers.org.xml.sax.ext.LexicalHandler, arg2: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.javax.xml.transform.sax.SAXResult, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def beginStartTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def endStartTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def endTag(self, ) -> None: ...
	def endDocument(self, ) -> None: ...
	def startDocument(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def cdata(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def writeXmlns(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def flush(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def comment(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def text(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def writeAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.StringBuilder, ) -> None: ...


class XmlSerializer:
	def beginStartTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def writeXmlns(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def flush(self, ) -> None: ...
	def endStartTag(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def endTag(self, ) -> None: ...
	def comment(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def text(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def endDocument(self, ) -> None: ...
	def startDocument(self, ) -> None: ...
	def cdata(self, arg0: javawrappers.java.lang.StringBuilder, ) -> None: ...
	def writeAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.StringBuilder, ) -> None: ...


class IndentingXMLFilter:
	@overload
	def __init__(self, arg0: javawrappers.org.xml.sax.ContentHandler, arg1: javawrappers.org.xml.sax.ext.LexicalHandler, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.xml.sax.ContentHandler, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def endPrefixMapping(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setDTDHandler(self, arg0: javawrappers.org.xml.sax.DTDHandler, ) -> None: ...
	def notationDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def getErrorHandler(self, ) -> javawrappers.org.xml.sax.ErrorHandler: ...
	def setContentHandler(self, arg0: javawrappers.org.xml.sax.ContentHandler, ) -> None: ...
	def getContentHandler(self, ) -> javawrappers.org.xml.sax.ContentHandler: ...
	def warning(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def setDocumentLocator(self, arg0: javawrappers.org.xml.sax.Locator, ) -> None: ...
	def ignorableWhitespace(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def fatalError(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def getEntityResolver(self, ) -> javawrappers.org.xml.sax.EntityResolver: ...
	def endDocument(self, ) -> None: ...
	def endEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getFeature(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def setProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def unparsedEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setEntityResolver(self, arg0: javawrappers.org.xml.sax.EntityResolver, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def endCDATA(self, ) -> None: ...
	def error(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def notify(self, ) -> None: ...
	def startCDATA(self, ) -> None: ...
	def characters(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def startPrefixMapping(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def endElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def setFeature(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setParent(self, arg0: javawrappers.org.xml.sax.XMLReader, ) -> None: ...
	def getIndentStep(self, ) -> Union[int, JInt]: ...
	def getParent(self, ) -> javawrappers.org.xml.sax.XMLReader: ...
	def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def startElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.org.xml.sax.Attributes, ) -> None: ...
	def startEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def resolveEntity(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.xml.sax.InputSource: ...
	@overload
	def parse(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def parse(self, arg0: javawrappers.org.xml.sax.InputSource, ) -> None: ...
	@overload
	def setIndentStep(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def setIndentStep(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def startDocument(self, ) -> None: ...
	def startDTD(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def endDTD(self, ) -> None: ...
	def setLexicalHandler(self, arg0: javawrappers.org.xml.sax.ext.LexicalHandler, ) -> None: ...
	def getDTDHandler(self, ) -> javawrappers.org.xml.sax.DTDHandler: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def skippedEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setErrorHandler(self, arg0: javawrappers.org.xml.sax.ErrorHandler, ) -> None: ...
	def getLexicalHandler(self, ) -> javawrappers.org.xml.sax.ext.LexicalHandler: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def comment(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...


