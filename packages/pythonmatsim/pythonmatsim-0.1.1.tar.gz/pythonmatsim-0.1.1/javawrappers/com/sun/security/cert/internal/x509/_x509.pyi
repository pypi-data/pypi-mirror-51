################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.security
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.io
import javawrappers.java.math
import javawrappers.java.security.cert
import javawrappers.javax.security.cert

from jpype.types import *
from typing import Union

from typing import overload

class X509V1CertImpl:
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.InputStream, ): ...
	def getVersion(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getSerialNumber(self, ) -> javawrappers.java.math.BigInteger: ...
	def getEncoded(self, ) -> JArray(JByte, 1): ...
	def getIssuerDN(self, ) -> javawrappers.java.security.Principal: ...
	def notifyAll(self, ) -> None: ...
	def getPublicKey(self, ) -> javawrappers.java.security.PublicKey: ...
	def getSigAlgParams(self, ) -> JArray(JByte, 1): ...
	def notify(self, ) -> None: ...
	@overload
	def checkValidity(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	@overload
	def checkValidity(self, ) -> None: ...
	def getX509Certificate(self, ) -> javawrappers.java.security.cert.X509Certificate: ...
	def getSigAlgName(self, ) -> javawrappers.java.lang.String: ...
	def getNotBefore(self, ) -> javawrappers.java.util.Date: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSubjectDN(self, ) -> javawrappers.java.security.Principal: ...
	@overload
	def verify(self, arg0: javawrappers.java.security.PublicKey, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def verify(self, arg0: javawrappers.java.security.PublicKey, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getNotAfter(self, ) -> javawrappers.java.util.Date: ...
	@overload
	@staticmethod
	def getInstance(arg0: JArray(JByte, 1), ) -> javawrappers.javax.security.cert.X509Certificate: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.io.InputStream, ) -> javawrappers.javax.security.cert.X509Certificate: ...
	def getSigAlgOID(self, ) -> javawrappers.java.lang.String: ...


