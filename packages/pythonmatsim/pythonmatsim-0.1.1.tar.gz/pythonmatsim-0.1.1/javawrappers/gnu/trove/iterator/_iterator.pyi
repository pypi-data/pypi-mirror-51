################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang

from jpype.types import *
from typing import Union

from typing import overload

class TIntObjectIterator:
	def setValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> javawrappers.java.lang.Object: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JInt]: ...
	def advance(self, ) -> None: ...


class TCharDoubleIterator:
	def setValue(self, arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JDouble]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[string, JString]: ...
	def advance(self, ) -> None: ...


class TShortShortIterator:
	def setValue(self, arg0: Union[int, JShort], ) -> Union[int, JShort]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JShort]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JShort]: ...
	def advance(self, ) -> None: ...


class TDoubleObjectIterator:
	def setValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> javawrappers.java.lang.Object: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JDouble]: ...
	def advance(self, ) -> None: ...


class TCharFloatIterator:
	def setValue(self, arg0: Union[float, JFloat], ) -> Union[float, JFloat]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JFloat]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[string, JString]: ...
	def advance(self, ) -> None: ...


class TFloatDoubleIterator:
	def setValue(self, arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JDouble]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JFloat]: ...
	def advance(self, ) -> None: ...


class TByteIntIterator:
	def setValue(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JInt]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> JByte: ...
	def advance(self, ) -> None: ...


class TFloatShortIterator:
	def setValue(self, arg0: Union[int, JShort], ) -> Union[int, JShort]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JShort]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JFloat]: ...
	def advance(self, ) -> None: ...


class TCharIntIterator:
	def setValue(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JInt]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[string, JString]: ...
	def advance(self, ) -> None: ...


class TDoubleDoubleIterator:
	def setValue(self, arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JDouble]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JDouble]: ...
	def advance(self, ) -> None: ...


class TShortFloatIterator:
	def setValue(self, arg0: Union[float, JFloat], ) -> Union[float, JFloat]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JFloat]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JShort]: ...
	def advance(self, ) -> None: ...


class TShortByteIterator:
	def setValue(self, arg0: JByte, ) -> JByte: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> JByte: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JShort]: ...
	def advance(self, ) -> None: ...


class TCharByteIterator:
	def setValue(self, arg0: JByte, ) -> JByte: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> JByte: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[string, JString]: ...
	def advance(self, ) -> None: ...


class TAdvancingIterator:
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def remove(self, ) -> None: ...
	def advance(self, ) -> None: ...


class TDoubleIntIterator:
	def setValue(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JInt]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JDouble]: ...
	def advance(self, ) -> None: ...


class TByteByteIterator:
	def setValue(self, arg0: JByte, ) -> JByte: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> JByte: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> JByte: ...
	def advance(self, ) -> None: ...


class TFloatIntIterator:
	def setValue(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JInt]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JFloat]: ...
	def advance(self, ) -> None: ...


class TByteIterator:
	def next(self, ) -> JByte: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def remove(self, ) -> None: ...


class TIntFloatIterator:
	def setValue(self, arg0: Union[float, JFloat], ) -> Union[float, JFloat]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JFloat]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JInt]: ...
	def advance(self, ) -> None: ...


class TIntLongIterator:
	def setValue(self, arg0: Union[long, JLong], ) -> Union[long, JLong]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[long, JLong]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JInt]: ...
	def advance(self, ) -> None: ...


class TFloatLongIterator:
	def setValue(self, arg0: Union[long, JLong], ) -> Union[long, JLong]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[long, JLong]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JFloat]: ...
	def advance(self, ) -> None: ...


class TCharCharIterator:
	def setValue(self, arg0: Union[string, JString], ) -> Union[string, JString]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[string, JString]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[string, JString]: ...
	def advance(self, ) -> None: ...


class TDoubleLongIterator:
	def setValue(self, arg0: Union[long, JLong], ) -> Union[long, JLong]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[long, JLong]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JDouble]: ...
	def advance(self, ) -> None: ...


class TByteObjectIterator:
	def setValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> javawrappers.java.lang.Object: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> JByte: ...
	def advance(self, ) -> None: ...


class TLongFloatIterator:
	def setValue(self, arg0: Union[float, JFloat], ) -> Union[float, JFloat]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JFloat]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[long, JLong]: ...
	def advance(self, ) -> None: ...


class TFloatByteIterator:
	def setValue(self, arg0: JByte, ) -> JByte: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> JByte: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JFloat]: ...
	def advance(self, ) -> None: ...


class TIterator:
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def remove(self, ) -> None: ...


class TObjectLongIterator:
	def setValue(self, arg0: Union[long, JLong], ) -> Union[long, JLong]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[long, JLong]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> javawrappers.java.lang.Object: ...
	def advance(self, ) -> None: ...


class TObjectCharIterator:
	def setValue(self, arg0: Union[string, JString], ) -> Union[string, JString]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[string, JString]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> javawrappers.java.lang.Object: ...
	def advance(self, ) -> None: ...


class TDoubleCharIterator:
	def setValue(self, arg0: Union[string, JString], ) -> Union[string, JString]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[string, JString]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JDouble]: ...
	def advance(self, ) -> None: ...


class TObjectIntIterator:
	def setValue(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JInt]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> javawrappers.java.lang.Object: ...
	def advance(self, ) -> None: ...


class TLongIterator:
	def next(self, ) -> Union[long, JLong]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def remove(self, ) -> None: ...


class TDoubleIterator:
	def next(self, ) -> Union[float, JDouble]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def remove(self, ) -> None: ...


class TLongDoubleIterator:
	def setValue(self, arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JDouble]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[long, JLong]: ...
	def advance(self, ) -> None: ...


class TShortCharIterator:
	def setValue(self, arg0: Union[string, JString], ) -> Union[string, JString]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[string, JString]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JShort]: ...
	def advance(self, ) -> None: ...


class TDoubleShortIterator:
	def setValue(self, arg0: Union[int, JShort], ) -> Union[int, JShort]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JShort]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JDouble]: ...
	def advance(self, ) -> None: ...


class TCharLongIterator:
	def setValue(self, arg0: Union[long, JLong], ) -> Union[long, JLong]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[long, JLong]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[string, JString]: ...
	def advance(self, ) -> None: ...


class TObjectShortIterator:
	def setValue(self, arg0: Union[int, JShort], ) -> Union[int, JShort]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JShort]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> javawrappers.java.lang.Object: ...
	def advance(self, ) -> None: ...


class TPrimitiveIterator:
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def remove(self, ) -> None: ...


class TShortIntIterator:
	def setValue(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JInt]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JShort]: ...
	def advance(self, ) -> None: ...


class TIntIterator:
	def next(self, ) -> Union[int, JInt]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def remove(self, ) -> None: ...


class TFloatFloatIterator:
	def setValue(self, arg0: Union[float, JFloat], ) -> Union[float, JFloat]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JFloat]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JFloat]: ...
	def advance(self, ) -> None: ...


class TIntIntIterator:
	def setValue(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JInt]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JInt]: ...
	def advance(self, ) -> None: ...


class TShortDoubleIterator:
	def setValue(self, arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JDouble]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JShort]: ...
	def advance(self, ) -> None: ...


class TIntDoubleIterator:
	def setValue(self, arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JDouble]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JInt]: ...
	def advance(self, ) -> None: ...


class TShortObjectIterator:
	def setValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> javawrappers.java.lang.Object: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JShort]: ...
	def advance(self, ) -> None: ...


class TByteLongIterator:
	def setValue(self, arg0: Union[long, JLong], ) -> Union[long, JLong]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[long, JLong]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> JByte: ...
	def advance(self, ) -> None: ...


class TFloatObjectIterator:
	def setValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> javawrappers.java.lang.Object: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JFloat]: ...
	def advance(self, ) -> None: ...


class TCharIterator:
	def next(self, ) -> Union[string, JString]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def remove(self, ) -> None: ...


class TByteDoubleIterator:
	def setValue(self, arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JDouble]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> JByte: ...
	def advance(self, ) -> None: ...


class TFloatIterator:
	def next(self, ) -> Union[float, JFloat]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def remove(self, ) -> None: ...


class TByteCharIterator:
	def setValue(self, arg0: Union[string, JString], ) -> Union[string, JString]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[string, JString]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> JByte: ...
	def advance(self, ) -> None: ...


class TByteFloatIterator:
	def setValue(self, arg0: Union[float, JFloat], ) -> Union[float, JFloat]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JFloat]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> JByte: ...
	def advance(self, ) -> None: ...


class TLongIntIterator:
	def setValue(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JInt]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[long, JLong]: ...
	def advance(self, ) -> None: ...


class TObjectDoubleIterator:
	def setValue(self, arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JDouble]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> javawrappers.java.lang.Object: ...
	def advance(self, ) -> None: ...


class TLongByteIterator:
	def setValue(self, arg0: JByte, ) -> JByte: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> JByte: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[long, JLong]: ...
	def advance(self, ) -> None: ...


class TObjectByteIterator:
	def setValue(self, arg0: JByte, ) -> JByte: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> JByte: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> javawrappers.java.lang.Object: ...
	def advance(self, ) -> None: ...


class TCharShortIterator:
	def setValue(self, arg0: Union[int, JShort], ) -> Union[int, JShort]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JShort]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[string, JString]: ...
	def advance(self, ) -> None: ...


class TShortLongIterator:
	def setValue(self, arg0: Union[long, JLong], ) -> Union[long, JLong]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[long, JLong]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JShort]: ...
	def advance(self, ) -> None: ...


class TByteShortIterator:
	def setValue(self, arg0: Union[int, JShort], ) -> Union[int, JShort]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JShort]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> JByte: ...
	def advance(self, ) -> None: ...


class TIntCharIterator:
	def setValue(self, arg0: Union[string, JString], ) -> Union[string, JString]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[string, JString]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JInt]: ...
	def advance(self, ) -> None: ...


class TLongCharIterator:
	def setValue(self, arg0: Union[string, JString], ) -> Union[string, JString]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[string, JString]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[long, JLong]: ...
	def advance(self, ) -> None: ...


class TIntByteIterator:
	def setValue(self, arg0: JByte, ) -> JByte: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> JByte: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JInt]: ...
	def advance(self, ) -> None: ...


class TLongLongIterator:
	def setValue(self, arg0: Union[long, JLong], ) -> Union[long, JLong]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[long, JLong]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[long, JLong]: ...
	def advance(self, ) -> None: ...


class TLongShortIterator:
	def setValue(self, arg0: Union[int, JShort], ) -> Union[int, JShort]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JShort]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[long, JLong]: ...
	def advance(self, ) -> None: ...


class TShortIterator:
	def next(self, ) -> Union[int, JShort]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def remove(self, ) -> None: ...


class TFloatCharIterator:
	def setValue(self, arg0: Union[string, JString], ) -> Union[string, JString]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[string, JString]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JFloat]: ...
	def advance(self, ) -> None: ...


class TObjectFloatIterator:
	def setValue(self, arg0: Union[float, JFloat], ) -> Union[float, JFloat]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JFloat]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> javawrappers.java.lang.Object: ...
	def advance(self, ) -> None: ...


class TDoubleByteIterator:
	def setValue(self, arg0: JByte, ) -> JByte: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> JByte: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JDouble]: ...
	def advance(self, ) -> None: ...


class TLongObjectIterator:
	def setValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> javawrappers.java.lang.Object: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[long, JLong]: ...
	def advance(self, ) -> None: ...


class TCharObjectIterator:
	def setValue(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> javawrappers.java.lang.Object: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[string, JString]: ...
	def advance(self, ) -> None: ...


class TIntShortIterator:
	def setValue(self, arg0: Union[int, JShort], ) -> Union[int, JShort]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[int, JShort]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[int, JInt]: ...
	def advance(self, ) -> None: ...


class TDoubleFloatIterator:
	def setValue(self, arg0: Union[float, JFloat], ) -> Union[float, JFloat]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def value(self, ) -> Union[float, JFloat]: ...
	def remove(self, ) -> None: ...
	def key(self, ) -> Union[float, JDouble]: ...
	def advance(self, ) -> None: ...


