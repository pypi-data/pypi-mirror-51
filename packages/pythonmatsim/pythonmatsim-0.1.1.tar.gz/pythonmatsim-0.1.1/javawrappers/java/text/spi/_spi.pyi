################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.text

from jpype.types import *
from typing import Union

from typing import overload

class NumberFormatProvider:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isSupportedLocale(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getIntegerInstance(self, arg0: javawrappers.java.util.Locale, ) -> javawrappers.java.text.NumberFormat: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCurrencyInstance(self, arg0: javawrappers.java.util.Locale, ) -> javawrappers.java.text.NumberFormat: ...
	def getPercentInstance(self, arg0: javawrappers.java.util.Locale, ) -> javawrappers.java.text.NumberFormat: ...
	def notify(self, ) -> None: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...
	def getNumberInstance(self, arg0: javawrappers.java.util.Locale, ) -> javawrappers.java.text.NumberFormat: ...


class DateFormatSymbolsProvider:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isSupportedLocale(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getInstance(self, arg0: javawrappers.java.util.Locale, ) -> javawrappers.java.text.DateFormatSymbols: ...
	def notify(self, ) -> None: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...


class DateFormatProvider:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isSupportedLocale(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDateTimeInstance(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.util.Locale, ) -> javawrappers.java.text.DateFormat: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getTimeInstance(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Locale, ) -> javawrappers.java.text.DateFormat: ...
	def notify(self, ) -> None: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...
	def getDateInstance(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Locale, ) -> javawrappers.java.text.DateFormat: ...


class DecimalFormatSymbolsProvider:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isSupportedLocale(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getInstance(self, arg0: javawrappers.java.util.Locale, ) -> javawrappers.java.text.DecimalFormatSymbols: ...
	def notify(self, ) -> None: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...


class CollatorProvider:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isSupportedLocale(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getInstance(self, arg0: javawrappers.java.util.Locale, ) -> javawrappers.java.text.Collator: ...
	def notify(self, ) -> None: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...


class BreakIteratorProvider:
	def getSentenceInstance(self, arg0: javawrappers.java.util.Locale, ) -> javawrappers.java.text.BreakIterator: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isSupportedLocale(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getCharacterInstance(self, arg0: javawrappers.java.util.Locale, ) -> javawrappers.java.text.BreakIterator: ...
	def getWordInstance(self, arg0: javawrappers.java.util.Locale, ) -> javawrappers.java.text.BreakIterator: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...
	def getLineInstance(self, arg0: javawrappers.java.util.Locale, ) -> javawrappers.java.text.BreakIterator: ...


