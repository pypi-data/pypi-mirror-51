################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.io

from jpype.types import *
from typing import Union

from typing import overload

class CurrencyNameProvider:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isSupportedLocale(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDisplayName(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...
	def getSymbol(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...


class CalendarNameProvider:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isSupportedLocale(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDisplayName(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDisplayNames(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.util.Locale, ) -> javawrappers.java.util.Map: ...
	def notify(self, ) -> None: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...


class CalendarDataProvider:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isSupportedLocale(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getMinimalDaysInFirstWeek(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JInt]: ...
	def getFirstDayOfWeek(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...


class LocaleNameProvider:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isSupportedLocale(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JBoolean]: ...
	def getDisplayScript(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getDisplayUnicodeExtensionType(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	def getDisplayUnicodeExtensionKey(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getDisplayCountry(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getDisplayVariant(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDisplayLanguage(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...


class ResourceBundleProvider:
	def getBundle(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Locale, ) -> javawrappers.java.util.ResourceBundle: ...


class ResourceBundleControlProvider:
	def getControl(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.ResourceBundle.Control: ...


class ToolProvider:
	def name(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def run(self, arg0: javawrappers.java.io.PrintWriter, arg1: javawrappers.java.io.PrintWriter, *arg2: javawrappers.java.lang.String, ) -> Union[int, JInt]: ...
	@overload
	def run(self, arg0: javawrappers.java.io.PrintStream, arg1: javawrappers.java.io.PrintStream, *arg2: javawrappers.java.lang.String, ) -> Union[int, JInt]: ...
	@staticmethod
	def findFirst(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Optional: ...


class TimeZoneNameProvider:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isSupportedLocale(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDisplayName(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], arg2: Union[int, JInt], arg3: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getGenericDisplayName(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...


class LocaleServiceProvider:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isSupportedLocale(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...


class AbstractResourceBundleProvider:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getBundle(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Locale, ) -> javawrappers.java.util.ResourceBundle: ...


