################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.jdk.internal.perf
import javawrappers.java.lang
import javawrappers.java.nio

from jpype.types import *
from typing import Union

from typing import overload

class PerfCounter:
	class CoreCounters:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	@staticmethod
	def getParentDelegationTime() -> javawrappers.jdk.internal.perf.PerfCounter: ...
	def add(self, arg0: Union[long, JLong], ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@staticmethod
	def getZipFileOpenTime() -> javawrappers.jdk.internal.perf.PerfCounter: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: Union[long, JLong], ) -> None: ...
	def addTime(self, arg0: Union[long, JLong], ) -> None: ...
	@staticmethod
	def getReadClassBytesTime() -> javawrappers.jdk.internal.perf.PerfCounter: ...
	def notifyAll(self, ) -> None: ...
	def increment(self, ) -> None: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def getFindClassTime() -> javawrappers.jdk.internal.perf.PerfCounter: ...
	@staticmethod
	def getZipFileCount() -> javawrappers.jdk.internal.perf.PerfCounter: ...
	def addElapsedTimeFrom(self, arg0: Union[long, JLong], ) -> None: ...
	@staticmethod
	def newConstantPerfCounter(arg0: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.perf.PerfCounter: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def newPerfCounter(arg0: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.perf.PerfCounter: ...
	def get(self, ) -> Union[long, JLong]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getFindClasses() -> javawrappers.jdk.internal.perf.PerfCounter: ...


class Perf:
	class CleanerAction:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def run(self, ) -> None: ...
		def notify(self, ) -> None: ...


	class GetPerfAction:
		def __init__(self, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@overload
		def run(self, ) -> javawrappers.jdk.internal.perf.Perf: ...
		@overload
		def run(self, ) -> javawrappers.java.lang.Object: ...
		def notify(self, ) -> None: ...


	def createLong(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[long, JLong], ) -> javawrappers.java.nio.ByteBuffer: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def highResFrequency(self, ) -> Union[long, JLong]: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def createString(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.lang.String, ) -> javawrappers.java.nio.ByteBuffer: ...
	@overload
	def createString(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.lang.String, arg4: Union[int, JInt], ) -> javawrappers.java.nio.ByteBuffer: ...
	def highResCounter(self, ) -> Union[long, JLong]: ...
	@overload
	def run(self, ) -> javawrappers.jdk.internal.perf.Perf: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def createByteArray(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: JArray(JByte, 1), arg4: Union[int, JInt], ) -> javawrappers.java.nio.ByteBuffer: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def attach(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.java.nio.ByteBuffer: ...
	@overload
	def attach(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, ) -> javawrappers.java.nio.ByteBuffer: ...
	@staticmethod
	def getPerf() -> javawrappers.jdk.internal.perf.Perf: ...


