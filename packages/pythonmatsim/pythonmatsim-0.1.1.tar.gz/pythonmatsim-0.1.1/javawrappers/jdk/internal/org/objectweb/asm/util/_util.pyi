################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.jdk.internal.org.objectweb.asm.signature
import javawrappers.jdk.internal.org.objectweb.asm.util
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.io
import javawrappers.jdk.internal.org.objectweb.asm

from jpype.types import *
from typing import Union

from typing import overload

class CheckMethodAdapter:
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.MethodVisitor, arg1: javawrappers.java.util.Map, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.jdk.internal.org.objectweb.asm.MethodVisitor, arg4: javawrappers.java.util.Map, ): ...
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.MethodVisitor, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitJumpInsn(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def visitAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	@overload
	def visitMethodInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: Union[int, JBoolean], ) -> None: ...
	@overload
	def visitMethodInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def visitTryCatchBlock(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Label, arg1: javawrappers.jdk.internal.org.objectweb.asm.Label, arg2: javawrappers.jdk.internal.org.objectweb.asm.Label, arg3: javawrappers.java.lang.String, ) -> None: ...
	def visitTableSwitchInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.jdk.internal.org.objectweb.asm.Label, *arg3: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def visitAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def notify(self, ) -> None: ...
	def visitParameterAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitParameter(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def visitInsnAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitMultiANewArrayInsn(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> None: ...
	def visitCode(self, ) -> None: ...
	def visitLdcInsn(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def visitTypeInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, ) -> None: ...
	def visitFrame(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: JArray(javawrappers.java.lang.Object, 1), arg3: Union[int, JInt], arg4: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def visitLocalVariable(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.jdk.internal.org.objectweb.asm.Label, arg4: javawrappers.jdk.internal.org.objectweb.asm.Label, arg5: Union[int, JInt], ) -> None: ...
	def visitEnd(self, ) -> None: ...
	def visitLabel(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def visitLookupSwitchInsn(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Label, arg1: JArray(Union[int, JInt], 1), arg2: JArray(javawrappers.jdk.internal.org.objectweb.asm.Label, 1), ) -> None: ...
	def visitLocalVariableAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: JArray(javawrappers.jdk.internal.org.objectweb.asm.Label, 1), arg3: JArray(javawrappers.jdk.internal.org.objectweb.asm.Label, 1), arg4: JArray(Union[int, JInt], 1), arg5: javawrappers.java.lang.String, arg6: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitIntInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitIincInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitInsn(self, arg0: Union[int, JInt], ) -> None: ...
	def visitLineNumber(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def visitVarInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitTryCatchAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitInvokeDynamicInsn(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.jdk.internal.org.objectweb.asm.Handle, *arg3: javawrappers.java.lang.Object, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visitAnnotationDefault(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitMaxs(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitFieldInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...


class CheckAnnotationAdapter:
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitArray(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitEnd(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visit(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def visitAnnotation(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def notify(self, ) -> None: ...
	def visitEnum(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...


class CheckClassAdapter:
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.ClassVisitor, ): ...
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.ClassVisitor, arg1: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitInnerClass(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: Union[int, JInt], ) -> None: ...
	def visitTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitEnd(self, ) -> None: ...
	def visitAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	def visitOuterClass(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def main(arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def visitAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitMethod(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: JArray(javawrappers.java.lang.String, 1), ) -> javawrappers.jdk.internal.org.objectweb.asm.MethodVisitor: ...
	def visitSource(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def visitModule(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.ModuleVisitor: ...
	def visitField(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, ) -> javawrappers.jdk.internal.org.objectweb.asm.FieldVisitor: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def checkFieldSignature(arg0: javawrappers.java.lang.String, ) -> None: ...
	@staticmethod
	def checkMethodSignature(arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	@staticmethod
	def verify(arg0: javawrappers.jdk.internal.org.objectweb.asm.ClassReader, arg1: javawrappers.java.lang.ClassLoader, arg2: Union[int, JBoolean], arg3: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	@staticmethod
	def verify(arg0: javawrappers.jdk.internal.org.objectweb.asm.ClassReader, arg1: Union[int, JBoolean], arg2: javawrappers.java.io.PrintWriter, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visit(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, arg5: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	@staticmethod
	def checkClassSignature(arg0: javawrappers.java.lang.String, ) -> None: ...


class Textifiable:
	def textify(self, arg0: javawrappers.java.lang.StringBuffer, arg1: javawrappers.java.util.Map, ) -> None: ...


class ASMifier:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def visitTypeAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg3: javawrappers.java.lang.String, arg4: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	@overload
	def visitTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	def visitAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	def visitTryCatchBlock(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Label, arg1: javawrappers.jdk.internal.org.objectweb.asm.Label, arg2: javawrappers.jdk.internal.org.objectweb.asm.Label, arg3: javawrappers.java.lang.String, ) -> None: ...
	def visitTableSwitchInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.jdk.internal.org.objectweb.asm.Label, *arg3: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	@staticmethod
	def main(arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def visitModuleEnd(self, ) -> None: ...
	@overload
	def visitField(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	@overload
	def visitField(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	def visitClassEnd(self, ) -> None: ...
	@overload
	def visitParameterAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	@overload
	def visitParameterAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitMethodAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	@overload
	def visitInsnAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	@overload
	def visitInsnAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitPackage(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitTypeInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, ) -> None: ...
	def visitFieldAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	@staticmethod
	def appendString(arg0: javawrappers.java.lang.StringBuffer, arg1: javawrappers.java.lang.String, ) -> None: ...
	def visitLocalVariable(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.jdk.internal.org.objectweb.asm.Label, arg4: javawrappers.jdk.internal.org.objectweb.asm.Label, arg5: Union[int, JInt], ) -> None: ...
	def visitInnerClass(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: Union[int, JInt], ) -> None: ...
	def getText(self, ) -> javawrappers.java.util.List: ...
	def visitLabel(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	@overload
	def visitFieldAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	@overload
	def visitFieldAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	def visitIntInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def visitMethod(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: JArray(javawrappers.java.lang.String, 1), ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	@overload
	def visitMethod(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: JArray(javawrappers.java.lang.String, 1), ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	def visitClassAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	def visitSource(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def visitMethodTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	@overload
	def visitMethodTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitIincInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitInsn(self, arg0: Union[int, JInt], ) -> None: ...
	def visitLineNumber(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def visitModule(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitVarInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def visitTryCatchAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	@overload
	def visitTryCatchAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	def visitInvokeDynamicInsn(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.jdk.internal.org.objectweb.asm.Handle, *arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def visitMethodAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	@overload
	def visitMethodAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	def visitOpen(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], *arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def visitClassTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	@overload
	def visitClassTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	def visitProvide(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.String, ) -> None: ...
	def visitJumpInsn(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def visitOuterClass(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def visitMethodInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: Union[int, JBoolean], ) -> None: ...
	@overload
	def visitMethodInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def visitAnnotation(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	@overload
	def visitAnnotation(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	@overload
	def visitAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	def notify(self, ) -> None: ...
	def visitUse(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitRequire(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> None: ...
	def visitParameter(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def visitMultiANewArrayInsn(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> None: ...
	def visitCode(self, ) -> None: ...
	def visitLdcInsn(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def visitExport(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], *arg2: javawrappers.java.lang.String, ) -> None: ...
	def visitFrame(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: JArray(javawrappers.java.lang.Object, 1), arg3: Union[int, JInt], arg4: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def visitLookupSwitchInsn(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Label, arg1: JArray(Union[int, JInt], 1), arg2: JArray(javawrappers.jdk.internal.org.objectweb.asm.Label, 1), ) -> None: ...
	def visitAnnotationEnd(self, ) -> None: ...
	@overload
	def visitClassAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	@overload
	def visitClassAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitLocalVariableAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: JArray(javawrappers.jdk.internal.org.objectweb.asm.Label, 1), arg3: JArray(javawrappers.jdk.internal.org.objectweb.asm.Label, 1), arg4: JArray(Union[int, JInt], 1), arg5: javawrappers.java.lang.String, arg6: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitEnum(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def print_(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def visitArray(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	@overload
	def visitArray(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	def visitMethodEnd(self, ) -> None: ...
	def visitMainClass(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def visitFieldTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	@overload
	def visitFieldTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitFieldEnd(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def visit(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, arg5: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	@overload
	def visitAnnotationDefault(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	@overload
	def visitAnnotationDefault(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.ASMifier: ...
	def visitMaxs(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitFieldInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...


class TraceFieldVisitor:
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.FieldVisitor, arg1: javawrappers.jdk.internal.org.objectweb.asm.util.Printer, ): ...
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.util.Printer, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitEnd(self, ) -> None: ...
	def visitAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visitAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def notify(self, ) -> None: ...


class CheckSignatureAdapter:
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitEnd(self, ) -> None: ...
	def visitInterfaceBound(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def visitTypeArgument(self, arg0: Union[string, JString], ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	@overload
	def visitTypeArgument(self, ) -> None: ...
	def visitParameterType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def visitBaseType(self, arg0: Union[string, JString], ) -> None: ...
	def visitExceptionType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def visitTypeVariable(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitInterface(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def notify(self, ) -> None: ...
	def visitReturnType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def visitClassBound(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def visitArrayType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def visitSuperclass(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visitFormalTypeParameter(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitInnerClassType(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitClassType(self, arg0: javawrappers.java.lang.String, ) -> None: ...


class TraceModuleVisitor:
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.ModuleVisitor, arg1: javawrappers.jdk.internal.org.objectweb.asm.util.Printer, ): ...
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.util.Printer, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitEnd(self, ) -> None: ...
	def visitProvide(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def visitUse(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitMainClass(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitRequire(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visitExport(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], *arg2: javawrappers.java.lang.String, ) -> None: ...
	def visitOpen(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], *arg2: javawrappers.java.lang.String, ) -> None: ...
	def visitPackage(self, arg0: javawrappers.java.lang.String, ) -> None: ...


class Printer:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def visitTryCatchBlock(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Label, arg1: javawrappers.jdk.internal.org.objectweb.asm.Label, arg2: javawrappers.jdk.internal.org.objectweb.asm.Label, arg3: javawrappers.java.lang.String, ) -> None: ...
	def visitTableSwitchInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.jdk.internal.org.objectweb.asm.Label, *arg3: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def visitModuleEnd(self, ) -> None: ...
	def visitField(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitClassEnd(self, ) -> None: ...
	def visitParameterAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitMethodAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	def visitInsnAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitPackage(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitTypeInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, ) -> None: ...
	def visitFieldAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	def visitLocalVariable(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.jdk.internal.org.objectweb.asm.Label, arg4: javawrappers.jdk.internal.org.objectweb.asm.Label, arg5: Union[int, JInt], ) -> None: ...
	def visitInnerClass(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: Union[int, JInt], ) -> None: ...
	@staticmethod
	def appendString(arg0: javawrappers.java.lang.StringBuffer, arg1: javawrappers.java.lang.String, ) -> None: ...
	def visitLabel(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def getText(self, ) -> javawrappers.java.util.List: ...
	def visitFieldAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitIntInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitMethod(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: JArray(javawrappers.java.lang.String, 1), ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitClassAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	def visitSource(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def visitMethodTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitIincInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitInsn(self, arg0: Union[int, JInt], ) -> None: ...
	def visitLineNumber(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def visitModule(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitVarInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitTryCatchAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitInvokeDynamicInsn(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.jdk.internal.org.objectweb.asm.Handle, *arg3: javawrappers.java.lang.Object, ) -> None: ...
	def visitMethodAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitOpen(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], *arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitClassTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitProvide(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.String, ) -> None: ...
	def visitJumpInsn(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def visitOuterClass(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def visitMethodInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: Union[int, JBoolean], ) -> None: ...
	@overload
	def visitMethodInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def visitAnnotation(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def notify(self, ) -> None: ...
	def visitUse(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitRequire(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> None: ...
	def visitParameter(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def visitMultiANewArrayInsn(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> None: ...
	def visitCode(self, ) -> None: ...
	def visitLdcInsn(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def visitExport(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], *arg2: javawrappers.java.lang.String, ) -> None: ...
	def visitFrame(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: JArray(javawrappers.java.lang.Object, 1), arg3: Union[int, JInt], arg4: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def visitLookupSwitchInsn(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Label, arg1: JArray(Union[int, JInt], 1), arg2: JArray(javawrappers.jdk.internal.org.objectweb.asm.Label, 1), ) -> None: ...
	def visitAnnotationEnd(self, ) -> None: ...
	def visitClassAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitLocalVariableAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: JArray(javawrappers.jdk.internal.org.objectweb.asm.Label, 1), arg3: JArray(javawrappers.jdk.internal.org.objectweb.asm.Label, 1), arg4: JArray(Union[int, JInt], 1), arg5: javawrappers.java.lang.String, arg6: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitEnum(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def print_(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def visitArray(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitMethodEnd(self, ) -> None: ...
	def visitMainClass(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitFieldTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitFieldEnd(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def visit(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, arg5: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def visitAnnotationDefault(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitMaxs(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitFieldInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...


class Textifier:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def visitTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Textifier: ...
	def visitAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	def visitTryCatchBlock(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Label, arg1: javawrappers.jdk.internal.org.objectweb.asm.Label, arg2: javawrappers.jdk.internal.org.objectweb.asm.Label, arg3: javawrappers.java.lang.String, ) -> None: ...
	def visitTableSwitchInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.jdk.internal.org.objectweb.asm.Label, *arg3: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	@staticmethod
	def main(arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def visitModuleEnd(self, ) -> None: ...
	@overload
	def visitField(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Textifier: ...
	@overload
	def visitField(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitClassEnd(self, ) -> None: ...
	@overload
	def visitParameterAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	@overload
	def visitParameterAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Textifier: ...
	def visitMethodAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	def visitInsnAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitPackage(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitTypeInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, ) -> None: ...
	def visitFieldAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	@staticmethod
	def appendString(arg0: javawrappers.java.lang.StringBuffer, arg1: javawrappers.java.lang.String, ) -> None: ...
	def visitLocalVariable(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.jdk.internal.org.objectweb.asm.Label, arg4: javawrappers.jdk.internal.org.objectweb.asm.Label, arg5: Union[int, JInt], ) -> None: ...
	def visitInnerClass(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: Union[int, JInt], ) -> None: ...
	def getText(self, ) -> javawrappers.java.util.List: ...
	def visitLabel(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	@overload
	def visitFieldAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Textifier: ...
	@overload
	def visitFieldAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitIntInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def visitMethod(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: JArray(javawrappers.java.lang.String, 1), ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Textifier: ...
	@overload
	def visitMethod(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: JArray(javawrappers.java.lang.String, 1), ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitClassAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	def visitSource(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def visitMethodTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitIincInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitInsn(self, arg0: Union[int, JInt], ) -> None: ...
	def visitLineNumber(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def visitModule(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitVarInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitTryCatchAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitInvokeDynamicInsn(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.jdk.internal.org.objectweb.asm.Handle, *arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def visitMethodAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	@overload
	def visitMethodAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Textifier: ...
	def visitOpen(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], *arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitClassTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitProvide(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.String, ) -> None: ...
	def visitJumpInsn(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def visitOuterClass(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def visitMethodInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def visitMethodInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: Union[int, JBoolean], ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def visitAnnotation(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Textifier: ...
	@overload
	def visitAnnotation(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	@overload
	def visitAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Textifier: ...
	def notify(self, ) -> None: ...
	def visitUse(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitRequire(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> None: ...
	def visitParameter(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def visitMultiANewArrayInsn(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> None: ...
	def visitCode(self, ) -> None: ...
	def visitLdcInsn(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def visitExport(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], *arg2: javawrappers.java.lang.String, ) -> None: ...
	def visitFrame(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: JArray(javawrappers.java.lang.Object, 1), arg3: Union[int, JInt], arg4: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def visitLookupSwitchInsn(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Label, arg1: JArray(Union[int, JInt], 1), arg2: JArray(javawrappers.jdk.internal.org.objectweb.asm.Label, 1), ) -> None: ...
	def visitAnnotationEnd(self, ) -> None: ...
	@overload
	def visitClassAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Textifier: ...
	@overload
	def visitClassAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitLocalVariableAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: JArray(javawrappers.jdk.internal.org.objectweb.asm.Label, 1), arg3: JArray(javawrappers.jdk.internal.org.objectweb.asm.Label, 1), arg4: JArray(Union[int, JInt], 1), arg5: javawrappers.java.lang.String, arg6: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitEnum(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def print_(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def visitArray(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	@overload
	def visitArray(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Textifier: ...
	def visitMethodEnd(self, ) -> None: ...
	def visitMainClass(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitFieldTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitFieldEnd(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def visit(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, arg5: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	@overload
	def visit(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def visitAnnotationDefault(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Textifier: ...
	@overload
	def visitAnnotationDefault(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.util.Printer: ...
	def visitMaxs(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitFieldInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...


class CheckModuleAdapter:
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.ModuleVisitor, arg1: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitEnd(self, ) -> None: ...
	def visitProvide(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def visitUse(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitMainClass(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitRequire(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visitExport(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], *arg2: javawrappers.java.lang.String, ) -> None: ...
	def visitOpen(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], *arg2: javawrappers.java.lang.String, ) -> None: ...
	def visitPackage(self, arg0: javawrappers.java.lang.String, ) -> None: ...


class TraceMethodVisitor:
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.MethodVisitor, arg1: javawrappers.jdk.internal.org.objectweb.asm.util.Printer, ): ...
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.util.Printer, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitJumpInsn(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def visitAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	@overload
	def visitMethodInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def visitMethodInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: Union[int, JBoolean], ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def visitTryCatchBlock(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Label, arg1: javawrappers.jdk.internal.org.objectweb.asm.Label, arg2: javawrappers.jdk.internal.org.objectweb.asm.Label, arg3: javawrappers.java.lang.String, ) -> None: ...
	def visitTableSwitchInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.jdk.internal.org.objectweb.asm.Label, *arg3: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def visitAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def notify(self, ) -> None: ...
	def visitParameterAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitParameter(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def visitInsnAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitMultiANewArrayInsn(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> None: ...
	def visitCode(self, ) -> None: ...
	def visitLdcInsn(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def visitTypeInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, ) -> None: ...
	def visitFrame(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: JArray(javawrappers.java.lang.Object, 1), arg3: Union[int, JInt], arg4: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def visitLocalVariable(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.jdk.internal.org.objectweb.asm.Label, arg4: javawrappers.jdk.internal.org.objectweb.asm.Label, arg5: Union[int, JInt], ) -> None: ...
	def visitEnd(self, ) -> None: ...
	def visitLabel(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def visitLookupSwitchInsn(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Label, arg1: JArray(Union[int, JInt], 1), arg2: JArray(javawrappers.jdk.internal.org.objectweb.asm.Label, 1), ) -> None: ...
	def visitLocalVariableAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: JArray(javawrappers.jdk.internal.org.objectweb.asm.Label, 1), arg3: JArray(javawrappers.jdk.internal.org.objectweb.asm.Label, 1), arg4: JArray(Union[int, JInt], 1), arg5: javawrappers.java.lang.String, arg6: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitIntInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitIincInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitInsn(self, arg0: Union[int, JInt], ) -> None: ...
	def visitLineNumber(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.Label, ) -> None: ...
	def visitVarInsn(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitTryCatchAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitInvokeDynamicInsn(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.jdk.internal.org.objectweb.asm.Handle, *arg3: javawrappers.java.lang.Object, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visitAnnotationDefault(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitMaxs(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def visitFieldInsn(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...


class TraceClassVisitor:
	@overload
	def __init__(self, arg0: javawrappers.java.io.PrintWriter, ): ...
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.ClassVisitor, arg1: javawrappers.java.io.PrintWriter, ): ...
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.ClassVisitor, arg1: javawrappers.jdk.internal.org.objectweb.asm.util.Printer, arg2: javawrappers.java.io.PrintWriter, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitInnerClass(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: Union[int, JInt], ) -> None: ...
	def visitTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitEnd(self, ) -> None: ...
	def visitAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	def visitOuterClass(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def visitAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitMethod(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: JArray(javawrappers.java.lang.String, 1), ) -> javawrappers.jdk.internal.org.objectweb.asm.MethodVisitor: ...
	def visitSource(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def visitModule(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.ModuleVisitor: ...
	def visitField(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, ) -> javawrappers.jdk.internal.org.objectweb.asm.FieldVisitor: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visit(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, arg5: JArray(javawrappers.java.lang.String, 1), ) -> None: ...


class ASMifiable:
	def asmify(self, arg0: javawrappers.java.lang.StringBuffer, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.util.Map, ) -> None: ...


class TraceSignatureVisitor:
	def __init__(self, arg0: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitEnd(self, ) -> None: ...
	def visitInterfaceBound(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def visitTypeArgument(self, ) -> None: ...
	@overload
	def visitTypeArgument(self, arg0: Union[string, JString], ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def visitParameterType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def visitBaseType(self, arg0: Union[string, JString], ) -> None: ...
	def getDeclaration(self, ) -> javawrappers.java.lang.String: ...
	def visitExceptionType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def visitTypeVariable(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitInterface(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def notify(self, ) -> None: ...
	def visitReturnType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def visitClassBound(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def getExceptions(self, ) -> javawrappers.java.lang.String: ...
	def getReturnType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def visitArrayType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def visitSuperclass(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visitFormalTypeParameter(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitInnerClassType(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitClassType(self, arg0: javawrappers.java.lang.String, ) -> None: ...


class CheckFieldAdapter:
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.FieldVisitor, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitTypeAnnotation(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.TypePath, arg2: javawrappers.java.lang.String, arg3: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitEnd(self, ) -> None: ...
	def visitAttribute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Attribute, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visitAnnotation(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def notify(self, ) -> None: ...


class TraceAnnotationVisitor:
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor, arg1: javawrappers.jdk.internal.org.objectweb.asm.util.Printer, ): ...
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.util.Printer, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitArray(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def visitEnd(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visit(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def visitAnnotation(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.objectweb.asm.AnnotationVisitor: ...
	def notify(self, ) -> None: ...
	def visitEnum(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...


