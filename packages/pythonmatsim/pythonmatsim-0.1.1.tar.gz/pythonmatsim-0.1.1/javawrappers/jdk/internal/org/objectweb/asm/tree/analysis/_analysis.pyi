################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.jdk.internal.org.objectweb.asm.tree
import javawrappers.java.io
import javawrappers.jdk.internal.org.objectweb.asm
import javawrappers.jdk.internal.org.objectweb.asm.tree.analysis

from jpype.types import *
from typing import Union

from typing import overload

class Frame:
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Frame, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def init(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Frame, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Frame: ...
	def getMaxStackSize(self, ) -> Union[int, JInt]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setReturn(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> None: ...
	def execute(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Interpreter, ) -> None: ...
	def notify(self, ) -> None: ...
	def push(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> None: ...
	def pop(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	def clearStack(self, ) -> None: ...
	def getLocals(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getLocal(self, arg0: Union[int, JInt], ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def merge(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Frame, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Interpreter, ) -> Union[int, JBoolean]: ...
	@overload
	def merge(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Frame, arg1: JArray(Union[int, JBoolean], 1), ) -> Union[int, JBoolean]: ...
	def getStackSize(self, ) -> Union[int, JInt]: ...
	def setLocal(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> None: ...
	def getStack(self, arg0: Union[int, JInt], ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class SimpleVerifier:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Type, arg1: javawrappers.jdk.internal.org.objectweb.asm.Type, arg2: javawrappers.java.util.List, arg3: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Type, arg1: javawrappers.jdk.internal.org.objectweb.asm.Type, arg2: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def newValue(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Type, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def newValue(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Type, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def newOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def newOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def ternaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, arg3: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def ternaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg3: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def binaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def binaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def unaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def unaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	def setClassLoader(self, arg0: javawrappers.java.lang.ClassLoader, ) -> None: ...
	def notify(self, ) -> None: ...
	@overload
	def returnOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> None: ...
	@overload
	def returnOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> None: ...
	@overload
	def copyOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def copyOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def merge(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def merge(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def naryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.java.util.List, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def naryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.java.util.List, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...


class Analyzer:
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Interpreter, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getFrames(self, ) -> JArray(javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Frame, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getHandlers(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.List: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def analyze(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.MethodNode, ) -> JArray(javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Frame, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class Value:
	def getSize(self, ) -> Union[int, JInt]: ...


class AnalyzerException:
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class Interpreter:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def newValue(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Type, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def newOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	def ternaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg3: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	def binaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	def unaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	def notify(self, ) -> None: ...
	def returnOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> None: ...
	def copyOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def merge(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def naryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.java.util.List, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...


class BasicInterpreter:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def newValue(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Type, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def newValue(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Type, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def newOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def newOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def ternaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg3: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def ternaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, arg3: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def binaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def binaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def unaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def unaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	def notify(self, ) -> None: ...
	@overload
	def returnOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> None: ...
	@overload
	def returnOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> None: ...
	@overload
	def copyOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def copyOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def merge(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def merge(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def naryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.java.util.List, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def naryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.java.util.List, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...


class SourceValue:
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class SourceInterpreter:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def newValue(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Type, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def newValue(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Type, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def newOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def newOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue: ...
	@overload
	def ternaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg3: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def ternaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue, arg3: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue: ...
	@overload
	def binaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def binaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue: ...
	@overload
	def unaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def unaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue: ...
	def notify(self, ) -> None: ...
	@overload
	def returnOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue, ) -> None: ...
	@overload
	def returnOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> None: ...
	@overload
	def copyOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue: ...
	@overload
	def copyOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def merge(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def merge(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def naryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.java.util.List, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def naryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.java.util.List, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.SourceValue: ...


class BasicValue:
	def __init__(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Type, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getSize(self, ) -> Union[int, JInt]: ...
	def getType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.Type: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isReference(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class BasicVerifier:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def newValue(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Type, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def newValue(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.Type, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def newOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def newOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def ternaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, arg3: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def ternaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg3: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def binaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def binaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def unaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def unaryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	def notify(self, ) -> None: ...
	@overload
	def returnOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> None: ...
	@overload
	def returnOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg2: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> None: ...
	@overload
	def copyOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	@overload
	def copyOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def merge(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def merge(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, arg1: javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def naryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.java.util.List, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.Value: ...
	@overload
	def naryOperation(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.tree.AbstractInsnNode, arg1: javawrappers.java.util.List, ) -> javawrappers.jdk.internal.org.objectweb.asm.tree.analysis.BasicValue: ...


