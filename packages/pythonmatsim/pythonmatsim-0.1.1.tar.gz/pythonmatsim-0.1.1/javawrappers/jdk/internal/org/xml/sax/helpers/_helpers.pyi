################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.jdk.internal.org.xml.sax
import javawrappers.java.lang

from jpype.types import *
from typing import Union

from typing import overload

class DefaultHandler:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def endPrefixMapping(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def startElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.jdk.internal.org.xml.sax.Attributes, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def fatalError(self, arg0: javawrappers.jdk.internal.org.xml.sax.SAXParseException, ) -> None: ...
	def resolveEntity(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.jdk.internal.org.xml.sax.InputSource: ...
	def error(self, arg0: javawrappers.jdk.internal.org.xml.sax.SAXParseException, ) -> None: ...
	def endDocument(self, ) -> None: ...
	def startDocument(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def notationDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def characters(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def startPrefixMapping(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def endElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def skippedEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def unparsedEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	def warning(self, arg0: javawrappers.jdk.internal.org.xml.sax.SAXParseException, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setDocumentLocator(self, arg0: javawrappers.jdk.internal.org.xml.sax.Locator, ) -> None: ...
	def ignorableWhitespace(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...


