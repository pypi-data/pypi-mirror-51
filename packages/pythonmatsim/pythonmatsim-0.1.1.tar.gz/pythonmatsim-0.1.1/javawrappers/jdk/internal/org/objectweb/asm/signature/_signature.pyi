################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.jdk.internal.org.objectweb.asm.signature
import javawrappers.java.lang

from jpype.types import *
from typing import Union

from typing import overload

class SignatureReader:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def accept(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor, ) -> None: ...
	def acceptType(self, arg0: javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor, ) -> None: ...


class SignatureWriter:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitEnd(self, ) -> None: ...
	def visitInterfaceBound(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def visitTypeArgument(self, arg0: Union[string, JString], ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	@overload
	def visitTypeArgument(self, ) -> None: ...
	def visitParameterType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def visitBaseType(self, arg0: Union[string, JString], ) -> None: ...
	def visitExceptionType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def visitTypeVariable(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitInterface(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def notify(self, ) -> None: ...
	def visitReturnType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def visitClassBound(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def visitArrayType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def visitSuperclass(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visitFormalTypeParameter(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitInnerClassType(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitClassType(self, arg0: javawrappers.java.lang.String, ) -> None: ...


class SignatureVisitor:
	def __init__(self, arg0: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def visitEnd(self, ) -> None: ...
	def visitInterfaceBound(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def visitTypeArgument(self, arg0: Union[string, JString], ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	@overload
	def visitTypeArgument(self, ) -> None: ...
	def visitParameterType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def visitBaseType(self, arg0: Union[string, JString], ) -> None: ...
	def visitExceptionType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def visitTypeVariable(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitInterface(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def notify(self, ) -> None: ...
	def visitReturnType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def visitClassBound(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def visitArrayType(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def visitSuperclass(self, ) -> javawrappers.jdk.internal.org.objectweb.asm.signature.SignatureVisitor: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def visitFormalTypeParameter(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitInnerClassType(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def visitClassType(self, arg0: javawrappers.java.lang.String, ) -> None: ...


