################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang.reflect
import javawrappers.java.util
import javawrappers.javax.validation.valueextraction
import javawrappers.javax.validation.bootstrap
import javawrappers.java.lang.annotation
import javawrappers.javax.validation.metadata
import javawrappers.java.lang
import javawrappers.java.time
import javawrappers.javax.validation.spi
import javawrappers.java.io
import javawrappers.java.util.function
import javawrappers.javax.validation.executable
import javawrappers.javax.validation

from jpype.types import *
from typing import Union

from typing import overload

class UnexpectedTypeException:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class Constraint:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def annotationType(self, ) -> javawrappers.java.lang.Class: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def validatedBy(self, ) -> JArray(javawrappers.java.lang.Class, 1): ...


class GroupSequence:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def annotationType(self, ) -> javawrappers.java.lang.Class: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def value(self, ) -> JArray(javawrappers.java.lang.Class, 1): ...


class ConstraintTarget:
	IMPLICIT: ConstraintTarget = ...
	RETURN_VALUE: ConstraintTarget = ...
	PARAMETERS: ConstraintTarget = ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintTarget: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def values() -> JArray(javawrappers.javax.validation.ConstraintTarget, 1): ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class NoProviderFoundException:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class ValidatorContext:
	def parameterNameProvider(self, arg0: javawrappers.javax.validation.ParameterNameProvider, ) -> javawrappers.javax.validation.ValidatorContext: ...
	def addValueExtractor(self, arg0: javawrappers.javax.validation.valueextraction.ValueExtractor, ) -> javawrappers.javax.validation.ValidatorContext: ...
	def messageInterpolator(self, arg0: javawrappers.javax.validation.MessageInterpolator, ) -> javawrappers.javax.validation.ValidatorContext: ...
	def constraintValidatorFactory(self, arg0: javawrappers.javax.validation.ConstraintValidatorFactory, ) -> javawrappers.javax.validation.ValidatorContext: ...
	def clockProvider(self, arg0: javawrappers.javax.validation.ClockProvider, ) -> javawrappers.javax.validation.ValidatorContext: ...
	def getValidator(self, ) -> javawrappers.javax.validation.Validator: ...
	def traversableResolver(self, arg0: javawrappers.javax.validation.TraversableResolver, ) -> javawrappers.javax.validation.ValidatorContext: ...


class ConstraintValidatorContext:
	class ConstraintViolationBuilder:
		class ContainerElementNodeContextBuilder:
			def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderDefinedContext: ...
			def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
			def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
			def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderDefinedContext: ...
			def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
			def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...


		class ContainerElementNodeBuilderCustomizableContext:
			def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
			def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
			def inIterable(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeContextBuilder: ...
			def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
			def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...


		class ContainerElementNodeBuilderDefinedContext:
			def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
			def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
			def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
			def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...


		class NodeContextBuilder:
			def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
			def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
			def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
			def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
			def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
			def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
			def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...


		class NodeBuilderCustomizableContext:
			def inContainer(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
			def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
			def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
			def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
			def inIterable(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeContextBuilder: ...
			def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
			def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...


		class NodeBuilderDefinedContext:
			def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
			def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
			def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
			def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
			def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...


		class LeafNodeContextBuilder:
			def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderDefinedContext: ...
			def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
			def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderDefinedContext: ...


		class LeafNodeBuilderCustomizableContext:
			def inContainer(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
			def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
			def inIterable(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeContextBuilder: ...


		class LeafNodeBuilderDefinedContext:
			def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...


		@overload
		def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderDefinedContext: ...
		@overload
		def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
		@overload
		def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderDefinedContext: ...
		@overload
		def inContainer(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
		@overload
		def inContainer(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		@overload
		def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
		@overload
		def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
		@overload
		def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
		@overload
		def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
		@overload
		def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
		@overload
		def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
		@overload
		def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
		@overload
		def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
		@overload
		def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
		@overload
		def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
		@overload
		def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
		@overload
		def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
		@overload
		def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
		@overload
		def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
		@overload
		def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
		@overload
		def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
		@overload
		def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
		@overload
		def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		@overload
		def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		@overload
		def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
		@overload
		def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		def addParameterNode(self, arg0: Union[int, JInt], ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
		@overload
		def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderDefinedContext: ...
		@overload
		def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderDefinedContext: ...
		@overload
		def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
		@overload
		def inIterable(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeContextBuilder: ...
		@overload
		def inIterable(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeContextBuilder: ...
		@overload
		def inIterable(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeContextBuilder: ...
		@overload
		def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
		@overload
		def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
		@overload
		def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
		@overload
		def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
		@overload
		def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
		@overload
		def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
		@overload
		def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
		@overload
		def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		@overload
		def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		@overload
		def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		@overload
		def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		@overload
		def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		@overload
		def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
		@overload
		def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...


	@overload
	def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderDefinedContext: ...
	@overload
	def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
	@overload
	def atKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderDefinedContext: ...
	def buildConstraintViolationWithTemplate(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder: ...
	@overload
	def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
	@overload
	def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
	@overload
	def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
	@overload
	def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
	@overload
	def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
	@overload
	def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
	@overload
	def addContainerElementNode(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext: ...
	@overload
	def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
	@overload
	def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
	@overload
	def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
	@overload
	def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
	@overload
	def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
	@overload
	def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
	@overload
	def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
	@overload
	def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
	@overload
	def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
	@overload
	def addConstraintViolation(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext: ...
	@overload
	def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	@overload
	def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	@overload
	def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
	@overload
	def addNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	@overload
	def inIterable(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeContextBuilder: ...
	@overload
	def inIterable(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeContextBuilder: ...
	@overload
	def inIterable(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeContextBuilder: ...
	@overload
	def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	@overload
	def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	@overload
	def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	@overload
	def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	@overload
	def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	@overload
	def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	@overload
	def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def getClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...
	@overload
	def inContainer(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
	@overload
	def inContainer(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext: ...
	def disableDefaultConstraintViolation(self, ) -> None: ...
	def addParameterNode(self, arg0: Union[int, JInt], ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
	def getDefaultConstraintMessageTemplate(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderDefinedContext: ...
	@overload
	def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderDefinedContext: ...
	@overload
	def atIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext: ...
	@overload
	def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
	@overload
	def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
	@overload
	def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
	@overload
	def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
	@overload
	def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
	@overload
	def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...
	@overload
	def addBeanNode(self, ) -> javawrappers.javax.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext: ...


class MessageInterpolator:
	class Context:
		def getConstraintDescriptor(self, ) -> javawrappers.javax.validation.metadata.ConstraintDescriptor: ...
		def getValidatedValue(self, ) -> javawrappers.java.lang.Object: ...
		def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...


	def getConstraintDescriptor(self, ) -> javawrappers.javax.validation.metadata.ConstraintDescriptor: ...
	def getValidatedValue(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def interpolate(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.MessageInterpolator.Context, ) -> javawrappers.java.lang.String: ...
	@overload
	def interpolate(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.MessageInterpolator.Context, arg2: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...


class Validator:
	def validateProperty(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def getConstraintsForClass(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.metadata.BeanDescriptor: ...
	def validateValue(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, *arg3: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def validate(self, arg0: javawrappers.java.lang.Object, *arg1: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def forExecutables(self, ) -> javawrappers.javax.validation.executable.ExecutableValidator: ...


class ValidationException:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class ClockProvider:
	def getClock(self, ) -> javawrappers.java.time.Clock: ...


class ElementKind:
	BEAN: ElementKind = ...
	PROPERTY: ElementKind = ...
	METHOD: ElementKind = ...
	CONSTRUCTOR: ElementKind = ...
	PARAMETER: ElementKind = ...
	CROSS_PARAMETER: ElementKind = ...
	RETURN_VALUE: ElementKind = ...
	CONTAINER_ELEMENT: ElementKind = ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ElementKind: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def values() -> JArray(javawrappers.javax.validation.ElementKind, 1): ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class Payload:


class TraversableResolver:
	def isCascadable(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.Path.Node, arg2: javawrappers.java.lang.Class, arg3: javawrappers.javax.validation.Path, arg4: javawrappers.java.lang.annotation.ElementType, ) -> Union[int, JBoolean]: ...
	def isReachable(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.Path.Node, arg2: javawrappers.java.lang.Class, arg3: javawrappers.javax.validation.Path, arg4: javawrappers.java.lang.annotation.ElementType, ) -> Union[int, JBoolean]: ...


class Path:
	class ContainerElementNode:
		def getKey(self, ) -> javawrappers.java.lang.Object: ...
		def getTypeArgumentIndex(self, ) -> javawrappers.java.lang.Integer: ...
		def as_(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.Path.Node: ...
		def getName(self, ) -> javawrappers.java.lang.String: ...
		def getIndex(self, ) -> javawrappers.java.lang.Integer: ...
		def getContainerClass(self, ) -> javawrappers.java.lang.Class: ...
		def isInIterable(self, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...


	class PropertyNode:
		def getKey(self, ) -> javawrappers.java.lang.Object: ...
		def getTypeArgumentIndex(self, ) -> javawrappers.java.lang.Integer: ...
		def as_(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.Path.Node: ...
		def getName(self, ) -> javawrappers.java.lang.String: ...
		def getIndex(self, ) -> javawrappers.java.lang.Integer: ...
		def getContainerClass(self, ) -> javawrappers.java.lang.Class: ...
		def isInIterable(self, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...


	class BeanNode:
		def getKey(self, ) -> javawrappers.java.lang.Object: ...
		def getTypeArgumentIndex(self, ) -> javawrappers.java.lang.Integer: ...
		def as_(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.Path.Node: ...
		def getName(self, ) -> javawrappers.java.lang.String: ...
		def getIndex(self, ) -> javawrappers.java.lang.Integer: ...
		def getContainerClass(self, ) -> javawrappers.java.lang.Class: ...
		def isInIterable(self, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...


	class CrossParameterNode:
		def getKey(self, ) -> javawrappers.java.lang.Object: ...
		def as_(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.Path.Node: ...
		def getName(self, ) -> javawrappers.java.lang.String: ...
		def getIndex(self, ) -> javawrappers.java.lang.Integer: ...
		def isInIterable(self, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...


	class ParameterNode:
		def getKey(self, ) -> javawrappers.java.lang.Object: ...
		def as_(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.Path.Node: ...
		def getName(self, ) -> javawrappers.java.lang.String: ...
		def getParameterIndex(self, ) -> Union[int, JInt]: ...
		def getIndex(self, ) -> javawrappers.java.lang.Integer: ...
		def isInIterable(self, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...


	class ReturnValueNode:
		def getKey(self, ) -> javawrappers.java.lang.Object: ...
		def as_(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.Path.Node: ...
		def getName(self, ) -> javawrappers.java.lang.String: ...
		def getIndex(self, ) -> javawrappers.java.lang.Integer: ...
		def isInIterable(self, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...


	class ConstructorNode:
		def getKey(self, ) -> javawrappers.java.lang.Object: ...
		def as_(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.Path.Node: ...
		def getName(self, ) -> javawrappers.java.lang.String: ...
		def getIndex(self, ) -> javawrappers.java.lang.Integer: ...
		def isInIterable(self, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getParameterTypes(self, ) -> javawrappers.java.util.List: ...
		def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...


	class MethodNode:
		def getKey(self, ) -> javawrappers.java.lang.Object: ...
		def as_(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.Path.Node: ...
		def getName(self, ) -> javawrappers.java.lang.String: ...
		def getIndex(self, ) -> javawrappers.java.lang.Integer: ...
		def isInIterable(self, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getParameterTypes(self, ) -> javawrappers.java.util.List: ...
		def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...


	class Node:
		def getKey(self, ) -> javawrappers.java.lang.Object: ...
		def as_(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.Path.Node: ...
		def getName(self, ) -> javawrappers.java.lang.String: ...
		def getIndex(self, ) -> javawrappers.java.lang.Integer: ...
		def isInIterable(self, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...


	@overload
	def getTypeArgumentIndex(self, ) -> javawrappers.java.lang.Integer: ...
	@overload
	def getTypeArgumentIndex(self, ) -> javawrappers.java.lang.Integer: ...
	@overload
	def getTypeArgumentIndex(self, ) -> javawrappers.java.lang.Integer: ...
	def getKey(self, ) -> javawrappers.java.lang.Object: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getContainerClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def getContainerClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def getContainerClass(self, ) -> javawrappers.java.lang.Class: ...
	def getIndex(self, ) -> javawrappers.java.lang.Integer: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def isInIterable(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getParameterTypes(self, ) -> javawrappers.java.util.List: ...
	@overload
	def getParameterTypes(self, ) -> javawrappers.java.util.List: ...
	def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...
	def as_(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.Path.Node: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def getParameterIndex(self, ) -> Union[int, JInt]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...


class Configuration:
	def getDefaultTraversableResolver(self, ) -> javawrappers.javax.validation.TraversableResolver: ...
	def addMapping(self, arg0: javawrappers.java.io.InputStream, ) -> javawrappers.javax.validation.Configuration: ...
	def constraintValidatorFactory(self, arg0: javawrappers.javax.validation.ConstraintValidatorFactory, ) -> javawrappers.javax.validation.Configuration: ...
	def getDefaultParameterNameProvider(self, ) -> javawrappers.javax.validation.ParameterNameProvider: ...
	def getDefaultClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...
	def addProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.Configuration: ...
	def ignoreXmlConfiguration(self, ) -> javawrappers.javax.validation.Configuration: ...
	def buildValidatorFactory(self, ) -> javawrappers.javax.validation.ValidatorFactory: ...
	def parameterNameProvider(self, arg0: javawrappers.javax.validation.ParameterNameProvider, ) -> javawrappers.javax.validation.Configuration: ...
	def addValueExtractor(self, arg0: javawrappers.javax.validation.valueextraction.ValueExtractor, ) -> javawrappers.javax.validation.Configuration: ...
	def messageInterpolator(self, arg0: javawrappers.javax.validation.MessageInterpolator, ) -> javawrappers.javax.validation.Configuration: ...
	def getDefaultMessageInterpolator(self, ) -> javawrappers.javax.validation.MessageInterpolator: ...
	def getBootstrapConfiguration(self, ) -> javawrappers.javax.validation.BootstrapConfiguration: ...
	def clockProvider(self, arg0: javawrappers.javax.validation.ClockProvider, ) -> javawrappers.javax.validation.Configuration: ...
	def getDefaultConstraintValidatorFactory(self, ) -> javawrappers.javax.validation.ConstraintValidatorFactory: ...
	def traversableResolver(self, arg0: javawrappers.javax.validation.TraversableResolver, ) -> javawrappers.javax.validation.Configuration: ...


class Valid:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def annotationType(self, ) -> javawrappers.java.lang.Class: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ConstraintViolation:
	def getExecutableReturnValue(self, ) -> javawrappers.java.lang.Object: ...
	def getConstraintDescriptor(self, ) -> javawrappers.javax.validation.metadata.ConstraintDescriptor: ...
	def getLeafBean(self, ) -> javawrappers.java.lang.Object: ...
	def getInvalidValue(self, ) -> javawrappers.java.lang.Object: ...
	def getRootBean(self, ) -> javawrappers.java.lang.Object: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getPropertyPath(self, ) -> javawrappers.javax.validation.Path: ...
	def getMessageTemplate(self, ) -> javawrappers.java.lang.String: ...
	def getExecutableParameters(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def getRootBeanClass(self, ) -> javawrappers.java.lang.Class: ...


class ConstraintValidator:
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...


class ReportAsSingleViolation:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def annotationType(self, ) -> javawrappers.java.lang.Class: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class BootstrapConfiguration:
	def getValueExtractorClassNames(self, ) -> javawrappers.java.util.Set: ...
	def getClockProviderClassName(self, ) -> javawrappers.java.lang.String: ...
	def getMessageInterpolatorClassName(self, ) -> javawrappers.java.lang.String: ...
	def getConstraintMappingResourcePaths(self, ) -> javawrappers.java.util.Set: ...
	def getProperties(self, ) -> javawrappers.java.util.Map: ...
	def getParameterNameProviderClassName(self, ) -> javawrappers.java.lang.String: ...
	def getDefaultProviderClassName(self, ) -> javawrappers.java.lang.String: ...
	def getDefaultValidatedExecutableTypes(self, ) -> javawrappers.java.util.Set: ...
	def getTraversableResolverClassName(self, ) -> javawrappers.java.lang.String: ...
	def getConstraintValidatorFactoryClassName(self, ) -> javawrappers.java.lang.String: ...
	def isExecutableValidationEnabled(self, ) -> Union[int, JBoolean]: ...


class ParameterNameProvider:
	@overload
	def getParameterNames(self, arg0: javawrappers.java.lang.reflect.Constructor, ) -> javawrappers.java.util.List: ...
	@overload
	def getParameterNames(self, arg0: javawrappers.java.lang.reflect.Method, ) -> javawrappers.java.util.List: ...


class Validation:
	def __init__(self, ): ...
	class NewProviderInstance:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@staticmethod
		def action(arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.Validation.NewProviderInstance: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@overload
		def run(self, ) -> javawrappers.java.lang.Object: ...
		@overload
		def run(self, ) -> javawrappers.javax.validation.spi.ValidationProvider: ...
		def notify(self, ) -> None: ...


	class GetValidationProviderListAction:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@overload
		def run(self, ) -> javawrappers.java.util.List: ...
		@overload
		def run(self, ) -> javawrappers.java.lang.Object: ...
		@staticmethod
		def getValidationProviderList() -> javawrappers.java.util.List: ...
		@staticmethod
		def clearCache() -> None: ...
		def notify(self, ) -> None: ...


	class DefaultValidationProviderResolver:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getValidationProviders(self, ) -> javawrappers.java.util.List: ...
		def notify(self, ) -> None: ...


	class GenericBootstrapImpl:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def getValidationProviderResolver(self, ) -> javawrappers.javax.validation.ValidationProviderResolver: ...
		def getDefaultValidationProviderResolver(self, ) -> javawrappers.javax.validation.ValidationProviderResolver: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def providerResolver(self, arg0: javawrappers.javax.validation.ValidationProviderResolver, ) -> javawrappers.javax.validation.bootstrap.GenericBootstrap: ...
		def configure(self, ) -> javawrappers.javax.validation.Configuration: ...
		def notify(self, ) -> None: ...


	class ProviderSpecificBootstrapImpl:
		def __init__(self, arg0: javawrappers.java.lang.Class, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def providerResolver(self, arg0: javawrappers.javax.validation.ValidationProviderResolver, ) -> javawrappers.javax.validation.bootstrap.ProviderSpecificBootstrap: ...
		def configure(self, ) -> javawrappers.javax.validation.Configuration: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def buildDefaultValidatorFactory() -> javawrappers.javax.validation.ValidatorFactory: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def run(self, ) -> javawrappers.javax.validation.spi.ValidationProvider: ...
	@overload
	def run(self, ) -> javawrappers.java.util.List: ...
	@overload
	def run(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def providerResolver(self, arg0: javawrappers.javax.validation.ValidationProviderResolver, ) -> javawrappers.javax.validation.bootstrap.GenericBootstrap: ...
	@overload
	def providerResolver(self, arg0: javawrappers.javax.validation.ValidationProviderResolver, ) -> javawrappers.javax.validation.bootstrap.ProviderSpecificBootstrap: ...
	@staticmethod
	def clearCache() -> None: ...
	@overload
	def configure(self, ) -> javawrappers.javax.validation.Configuration: ...
	@overload
	def configure(self, ) -> javawrappers.javax.validation.Configuration: ...
	def getValidationProviders(self, ) -> javawrappers.java.util.List: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def byDefaultProvider() -> javawrappers.javax.validation.bootstrap.GenericBootstrap: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getValidationProviderResolver(self, ) -> javawrappers.javax.validation.ValidationProviderResolver: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getDefaultValidationProviderResolver(self, ) -> javawrappers.javax.validation.ValidationProviderResolver: ...
	@staticmethod
	def action(arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.Validation.NewProviderInstance: ...
	@staticmethod
	def getValidationProviderList() -> javawrappers.java.util.List: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def byProvider(arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.bootstrap.ProviderSpecificBootstrap: ...


class ValidatorFactory:
	def getConstraintValidatorFactory(self, ) -> javawrappers.javax.validation.ConstraintValidatorFactory: ...
	def getTraversableResolver(self, ) -> javawrappers.javax.validation.TraversableResolver: ...
	def getMessageInterpolator(self, ) -> javawrappers.javax.validation.MessageInterpolator: ...
	def usingContext(self, ) -> javawrappers.javax.validation.ValidatorContext: ...
	def getValidator(self, ) -> javawrappers.javax.validation.Validator: ...
	def close(self, ) -> None: ...
	def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def getParameterNameProvider(self, ) -> javawrappers.javax.validation.ParameterNameProvider: ...
	def getClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...


class OverridesAttribute:
	class List:
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def annotationType(self, ) -> javawrappers.java.lang.Class: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def value(self, ) -> JArray(javawrappers.javax.validation.OverridesAttribute, 1): ...


	def constraintIndex(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def annotationType(self, ) -> javawrappers.java.lang.Class: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def constraint(self, ) -> javawrappers.java.lang.Class: ...
	def value(self, ) -> JArray(javawrappers.javax.validation.OverridesAttribute, 1): ...


class ConstraintValidatorFactory:
	def releaseInstance(self, arg0: javawrappers.javax.validation.ConstraintValidator, ) -> None: ...
	def getInstance(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintValidator: ...


class ValidationProviderResolver:
	def getValidationProviders(self, ) -> javawrappers.java.util.List: ...


class ConstraintViolationException:
	@overload
	def __init__(self, arg0: javawrappers.java.util.Set, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Set, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getConstraintViolations(self, ) -> javawrappers.java.util.Set: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class GroupDefinitionException:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class ConstraintDeclarationException:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class ConstraintDefinitionException:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


