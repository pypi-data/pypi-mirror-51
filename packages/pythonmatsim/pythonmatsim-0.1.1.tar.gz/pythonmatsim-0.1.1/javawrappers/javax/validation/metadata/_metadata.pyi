################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.lang.annotation
import javawrappers.javax.validation.metadata
import javawrappers.javax.validation

from jpype.types import *
from typing import Union

from typing import overload

class ValidateUnwrappedValue:
	DEFAULT: ValidateUnwrappedValue = ...
	UNWRAP: ValidateUnwrappedValue = ...
	SKIP: ValidateUnwrappedValue = ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.metadata.ValidateUnwrappedValue: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def values() -> JArray(javawrappers.javax.validation.metadata.ValidateUnwrappedValue, 1): ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class ContainerDescriptor:
	def getConstrainedContainerElementTypes(self, ) -> javawrappers.java.util.Set: ...


class CascadableDescriptor:
	def isCascaded(self, ) -> Union[int, JBoolean]: ...
	def getGroupConversions(self, ) -> javawrappers.java.util.Set: ...


class GroupConversionDescriptor:
	def getTo(self, ) -> javawrappers.java.lang.Class: ...
	def getFrom(self, ) -> javawrappers.java.lang.Class: ...


class CrossParameterDescriptor:
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...


class BeanDescriptor:
	def getConstrainedMethods(self, arg0: javawrappers.javax.validation.metadata.MethodType, *arg1: javawrappers.javax.validation.metadata.MethodType, ) -> javawrappers.java.util.Set: ...
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def getConstrainedConstructors(self, ) -> javawrappers.java.util.Set: ...
	def getConstraintsForProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.metadata.PropertyDescriptor: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstraintsForMethod(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.metadata.MethodDescriptor: ...
	def isBeanConstrained(self, ) -> Union[int, JBoolean]: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def getConstraintsForConstructor(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.metadata.ConstructorDescriptor: ...
	def getConstrainedProperties(self, ) -> javawrappers.java.util.Set: ...


class Scope:
	LOCAL_ELEMENT: Scope = ...
	HIERARCHY: Scope = ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.metadata.Scope: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def values() -> JArray(javawrappers.javax.validation.metadata.Scope, 1): ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class ContainerElementTypeDescriptor:
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def getTypeArgumentIndex(self, ) -> javawrappers.java.lang.Integer: ...
	def getContainerClass(self, ) -> javawrappers.java.lang.Class: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstrainedContainerElementTypes(self, ) -> javawrappers.java.util.Set: ...
	def isCascaded(self, ) -> Union[int, JBoolean]: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def getGroupConversions(self, ) -> javawrappers.java.util.Set: ...


class PropertyDescriptor:
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstrainedContainerElementTypes(self, ) -> javawrappers.java.util.Set: ...
	def isCascaded(self, ) -> Union[int, JBoolean]: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def getPropertyName(self, ) -> javawrappers.java.lang.String: ...
	def getGroupConversions(self, ) -> javawrappers.java.util.Set: ...


class ConstructorDescriptor:
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hasConstrainedReturnValue(self, ) -> Union[int, JBoolean]: ...
	def getParameterDescriptors(self, ) -> javawrappers.java.util.List: ...
	def getReturnValueDescriptor(self, ) -> javawrappers.javax.validation.metadata.ReturnValueDescriptor: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def hasConstrainedParameters(self, ) -> Union[int, JBoolean]: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def getCrossParameterDescriptor(self, ) -> javawrappers.javax.validation.metadata.CrossParameterDescriptor: ...


class ConstraintDescriptor:
	def isReportAsSingleViolation(self, ) -> Union[int, JBoolean]: ...
	def getValueUnwrapping(self, ) -> javawrappers.javax.validation.metadata.ValidateUnwrappedValue: ...
	def getPayload(self, ) -> javawrappers.java.util.Set: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getAnnotation(self, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def getConstraintValidatorClasses(self, ) -> javawrappers.java.util.List: ...
	def getValidationAppliesTo(self, ) -> javawrappers.javax.validation.ConstraintTarget: ...
	def getMessageTemplate(self, ) -> javawrappers.java.lang.String: ...
	def getComposingConstraints(self, ) -> javawrappers.java.util.Set: ...
	def getGroups(self, ) -> javawrappers.java.util.Set: ...
	def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...


class ReturnValueDescriptor:
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstrainedContainerElementTypes(self, ) -> javawrappers.java.util.Set: ...
	def isCascaded(self, ) -> Union[int, JBoolean]: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def getGroupConversions(self, ) -> javawrappers.java.util.Set: ...


class ElementDescriptor:
	class ConstraintFinder:
		def lookingAt(self, arg0: javawrappers.javax.validation.metadata.Scope, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
		def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
		def unorderedAndMatchingGroups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
		def declaredOn(self, *arg0: javawrappers.java.lang.annotation.ElementType, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
		def hasConstraints(self, ) -> Union[int, JBoolean]: ...


	def lookingAt(self, arg0: javawrappers.javax.validation.metadata.Scope, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	@overload
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def unorderedAndMatchingGroups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def declaredOn(self, *arg0: javawrappers.java.lang.annotation.ElementType, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	@overload
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...


class MethodDescriptor:
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hasConstrainedReturnValue(self, ) -> Union[int, JBoolean]: ...
	def getParameterDescriptors(self, ) -> javawrappers.java.util.List: ...
	def getReturnValueDescriptor(self, ) -> javawrappers.javax.validation.metadata.ReturnValueDescriptor: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def hasConstrainedParameters(self, ) -> Union[int, JBoolean]: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def getCrossParameterDescriptor(self, ) -> javawrappers.javax.validation.metadata.CrossParameterDescriptor: ...


class ParameterDescriptor:
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getIndex(self, ) -> Union[int, JInt]: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstrainedContainerElementTypes(self, ) -> javawrappers.java.util.Set: ...
	def isCascaded(self, ) -> Union[int, JBoolean]: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def getGroupConversions(self, ) -> javawrappers.java.util.Set: ...


class MethodType:
	GETTER: MethodType = ...
	NON_GETTER: MethodType = ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.metadata.MethodType: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def values() -> JArray(javawrappers.javax.validation.metadata.MethodType, 1): ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class ExecutableDescriptor:
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hasConstrainedReturnValue(self, ) -> Union[int, JBoolean]: ...
	def getParameterDescriptors(self, ) -> javawrappers.java.util.List: ...
	def getReturnValueDescriptor(self, ) -> javawrappers.javax.validation.metadata.ReturnValueDescriptor: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def hasConstrainedParameters(self, ) -> Union[int, JBoolean]: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def getCrossParameterDescriptor(self, ) -> javawrappers.javax.validation.metadata.CrossParameterDescriptor: ...


