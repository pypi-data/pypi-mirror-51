################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.javax.xml.bind.annotation.adapters
import javawrappers.java.lang
import javawrappers.javax.xml.validation
import javawrappers.org.w3c.dom
import javawrappers.java.net
import javawrappers.java.io
import javawrappers.javax.xml.stream
import javawrappers.org.xml.sax
import javawrappers.javax.xml.bind.attachment
import javawrappers.javax.xml.transform
import javawrappers.javax.xml.bind

from jpype.types import *
from typing import Union

from typing import overload

class AbstractMarshallerImpl:
	def __init__(self, ): ...
	def getAdapter(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.xml.bind.annotation.adapters.XmlAdapter: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def setAdapter(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.javax.xml.bind.annotation.adapters.XmlAdapter, ) -> None: ...
	@overload
	def setAdapter(self, arg0: javawrappers.javax.xml.bind.annotation.adapters.XmlAdapter, ) -> None: ...
	def getEventHandler(self, ) -> javawrappers.javax.xml.bind.ValidationEventHandler: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def setSchema(self, arg0: javawrappers.javax.xml.validation.Schema, ) -> None: ...
	def getSchema(self, ) -> javawrappers.javax.xml.validation.Schema: ...
	def getAttachmentMarshaller(self, ) -> javawrappers.javax.xml.bind.attachment.AttachmentMarshaller: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def marshal(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.xml.transform.Result, ) -> None: ...
	@overload
	def marshal(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.org.xml.sax.ContentHandler, ) -> None: ...
	@overload
	def marshal(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.io.Writer, ) -> None: ...
	@overload
	def marshal(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.io.File, ) -> None: ...
	@overload
	def marshal(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def marshal(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.org.w3c.dom.Node, ) -> None: ...
	@overload
	def marshal(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.xml.stream.XMLEventWriter, ) -> None: ...
	@overload
	def marshal(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.xml.stream.XMLStreamWriter, ) -> None: ...
	def setAttachmentMarshaller(self, arg0: javawrappers.javax.xml.bind.attachment.AttachmentMarshaller, ) -> None: ...
	def setListener(self, arg0: javawrappers.javax.xml.bind.Marshaller.Listener, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getNode(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.w3c.dom.Node: ...
	def setEventHandler(self, arg0: javawrappers.javax.xml.bind.ValidationEventHandler, ) -> None: ...
	def getListener(self, ) -> javawrappers.javax.xml.bind.Marshaller.Listener: ...


class DefaultValidationEventHandler:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def handleEvent(self, arg0: javawrappers.javax.xml.bind.ValidationEvent, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class NotIdentifiableEventImpl:
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.xml.bind.ValidationEventLocator, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.xml.bind.ValidationEventLocator, arg3: javawrappers.java.lang.Throwable, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getLinkedException(self, ) -> javawrappers.java.lang.Throwable: ...
	def getSeverity(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def setMessage(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def setLinkedException(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setSeverity(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getLocator(self, ) -> javawrappers.javax.xml.bind.ValidationEventLocator: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setLocator(self, arg0: javawrappers.javax.xml.bind.ValidationEventLocator, ) -> None: ...


class ParseConversionEventImpl:
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.xml.bind.ValidationEventLocator, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.xml.bind.ValidationEventLocator, arg3: javawrappers.java.lang.Throwable, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getLinkedException(self, ) -> javawrappers.java.lang.Throwable: ...
	def getSeverity(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def setMessage(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def setLinkedException(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setSeverity(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getLocator(self, ) -> javawrappers.javax.xml.bind.ValidationEventLocator: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setLocator(self, arg0: javawrappers.javax.xml.bind.ValidationEventLocator, ) -> None: ...


class PrintConversionEventImpl:
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.xml.bind.ValidationEventLocator, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.xml.bind.ValidationEventLocator, arg3: javawrappers.java.lang.Throwable, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getLinkedException(self, ) -> javawrappers.java.lang.Throwable: ...
	def getSeverity(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def setMessage(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def setLinkedException(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setSeverity(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getLocator(self, ) -> javawrappers.javax.xml.bind.ValidationEventLocator: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setLocator(self, arg0: javawrappers.javax.xml.bind.ValidationEventLocator, ) -> None: ...


class AbstractUnmarshallerImpl:
	def __init__(self, ): ...
	def getAdapter(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.xml.bind.annotation.adapters.XmlAdapter: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def setAttachmentUnmarshaller(self, arg0: javawrappers.javax.xml.bind.attachment.AttachmentUnmarshaller, ) -> None: ...
	@overload
	def setAdapter(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.javax.xml.bind.annotation.adapters.XmlAdapter, ) -> None: ...
	@overload
	def setAdapter(self, arg0: javawrappers.javax.xml.bind.annotation.adapters.XmlAdapter, ) -> None: ...
	def getEventHandler(self, ) -> javawrappers.javax.xml.bind.ValidationEventHandler: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def setSchema(self, arg0: javawrappers.javax.xml.validation.Schema, ) -> None: ...
	def getSchema(self, ) -> javawrappers.javax.xml.validation.Schema: ...
	def isValidating(self, ) -> Union[int, JBoolean]: ...
	@overload
	def unmarshal(self, arg0: javawrappers.org.w3c.dom.Node, ) -> javawrappers.java.lang.Object: ...
	@overload
	def unmarshal(self, arg0: javawrappers.java.io.InputStream, ) -> javawrappers.java.lang.Object: ...
	@overload
	def unmarshal(self, arg0: javawrappers.javax.xml.stream.XMLStreamReader, ) -> javawrappers.java.lang.Object: ...
	@overload
	def unmarshal(self, arg0: javawrappers.java.io.Reader, ) -> javawrappers.java.lang.Object: ...
	@overload
	def unmarshal(self, arg0: javawrappers.java.io.File, ) -> javawrappers.java.lang.Object: ...
	@overload
	def unmarshal(self, arg0: javawrappers.javax.xml.stream.XMLEventReader, ) -> javawrappers.java.lang.Object: ...
	@overload
	def unmarshal(self, arg0: javawrappers.javax.xml.stream.XMLStreamReader, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.xml.bind.JAXBElement: ...
	@overload
	def unmarshal(self, arg0: javawrappers.javax.xml.stream.XMLEventReader, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.xml.bind.JAXBElement: ...
	@overload
	def unmarshal(self, arg0: javawrappers.javax.xml.transform.Source, ) -> javawrappers.java.lang.Object: ...
	@overload
	def unmarshal(self, arg0: javawrappers.org.w3c.dom.Node, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.xml.bind.JAXBElement: ...
	@overload
	def unmarshal(self, arg0: javawrappers.javax.xml.transform.Source, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.xml.bind.JAXBElement: ...
	@overload
	def unmarshal(self, arg0: javawrappers.java.net.URL, ) -> javawrappers.java.lang.Object: ...
	@overload
	def unmarshal(self, arg0: javawrappers.org.xml.sax.InputSource, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getAttachmentUnmarshaller(self, ) -> javawrappers.javax.xml.bind.attachment.AttachmentUnmarshaller: ...
	def getUnmarshallerHandler(self, ) -> javawrappers.javax.xml.bind.UnmarshallerHandler: ...
	def setListener(self, arg0: javawrappers.javax.xml.bind.Unmarshaller.Listener, ) -> None: ...
	def setValidating(self, arg0: Union[int, JBoolean], ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setEventHandler(self, arg0: javawrappers.javax.xml.bind.ValidationEventHandler, ) -> None: ...
	def getListener(self, ) -> javawrappers.javax.xml.bind.Unmarshaller.Listener: ...


class ValidationEventImpl:
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.xml.bind.ValidationEventLocator, arg3: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.xml.bind.ValidationEventLocator, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getLinkedException(self, ) -> javawrappers.java.lang.Throwable: ...
	def getSeverity(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def setMessage(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def setLinkedException(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setSeverity(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getLocator(self, ) -> javawrappers.javax.xml.bind.ValidationEventLocator: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setLocator(self, arg0: javawrappers.javax.xml.bind.ValidationEventLocator, ) -> None: ...


class ValidationEventLocatorImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.xml.sax.SAXParseException, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.xml.sax.Locator, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.w3c.dom.Node, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Object, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getObject(self, ) -> javawrappers.java.lang.Object: ...
	def setColumnNumber(self, arg0: Union[int, JInt], ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getOffset(self, ) -> Union[int, JInt]: ...
	def setNode(self, arg0: javawrappers.org.w3c.dom.Node, ) -> None: ...
	def getColumnNumber(self, ) -> Union[int, JInt]: ...
	def setObject(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def notify(self, ) -> None: ...
	def setURL(self, arg0: javawrappers.java.net.URL, ) -> None: ...
	def getLineNumber(self, ) -> Union[int, JInt]: ...
	def getURL(self, ) -> javawrappers.java.net.URL: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setOffset(self, arg0: Union[int, JInt], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setLineNumber(self, arg0: Union[int, JInt], ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getNode(self, ) -> javawrappers.org.w3c.dom.Node: ...


