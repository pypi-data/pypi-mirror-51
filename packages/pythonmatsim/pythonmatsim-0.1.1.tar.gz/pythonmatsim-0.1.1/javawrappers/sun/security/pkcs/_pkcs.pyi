################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.security
import javawrappers.java.lang
import javawrappers.sun.security.x509
import javawrappers.java.util
import javawrappers.java.net
import javawrappers.java.io
import javawrappers.sun.security.pkcs
import javawrappers.java.math
import javawrappers.java.security.cert
import javawrappers.sun.security.util

from jpype.types import *
from typing import Union

from typing import overload

class PKCS9Attribute:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getValue(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def getName(arg0: javawrappers.sun.security.util.ObjectIdentifier, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def derEncode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isKnown(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isSingleValued(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getOID(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	@overload
	@staticmethod
	def getOID(arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def notify(self, ) -> None: ...


class SigningCertificateInfo:
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def parse(self, arg0: JArray(JByte, 1), ) -> None: ...
	def notify(self, ) -> None: ...


class PKCS7:
	@overload
	def __init__(self, arg0: JArray(javawrappers.sun.security.x509.AlgorithmId, 1), arg1: javawrappers.sun.security.pkcs.ContentInfo, arg2: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg3: JArray(javawrappers.sun.security.pkcs.SignerInfo, 1), ): ...
	@overload
	def __init__(self, arg0: JArray(javawrappers.sun.security.x509.AlgorithmId, 1), arg1: javawrappers.sun.security.pkcs.ContentInfo, arg2: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg3: JArray(javawrappers.java.security.cert.X509CRL, 1), arg4: JArray(javawrappers.sun.security.pkcs.SignerInfo, 1), ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.InputStream, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	class SecureRandomHolder:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getVersion(self, ) -> javawrappers.java.math.BigInteger: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@staticmethod
	def generateSignedData(arg0: JArray(JByte, 1), arg1: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg2: JArray(JByte, 1), arg3: javawrappers.java.lang.String, arg4: javawrappers.java.net.URI, arg5: javawrappers.java.lang.String, arg6: javawrappers.java.lang.String, ) -> JArray(JByte, 1): ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getCertificates(self, ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...
	def getDigestAlgorithmIds(self, ) -> JArray(javawrappers.sun.security.x509.AlgorithmId, 1): ...
	def notify(self, ) -> None: ...
	def getContentInfo(self, ) -> javawrappers.sun.security.pkcs.ContentInfo: ...
	def getCRLs(self, ) -> JArray(javawrappers.java.security.cert.X509CRL, 1): ...
	def isOldStyle(self, ) -> Union[int, JBoolean]: ...
	def getCertificate(self, arg0: javawrappers.java.math.BigInteger, arg1: javawrappers.sun.security.x509.X500Name, ) -> javawrappers.java.security.cert.X509Certificate: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def encodeSignedData(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encodeSignedData(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSignerInfos(self, ) -> JArray(javawrappers.sun.security.pkcs.SignerInfo, 1): ...
	@overload
	def verify(self, ) -> JArray(javawrappers.sun.security.pkcs.SignerInfo, 1): ...
	@overload
	def verify(self, arg0: JArray(JByte, 1), ) -> JArray(javawrappers.sun.security.pkcs.SignerInfo, 1): ...
	@overload
	def verify(self, arg0: javawrappers.sun.security.pkcs.SignerInfo, arg1: JArray(JByte, 1), ) -> javawrappers.sun.security.pkcs.SignerInfo: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...


class PKCS8Key:
	def __init__(self, ): ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	@overload
	def encode(self, ) -> JArray(JByte, 1): ...
	@staticmethod
	def parseKey(arg0: javawrappers.sun.security.util.DerValue, ) -> javawrappers.java.security.PrivateKey: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getEncoded(self, ) -> JArray(JByte, 1): ...
	def isDestroyed(self, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def getAlgorithm(self, ) -> javawrappers.java.lang.String: ...
	def destroy(self, ) -> None: ...
	@staticmethod
	def parse(arg0: javawrappers.sun.security.util.DerValue, ) -> javawrappers.sun.security.pkcs.PKCS8Key: ...
	@overload
	def decode(self, arg0: javawrappers.java.io.InputStream, ) -> None: ...
	@overload
	def decode(self, arg0: JArray(JByte, 1), ) -> None: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFormat(self, ) -> javawrappers.java.lang.String: ...
	def getAlgorithmId(self, ) -> javawrappers.sun.security.x509.AlgorithmId: ...


class ParsingException:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class PKCS9Attributes:
	@overload
	def __init__(self, arg0: JArray(javawrappers.sun.security.util.ObjectIdentifier, 1), arg1: javawrappers.sun.security.util.DerInputStream, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	@overload
	def __init__(self, arg0: JArray(javawrappers.sun.security.pkcs.PKCS9Attribute, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, arg1: Union[int, JBoolean], ): ...
	def encode(self, arg0: JByte, arg1: javawrappers.java.io.OutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAttributes(self, ) -> JArray(javawrappers.sun.security.pkcs.PKCS9Attribute, 1): ...
	@overload
	def getAttributeValue(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getAttributeValue(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getAttribute(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, ) -> javawrappers.sun.security.pkcs.PKCS9Attribute: ...
	@overload
	def getAttribute(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.pkcs.PKCS9Attribute: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getDerEncoding(self, ) -> JArray(JByte, 1): ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ContentInfo:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, arg1: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getContent(self, ) -> javawrappers.sun.security.util.DerValue: ...
	def getContentType(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def getContentBytes(self, ) -> JArray(JByte, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getData(self, ) -> JArray(JByte, 1): ...


class SignerInfo:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.X500Name, arg1: javawrappers.java.math.BigInteger, arg2: javawrappers.sun.security.x509.AlgorithmId, arg3: javawrappers.sun.security.pkcs.PKCS9Attributes, arg4: javawrappers.sun.security.x509.AlgorithmId, arg5: JArray(JByte, 1), arg6: javawrappers.sun.security.pkcs.PKCS9Attributes, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, arg1: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.X500Name, arg1: javawrappers.java.math.BigInteger, arg2: javawrappers.sun.security.x509.AlgorithmId, arg3: javawrappers.sun.security.x509.AlgorithmId, arg4: JArray(JByte, 1), ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getVersion(self, ) -> javawrappers.java.math.BigInteger: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDigestEncryptionAlgorithmId(self, ) -> javawrappers.sun.security.x509.AlgorithmId: ...
	def getCertificateChain(self, arg0: javawrappers.sun.security.pkcs.PKCS7, ) -> javawrappers.java.util.ArrayList: ...
	def getCertificateSerialNumber(self, ) -> javawrappers.java.math.BigInteger: ...
	def notifyAll(self, ) -> None: ...
	def getUnauthenticatedAttributes(self, ) -> javawrappers.sun.security.pkcs.PKCS9Attributes: ...
	def getAuthenticatedAttributes(self, ) -> javawrappers.sun.security.pkcs.PKCS9Attributes: ...
	def notify(self, ) -> None: ...
	def derEncode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getCertificate(self, arg0: javawrappers.sun.security.pkcs.PKCS7, ) -> javawrappers.java.security.cert.X509Certificate: ...
	def getTsToken(self, ) -> javawrappers.sun.security.pkcs.PKCS7: ...
	def getDigestAlgorithmId(self, ) -> javawrappers.sun.security.x509.AlgorithmId: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTimestamp(self, ) -> javawrappers.java.security.Timestamp: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getEncryptedDigest(self, ) -> JArray(JByte, 1): ...
	def getIssuerName(self, ) -> javawrappers.sun.security.x509.X500Name: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class EncryptedPrivateKeyInfo:
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.AlgorithmId, arg1: JArray(JByte, 1), ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getEncoded(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getAlgorithm(self, ) -> javawrappers.sun.security.x509.AlgorithmId: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getEncryptedData(self, ) -> JArray(JByte, 1): ...
	def notify(self, ) -> None: ...


