################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.security
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.util.stream
import javawrappers.java.util.function
import javawrappers.sun.security.jca

from jpype.types import *
from typing import Union

from typing import overload

class ServiceId:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class GetInstance:
	class Instance:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toArray(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toArray(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.security.Provider, ) -> javawrappers.sun.security.jca.GetInstance.Instance: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.security.Provider.Service, arg1: javawrappers.java.lang.Class, ) -> javawrappers.sun.security.jca.GetInstance.Instance: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.security.Provider.Service, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Object, ) -> javawrappers.sun.security.jca.GetInstance.Instance: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.Object, ) -> javawrappers.sun.security.jca.GetInstance.Instance: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.String, ) -> javawrappers.sun.security.jca.GetInstance.Instance: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.sun.security.jca.GetInstance.Instance: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.String, ) -> javawrappers.sun.security.jca.GetInstance.Instance: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.security.Provider, ) -> javawrappers.sun.security.jca.GetInstance.Instance: ...
	@overload
	@staticmethod
	def getServices(arg0: javawrappers.java.util.List, ) -> javawrappers.java.util.List: ...
	@overload
	@staticmethod
	def getServices(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.List, ) -> javawrappers.java.util.List: ...
	@overload
	@staticmethod
	def getServices(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	@staticmethod
	def checkSuperClass(arg0: javawrappers.java.security.Provider.Service, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Class, ) -> None: ...
	def notify(self, ) -> None: ...
	@overload
	@staticmethod
	def getService(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.security.Provider, ) -> javawrappers.java.security.Provider.Service: ...
	@overload
	@staticmethod
	def getService(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.java.security.Provider.Service: ...
	@overload
	@staticmethod
	def getService(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.security.Provider.Service: ...


class JCAUtil:
	class CachedSecureRandomHolder:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getTempArraySize(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getSecureRandom() -> javawrappers.java.security.SecureRandom: ...
	def notify(self, ) -> None: ...


class ProviderList:
	class PreferredEntry:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class PreferredList:
		def add(self, arg0: javawrappers.sun.security.jca.ProviderList.PreferredEntry, ) -> Union[int, JBoolean]: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def size(self, ) -> Union[int, JInt]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def get(self, arg0: Union[int, JInt], ) -> javawrappers.sun.security.jca.ProviderList.PreferredEntry: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class ServiceList:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def replaceAll(self, arg0: javawrappers.java.util.function.UnaryOperator, ) -> None: ...
		def notify(self, ) -> None: ...
		@overload
		def remove(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
		@overload
		def remove(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def removeAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
		def iterator(self, ) -> javawrappers.java.util.Iterator: ...
		def stream(self, ) -> javawrappers.java.util.stream.Stream: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		@overload
		def get(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
		@overload
		def get(self, arg0: Union[int, JInt], ) -> javawrappers.java.security.Provider.Service: ...
		@overload
		def toArray(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> JArray(javawrappers.java.lang.Object, 1): ...
		@overload
		def toArray(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
		@overload
		def toArray(self, arg0: javawrappers.java.util.function.IntFunction, ) -> JArray(javawrappers.java.lang.Object, 1): ...
		def parallelStream(self, ) -> javawrappers.java.util.stream.Stream: ...
		def indexOf(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def add(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Object, ) -> None: ...
		@overload
		def add(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def subList(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.util.List: ...
		def set(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
		def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
		def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
		def containsAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
		def clear(self, ) -> None: ...
		def isEmpty(self, ) -> Union[int, JBoolean]: ...
		def sort(self, arg0: javawrappers.java.util.Comparator, ) -> None: ...
		def removeIf(self, arg0: javawrappers.java.util.function.Predicate, ) -> Union[int, JBoolean]: ...
		def lastIndexOf(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		def contains(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def size(self, ) -> Union[int, JInt]: ...
		@overload
		def addAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
		@overload
		def addAll(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@overload
		def listIterator(self, ) -> javawrappers.java.util.ListIterator: ...
		@overload
		def listIterator(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.ListIterator: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def retainAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getIndex(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def insertAt(arg0: javawrappers.sun.security.jca.ProviderList, arg1: javawrappers.java.security.Provider, arg2: Union[int, JInt], ) -> javawrappers.sun.security.jca.ProviderList: ...
	def replaceAll(self, arg0: javawrappers.java.util.function.UnaryOperator, ) -> None: ...
	def notify(self, ) -> None: ...
	@overload
	@staticmethod
	def remove(arg0: javawrappers.sun.security.jca.ProviderList, arg1: javawrappers.java.lang.String, ) -> javawrappers.sun.security.jca.ProviderList: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	@overload
	def remove(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def removeAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def stream(self, ) -> javawrappers.java.util.stream.Stream: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def get(self, arg0: Union[int, JInt], ) -> javawrappers.sun.security.jca.ProviderList.PreferredEntry: ...
	@overload
	def get(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	@overload
	def get(self, arg0: Union[int, JInt], ) -> javawrappers.java.security.Provider.Service: ...
	@overload
	def toArray(self, ) -> JArray(javawrappers.java.security.Provider, 1): ...
	@overload
	def toArray(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def toArray(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def toArray(self, arg0: javawrappers.java.util.function.IntFunction, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def getProvider(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.security.Provider: ...
	def parallelStream(self, ) -> javawrappers.java.util.stream.Stream: ...
	@overload
	def getServices(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.List, ) -> javawrappers.java.util.List: ...
	@overload
	def getServices(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	@overload
	def getServices(self, arg0: javawrappers.java.util.List, ) -> javawrappers.java.util.List: ...
	def indexOf(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def add(arg0: javawrappers.sun.security.jca.ProviderList, arg1: javawrappers.java.security.Provider, ) -> javawrappers.sun.security.jca.ProviderList: ...
	@overload
	def add(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def add(self, arg0: javawrappers.sun.security.jca.ProviderList.PreferredEntry, ) -> Union[int, JBoolean]: ...
	def subList(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.util.List: ...
	def set(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def containsAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def newList(*arg0: javawrappers.java.security.Provider, ) -> javawrappers.sun.security.jca.ProviderList: ...
	def sort(self, arg0: javawrappers.java.util.Comparator, ) -> None: ...
	def getService(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.security.Provider.Service: ...
	def removeIf(self, arg0: javawrappers.java.util.function.Predicate, ) -> Union[int, JBoolean]: ...
	def lastIndexOf(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def contains(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def size(self, ) -> Union[int, JInt]: ...
	@overload
	def size(self, ) -> Union[int, JInt]: ...
	@overload
	def size(self, ) -> Union[int, JInt]: ...
	@overload
	def addAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
	@overload
	def addAll(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def listIterator(self, ) -> javawrappers.java.util.ListIterator: ...
	@overload
	def listIterator(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.ListIterator: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def providers(self, ) -> javawrappers.java.util.List: ...
	def retainAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...


class Providers:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def endThreadProviderList(arg0: javawrappers.sun.security.jca.ProviderList, ) -> None: ...
	@staticmethod
	def stopJarVerification(arg0: javawrappers.java.lang.Object, ) -> None: ...
	@staticmethod
	def setProviderList(arg0: javawrappers.sun.security.jca.ProviderList, ) -> None: ...
	@staticmethod
	def getThreadProviderList() -> javawrappers.sun.security.jca.ProviderList: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def getSunProvider() -> javawrappers.java.security.Provider: ...
	@staticmethod
	def beginThreadProviderList(arg0: javawrappers.sun.security.jca.ProviderList, ) -> javawrappers.sun.security.jca.ProviderList: ...
	@staticmethod
	def getProviderList() -> javawrappers.sun.security.jca.ProviderList: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getFullProviderList() -> javawrappers.sun.security.jca.ProviderList: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def startJarVerification() -> javawrappers.java.lang.Object: ...


