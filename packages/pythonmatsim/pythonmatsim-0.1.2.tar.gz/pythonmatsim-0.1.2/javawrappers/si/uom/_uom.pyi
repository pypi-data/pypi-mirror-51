################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.javax.measure
import javawrappers.javax.measure.spi
import javawrappers.si.uom
import javawrappers.java.lang
import javawrappers.java.util

from jpype.types import *
from typing import Union

from typing import overload

class SI:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def getUnits(self, arg0: javawrappers.javax.measure.Dimension, ) -> javawrappers.java.util.Set: ...
	@overload
	def getUnits(self, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getInstance() -> javawrappers.javax.measure.spi.SystemOfUnits: ...
	@overload
	@staticmethod
	def getInstance() -> javawrappers.si.uom.SI: ...
	def getUnit(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.measure.Unit: ...
	def notify(self, ) -> None: ...


class NonSI:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def getUnits(self, arg0: javawrappers.javax.measure.Dimension, ) -> javawrappers.java.util.Set: ...
	@overload
	def getUnits(self, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getInstance() -> javawrappers.si.uom.NonSI: ...
	def getUnit(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.measure.Unit: ...
	def notify(self, ) -> None: ...


