################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.net
import javawrappers.java.io
import javawrappers.javax.swing.tree

from jpype.types import *
from typing import Union

from typing import overload

class MRUFileManager:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	def getMRUFileList(self, ) -> JArray(javawrappers.java.lang.String, 1): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def set(self, arg0: javawrappers.java.io.File, ) -> None: ...
	@overload
	def set(self, arg0: javawrappers.java.net.URL, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def save(self, ) -> None: ...
	def getInputStream(self, arg0: Union[int, JInt], ) -> javawrappers.java.io.InputStream: ...
	def getFile(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def createConfigurationDirectory() -> None: ...
	def size(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def moveToTop(self, arg0: Union[int, JInt], ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ConfigurationManager:
	def __init__(self, arg0: javawrappers.org.apache.log4j.lf5.viewer.LogBrokerMonitor, arg1: javawrappers.org.apache.log4j.lf5.viewer.LogTable, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def save(self, ) -> None: ...
	def reset(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def treePathToString(arg0: javawrappers.javax.swing.tree.TreePath, ) -> javawrappers.java.lang.String: ...


