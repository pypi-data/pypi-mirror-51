################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.apache.log4j.config
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.w3c.dom
import javawrappers.java.net
import javawrappers.java.io
import javawrappers.org.xml.sax
import javawrappers.org.apache.log4j.spi
import javawrappers.javax.xml.parsers

from jpype.types import *
from typing import Union

from typing import overload

class SAXErrorHandler:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def fatalError(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def warning(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def error(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def notify(self, ) -> None: ...


class XMLLayout:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getFooter(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def setProperties(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getProperties(self, ) -> Union[int, JBoolean]: ...
	def format(self, arg0: javawrappers.org.apache.log4j.spi.LoggingEvent, ) -> javawrappers.java.lang.String: ...
	def getLocationInfo(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getHeader(self, ) -> javawrappers.java.lang.String: ...
	def activateOptions(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setLocationInfo(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getContentType(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def ignoresThrowable(self, ) -> Union[int, JBoolean]: ...


class UnrecognizedElementHandler:
	def parseUnrecognizedElement(self, arg0: javawrappers.org.w3c.dom.Element, arg1: javawrappers.java.util.Properties, ) -> Union[int, JBoolean]: ...


class DOMConfigurator:
	def __init__(self, ): ...
	class ParseAction:
		def parse(self, arg0: javawrappers.javax.xml.parsers.DocumentBuilder, ) -> javawrappers.org.w3c.dom.Document: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def configureAndWatch(arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	@staticmethod
	def configureAndWatch(arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def subst(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Properties, ) -> javawrappers.java.lang.String: ...
	def parse(self, arg0: javawrappers.javax.xml.parsers.DocumentBuilder, ) -> javawrappers.org.w3c.dom.Document: ...
	@overload
	@staticmethod
	def configure(arg0: javawrappers.java.net.URL, ) -> None: ...
	@overload
	@staticmethod
	def configure(arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	@staticmethod
	def configure(arg0: javawrappers.org.w3c.dom.Element, ) -> None: ...
	@staticmethod
	def parseElement(arg0: javawrappers.org.w3c.dom.Element, arg1: javawrappers.java.util.Properties, arg2: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def doConfigure(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.apache.log4j.spi.LoggerRepository, ) -> None: ...
	@overload
	def doConfigure(self, arg0: javawrappers.java.io.Reader, arg1: javawrappers.org.apache.log4j.spi.LoggerRepository, ) -> None: ...
	@overload
	def doConfigure(self, arg0: javawrappers.java.io.InputStream, arg1: javawrappers.org.apache.log4j.spi.LoggerRepository, ) -> None: ...
	@overload
	def doConfigure(self, arg0: javawrappers.java.net.URL, arg1: javawrappers.org.apache.log4j.spi.LoggerRepository, ) -> None: ...
	@overload
	def doConfigure(self, arg0: javawrappers.org.w3c.dom.Element, arg1: javawrappers.org.apache.log4j.spi.LoggerRepository, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def setParameter(arg0: javawrappers.org.w3c.dom.Element, arg1: javawrappers.org.apache.log4j.config.PropertySetter, arg2: javawrappers.java.util.Properties, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class Log4jEntityResolver:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def resolveEntity(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.xml.sax.InputSource: ...
	def notify(self, ) -> None: ...


