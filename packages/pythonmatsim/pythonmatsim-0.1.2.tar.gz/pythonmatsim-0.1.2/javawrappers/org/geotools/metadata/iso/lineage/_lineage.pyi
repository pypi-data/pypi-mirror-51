################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.geotools.metadata
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.referencing
import javawrappers.org.opengis.util
import javawrappers.javax.swing.tree
import javawrappers.org.opengis.metadata.citation
import javawrappers.org.opengis.metadata.identification

from jpype.types import *
from typing import Union

from typing import overload

class SourceImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.lineage.Source, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.util.InternationalString, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def setDescription(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getSourceCitation(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def getDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setSourceSteps(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def notify(self, ) -> None: ...
	def getSourceReferenceSystem(self, ) -> javawrappers.org.opengis.referencing.ReferenceSystem: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getSourceExtents(self, ) -> javawrappers.java.util.Collection: ...
	def setSourceReferenceSystem(self, arg0: javawrappers.org.opengis.referencing.ReferenceSystem, ) -> None: ...
	def getScaleDenominator(self, ) -> javawrappers.org.opengis.metadata.identification.RepresentativeFraction: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def setSourceExtents(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setSourceCitation(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> None: ...
	def setScaleDenominator(self, arg0: javawrappers.org.opengis.metadata.identification.RepresentativeFraction, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSourceSteps(self, ) -> javawrappers.java.util.Collection: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ProcessStepImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.util.InternationalString, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.lineage.ProcessStep, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def getRationale(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setDescription(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getSources(self, ) -> javawrappers.java.util.Collection: ...
	def setProcessors(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def getDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setSources(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def notify(self, ) -> None: ...
	def setRationale(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setDate(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDate(self, ) -> javawrappers.java.util.Date: ...
	def getProcessors(self, ) -> javawrappers.java.util.Collection: ...


class LineageImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.lineage.Lineage, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def getSources(self, ) -> javawrappers.java.util.Collection: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def setSources(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def getProcessSteps(self, ) -> javawrappers.java.util.Collection: ...
	def setStatement(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setProcessSteps(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getStatement(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


