################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.geotools.metadata
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.util
import javawrappers.org.opengis.temporal
import javawrappers.javax.swing.tree
import javawrappers.org.opengis.referencing.crs
import javawrappers.org.opengis.metadata.extent
import javawrappers.org.opengis.metadata

from jpype.types import *
from typing import Union

from typing import overload

class BoundingPolygonImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Collection, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.extent.BoundingPolygon, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def setInclusion(self, arg0: javawrappers.java.lang.Boolean, ) -> None: ...
	def setPolygons(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getPolygons(self, ) -> javawrappers.java.util.Collection: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getInclusion(self, ) -> javawrappers.java.lang.Boolean: ...


class ExtentImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.extent.Extent, ): ...
	def getTemporalElements(self, ) -> javawrappers.java.util.Collection: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def getVerticalElements(self, ) -> javawrappers.java.util.Collection: ...
	def setDescription(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def getDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def notify(self, ) -> None: ...
	def setVerticalElements(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getGeographicElements(self, ) -> javawrappers.java.util.Collection: ...
	def setGeographicElements(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setTemporalElements(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getGeographicBoundingBox(arg0: javawrappers.org.opengis.metadata.extent.Extent, ) -> javawrappers.org.opengis.metadata.extent.GeographicBoundingBox: ...


class SpatialTemporalExtentImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Date, arg1: javawrappers.java.util.Date, arg2: javawrappers.java.util.Collection, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.extent.SpatialTemporalExtent, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def getExtent(self, ) -> javawrappers.org.opengis.temporal.TemporalPrimitive: ...
	def setSpatialExtent(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getSpatialExtent(self, ) -> javawrappers.java.util.Collection: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def getEndTime(self, ) -> javawrappers.java.util.Date: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setEndTime(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setExtent(self, arg0: javawrappers.org.opengis.temporal.TemporalPrimitive, ) -> None: ...
	def setStartTime(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def getStartTime(self, ) -> javawrappers.java.util.Date: ...


class GeographicDescriptionImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.Identifier, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.extent.GeographicDescription, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def getGeographicIdentifier(self, ) -> javawrappers.org.opengis.metadata.Identifier: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def setGeographicIdentifier(self, arg0: javawrappers.org.opengis.metadata.Identifier, ) -> None: ...
	def setInclusion(self, arg0: javawrappers.java.lang.Boolean, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getInclusion(self, ) -> javawrappers.java.lang.Boolean: ...


class GeographicBoundingBoxImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.geometry.Envelope, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.extent.GeographicBoundingBox, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.awt.geom.Rectangle2D, ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def getSouthBoundLatitude(self, ) -> Union[float, JDouble]: ...
	def setInclusion(self, arg0: javawrappers.java.lang.Boolean, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setEastBoundLongitude(self, arg0: Union[float, JDouble], ) -> None: ...
	def getInclusion(self, ) -> javawrappers.java.lang.Boolean: ...
	def add(self, arg0: javawrappers.org.opengis.metadata.extent.GeographicBoundingBox, ) -> None: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def getEastBoundLongitude(self, ) -> Union[float, JDouble]: ...
	def intersect(self, arg0: javawrappers.org.opengis.metadata.extent.GeographicBoundingBox, ) -> None: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def getNorthBoundLatitude(self, ) -> Union[float, JDouble]: ...
	@overload
	def setBounds(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.org.opengis.metadata.extent.GeographicBoundingBox, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def setSouthBoundLatitude(self, arg0: Union[float, JDouble], ) -> None: ...
	def setWestBoundLongitude(self, arg0: Union[float, JDouble], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def toString(arg0: javawrappers.org.opengis.metadata.extent.GeographicBoundingBox, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	def setNorthBoundLatitude(self, arg0: Union[float, JDouble], ) -> None: ...
	def getWestBoundLongitude(self, ) -> Union[float, JDouble]: ...


class GeographicExtentImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.extent.GeographicExtent, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def setInclusion(self, arg0: javawrappers.java.lang.Boolean, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getInclusion(self, ) -> javawrappers.java.lang.Boolean: ...


class TemporalExtentImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Date, arg1: javawrappers.java.util.Date, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.extent.TemporalExtent, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def getExtent(self, ) -> javawrappers.org.opengis.temporal.TemporalPrimitive: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def getEndTime(self, ) -> javawrappers.java.util.Date: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setEndTime(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setExtent(self, arg0: javawrappers.org.opengis.temporal.TemporalPrimitive, ) -> None: ...
	def setStartTime(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def getStartTime(self, ) -> javawrappers.java.util.Date: ...


class VerticalExtentImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.extent.VerticalExtent, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Double, arg1: javawrappers.java.lang.Double, arg2: javawrappers.org.opengis.referencing.crs.VerticalCRS, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def setVerticalCRS(self, arg0: javawrappers.org.opengis.referencing.crs.VerticalCRS, ) -> None: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def setMinimumValue(self, arg0: javawrappers.java.lang.Double, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getMaximumValue(self, ) -> javawrappers.java.lang.Double: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setMaximumValue(self, arg0: javawrappers.java.lang.Double, ) -> None: ...
	def getVerticalCRS(self, ) -> javawrappers.org.opengis.referencing.crs.VerticalCRS: ...
	def getMinimumValue(self, ) -> javawrappers.java.lang.Double: ...


