################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.geotools.metadata
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.net
import javawrappers.org.opengis.util
import javawrappers.javax.swing.tree
import javawrappers.org.opengis.metadata.citation

from jpype.types import *
from typing import Union

from typing import overload

class SeriesImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.citation.Series, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.CharSequence, ): ...
	def setName(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def getPage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def setIssueIdentification(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getIssueIdentification(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setPage(self, arg0: javawrappers.java.lang.String, ) -> None: ...


class Citations:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def identifierMatches(arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def identifierMatches(arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def getIdentifier(arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def fromName(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def titleMatches(arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: javawrappers.org.opengis.metadata.citation.Citation, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def titleMatches(arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...


class TelephoneImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.citation.Telephone, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def getFacsimiles(self, ) -> javawrappers.java.util.Collection: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setVoices(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setFacsimiles(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getVoices(self, ) -> javawrappers.java.util.Collection: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class CitationImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.CharSequence, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.citation.ResponsibleParty, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDates(self, ) -> javawrappers.java.util.Collection: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def setEdition(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getISBN(self, ) -> javawrappers.java.lang.String: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def getEdition(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setEditionDate(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def notify(self, ) -> None: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def getTitle(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setISBN(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Collection: ...
	def setPresentationForm(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getCitedResponsibleParties(self, ) -> javawrappers.java.util.Collection: ...
	def setDates(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getOtherCitationDetails(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getISSN(self, ) -> javawrappers.java.lang.String: ...
	def setAlternateTitles(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setIdentifiers(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def setOtherCitationDetails(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def setTitle(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def setISSN(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getAlternateTitles(self, ) -> javawrappers.java.util.Collection: ...
	def getPresentationForm(self, ) -> javawrappers.java.util.Collection: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def getCollectiveTitle(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getSeries(self, ) -> javawrappers.org.opengis.metadata.citation.Series: ...
	def setCitedResponsibleParties(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setCollectiveTitle(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setSeries(self, arg0: javawrappers.org.opengis.metadata.citation.Series, ) -> None: ...
	def getEditionDate(self, ) -> javawrappers.java.util.Date: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class OnLineResourceImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.net.URI, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.citation.OnLineResource, ): ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def getFunction(self, ) -> javawrappers.org.opengis.metadata.citation.OnLineFunction: ...
	def getProtocol(self, ) -> javawrappers.java.lang.String: ...
	def setDescription(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def getDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def notify(self, ) -> None: ...
	def setLinkage(self, arg0: javawrappers.java.net.URI, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def setApplicationProfile(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getApplicationProfile(self, ) -> javawrappers.java.lang.String: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def getLinkage(self, ) -> javawrappers.java.net.URI: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setFunction(self, arg0: javawrappers.org.opengis.metadata.citation.OnLineFunction, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ContactImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.citation.Contact, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.citation.OnLineResource, ): ...
	@overload
	def __init__(self, ): ...
	def getPhone(self, ) -> javawrappers.org.opengis.metadata.citation.Telephone: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def setHoursOfService(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def setAddress(self, arg0: javawrappers.org.opengis.metadata.citation.Address, ) -> None: ...
	def setContactInstructions(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def setOnLineResource(self, arg0: javawrappers.org.opengis.metadata.citation.OnLineResource, ) -> None: ...
	def setPhone(self, arg0: javawrappers.org.opengis.metadata.citation.Telephone, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getContactInstructions(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAddress(self, ) -> javawrappers.org.opengis.metadata.citation.Address: ...
	def getOnLineResource(self, ) -> javawrappers.org.opengis.metadata.citation.OnLineResource: ...
	def getHoursOfService(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class AddressImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.citation.Address, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setCountry(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setAdministrativeArea(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getDeliveryPoints(self, ) -> javawrappers.java.util.Collection: ...
	def getCountry(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getElectronicMailAddresses(self, ) -> javawrappers.java.util.Collection: ...
	def setDeliveryPoints(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setPostalCode(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getCity(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def getAdministrativeArea(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def setCity(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getPostalCode(self, ) -> javawrappers.java.lang.String: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setElectronicMailAddresses(self, arg0: javawrappers.java.util.Collection, ) -> None: ...


class CitationDateImpl:
	@overload
	def __init__(self, arg0: javawrappers.java.util.Date, arg1: javawrappers.org.opengis.metadata.citation.DateType, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.citation.CitationDate, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def setDateType(self, arg0: javawrappers.org.opengis.metadata.citation.DateType, ) -> None: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def getDateType(self, ) -> javawrappers.org.opengis.metadata.citation.DateType: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setDate(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDate(self, ) -> javawrappers.java.util.Date: ...


class ResponsiblePartyImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.citation.ResponsibleParty, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.citation.Role, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def getRole(self, ) -> javawrappers.org.opengis.metadata.citation.Role: ...
	def setContactInfo(self, arg0: javawrappers.org.opengis.metadata.citation.Contact, ) -> None: ...
	@overload
	@staticmethod
	def OGC(arg0: javawrappers.org.opengis.metadata.citation.Role, arg1: javawrappers.org.opengis.metadata.citation.OnLineFunction, arg2: javawrappers.java.net.URI, ) -> javawrappers.org.opengis.metadata.citation.ResponsibleParty: ...
	@overload
	@staticmethod
	def OGC(arg0: javawrappers.org.opengis.metadata.citation.Role, arg1: javawrappers.org.opengis.metadata.citation.OnLineResource, ) -> javawrappers.org.opengis.metadata.citation.ResponsibleParty: ...
	def setOrganisationName(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getOrganisationName(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setPositionName(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setRole(self, arg0: javawrappers.org.opengis.metadata.citation.Role, ) -> None: ...
	def getContactInfo(self, ) -> javawrappers.org.opengis.metadata.citation.Contact: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setIndividualName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getPositionName(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIndividualName(self, ) -> javawrappers.java.lang.String: ...


