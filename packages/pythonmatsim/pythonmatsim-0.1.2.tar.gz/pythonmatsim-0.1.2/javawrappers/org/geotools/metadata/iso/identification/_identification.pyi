################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.geotools.metadata
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.net
import javawrappers.org.opengis.util
import javawrappers.javax.swing.tree
import javawrappers.org.opengis.metadata.citation
import javawrappers.org.opengis.metadata.identification

from jpype.types import *
from typing import Union

from typing import overload

class IdentificationImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.identification.Identification, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: javawrappers.org.opengis.util.InternationalString, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getPurpose(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getCitation(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getResourceSpecificUsages(self, ) -> javawrappers.java.util.Collection: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def setPurpose(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getStatus(self, ) -> javawrappers.java.util.Collection: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getResourceConstraints(self, ) -> javawrappers.java.util.Collection: ...
	def getDescriptiveKeywords(self, ) -> javawrappers.java.util.Collection: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def setResourceFormat(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setCredits(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setResourceSpecificUsages(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setAggregationInfo(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def getAggregationInfo(self, ) -> javawrappers.java.util.Collection: ...
	def setDescriptiveKeywords(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def setResourceConstraints(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getResourceFormat(self, ) -> javawrappers.java.util.Collection: ...
	def setStatus(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getPointOfContacts(self, ) -> javawrappers.java.util.Collection: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def setPointOfContacts(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setResourceMaintenance(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setGraphicOverviews(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getGraphicOverviews(self, ) -> javawrappers.java.util.Collection: ...
	def getCredits(self, ) -> javawrappers.java.util.Collection: ...
	def setAbstract(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAbstract(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setCitation(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> None: ...
	def getResourceMaintenance(self, ) -> javawrappers.java.util.Collection: ...


class DataIdentificationImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.identification.DataIdentification, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, arg1: javawrappers.org.opengis.util.InternationalString, arg2: javawrappers.java.util.Collection, arg3: javawrappers.java.util.Collection, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getCitation(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def getStatus(self, ) -> javawrappers.java.util.Collection: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def getResourceConstraints(self, ) -> javawrappers.java.util.Collection: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def setResourceFormat(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getSpatialRepresentationTypes(self, ) -> javawrappers.java.util.Collection: ...
	def setResourceSpecificUsages(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setSupplementalInformation(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getAggregationInfo(self, ) -> javawrappers.java.util.Collection: ...
	def setSpatialRepresentationTypes(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setDescriptiveKeywords(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def getResourceFormat(self, ) -> javawrappers.java.util.Collection: ...
	def setPointOfContacts(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getEnvironmentDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAbstract(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setSpatialResolutions(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getResourceMaintenance(self, ) -> javawrappers.java.util.Collection: ...
	def setLanguage(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getSupplementalInformation(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getPurpose(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getResourceSpecificUsages(self, ) -> javawrappers.java.util.Collection: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def setPurpose(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setEnvironmentDescription(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getTopicCategories(self, ) -> javawrappers.java.util.Collection: ...
	def getCharacterSets(self, ) -> javawrappers.java.util.Collection: ...
	def notify(self, ) -> None: ...
	def getDescriptiveKeywords(self, ) -> javawrappers.java.util.Collection: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setCredits(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setExtent(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setCharacterSets(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setAggregationInfo(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def setTopicCategories(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getExtent(self, ) -> javawrappers.java.util.Collection: ...
	def getLanguage(self, ) -> javawrappers.java.util.Collection: ...
	def setResourceConstraints(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setStatus(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getPointOfContacts(self, ) -> javawrappers.java.util.Collection: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def getSpatialResolutions(self, ) -> javawrappers.java.util.Collection: ...
	def setResourceMaintenance(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setGraphicOverviews(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getGraphicOverviews(self, ) -> javawrappers.java.util.Collection: ...
	def getCredits(self, ) -> javawrappers.java.util.Collection: ...
	def setAbstract(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setCitation(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> None: ...


class BrowseGraphicImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.identification.BrowseGraphic, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.net.URI, ): ...
	@overload
	def __init__(self, ): ...
	def getApplicationSchemaInformation(self, ) -> javawrappers.java.net.URI: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setFileType(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def setFileDescription(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setApplicationSchemaInformation(self, arg0: javawrappers.java.net.URI, ) -> None: ...
	def getFileDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getFileType(self, ) -> javawrappers.java.lang.String: ...
	def setFileName(self, arg0: javawrappers.java.net.URI, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFileName(self, ) -> javawrappers.java.net.URI: ...


class RepresentativeFractionImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[long, JLong], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setDenominator(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def intValue(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def floatValue(self, ) -> Union[float, JFloat]: ...
	def doubleValue(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def longValue(self, ) -> Union[long, JLong]: ...
	def getDenominator(self, ) -> Union[long, JLong]: ...
	def toScale(self, ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def shortValue(self, ) -> Union[int, JShort]: ...
	@staticmethod
	def fromScale(arg0: Union[float, JDouble], ) -> javawrappers.org.opengis.metadata.identification.RepresentativeFraction: ...
	def byteValue(self, ) -> JByte: ...


class UsageImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.identification.Usage, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.util.InternationalString, arg1: javawrappers.java.util.Collection, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def getUserContactInfo(self, ) -> javawrappers.java.util.Collection: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setUserContactInfo(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def setUsageDate(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def getUsageDate(self, ) -> javawrappers.java.util.Date: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSpecificUsage(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setSpecificUsage(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def setUserDeterminedLimitations(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getUserDeterminedLimitations(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class ServiceIdentificationImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.identification.ServiceIdentification, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getPurpose(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getCitation(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getResourceSpecificUsages(self, ) -> javawrappers.java.util.Collection: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def setPurpose(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getStatus(self, ) -> javawrappers.java.util.Collection: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getResourceConstraints(self, ) -> javawrappers.java.util.Collection: ...
	def getDescriptiveKeywords(self, ) -> javawrappers.java.util.Collection: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def setResourceFormat(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setCredits(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setResourceSpecificUsages(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setAggregationInfo(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def getAggregationInfo(self, ) -> javawrappers.java.util.Collection: ...
	def setDescriptiveKeywords(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def setResourceConstraints(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getResourceFormat(self, ) -> javawrappers.java.util.Collection: ...
	def setStatus(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getPointOfContacts(self, ) -> javawrappers.java.util.Collection: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def setPointOfContacts(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def setResourceMaintenance(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setGraphicOverviews(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getGraphicOverviews(self, ) -> javawrappers.java.util.Collection: ...
	def getCredits(self, ) -> javawrappers.java.util.Collection: ...
	def setAbstract(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAbstract(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setCitation(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> None: ...
	def getResourceMaintenance(self, ) -> javawrappers.java.util.Collection: ...


class KeywordsImpl:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.identification.Keywords, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Collection, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def getKeywords(self, ) -> javawrappers.java.util.Collection: ...
	def setType(self, arg0: javawrappers.org.opengis.metadata.identification.KeywordType, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def setKeywords(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def notify(self, ) -> None: ...
	def getThesaurusName(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def setThesaurusName(self, arg0: javawrappers.org.opengis.metadata.citation.Citation, ) -> None: ...
	def getType(self, ) -> javawrappers.org.opengis.metadata.identification.KeywordType: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ResolutionImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.metadata.identification.Resolution, ): ...
	@overload
	def __init__(self, ): ...
	def getDistance(self, ) -> javawrappers.java.lang.Double: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getInterface(self, ) -> javawrappers.java.lang.Class: ...
	def getEquivalentScale(self, ) -> javawrappers.org.opengis.metadata.identification.RepresentativeFraction: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStandard(self, ) -> javawrappers.org.geotools.metadata.MetadataStandard: ...
	def asMap(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def isModifiable(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def asTree(self, ) -> javawrappers.javax.swing.tree.TreeModel: ...
	def freeze(self, ) -> None: ...
	def unmodifiable(self, ) -> javawrappers.org.geotools.metadata.AbstractMetadata: ...
	def setDistance(self, arg0: javawrappers.java.lang.Double, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setEquivalentScale(self, arg0: javawrappers.org.opengis.metadata.identification.RepresentativeFraction, ) -> None: ...


