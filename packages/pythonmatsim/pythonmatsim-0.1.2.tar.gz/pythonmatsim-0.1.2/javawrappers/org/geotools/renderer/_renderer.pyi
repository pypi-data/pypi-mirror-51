################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.opengis.referencing.operation
import javawrappers.org.locationtech.jts.geom

from jpype.types import *
from typing import Union

from typing import overload

class ScreenMap:
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: javawrappers.org.opengis.referencing.operation.MathTransform, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.geotools.renderer.ScreenMap, arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ): ...
	def canSimplify(self, arg0: javawrappers.org.locationtech.jts.geom.Envelope, ) -> Union[int, JBoolean]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JBoolean], ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	@overload
	def checkAndSet(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def checkAndSet(self, arg0: javawrappers.org.locationtech.jts.geom.Envelope, ) -> Union[int, JBoolean]: ...
	@overload
	def getSimplifiedShape(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], arg4: javawrappers.org.locationtech.jts.geom.GeometryFactory, arg5: javawrappers.java.lang.Class, ) -> javawrappers.org.locationtech.jts.geom.Geometry: ...
	@overload
	def getSimplifiedShape(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ) -> javawrappers.org.locationtech.jts.geom.Geometry: ...
	def setSpans(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], ) -> None: ...
	def setTransform(self, arg0: javawrappers.org.opengis.referencing.operation.MathTransform, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.org.locationtech.jts.geom.Envelope, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


