################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.net
import javawrappers.org.geotools.data.shapefile.files

from jpype.types import *
from typing import Union

from typing import overload

class IndexedFidReader:
	@overload
	def __init__(self, arg0: javawrappers.org.geotools.data.shapefile.files.ShpFiles, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.geotools.data.shapefile.files.ShpFiles, arg1: javawrappers.java.nio.channels.ReadableByteChannel, ): ...
	def next(self, ) -> javawrappers.java.lang.String: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getCurrentFIDIndex(self, ) -> Union[long, JLong]: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def findFid(self, arg0: javawrappers.java.lang.String, ) -> Union[long, JLong]: ...
	def notify(self, ) -> None: ...
	def goTo(self, arg0: Union[long, JLong], ) -> None: ...
	def currentSHXIndex(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getRemoves(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def id(self, ) -> javawrappers.java.lang.String: ...
	def close(self, ) -> None: ...
	def getCount(self, ) -> Union[long, JLong]: ...


class FidIndexer:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def generate(arg0: javawrappers.org.geotools.data.shapefile.files.ShpFiles, ) -> None: ...
	@overload
	@staticmethod
	def generate(arg0: javawrappers.java.net.URL, ) -> None: ...
	def notify(self, ) -> None: ...


class IndexedFidWriter:
	@overload
	def __init__(self, arg0: javawrappers.org.geotools.data.shapefile.files.ShpFiles, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.geotools.data.shapefile.files.ShpFiles, arg1: javawrappers.org.geotools.data.shapefile.files.StorageFile, ): ...
	def next(self, ) -> Union[long, JLong]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def hasNext(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def remove(self, ) -> None: ...
	def isClosed(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def id(self, ) -> javawrappers.java.lang.String: ...
	def close(self, ) -> None: ...
	def write(self, ) -> None: ...


