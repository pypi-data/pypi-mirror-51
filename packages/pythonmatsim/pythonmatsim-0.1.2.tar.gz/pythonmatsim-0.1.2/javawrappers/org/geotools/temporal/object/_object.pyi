################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.javax.measure
import javawrappers.java.sql
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.util
import javawrappers.org.opengis.temporal

from jpype.types import *
from typing import Union

from typing import overload

class DefaultDateAndTime:
	def __init__(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, arg1: javawrappers.org.opengis.temporal.IndeterminateValue, arg2: javawrappers.org.opengis.util.InternationalString, arg3: JArray(Union[int, JInt], 1), arg4: JArray(javawrappers.java.lang.Number, 1), ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setCalendarDate(self, arg0: JArray(Union[int, JInt], 1), ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getCalendarDate(self, ) -> JArray(Union[int, JInt], 1): ...
	def notifyAll(self, ) -> None: ...
	def getFrame(self, ) -> javawrappers.org.opengis.temporal.TemporalReferenceSystem: ...
	def getIndeterminatePosition(self, ) -> javawrappers.org.opengis.temporal.IndeterminateValue: ...
	def setCalendarEraName(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def notify(self, ) -> None: ...
	def setFrame(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getCalendarEraName(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getClockTime(self, ) -> JArray(javawrappers.java.lang.Number, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setIndeterminatePosition(self, arg0: javawrappers.org.opengis.temporal.IndeterminateValue, ) -> None: ...
	def setClockTime(self, arg0: JArray(javawrappers.java.lang.Number, 1), ) -> None: ...


class Utils:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@staticmethod
	def JulianToDate(arg0: javawrappers.org.opengis.temporal.JulianDate, ) -> javawrappers.java.util.Date: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def getTimeZone(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def getTimeInMillis(arg0: javawrappers.java.lang.String, ) -> Union[long, JLong]: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def calendarDateToDate(arg0: javawrappers.org.opengis.temporal.CalendarDate, ) -> javawrappers.java.util.Date: ...
	@staticmethod
	def dateAndTimeToDate(arg0: javawrappers.org.opengis.temporal.DateAndTime, ) -> javawrappers.java.util.Date: ...
	@staticmethod
	def temporalCoordToDate(arg0: javawrappers.org.opengis.temporal.TemporalCoordinate, ) -> javawrappers.java.util.Date: ...
	@staticmethod
	def getDateFromString(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Date: ...
	@staticmethod
	def ordinalToDate(arg0: javawrappers.org.opengis.temporal.OrdinalPosition, ) -> javawrappers.java.util.Date: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getUnitFromDuration(arg0: javawrappers.org.opengis.temporal.Duration, ) -> javawrappers.javax.measure.Unit: ...


class DefaultPosition:
	@overload
	def __init__(self, arg0: javawrappers.java.util.Date, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.temporal.TemporalPosition, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.util.InternationalString, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDateTime(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTime(self, ) -> javawrappers.java.sql.Time: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDate(self, ) -> javawrappers.java.util.Date: ...
	def anyOther(self, ) -> javawrappers.org.opengis.temporal.TemporalPosition: ...
	def notify(self, ) -> None: ...


class DefaultTemporalPosition:
	def __init__(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, arg1: javawrappers.org.opengis.temporal.IndeterminateValue, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setFrame(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getFrame(self, ) -> javawrappers.org.opengis.temporal.TemporalReferenceSystem: ...
	def getIndeterminatePosition(self, ) -> javawrappers.org.opengis.temporal.IndeterminateValue: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setIndeterminatePosition(self, arg0: javawrappers.org.opengis.temporal.IndeterminateValue, ) -> None: ...
	def notify(self, ) -> None: ...


class DefaultOrdinalPosition:
	def __init__(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, arg1: javawrappers.org.opengis.temporal.IndeterminateValue, arg2: javawrappers.org.opengis.temporal.OrdinalEra, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setFrame(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def getFrame(self, ) -> javawrappers.org.opengis.temporal.TemporalReferenceSystem: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setOrdinalPosition(self, arg0: javawrappers.org.opengis.temporal.OrdinalEra, ) -> None: ...
	def getIndeterminatePosition(self, ) -> javawrappers.org.opengis.temporal.IndeterminateValue: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setIndeterminatePosition(self, arg0: javawrappers.org.opengis.temporal.IndeterminateValue, ) -> None: ...
	def getOrdinalPosition(self, ) -> javawrappers.org.opengis.temporal.OrdinalEra: ...
	def notify(self, ) -> None: ...


class DefaultJulianDate:
	def __init__(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, arg1: javawrappers.org.opengis.temporal.IndeterminateValue, arg2: javawrappers.java.lang.Number, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setFrame(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, ) -> None: ...
	def getCoordinateValue(self, ) -> javawrappers.java.lang.Number: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def getFrame(self, ) -> javawrappers.org.opengis.temporal.TemporalReferenceSystem: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getIndeterminatePosition(self, ) -> javawrappers.org.opengis.temporal.IndeterminateValue: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setCoordinateValue(self, arg0: javawrappers.java.lang.Number, ) -> None: ...
	def setIndeterminatePosition(self, arg0: javawrappers.org.opengis.temporal.IndeterminateValue, ) -> None: ...
	def notify(self, ) -> None: ...


class DefaultPeriodDuration:
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.util.InternationalString, arg1: javawrappers.org.opengis.util.InternationalString, arg2: javawrappers.org.opengis.util.InternationalString, arg3: javawrappers.org.opengis.util.InternationalString, arg4: javawrappers.org.opengis.util.InternationalString, arg5: javawrappers.org.opengis.util.InternationalString, arg6: javawrappers.org.opengis.util.InternationalString, ): ...
	@overload
	def __init__(self, arg0: Union[long, JLong], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setWeek(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getTimeInMillis(self, ) -> Union[long, JLong]: ...
	def setMonths(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def setMinutes(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getWeek(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def notify(self, ) -> None: ...
	def getMonths(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getMinutes(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDesignator(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setDays(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def setYears(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getHours(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getSeconds(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDays(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def setHours(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setSeconds(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def getYears(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getTimeIndicator(self, ) -> javawrappers.org.opengis.util.InternationalString: ...


class DefaultTemporalGeometricPrimitive:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def distance(self, arg0: javawrappers.org.opengis.temporal.TemporalGeometricPrimitive, ) -> javawrappers.org.opengis.temporal.Duration: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def length(self, ) -> javawrappers.org.opengis.temporal.Duration: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def relativePosition(self, arg0: javawrappers.org.opengis.temporal.TemporalPrimitive, ) -> javawrappers.org.opengis.temporal.RelativePosition: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.temporal.TemporalPrimitive, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...


class DefaultClockTime:
	def __init__(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, arg1: javawrappers.org.opengis.temporal.IndeterminateValue, arg2: JArray(javawrappers.java.lang.Number, 1), ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setFrame(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def getFrame(self, ) -> javawrappers.org.opengis.temporal.TemporalReferenceSystem: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getClockTime(self, ) -> JArray(javawrappers.java.lang.Number, 1): ...
	def getIndeterminatePosition(self, ) -> javawrappers.org.opengis.temporal.IndeterminateValue: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setIndeterminatePosition(self, arg0: javawrappers.org.opengis.temporal.IndeterminateValue, ) -> None: ...
	def notify(self, ) -> None: ...
	def setClockTime(self, arg0: JArray(javawrappers.java.lang.Number, 1), ) -> None: ...


class DefaultTemporalCoordinate:
	def __init__(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, arg1: javawrappers.org.opengis.temporal.IndeterminateValue, arg2: javawrappers.java.lang.Number, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setFrame(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, ) -> None: ...
	def getCoordinateValue(self, ) -> javawrappers.java.lang.Number: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def getFrame(self, ) -> javawrappers.org.opengis.temporal.TemporalReferenceSystem: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getIndeterminatePosition(self, ) -> javawrappers.org.opengis.temporal.IndeterminateValue: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setCoordinateValue(self, arg0: javawrappers.java.lang.Number, ) -> None: ...
	def setIndeterminatePosition(self, arg0: javawrappers.org.opengis.temporal.IndeterminateValue, ) -> None: ...
	def notify(self, ) -> None: ...


class DefaultInstant:
	def __init__(self, arg0: javawrappers.org.opengis.temporal.Position, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def distance(self, arg0: javawrappers.org.opengis.temporal.TemporalGeometricPrimitive, ) -> javawrappers.org.opengis.temporal.Duration: ...
	def notifyAll(self, ) -> None: ...
	def length(self, ) -> javawrappers.org.opengis.temporal.Duration: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.temporal.TemporalPrimitive, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def setPosition(self, arg0: javawrappers.org.opengis.temporal.Position, ) -> None: ...
	def setBegunBy(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	def getPosition(self, ) -> javawrappers.org.opengis.temporal.Position: ...
	def getEndedBy(self, ) -> javawrappers.java.util.Collection: ...
	def getBegunBy(self, ) -> javawrappers.java.util.Collection: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def relativePosition(self, arg0: javawrappers.org.opengis.temporal.TemporalPrimitive, ) -> javawrappers.org.opengis.temporal.RelativePosition: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setEndBy(self, arg0: javawrappers.java.util.Collection, ) -> None: ...


class DefaultCalendarDate:
	def __init__(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, arg1: javawrappers.org.opengis.temporal.IndeterminateValue, arg2: javawrappers.org.opengis.util.InternationalString, arg3: JArray(Union[int, JInt], 1), ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setCalendarDate(self, arg0: JArray(Union[int, JInt], 1), ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getCalendarDate(self, ) -> JArray(Union[int, JInt], 1): ...
	def notifyAll(self, ) -> None: ...
	def getFrame(self, ) -> javawrappers.org.opengis.temporal.TemporalReferenceSystem: ...
	def getIndeterminatePosition(self, ) -> javawrappers.org.opengis.temporal.IndeterminateValue: ...
	def setCalendarEraName(self, arg0: javawrappers.org.opengis.util.InternationalString, ) -> None: ...
	def notify(self, ) -> None: ...
	def setFrame(self, arg0: javawrappers.org.opengis.temporal.TemporalReferenceSystem, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getCalendarEraName(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setIndeterminatePosition(self, arg0: javawrappers.org.opengis.temporal.IndeterminateValue, ) -> None: ...


class DefaultPeriod:
	def __init__(self, arg0: javawrappers.org.opengis.temporal.Instant, arg1: javawrappers.org.opengis.temporal.Instant, ): ...
	def getBeginning(self, ) -> javawrappers.org.opengis.temporal.Instant: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def setBegining(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	@overload
	def setBegining(self, arg0: javawrappers.org.opengis.temporal.Instant, ) -> None: ...
	def distance(self, arg0: javawrappers.org.opengis.temporal.TemporalGeometricPrimitive, ) -> javawrappers.org.opengis.temporal.Duration: ...
	def notifyAll(self, ) -> None: ...
	def length(self, ) -> javawrappers.org.opengis.temporal.Duration: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.temporal.TemporalPrimitive, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def setEnding(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	@overload
	def setEnding(self, arg0: javawrappers.org.opengis.temporal.Instant, ) -> None: ...
	def notify(self, ) -> None: ...
	def getEnding(self, ) -> javawrappers.org.opengis.temporal.Instant: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def relativePosition(self, arg0: javawrappers.org.opengis.temporal.TemporalPrimitive, ) -> javawrappers.org.opengis.temporal.RelativePosition: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class DefaultDuration:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getTimeInMillis(self, ) -> Union[long, JLong]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class DefaultTemporalObject:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class DefaultIntervalLength:
	def __init__(self, arg0: javawrappers.javax.measure.Unit, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getValue(self, ) -> Union[int, JInt]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getTimeInMillis(self, ) -> Union[long, JLong]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getUnit(self, ) -> javawrappers.javax.measure.Unit: ...
	def notify(self, ) -> None: ...
	def getFactor(self, ) -> Union[int, JInt]: ...
	def getRadix(self, ) -> Union[int, JInt]: ...


class DefaultTemporalPrimitive:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def relativePosition(self, arg0: javawrappers.org.opengis.temporal.TemporalPrimitive, ) -> javawrappers.org.opengis.temporal.RelativePosition: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.temporal.TemporalPrimitive, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...


