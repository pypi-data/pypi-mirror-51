################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.filter.identity

from jpype.types import *
from typing import Union

from typing import overload

class FeatureId:
	def equalsExact(self, arg0: javawrappers.org.opengis.filter.identity.FeatureId, ) -> Union[int, JBoolean]: ...
	def getPreviousRid(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def equalsFID(self, arg0: javawrappers.org.opengis.filter.identity.FeatureId, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getID(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getID(self, ) -> javawrappers.java.lang.String: ...
	def matches(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getFeatureVersion(self, ) -> javawrappers.java.lang.String: ...
	def getRid(self, ) -> javawrappers.java.lang.String: ...


class Version:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Integer, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Date, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.opengis.filter.identity.Version.Action, ): ...
	class Action:
		FIRST: Version.Action = ...
		LAST: Version.Action = ...
		NEXT: Version.Action = ...
		PREVIOUS: Version.Action = ...
		ALL: Version.Action = ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@staticmethod
		def lookup(arg0: Union[int, JInt], ) -> javawrappers.org.opengis.filter.identity.Version.Action: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.filter.identity.Version.Action: ...
		def notifyAll(self, ) -> None: ...
		@staticmethod
		def values() -> JArray(javawrappers.org.opengis.filter.identity.Version.Action, 1): ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def name(self, ) -> javawrappers.java.lang.String: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def ordinal(self, ) -> Union[int, JInt]: ...


	@staticmethod
	def lookup(arg0: Union[int, JInt], ) -> javawrappers.org.opengis.filter.identity.Version.Action: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isVersionAction(self, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getIndex(self, ) -> javawrappers.java.lang.Integer: ...
	def getDateTime(self, ) -> javawrappers.java.util.Date: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: Union[long, JLong], ) -> javawrappers.org.opengis.filter.identity.Version: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.filter.identity.Version.Action: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.filter.identity.Version.Action, 1): ...
	def notifyAll(self, ) -> None: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def union(self, ) -> Union[long, JLong]: ...
	def isIndex(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isDateTime(self, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getVersionAction(self, ) -> javawrappers.org.opengis.filter.identity.Version.Action: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class RecordId:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getID(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getID(self, ) -> javawrappers.java.lang.Object: ...
	def matches(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...


class Identifier:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getID(self, ) -> javawrappers.java.lang.Object: ...
	def matches(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...


class ObjectId:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getID(self, ) -> javawrappers.java.lang.Long: ...
	@overload
	def getID(self, ) -> javawrappers.java.lang.Object: ...
	def matches(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...


class ResourceId:
	def equalsExact(self, arg0: javawrappers.org.opengis.filter.identity.FeatureId, ) -> Union[int, JBoolean]: ...
	def getVersion(self, ) -> javawrappers.org.opengis.filter.identity.Version: ...
	def getPreviousRid(self, ) -> javawrappers.java.lang.String: ...
	def getEndTime(self, ) -> javawrappers.java.util.Date: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def equalsFID(self, arg0: javawrappers.org.opengis.filter.identity.FeatureId, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getID(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getID(self, ) -> javawrappers.java.lang.String: ...
	def getStartTime(self, ) -> javawrappers.java.util.Date: ...
	def matches(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getFeatureVersion(self, ) -> javawrappers.java.lang.String: ...
	def getRid(self, ) -> javawrappers.java.lang.String: ...


class GmlObjectId:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getID(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getID(self, ) -> javawrappers.java.lang.Object: ...
	def matches(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...


