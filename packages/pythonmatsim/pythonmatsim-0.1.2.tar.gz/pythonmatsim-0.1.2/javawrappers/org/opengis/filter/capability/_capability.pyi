################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.util
import javawrappers.java.lang
import javawrappers.org.opengis.filter.capability
import javawrappers.org.opengis.parameter
import javawrappers.org.opengis.feature.type

from jpype.types import *
from typing import Union

from typing import overload

class TemporalOperators:
	def getOperators(self, ) -> javawrappers.java.util.Collection: ...
	def getOperator(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.filter.capability.TemporalOperator: ...


class IdCapabilities:
	def hasEID(self, ) -> Union[int, JBoolean]: ...
	def hasFID(self, ) -> Union[int, JBoolean]: ...


class ArithmeticOperators:
	def getFunctions(self, ) -> javawrappers.org.opengis.filter.capability.Functions: ...
	def hasSimpleArithmetic(self, ) -> Union[int, JBoolean]: ...


class SpatialCapabilities:
	def getSpatialOperators(self, ) -> javawrappers.org.opengis.filter.capability.SpatialOperators: ...
	def getGeometryOperands(self, ) -> javawrappers.java.util.Collection: ...


class Functions:
	def getFunctionName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.filter.capability.FunctionName: ...
	def getFunctionNames(self, ) -> javawrappers.java.util.Collection: ...


class FilterCapabilities:
	def getVersion(self, ) -> javawrappers.java.lang.String: ...
	def getTemporalCapabilities(self, ) -> javawrappers.org.opengis.filter.capability.TemporalCapabilities: ...
	def getSpatialCapabilities(self, ) -> javawrappers.org.opengis.filter.capability.SpatialCapabilities: ...
	def getScalarCapabilities(self, ) -> javawrappers.org.opengis.filter.capability.ScalarCapabilities: ...
	def getIdCapabilities(self, ) -> javawrappers.org.opengis.filter.capability.IdCapabilities: ...


class TemporalOperator:
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getTemporalOperands(self, ) -> javawrappers.java.util.Collection: ...


class ComparisonOperators:
	def getOperators(self, ) -> javawrappers.java.util.Collection: ...
	def getOperator(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.filter.capability.Operator: ...


class SpatialOperators:
	def getOperators(self, ) -> javawrappers.java.util.Collection: ...
	def getOperator(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.filter.capability.SpatialOperator: ...


class Operator:
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...


class TemporalCapabilities:
	def getTemporalOperators(self, ) -> javawrappers.org.opengis.filter.capability.TemporalOperators: ...


class SpatialOperator:
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getGeometryOperands(self, ) -> javawrappers.java.util.Collection: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...


class FunctionName:
	def getFunctionName(self, ) -> javawrappers.org.opengis.feature.type.Name: ...
	def getArgumentNames(self, ) -> javawrappers.java.util.List: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getReturn(self, ) -> javawrappers.org.opengis.parameter.Parameter: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getArguments(self, ) -> javawrappers.java.util.List: ...
	def getArgumentCount(self, ) -> Union[int, JInt]: ...


class GeometryOperand:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def get(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.filter.capability.GeometryOperand: ...
	def isGlobal(self, ) -> Union[int, JBoolean]: ...
	def getSeparator(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getNamespaceURI(self, ) -> javawrappers.java.lang.String: ...
	def getLocalPart(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getURI(self, ) -> javawrappers.java.lang.String: ...


class ScalarCapabilities:
	def getComparisonOperators(self, ) -> javawrappers.org.opengis.filter.capability.ComparisonOperators: ...
	def getArithmeticOperators(self, ) -> javawrappers.org.opengis.filter.capability.ArithmeticOperators: ...
	def hasLogicalOperators(self, ) -> Union[int, JBoolean]: ...


