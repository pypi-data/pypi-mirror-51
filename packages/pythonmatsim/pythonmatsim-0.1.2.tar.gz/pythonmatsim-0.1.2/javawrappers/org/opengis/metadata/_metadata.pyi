################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.net
import javawrappers.org.opengis.util
import javawrappers.org.opengis.metadata.distribution
import javawrappers.org.opengis.metadata.maintenance
import javawrappers.org.opengis.metadata.citation
import javawrappers.org.opengis.metadata
import javawrappers.org.opengis.metadata.identification

from jpype.types import *
from typing import Union

from typing import overload

class MetaData:
	def getDataSetUri(self, ) -> javawrappers.java.lang.String: ...
	def getFileIdentifier(self, ) -> javawrappers.java.lang.String: ...
	def getLanguage(self, ) -> javawrappers.java.util.Locale: ...
	def getMetadataMaintenance(self, ) -> javawrappers.org.opengis.metadata.maintenance.MaintenanceInformation: ...
	def getCharacterSet(self, ) -> javawrappers.org.opengis.metadata.identification.CharacterSet: ...
	def getMetadataConstraints(self, ) -> javawrappers.java.util.Collection: ...
	def getIdentificationInfo(self, ) -> javawrappers.java.util.Collection: ...
	def getContentInfo(self, ) -> javawrappers.java.util.Collection: ...
	def getMetadataStandardVersion(self, ) -> javawrappers.java.lang.String: ...
	def getContacts(self, ) -> javawrappers.java.util.Collection: ...
	def getMetadataStandardName(self, ) -> javawrappers.java.lang.String: ...
	def getDateStamp(self, ) -> javawrappers.java.util.Date: ...
	def getHierarchyLevels(self, ) -> javawrappers.java.util.Collection: ...
	def getPortrayalCatalogueInfo(self, ) -> javawrappers.java.util.Collection: ...
	def getReferenceSystemInfo(self, ) -> javawrappers.java.util.Collection: ...
	def getMetadataExtensionInfo(self, ) -> javawrappers.java.util.Collection: ...
	def getSpatialRepresentationInfo(self, ) -> javawrappers.java.util.Collection: ...
	def getDataQualityInfo(self, ) -> javawrappers.java.util.Collection: ...
	def getDistributionInfo(self, ) -> javawrappers.org.opengis.metadata.distribution.Distribution: ...
	def getParentIdentifier(self, ) -> javawrappers.java.lang.String: ...
	def getLocales(self, ) -> javawrappers.java.util.Collection: ...
	def getApplicationSchemaInfo(self, ) -> javawrappers.java.util.Collection: ...
	def getHierarchyLevelNames(self, ) -> javawrappers.java.util.Collection: ...


class Obligation:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.Obligation: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.Obligation, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.Obligation, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class ExtendedElementInformation:
	def getDefinition(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainValue(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getCondition(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainCode(self, ) -> javawrappers.java.lang.Integer: ...
	def getRule(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDataType(self, ) -> javawrappers.org.opengis.metadata.Datatype: ...
	def getShortName(self, ) -> javawrappers.java.lang.String: ...
	def getSources(self, ) -> javawrappers.java.util.Collection: ...
	def getObligation(self, ) -> javawrappers.org.opengis.metadata.Obligation: ...
	def getRationales(self, ) -> javawrappers.java.util.Collection: ...
	def getParentEntity(self, ) -> javawrappers.java.util.Collection: ...
	def getMaximumOccurrence(self, ) -> javawrappers.java.lang.Integer: ...


class Datatype:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.Datatype: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.Datatype, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.Datatype, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class SpatialAttributeSupplement:
	def getFeatureTypeList(self, ) -> javawrappers.java.util.Collection: ...


class FeatureTypeList:
	def getSpatialObject(self, ) -> javawrappers.java.lang.String: ...
	def getSpatialSchemaName(self, ) -> javawrappers.java.lang.String: ...


class MetadataExtensionInformation:
	def getExtensionOnLineResource(self, ) -> javawrappers.org.opengis.metadata.citation.OnLineResource: ...
	def getExtendedElementInformation(self, ) -> javawrappers.java.util.Collection: ...


class PortrayalCatalogueReference:
	def getPortrayalCatalogueCitations(self, ) -> javawrappers.java.util.Collection: ...


class ApplicationSchemaInformation:
	def getSoftwareDevelopmentFileFormat(self, ) -> javawrappers.java.lang.String: ...
	def getName(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def getConstraintLanguage(self, ) -> javawrappers.java.lang.String: ...
	def getSchemaLanguage(self, ) -> javawrappers.java.lang.String: ...
	def getFeatureCatalogueSupplement(self, ) -> javawrappers.org.opengis.metadata.SpatialAttributeSupplement: ...
	def getSoftwareDevelopmentFile(self, ) -> javawrappers.java.net.URI: ...
	def getGraphicsFile(self, ) -> javawrappers.java.net.URI: ...
	def getSchemaAscii(self, ) -> javawrappers.java.net.URI: ...


class Identifier:
	def getAuthority(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def getCode(self, ) -> javawrappers.java.lang.String: ...


