################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.opengis.geometry.primitive
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.metadata.spatial
import javawrappers.org.opengis.util

from jpype.types import *
from typing import Union

from typing import overload

class PixelOrientation:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.spatial.PixelOrientation: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.spatial.PixelOrientation, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.spatial.PixelOrientation, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class Georectified:
	def getCheckPointDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getTransformationDimensionMapping(self, ) -> javawrappers.java.util.Collection: ...
	def getNumberOfDimensions(self, ) -> javawrappers.java.lang.Integer: ...
	def getCellGeometry(self, ) -> javawrappers.org.opengis.metadata.spatial.CellGeometry: ...
	def getCornerPoints(self, ) -> javawrappers.java.util.List: ...
	def isTransformationParameterAvailable(self, ) -> Union[int, JBoolean]: ...
	def getTransformationDimensionDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAxisDimensionsProperties(self, ) -> javawrappers.java.util.List: ...
	def isCheckPointAvailable(self, ) -> Union[int, JBoolean]: ...
	def getCenterPoint(self, ) -> javawrappers.org.opengis.geometry.primitive.Point: ...
	def getPointInPixel(self, ) -> javawrappers.org.opengis.metadata.spatial.PixelOrientation: ...


class SpatialRepresentationType:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.spatial.SpatialRepresentationType: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.spatial.SpatialRepresentationType, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.spatial.SpatialRepresentationType, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class Dimension:
	def getResolution(self, ) -> javawrappers.java.lang.Double: ...
	def getDimensionSize(self, ) -> javawrappers.java.lang.Integer: ...
	def getDimensionName(self, ) -> javawrappers.org.opengis.metadata.spatial.DimensionNameType: ...


class DimensionNameType:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.spatial.DimensionNameType: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.spatial.DimensionNameType, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.spatial.DimensionNameType, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class TopologyLevel:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.spatial.TopologyLevel: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.spatial.TopologyLevel, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.spatial.TopologyLevel, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class VectorSpatialRepresentation:
	def getGeometricObjects(self, ) -> javawrappers.java.util.Collection: ...
	def getTopologyLevel(self, ) -> javawrappers.org.opengis.metadata.spatial.TopologyLevel: ...


class GeometricObjects:
	def getGeometricObjectCount(self, ) -> javawrappers.java.lang.Integer: ...
	def getGeometricObjectType(self, ) -> javawrappers.org.opengis.metadata.spatial.GeometricObjectType: ...


class CellGeometry:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.spatial.CellGeometry: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.spatial.CellGeometry, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.spatial.CellGeometry, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class GridSpatialRepresentation:
	def getNumberOfDimensions(self, ) -> javawrappers.java.lang.Integer: ...
	def getCellGeometry(self, ) -> javawrappers.org.opengis.metadata.spatial.CellGeometry: ...
	def isTransformationParameterAvailable(self, ) -> Union[int, JBoolean]: ...
	def getAxisDimensionsProperties(self, ) -> javawrappers.java.util.List: ...


class SpatialRepresentation:


class GeometricObjectType:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def identifier(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.metadata.spatial.GeometricObjectType: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.CodeList: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.opengis.metadata.spatial.GeometricObjectType, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.org.opengis.util.CodeList, ) -> Union[int, JInt]: ...
	def matches(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.metadata.spatial.GeometricObjectType, 1): ...
	@overload
	def family(self, ) -> JArray(javawrappers.org.opengis.util.CodeList, 1): ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class Georeferenceable:
	def getGeoreferencedParameters(self, ) -> javawrappers.org.opengis.util.Record: ...
	def getParameterCitation(self, ) -> javawrappers.java.util.Collection: ...
	def isControlPointAvailable(self, ) -> Union[int, JBoolean]: ...
	def getNumberOfDimensions(self, ) -> javawrappers.java.lang.Integer: ...
	def getCellGeometry(self, ) -> javawrappers.org.opengis.metadata.spatial.CellGeometry: ...
	def isTransformationParameterAvailable(self, ) -> Union[int, JBoolean]: ...
	def getOrientationParameterDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAxisDimensionsProperties(self, ) -> javawrappers.java.util.List: ...
	def isOrientationParameterAvailable(self, ) -> Union[int, JBoolean]: ...


