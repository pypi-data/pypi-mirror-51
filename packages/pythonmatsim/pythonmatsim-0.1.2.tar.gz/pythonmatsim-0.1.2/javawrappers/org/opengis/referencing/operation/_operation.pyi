################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.util
import javawrappers.org.opengis.geometry
import javawrappers.java.awt.geom
import javawrappers.org.opengis.util
import javawrappers.org.opengis.referencing.operation
import javawrappers.org.opengis.parameter
import javawrappers.org.opengis.referencing.crs
import javawrappers.org.opengis.metadata.extent
import javawrappers.java.awt
import javawrappers.java.lang
import javawrappers.java.io
import javawrappers.org.opengis.referencing
import javawrappers.org.opengis.referencing.cs
import javawrappers.org.opengis.metadata.citation

from jpype.types import *
from typing import Union

from typing import overload

class PassThroughOperation:
	def getSourceCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getTargetCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getMathTransform(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def getCoordinateOperationAccuracy(self, ) -> javawrappers.java.util.Collection: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getOperation(self, ) -> javawrappers.org.opengis.referencing.operation.Operation: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getOperationVersion(self, ) -> javawrappers.java.lang.String: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...
	def getModifiedCoordinates(self, ) -> JArray(Union[int, JInt], 1): ...


class MathTransform1D:
	@overload
	def inverse(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	@overload
	def inverse(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform1D: ...
	@overload
	def transform(self, arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	@overload
	def transform(self, arg0: JArray(Union[float, JFloat], 1), arg1: Union[int, JInt], arg2: JArray(Union[float, JDouble], 1), arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def transform(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, arg1: javawrappers.org.opengis.geometry.DirectPosition, ) -> javawrappers.org.opengis.geometry.DirectPosition: ...
	@overload
	def transform(self, arg0: JArray(Union[float, JDouble], 1), arg1: Union[int, JInt], arg2: JArray(Union[float, JDouble], 1), arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def transform(self, arg0: JArray(Union[float, JDouble], 1), arg1: Union[int, JInt], arg2: JArray(Union[float, JFloat], 1), arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def transform(self, arg0: JArray(Union[float, JFloat], 1), arg1: Union[int, JInt], arg2: JArray(Union[float, JFloat], 1), arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getSourceDimensions(self, ) -> Union[int, JInt]: ...
	def isIdentity(self, ) -> Union[int, JBoolean]: ...
	@overload
	def derivative(self, arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	@overload
	def derivative(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	def getTargetDimensions(self, ) -> Union[int, JInt]: ...


class TransformException:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def getLastCompletedTransform(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setLastCompletedTransform(self, arg0: javawrappers.org.opengis.referencing.operation.MathTransform, ) -> None: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class NoninvertibleTransformException:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Throwable, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def getLastCompletedTransform(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setLastCompletedTransform(self, arg0: javawrappers.org.opengis.referencing.operation.MathTransform, ) -> None: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class OperationMethod:
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getSourceDimensions(self, ) -> Union[int, JInt]: ...
	def getParameters(self, ) -> javawrappers.org.opengis.parameter.ParameterDescriptorGroup: ...
	def getFormula(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getTargetDimensions(self, ) -> Union[int, JInt]: ...


class ConcatenatedOperation:
	def getCoordinateOperationAccuracy(self, ) -> javawrappers.java.util.Collection: ...
	def getSourceCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getOperations(self, ) -> javawrappers.java.util.List: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getOperationVersion(self, ) -> javawrappers.java.lang.String: ...
	def getTargetCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getMathTransform(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class ConicProjection:
	def getParameterValues(self, ) -> javawrappers.org.opengis.parameter.ParameterValueGroup: ...
	def getSourceCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getMethod(self, ) -> javawrappers.org.opengis.referencing.operation.OperationMethod: ...
	def getTargetCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getMathTransform(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def getCoordinateOperationAccuracy(self, ) -> javawrappers.java.util.Collection: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getOperationVersion(self, ) -> javawrappers.java.lang.String: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class MathTransform:
	def inverse(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	@overload
	def transform(self, arg0: JArray(Union[float, JFloat], 1), arg1: Union[int, JInt], arg2: JArray(Union[float, JDouble], 1), arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def transform(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, arg1: javawrappers.org.opengis.geometry.DirectPosition, ) -> javawrappers.org.opengis.geometry.DirectPosition: ...
	@overload
	def transform(self, arg0: JArray(Union[float, JDouble], 1), arg1: Union[int, JInt], arg2: JArray(Union[float, JDouble], 1), arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def transform(self, arg0: JArray(Union[float, JDouble], 1), arg1: Union[int, JInt], arg2: JArray(Union[float, JFloat], 1), arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def transform(self, arg0: JArray(Union[float, JFloat], 1), arg1: Union[int, JInt], arg2: JArray(Union[float, JFloat], 1), arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getSourceDimensions(self, ) -> Union[int, JInt]: ...
	def isIdentity(self, ) -> Union[int, JBoolean]: ...
	def derivative(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	def getTargetDimensions(self, ) -> Union[int, JInt]: ...


class OperationNotFoundException:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Throwable, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class CylindricalProjection:
	def getParameterValues(self, ) -> javawrappers.org.opengis.parameter.ParameterValueGroup: ...
	def getSourceCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getMethod(self, ) -> javawrappers.org.opengis.referencing.operation.OperationMethod: ...
	def getTargetCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getMathTransform(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def getCoordinateOperationAccuracy(self, ) -> javawrappers.java.util.Collection: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getOperationVersion(self, ) -> javawrappers.java.lang.String: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class CoordinateOperationAuthorityFactory:
	def getAuthorityCodes(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def getDescriptionText(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def createCoordinateOperation(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.operation.CoordinateOperation: ...
	def getVendor(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def getAuthority(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def createObject(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.IdentifiedObject: ...
	def createFromCoordinateReferenceSystemCodes(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.util.Set: ...


class MathTransform2D:
	@overload
	def inverse(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	@overload
	def inverse(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform2D: ...
	@overload
	def transform(self, arg0: JArray(Union[float, JFloat], 1), arg1: Union[int, JInt], arg2: JArray(Union[float, JDouble], 1), arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def transform(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, arg1: javawrappers.org.opengis.geometry.DirectPosition, ) -> javawrappers.org.opengis.geometry.DirectPosition: ...
	@overload
	def transform(self, arg0: JArray(Union[float, JDouble], 1), arg1: Union[int, JInt], arg2: JArray(Union[float, JDouble], 1), arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def transform(self, arg0: JArray(Union[float, JDouble], 1), arg1: Union[int, JInt], arg2: JArray(Union[float, JFloat], 1), arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def transform(self, arg0: JArray(Union[float, JFloat], 1), arg1: Union[int, JInt], arg2: JArray(Union[float, JFloat], 1), arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def transform(self, arg0: javawrappers.java.awt.geom.Point2D, arg1: javawrappers.java.awt.geom.Point2D, ) -> javawrappers.java.awt.geom.Point2D: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getSourceDimensions(self, ) -> Union[int, JInt]: ...
	def isIdentity(self, ) -> Union[int, JBoolean]: ...
	@overload
	def derivative(self, arg0: javawrappers.org.opengis.geometry.DirectPosition, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	@overload
	def derivative(self, arg0: javawrappers.java.awt.geom.Point2D, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	def createTransformedShape(self, arg0: javawrappers.java.awt.Shape, ) -> javawrappers.java.awt.Shape: ...
	def getTargetDimensions(self, ) -> Union[int, JInt]: ...


class MathTransformFactory:
	def createAffineTransform(self, arg0: javawrappers.org.opengis.referencing.operation.Matrix, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def createFromWKT(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def createConcatenatedTransform(self, arg0: javawrappers.org.opengis.referencing.operation.MathTransform, arg1: javawrappers.org.opengis.referencing.operation.MathTransform, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def getDefaultParameters(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.parameter.ParameterValueGroup: ...
	def getVendor(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def createFromXML(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def createPassThroughTransform(self, arg0: Union[int, JInt], arg1: javawrappers.org.opengis.referencing.operation.MathTransform, arg2: Union[int, JInt], ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def createBaseToDerived(self, arg0: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, arg1: javawrappers.org.opengis.parameter.ParameterValueGroup, arg2: javawrappers.org.opengis.referencing.cs.CoordinateSystem, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def getLastMethodUsed(self, ) -> javawrappers.org.opengis.referencing.operation.OperationMethod: ...
	def createParameterizedTransform(self, arg0: javawrappers.org.opengis.parameter.ParameterValueGroup, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def getAvailableMethods(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...


class CoordinateOperationFactory:
	def createConcatenatedOperation(self, arg0: javawrappers.java.util.Map, arg1: JArray(javawrappers.org.opengis.referencing.operation.CoordinateOperation, 1), ) -> javawrappers.org.opengis.referencing.operation.CoordinateOperation: ...
	def getVendor(self, ) -> javawrappers.org.opengis.metadata.citation.Citation: ...
	def findOperations(self, arg0: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, arg1: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, ) -> javawrappers.java.util.Set: ...
	@overload
	def createOperation(self, arg0: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, arg1: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, ) -> javawrappers.org.opengis.referencing.operation.CoordinateOperation: ...
	@overload
	def createOperation(self, arg0: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, arg1: javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem, arg2: javawrappers.org.opengis.referencing.operation.OperationMethod, ) -> javawrappers.org.opengis.referencing.operation.CoordinateOperation: ...
	def createDefiningConversion(self, arg0: javawrappers.java.util.Map, arg1: javawrappers.org.opengis.referencing.operation.OperationMethod, arg2: javawrappers.org.opengis.parameter.ParameterValueGroup, ) -> javawrappers.org.opengis.referencing.operation.Conversion: ...


class PlanarProjection:
	def getParameterValues(self, ) -> javawrappers.org.opengis.parameter.ParameterValueGroup: ...
	def getSourceCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getMethod(self, ) -> javawrappers.org.opengis.referencing.operation.OperationMethod: ...
	def getTargetCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getMathTransform(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def getCoordinateOperationAccuracy(self, ) -> javawrappers.java.util.Collection: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getOperationVersion(self, ) -> javawrappers.java.lang.String: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class SingleOperation:
	def getCoordinateOperationAccuracy(self, ) -> javawrappers.java.util.Collection: ...
	def getSourceCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getOperationVersion(self, ) -> javawrappers.java.lang.String: ...
	def getTargetCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getMathTransform(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class Projection:
	def getParameterValues(self, ) -> javawrappers.org.opengis.parameter.ParameterValueGroup: ...
	def getSourceCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getMethod(self, ) -> javawrappers.org.opengis.referencing.operation.OperationMethod: ...
	def getTargetCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getMathTransform(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def getCoordinateOperationAccuracy(self, ) -> javawrappers.java.util.Collection: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getOperationVersion(self, ) -> javawrappers.java.lang.String: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class Transformation:
	def getParameterValues(self, ) -> javawrappers.org.opengis.parameter.ParameterValueGroup: ...
	def getSourceCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getMethod(self, ) -> javawrappers.org.opengis.referencing.operation.OperationMethod: ...
	def getTargetCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getMathTransform(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def getCoordinateOperationAccuracy(self, ) -> javawrappers.java.util.Collection: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getOperationVersion(self, ) -> javawrappers.java.lang.String: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class Operation:
	def getParameterValues(self, ) -> javawrappers.org.opengis.parameter.ParameterValueGroup: ...
	def getSourceCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getMethod(self, ) -> javawrappers.org.opengis.referencing.operation.OperationMethod: ...
	def getTargetCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getMathTransform(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def getCoordinateOperationAccuracy(self, ) -> javawrappers.java.util.Collection: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getOperationVersion(self, ) -> javawrappers.java.lang.String: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class CoordinateOperation:
	def getCoordinateOperationAccuracy(self, ) -> javawrappers.java.util.Collection: ...
	def getSourceCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getOperationVersion(self, ) -> javawrappers.java.lang.String: ...
	def getTargetCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getMathTransform(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class Conversion:
	def getParameterValues(self, ) -> javawrappers.org.opengis.parameter.ParameterValueGroup: ...
	def getSourceCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getName(self, ) -> javawrappers.org.opengis.referencing.ReferenceIdentifier: ...
	def getRemarks(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getMethod(self, ) -> javawrappers.org.opengis.referencing.operation.OperationMethod: ...
	def getTargetCRS(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getMathTransform(self, ) -> javawrappers.org.opengis.referencing.operation.MathTransform: ...
	def getCoordinateOperationAccuracy(self, ) -> javawrappers.java.util.Collection: ...
	def toWKT(self, ) -> javawrappers.java.lang.String: ...
	def getIdentifiers(self, ) -> javawrappers.java.util.Set: ...
	def getAlias(self, ) -> javawrappers.java.util.Collection: ...
	def getOperationVersion(self, ) -> javawrappers.java.lang.String: ...
	def getScope(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	def getDomainOfValidity(self, ) -> javawrappers.org.opengis.metadata.extent.Extent: ...


class Matrix:
	def getNumRow(self, ) -> Union[int, JInt]: ...
	def getElement(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[float, JDouble]: ...
	def isIdentity(self, ) -> Union[int, JBoolean]: ...
	@overload
	def clone(self, ) -> javawrappers.org.opengis.referencing.operation.Matrix: ...
	@overload
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setElement(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[float, JDouble], ) -> None: ...
	def getNumCol(self, ) -> Union[int, JInt]: ...


class IncompatibleOperationException:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getOperationName(self, ) -> javawrappers.java.lang.String: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


