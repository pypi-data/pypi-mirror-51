################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.opengis.feature.simple
import javawrappers.org.opengis.geometry
import javawrappers.org.opengis.feature
import javawrappers.org.opengis.util
import javawrappers.org.opengis.referencing.crs
import javawrappers.org.opengis.filter.identity
import javawrappers.org.opengis.feature.type

from jpype.types import *
from typing import Union

from typing import overload

class SimpleFeatureType:
	@overload
	def getDescriptor(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.feature.type.PropertyDescriptor: ...
	@overload
	def getDescriptor(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.feature.type.AttributeDescriptor: ...
	@overload
	def getDescriptor(self, arg0: javawrappers.org.opengis.feature.type.Name, ) -> javawrappers.org.opengis.feature.type.PropertyDescriptor: ...
	@overload
	def getDescriptor(self, arg0: javawrappers.org.opengis.feature.type.Name, ) -> javawrappers.org.opengis.feature.type.AttributeDescriptor: ...
	@overload
	def getDescriptor(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.feature.type.AttributeDescriptor: ...
	def getName(self, ) -> javawrappers.org.opengis.feature.type.Name: ...
	def getCoordinateReferenceSystem(self, ) -> javawrappers.org.opengis.referencing.crs.CoordinateReferenceSystem: ...
	def getDescriptors(self, ) -> javawrappers.java.util.Collection: ...
	def getAttributeCount(self, ) -> Union[int, JInt]: ...
	def getAttributeDescriptors(self, ) -> javawrappers.java.util.List: ...
	@overload
	def getSuper(self, ) -> javawrappers.org.opengis.feature.type.AttributeType: ...
	@overload
	def getSuper(self, ) -> javawrappers.org.opengis.feature.type.PropertyType: ...
	def isAbstract(self, ) -> Union[int, JBoolean]: ...
	def getDescription(self, ) -> javawrappers.org.opengis.util.InternationalString: ...
	@overload
	def getType(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.feature.type.AttributeType: ...
	@overload
	def getType(self, arg0: javawrappers.org.opengis.feature.type.Name, ) -> javawrappers.org.opengis.feature.type.AttributeType: ...
	@overload
	def getType(self, arg0: Union[int, JInt], ) -> javawrappers.org.opengis.feature.type.AttributeType: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getBinding(self, ) -> javawrappers.java.lang.Class: ...
	def isIdentified(self, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isInline(self, ) -> Union[int, JBoolean]: ...
	def getUserData(self, ) -> javawrappers.java.util.Map: ...
	def getTypes(self, ) -> javawrappers.java.util.List: ...
	def getTypeName(self, ) -> javawrappers.java.lang.String: ...
	def getRestrictions(self, ) -> javawrappers.java.util.List: ...
	@overload
	def indexOf(self, arg0: javawrappers.org.opengis.feature.type.Name, ) -> Union[int, JInt]: ...
	@overload
	def indexOf(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JInt]: ...
	def getGeometryDescriptor(self, ) -> javawrappers.org.opengis.feature.type.GeometryDescriptor: ...


class SimpleFeature:
	@overload
	def getDescriptor(self, ) -> javawrappers.org.opengis.feature.type.AttributeDescriptor: ...
	@overload
	def getDescriptor(self, ) -> javawrappers.org.opengis.feature.type.PropertyDescriptor: ...
	def getName(self, ) -> javawrappers.org.opengis.feature.type.Name: ...
	@overload
	def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.opengis.feature.Property: ...
	@overload
	def getProperty(self, arg0: javawrappers.org.opengis.feature.type.Name, ) -> javawrappers.org.opengis.feature.Property: ...
	def getAttributes(self, ) -> javawrappers.java.util.List: ...
	def getFeatureType(self, ) -> javawrappers.org.opengis.feature.simple.SimpleFeatureType: ...
	@overload
	def getProperties(self, ) -> javawrappers.java.util.Collection: ...
	@overload
	def getProperties(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Collection: ...
	@overload
	def getProperties(self, arg0: javawrappers.org.opengis.feature.type.Name, ) -> javawrappers.java.util.Collection: ...
	def setDefaultGeometry(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def getID(self, ) -> javawrappers.java.lang.String: ...
	def getAttributeCount(self, ) -> Union[int, JInt]: ...
	@overload
	def setAttributes(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	@overload
	def setAttributes(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def isNillable(self, ) -> Union[int, JBoolean]: ...
	def getBounds(self, ) -> javawrappers.org.opengis.geometry.BoundingBox: ...
	@overload
	def getValue(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getValue(self, ) -> javawrappers.java.util.Collection: ...
	@overload
	def setAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def setAttribute(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def setAttribute(self, arg0: javawrappers.org.opengis.feature.type.Name, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def getAttribute(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	@overload
	def getAttribute(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getAttribute(self, arg0: javawrappers.org.opengis.feature.type.Name, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getType(self, ) -> javawrappers.org.opengis.feature.type.AttributeType: ...
	@overload
	def getType(self, ) -> javawrappers.org.opengis.feature.type.ComplexType: ...
	@overload
	def getType(self, ) -> javawrappers.org.opengis.feature.type.PropertyType: ...
	@overload
	def getType(self, ) -> javawrappers.org.opengis.feature.type.FeatureType: ...
	@overload
	def getType(self, ) -> javawrappers.org.opengis.feature.simple.SimpleFeatureType: ...
	@overload
	def getIdentifier(self, ) -> javawrappers.org.opengis.filter.identity.Identifier: ...
	@overload
	def getIdentifier(self, ) -> javawrappers.org.opengis.filter.identity.FeatureId: ...
	@overload
	def setValue(self, arg0: javawrappers.java.util.Collection, ) -> None: ...
	@overload
	def setValue(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def setDefaultGeometryProperty(self, arg0: javawrappers.org.opengis.feature.GeometryAttribute, ) -> None: ...
	def getUserData(self, ) -> javawrappers.java.util.Map: ...
	def getDefaultGeometryProperty(self, ) -> javawrappers.org.opengis.feature.GeometryAttribute: ...
	def validate(self, ) -> None: ...
	def getDefaultGeometry(self, ) -> javawrappers.java.lang.Object: ...


