################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.ejml.data

from jpype.types import *
from typing import Union

from typing import overload

class ImplCommonOps_DDRM:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def extract(arg0: javawrappers.org.ejml.data.DMatrixRMaj, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.org.ejml.data.DMatrixRMaj, arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JInt], arg7: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class TransposeAlgs_DDRM:
	def __init__(self, ): ...
	@staticmethod
	def standard(arg0: javawrappers.org.ejml.data.DMatrix1Row, arg1: javawrappers.org.ejml.data.DMatrix1Row, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@staticmethod
	def square(arg0: javawrappers.org.ejml.data.DMatrix1Row, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def block(arg0: javawrappers.org.ejml.data.DMatrix1Row, arg1: javawrappers.org.ejml.data.DMatrix1Row, arg2: Union[int, JInt], ) -> None: ...
	def notify(self, ) -> None: ...


class DeterminantFromMinor_DDRM:
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ): ...
	def compute(self, arg0: javawrappers.org.ejml.data.DMatrix1Row, ) -> Union[float, JDouble]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class RrefGaussJordanRowPivot_DDRM:
	def __init__(self, ): ...
	@overload
	def reduce(self, arg0: javawrappers.org.ejml.data.Matrix, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def reduce(self, arg0: javawrappers.org.ejml.data.DMatrixRMaj, arg1: Union[int, JInt], ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def setTolerance(self, arg0: Union[float, JDouble], ) -> None: ...


class UnrolledInverseFromMinor_DDRM:
	def __init__(self, ): ...
	@staticmethod
	def inv(arg0: javawrappers.org.ejml.data.DMatrixRMaj, arg1: javawrappers.org.ejml.data.DMatrixRMaj, ) -> None: ...
	@staticmethod
	def inv2(arg0: javawrappers.org.ejml.data.DMatrixRMaj, arg1: javawrappers.org.ejml.data.DMatrixRMaj, arg2: Union[float, JDouble], ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def inv4(arg0: javawrappers.org.ejml.data.DMatrixRMaj, arg1: javawrappers.org.ejml.data.DMatrixRMaj, arg2: Union[float, JDouble], ) -> None: ...
	@staticmethod
	def inv3(arg0: javawrappers.org.ejml.data.DMatrixRMaj, arg1: javawrappers.org.ejml.data.DMatrixRMaj, arg2: Union[float, JDouble], ) -> None: ...
	@staticmethod
	def inv5(arg0: javawrappers.org.ejml.data.DMatrixRMaj, arg1: javawrappers.org.ejml.data.DMatrixRMaj, arg2: Union[float, JDouble], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class UnrolledDeterminantFromMinor_DDRM:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@staticmethod
	def det2(arg0: javawrappers.org.ejml.data.DMatrix1Row, ) -> Union[float, JDouble]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def det(arg0: javawrappers.org.ejml.data.DMatrix1Row, ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def det5(arg0: javawrappers.org.ejml.data.DMatrix1Row, ) -> Union[float, JDouble]: ...
	@staticmethod
	def det6(arg0: javawrappers.org.ejml.data.DMatrix1Row, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def det3(arg0: javawrappers.org.ejml.data.DMatrix1Row, ) -> Union[float, JDouble]: ...
	@staticmethod
	def det4(arg0: javawrappers.org.ejml.data.DMatrix1Row, ) -> Union[float, JDouble]: ...


class ImplCommonOps_DDMA:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def extract(arg0: javawrappers.org.ejml.data.DMatrix, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.org.ejml.data.DMatrix, arg4: Union[int, JInt], arg5: Union[int, JInt], arg6: Union[int, JInt], arg7: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


