################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.ejml.data

from jpype.types import *
from typing import Union

from typing import overload

class InnerCholesky_DDRB:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def lower(arg0: JArray(Union[float, JDouble], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def lower(arg0: javawrappers.org.ejml.data.DSubmatrixD1, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def upper(arg0: JArray(Union[float, JDouble], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def upper(arg0: javawrappers.org.ejml.data.DSubmatrixD1, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class CholeskyOuterForm_DDRB:
	def __init__(self, arg0: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def decompose(self, arg0: javawrappers.org.ejml.data.Matrix, ) -> Union[int, JBoolean]: ...
	@overload
	def decompose(self, arg0: javawrappers.org.ejml.data.DMatrixRBlock, ) -> Union[int, JBoolean]: ...
	def isLower(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def inputModified(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	@overload
	def getT(self, arg0: javawrappers.org.ejml.data.DMatrixRBlock, ) -> javawrappers.org.ejml.data.DMatrixRBlock: ...
	@overload
	def getT(self, arg0: javawrappers.org.ejml.data.Matrix, ) -> javawrappers.org.ejml.data.Matrix: ...
	def computeDeterminant(self, ) -> javawrappers.org.ejml.data.Complex_F64: ...


