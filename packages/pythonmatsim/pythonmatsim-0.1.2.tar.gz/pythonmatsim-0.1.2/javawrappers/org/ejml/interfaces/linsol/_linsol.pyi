################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.ejml.interfaces.decomposition
import javawrappers.org.ejml.data

from jpype.types import *
from typing import Union

from typing import overload

class LinearSolver:
	def getDecomposition(self, ) -> javawrappers.org.ejml.interfaces.decomposition.DecompositionInterface: ...
	def solve(self, arg0: javawrappers.org.ejml.data.Matrix, arg1: javawrappers.org.ejml.data.Matrix, ) -> None: ...
	def modifiesA(self, ) -> Union[int, JBoolean]: ...
	def modifiesB(self, ) -> Union[int, JBoolean]: ...
	def setA(self, arg0: javawrappers.org.ejml.data.Matrix, ) -> Union[int, JBoolean]: ...
	def quality(self, ) -> Union[float, JDouble]: ...


class ReducedRowEchelonForm_F64:
	def reduce(self, arg0: javawrappers.org.ejml.data.Matrix, arg1: Union[int, JInt], ) -> None: ...
	def setTolerance(self, arg0: Union[float, JDouble], ) -> None: ...


class LinearSolverDense:
	def getDecomposition(self, ) -> javawrappers.org.ejml.interfaces.decomposition.DecompositionInterface: ...
	def invert(self, arg0: javawrappers.org.ejml.data.Matrix, ) -> None: ...
	def solve(self, arg0: javawrappers.org.ejml.data.Matrix, arg1: javawrappers.org.ejml.data.Matrix, ) -> None: ...
	def modifiesA(self, ) -> Union[int, JBoolean]: ...
	def modifiesB(self, ) -> Union[int, JBoolean]: ...
	def setA(self, arg0: javawrappers.org.ejml.data.Matrix, ) -> Union[int, JBoolean]: ...
	def quality(self, ) -> Union[float, JDouble]: ...


class ReducedRowEchelonForm:
	def reduce(self, arg0: javawrappers.org.ejml.data.Matrix, arg1: Union[int, JInt], ) -> None: ...


class ReducedRowEchelonForm_F32:
	def reduce(self, arg0: javawrappers.org.ejml.data.Matrix, arg1: Union[int, JInt], ) -> None: ...
	def setTolerance(self, arg0: Union[float, JFloat], ) -> None: ...


class LinearSolverSparse:
	def getDecomposition(self, ) -> javawrappers.org.ejml.interfaces.decomposition.DecompositionInterface: ...
	def solve(self, arg0: javawrappers.org.ejml.data.Matrix, arg1: javawrappers.org.ejml.data.Matrix, ) -> None: ...
	def isStructureLocked(self, ) -> Union[int, JBoolean]: ...
	def lockStructure(self, ) -> None: ...
	def modifiesA(self, ) -> Union[int, JBoolean]: ...
	def modifiesB(self, ) -> Union[int, JBoolean]: ...
	def setA(self, arg0: javawrappers.org.ejml.data.Matrix, ) -> Union[int, JBoolean]: ...
	def quality(self, ) -> Union[float, JDouble]: ...


