################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.javax.validation.metadata
import javawrappers.javax.validation

from jpype.types import *
from typing import Union

from typing import overload

class ParameterMessageInterpolator:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def interpolate(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.MessageInterpolator.Context, arg2: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	@overload
	def interpolate(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.MessageInterpolator.Context, ) -> javawrappers.java.lang.String: ...
	@overload
	def interpolate(self, arg0: javawrappers.javax.validation.MessageInterpolator.Context, arg1: javawrappers.java.util.Locale, arg2: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class HibernateMessageInterpolatorContext:
	def getMessageParameters(self, ) -> javawrappers.java.util.Map: ...
	def getExpressionVariables(self, ) -> javawrappers.java.util.Map: ...
	def getConstraintDescriptor(self, ) -> javawrappers.javax.validation.metadata.ConstraintDescriptor: ...
	def getRootBeanType(self, ) -> javawrappers.java.lang.Class: ...
	def getValidatedValue(self, ) -> javawrappers.java.lang.Object: ...
	def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...


class ResourceBundleMessageInterpolator:
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.spi.resourceloading.ResourceBundleLocator, arg1: Union[int, JBoolean], arg2: javawrappers.javax.el.ExpressionFactory, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.spi.resourceloading.ResourceBundleLocator, arg1: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.spi.resourceloading.ResourceBundleLocator, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.spi.resourceloading.ResourceBundleLocator, arg1: javawrappers.org.hibernate.validator.spi.resourceloading.ResourceBundleLocator, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.spi.resourceloading.ResourceBundleLocator, arg1: javawrappers.org.hibernate.validator.spi.resourceloading.ResourceBundleLocator, arg2: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def interpolate(self, arg0: javawrappers.javax.validation.MessageInterpolator.Context, arg1: javawrappers.java.util.Locale, arg2: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def interpolate(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.MessageInterpolator.Context, arg2: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	@overload
	def interpolate(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.MessageInterpolator.Context, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class AbstractMessageInterpolator:
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.spi.resourceloading.ResourceBundleLocator, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.spi.resourceloading.ResourceBundleLocator, arg1: javawrappers.org.hibernate.validator.spi.resourceloading.ResourceBundleLocator, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.spi.resourceloading.ResourceBundleLocator, arg1: javawrappers.org.hibernate.validator.spi.resourceloading.ResourceBundleLocator, arg2: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def interpolate(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.MessageInterpolator.Context, arg2: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	@overload
	def interpolate(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.MessageInterpolator.Context, ) -> javawrappers.java.lang.String: ...
	@overload
	def interpolate(self, arg0: javawrappers.javax.validation.MessageInterpolator.Context, arg1: javawrappers.java.util.Locale, arg2: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


