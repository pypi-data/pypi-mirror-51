################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.hibernate.validator.internal.metadata.core
import javawrappers.org.hibernate.validator.internal.metadata.raw
import javawrappers.org.hibernate.validator.internal.metadata.location

from jpype.types import *
from typing import Union

from typing import overload

class XmlMetaDataProvider:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg1: javawrappers.org.hibernate.validator.internal.util.TypeResolutionHelper, arg2: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg3: javawrappers.java.util.Set, arg4: javawrappers.java.lang.ClassLoader, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAnnotationProcessingOptions(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.core.AnnotationProcessingOptions: ...
	def getBeanConfiguration(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.BeanConfiguration: ...
	def notify(self, ) -> None: ...


class AnnotationMetaDataProvider:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg1: javawrappers.org.hibernate.validator.internal.util.TypeResolutionHelper, arg2: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg3: javawrappers.org.hibernate.validator.internal.metadata.core.AnnotationProcessingOptions, ): ...
	class NestedTypeArgumentLocation:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def toConstraintLocation(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class TypeArgumentReturnValueLocation:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def toConstraintLocation(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class TypeArgumentFieldLocation:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def toConstraintLocation(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class TypeArgumentExecutableParameterLocation:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def toConstraintLocation(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class TypeArgumentLocation:
		def toConstraintLocation(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def toConstraintLocation(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
	@overload
	def toConstraintLocation(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
	@overload
	def toConstraintLocation(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
	@overload
	def toConstraintLocation(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
	@overload
	def toConstraintLocation(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAnnotationProcessingOptions(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.core.AnnotationProcessingOptions: ...
	def getBeanConfiguration(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.BeanConfiguration: ...
	def notify(self, ) -> None: ...


class MetaDataProvider:
	def getAnnotationProcessingOptions(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.core.AnnotationProcessingOptions: ...
	def getBeanConfiguration(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.BeanConfiguration: ...


class ProgrammaticMetaDataProvider:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg1: javawrappers.org.hibernate.validator.internal.util.TypeResolutionHelper, arg2: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg3: javawrappers.java.util.Set, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAnnotationProcessingOptions(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.core.AnnotationProcessingOptions: ...
	def getBeanConfiguration(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.metadata.raw.BeanConfiguration: ...
	def notify(self, ) -> None: ...


