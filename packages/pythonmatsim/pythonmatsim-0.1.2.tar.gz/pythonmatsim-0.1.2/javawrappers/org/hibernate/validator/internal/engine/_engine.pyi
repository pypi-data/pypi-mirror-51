################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.util
import javawrappers.org.hibernate.validator.spi.cfg
import javawrappers.org.hibernate.validator.constraintvalidation
import javawrappers.org.hibernate.validator.spi.scripting
import javawrappers.java.lang.annotation
import javawrappers.org.hibernate.validator.internal.engine.constraintvalidation
import javawrappers.javax.validation.metadata
import javawrappers.org.hibernate.validator
import javawrappers.java.time
import javawrappers.org.hibernate.validator.cfg
import javawrappers.org.hibernate.validator.internal.metadata.aggregated
import javawrappers.java.lang.reflect
import javawrappers.org.hibernate.validator.internal.metadata.facets
import javawrappers.org.hibernate.validator.internal.metadata
import javawrappers.org.hibernate.validator.spi.resourceloading
import javawrappers.javax.validation.valueextraction
import javawrappers.org.hibernate.validator.internal.cfg.context
import javawrappers.org.hibernate.validator.internal.engine
import javawrappers.org.hibernate.validator.internal.metadata.location
import javawrappers.java.lang
import javawrappers.org.hibernate.validator.internal.metadata.core
import javawrappers.java.io
import javawrappers.org.hibernate.validator.internal.engine.path
import javawrappers.org.hibernate.validator.internal.util
import javawrappers.javax.validation.executable
import javawrappers.javax.validation

from jpype.types import *
from typing import Union

from typing import overload

class DefaultParameterNameProvider:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def getParameterNames(self, arg0: javawrappers.java.lang.reflect.Method, ) -> javawrappers.java.util.List: ...
	@overload
	def getParameterNames(self, arg0: javawrappers.java.lang.reflect.Constructor, ) -> javawrappers.java.util.List: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class MessageInterpolatorContext:
	def __init__(self, arg0: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Class, arg3: javawrappers.java.util.Map, arg4: javawrappers.java.util.Map, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getMessageParameters(self, ) -> javawrappers.java.util.Map: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getExpressionVariables(self, ) -> javawrappers.java.util.Map: ...
	def getRootBeanType(self, ) -> javawrappers.java.lang.Class: ...
	def getConstraintDescriptor(self, ) -> javawrappers.javax.validation.metadata.ConstraintDescriptor: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getValidatedValue(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...


class ValueContext:
	class ValueState:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getCurrentValidatable(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.facets.Validatable: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def appendNode(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.facets.Cascadable, ) -> None: ...
	@overload
	def appendNode(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def appendTypeParameterNode(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getCurrentValidatedValue(self, ) -> javawrappers.java.lang.Object: ...
	def setTypeParameter(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Integer, ) -> None: ...
	def validatingDefault(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getCurrentBeanMetaData(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.BeanMetaData: ...
	def getCurrentGroup(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def getLocalExecutionContext(arg0: javawrappers.org.hibernate.validator.internal.metadata.BeanMetaDataManager, arg1: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg2: javawrappers.java.lang.Object, arg3: javawrappers.org.hibernate.validator.internal.metadata.facets.Validatable, arg4: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ) -> javawrappers.org.hibernate.validator.internal.engine.ValueContext: ...
	@overload
	@staticmethod
	def getLocalExecutionContext(arg0: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg1: javawrappers.java.lang.Object, arg2: javawrappers.org.hibernate.validator.internal.metadata.aggregated.BeanMetaData, arg3: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ) -> javawrappers.org.hibernate.validator.internal.engine.ValueContext: ...
	@overload
	@staticmethod
	def getLocalExecutionContext(arg0: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg1: javawrappers.java.lang.Class, arg2: javawrappers.org.hibernate.validator.internal.metadata.aggregated.BeanMetaData, arg3: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ) -> javawrappers.org.hibernate.validator.internal.engine.ValueContext: ...
	@overload
	@staticmethod
	def getLocalExecutionContext(arg0: javawrappers.org.hibernate.validator.internal.metadata.BeanMetaDataManager, arg1: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg2: javawrappers.java.lang.Class, arg3: javawrappers.org.hibernate.validator.internal.metadata.facets.Validatable, arg4: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ) -> javawrappers.org.hibernate.validator.internal.engine.ValueContext: ...
	def getCurrentBeanType(self, ) -> javawrappers.java.lang.Class: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setCurrentValidatedValue(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def markCurrentPropertyAsIterableAndSetIndex(self, arg0: javawrappers.java.lang.Integer, ) -> None: ...
	def getCurrentValueState(self, ) -> javawrappers.org.hibernate.validator.internal.engine.ValueContext.ValueState: ...
	def getElementType(self, ) -> javawrappers.java.lang.annotation.ElementType: ...
	def markCurrentPropertyAsIterable(self, ) -> None: ...
	def markCurrentPropertyAsIterableAndSetKey(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def getValue(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation, ) -> javawrappers.java.lang.Object: ...
	def setElementType(self, arg0: javawrappers.java.lang.annotation.ElementType, ) -> None: ...
	def resetValueState(self, arg0: javawrappers.org.hibernate.validator.internal.engine.ValueContext.ValueState, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getCurrentBean(self, ) -> javawrappers.java.lang.Object: ...
	def getPropertyPath(self, ) -> javawrappers.org.hibernate.validator.internal.engine.path.PathImpl: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setCurrentGroup(self, arg0: javawrappers.java.lang.Class, ) -> None: ...


class ValidationContext:
	class ValidationOperation:
		BEAN_VALIDATION: ValidationContext.ValidationOperation = ...
		PROPERTY_VALIDATION: ValidationContext.ValidationOperation = ...
		VALUE_VALIDATION: ValidationContext.ValidationOperation = ...
		PARAMETER_VALIDATION: ValidationContext.ValidationOperation = ...
		RETURN_VALUE_VALIDATION: ValidationContext.ValidationOperation = ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidationContext.ValidationOperation: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@staticmethod
		def values() -> JArray(javawrappers.org.hibernate.validator.internal.engine.ValidationContext.ValidationOperation, 1): ...
		def name(self, ) -> javawrappers.java.lang.String: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def ordinal(self, ) -> Union[int, JInt]: ...


	class ValidatorScopedContext:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def isFailFast(self, ) -> Union[int, JBoolean]: ...
		def notify(self, ) -> None: ...
		def getParameterNameProvider(self, ) -> javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider: ...
		def getClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...
		def getConstraintValidatorPayload(self, ) -> javawrappers.java.lang.Object: ...
		def getTemporalValidationTolerance(self, ) -> javawrappers.java.time.Duration: ...
		def getMessageInterpolator(self, ) -> javawrappers.javax.validation.MessageInterpolator: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def isTraversableResolverResultCacheEnabled(self, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getScriptEvaluatorFactory(self, ) -> javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory: ...


	class BeanPathMetaConstraintProcessedUnit:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class BeanGroupProcessedUnit:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class ValidationContextBuilder:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def forValidateProperty(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidationContext: ...
		def forValidateValue(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidationContext: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def forValidateParameters(self, arg0: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.reflect.Executable, arg3: JArray(javawrappers.java.lang.Object, 1), ) -> javawrappers.org.hibernate.validator.internal.engine.ValidationContext: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def forValidate(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidationContext: ...
		def notify(self, ) -> None: ...
		def forValidateReturnValue(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.reflect.Executable, arg2: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidationContext: ...


	def getConstraintValidatorFactory(self, ) -> javawrappers.javax.validation.ConstraintValidatorFactory: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def createConstraintViolations(self, arg0: javawrappers.org.hibernate.validator.internal.engine.ValueContext, arg1: javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorContextImpl, ) -> javawrappers.java.util.Set: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def forValidateProperty(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidationContext: ...
	def forValidateParameters(self, arg0: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.reflect.Executable, arg3: JArray(javawrappers.java.lang.Object, 1), ) -> javawrappers.org.hibernate.validator.internal.engine.ValidationContext: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.hibernate.validator.internal.engine.ValidationContext.ValidationOperation, 1): ...
	def notifyAll(self, ) -> None: ...
	def getValidatedProperty(self, ) -> javawrappers.java.lang.String: ...
	def getConstraintValidatorManager(self, ) -> javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorManager: ...
	def isFailFast(self, ) -> Union[int, JBoolean]: ...
	def getRootBean(self, ) -> javawrappers.java.lang.Object: ...
	def createConstraintViolation(self, arg0: javawrappers.org.hibernate.validator.internal.engine.ValueContext, arg1: javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintViolationCreationContext, arg2: javawrappers.javax.validation.metadata.ConstraintDescriptor, ) -> javawrappers.javax.validation.ConstraintViolation: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def isBeanAlreadyValidated(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Class, arg2: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def forValidateReturnValue(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.reflect.Executable, arg2: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidationContext: ...
	def getRootBeanClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def getClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...
	@overload
	def getClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def getExecutableMetaData(self, ) -> javawrappers.java.util.Optional: ...
	def getTemporalValidationTolerance(self, ) -> javawrappers.java.time.Duration: ...
	@staticmethod
	def getValidationContextBuilder(arg0: javawrappers.org.hibernate.validator.internal.metadata.BeanMetaDataManager, arg1: javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorManager, arg2: javawrappers.javax.validation.ConstraintValidatorFactory, arg3: javawrappers.org.hibernate.validator.internal.engine.ValidationContext.ValidatorScopedContext, arg4: javawrappers.javax.validation.TraversableResolver, arg5: javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidationContext.ValidationContextBuilder: ...
	def getMessageInterpolator(self, ) -> javawrappers.javax.validation.MessageInterpolator: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	def isTraversableResolverResultCacheEnabled(self, ) -> Union[int, JBoolean]: ...
	def addConstraintFailures(self, arg0: javawrappers.java.util.Set, ) -> None: ...
	def setValidatedProperty(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getRootBeanMetaData(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.aggregated.BeanMetaData: ...
	def getTraversableResolver(self, ) -> javawrappers.javax.validation.TraversableResolver: ...
	def forValidateValue(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidationContext: ...
	def getExecutable(self, ) -> javawrappers.java.lang.reflect.Executable: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidationContext.ValidationOperation: ...
	def getFailingConstraints(self, ) -> javawrappers.java.util.Set: ...
	def forValidate(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidationContext: ...
	def hasMetaConstraintBeenProcessed(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.Path, arg2: javawrappers.org.hibernate.validator.internal.metadata.core.MetaConstraint, ) -> Union[int, JBoolean]: ...
	def markCurrentBeanAsProcessed(self, arg0: javawrappers.org.hibernate.validator.internal.engine.ValueContext, ) -> None: ...
	def getParameterNameProvider(self, ) -> javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider: ...
	@overload
	def getConstraintValidatorPayload(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getConstraintValidatorPayload(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getConstraintValidatorInitializationContext(self, ) -> javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def isFailFastModeEnabled(self, ) -> Union[int, JBoolean]: ...
	def getParameterNames(self, ) -> javawrappers.java.util.List: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getScriptEvaluatorFactory(self, ) -> javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory: ...
	def markConstraintProcessed(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.Path, arg2: javawrappers.org.hibernate.validator.internal.metadata.core.MetaConstraint, ) -> None: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class ValidatorFactoryImpl:
	def __init__(self, arg0: javawrappers.javax.validation.spi.ConfigurationState, ): ...
	class ValidatorFactoryScopedContext:
		class Builder:
			def setConstraintValidatorPayload(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
			def getClass(self, ) -> javawrappers.java.lang.Class: ...
			def setClockProvider(self, arg0: javawrappers.javax.validation.ClockProvider, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
			@overload
			def wait(self, arg0: Union[long, JLong], ) -> None: ...
			@overload
			def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
			@overload
			def wait(self, ) -> None: ...
			def notifyAll(self, ) -> None: ...
			def setScriptEvaluatorFactory(self, arg0: javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
			def notify(self, ) -> None: ...
			def setParameterNameProvider(self, arg0: javawrappers.javax.validation.ParameterNameProvider, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
			def setTraversableResolver(self, arg0: javawrappers.javax.validation.TraversableResolver, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
			def build(self, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext: ...
			def hashCode(self, ) -> Union[int, JInt]: ...
			def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
			def setTemporalValidationTolerance(self, arg0: javawrappers.java.time.Duration, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
			def setTraversableResolverResultCacheEnabled(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
			def toString(self, ) -> javawrappers.java.lang.String: ...
			def setFailFast(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
			def setMessageInterpolator(self, arg0: javawrappers.javax.validation.MessageInterpolator, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...


		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def isFailFast(self, ) -> Union[int, JBoolean]: ...
		def setScriptEvaluatorFactory(self, arg0: javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
		def notify(self, ) -> None: ...
		def getClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...
		def setTraversableResolver(self, arg0: javawrappers.javax.validation.TraversableResolver, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
		def getTemporalValidationTolerance(self, ) -> javawrappers.java.time.Duration: ...
		def getMessageInterpolator(self, ) -> javawrappers.javax.validation.MessageInterpolator: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def isTraversableResolverResultCacheEnabled(self, ) -> Union[int, JBoolean]: ...
		def setTraversableResolverResultCacheEnabled(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
		def setFailFast(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
		def setMessageInterpolator(self, arg0: javawrappers.javax.validation.MessageInterpolator, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
		def setConstraintValidatorPayload(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
		def setClockProvider(self, arg0: javawrappers.javax.validation.ClockProvider, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
		def getTraversableResolver(self, ) -> javawrappers.javax.validation.TraversableResolver: ...
		def getParameterNameProvider(self, ) -> javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider: ...
		def setParameterNameProvider(self, arg0: javawrappers.javax.validation.ParameterNameProvider, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
		def getConstraintValidatorPayload(self, ) -> javawrappers.java.lang.Object: ...
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext: ...
		def setTemporalValidationTolerance(self, arg0: javawrappers.java.time.Duration, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def getConstraintValidatorInitializationContext(self, ) -> javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getScriptEvaluatorFactory(self, ) -> javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory: ...


	class BeanMetaDataManagerKey:
		def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider, arg1: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg2: javawrappers.org.hibernate.validator.internal.engine.MethodValidationConfiguration, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class DefaultConstraintMappingBuilder:
		def __init__(self, arg0: javawrappers.java.util.Set, ): ...
		def addConstraintMapping(self, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintMapping: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def addConstraintMapping(self, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintMapping: ...
	def getConstraintValidatorFactory(self, ) -> javawrappers.javax.validation.ConstraintValidatorFactory: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def isFailFast(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isFailFast(self, ) -> Union[int, JBoolean]: ...
	def setScriptEvaluatorFactory(self, arg0: javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
	def notify(self, ) -> None: ...
	def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...
	@overload
	def getClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...
	def getValidatorFactoryScopedContext(self, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext: ...
	def setTraversableResolver(self, arg0: javawrappers.javax.validation.TraversableResolver, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
	@overload
	def getTemporalValidationTolerance(self, ) -> javawrappers.java.time.Duration: ...
	@overload
	def getTemporalValidationTolerance(self, ) -> javawrappers.java.time.Duration: ...
	@overload
	def getMessageInterpolator(self, ) -> javawrappers.javax.validation.MessageInterpolator: ...
	@overload
	def getMessageInterpolator(self, ) -> javawrappers.javax.validation.MessageInterpolator: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def isTraversableResolverResultCacheEnabled(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isTraversableResolverResultCacheEnabled(self, ) -> Union[int, JBoolean]: ...
	def getExecutableParameterNameProvider(self, ) -> javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider: ...
	def setTraversableResolverResultCacheEnabled(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
	def setFailFast(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
	def getValidator(self, ) -> javawrappers.javax.validation.Validator: ...
	def close(self, ) -> None: ...
	def setMessageInterpolator(self, arg0: javawrappers.javax.validation.MessageInterpolator, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
	def setConstraintValidatorPayload(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
	def setClockProvider(self, arg0: javawrappers.javax.validation.ClockProvider, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
	@overload
	def getTraversableResolver(self, ) -> javawrappers.javax.validation.TraversableResolver: ...
	@overload
	def getTraversableResolver(self, ) -> javawrappers.javax.validation.TraversableResolver: ...
	@overload
	def getParameterNameProvider(self, ) -> javawrappers.org.hibernate.validator.internal.util.ExecutableParameterNameProvider: ...
	@overload
	def getParameterNameProvider(self, ) -> javawrappers.javax.validation.ParameterNameProvider: ...
	def setParameterNameProvider(self, arg0: javawrappers.javax.validation.ParameterNameProvider, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
	def getConstraintValidatorPayload(self, ) -> javawrappers.java.lang.Object: ...
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext: ...
	def setTemporalValidationTolerance(self, arg0: javawrappers.java.time.Duration, ) -> javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext.Builder: ...
	def getConstraintValidatorInitializationContext(self, ) -> javawrappers.org.hibernate.validator.constraintvalidation.HibernateConstraintValidatorInitializationContext: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def usingContext(self, ) -> javawrappers.javax.validation.ValidatorContext: ...
	@overload
	def usingContext(self, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getScriptEvaluatorFactory(self, ) -> javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory: ...
	@overload
	def getScriptEvaluatorFactory(self, ) -> javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory: ...


class ConstraintViolationImpl:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDynamicPayload(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def forBeanValidation(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Map, arg2: javawrappers.java.util.Map, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Class, arg5: javawrappers.java.lang.Object, arg6: javawrappers.java.lang.Object, arg7: javawrappers.java.lang.Object, arg8: javawrappers.javax.validation.Path, arg9: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg10: javawrappers.java.lang.annotation.ElementType, arg11: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintViolation: ...
	def getConstraintDescriptor(self, ) -> javawrappers.javax.validation.metadata.ConstraintDescriptor: ...
	def notifyAll(self, ) -> None: ...
	def getInvalidValue(self, ) -> javawrappers.java.lang.Object: ...
	def getRootBean(self, ) -> javawrappers.java.lang.Object: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getMessageTemplate(self, ) -> javawrappers.java.lang.String: ...
	def getExecutableParameters(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def notify(self, ) -> None: ...
	def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def getRootBeanClass(self, ) -> javawrappers.java.lang.Class: ...
	def getMessageParameters(self, ) -> javawrappers.java.util.Map: ...
	def getExpressionVariables(self, ) -> javawrappers.java.util.Map: ...
	@staticmethod
	def forReturnValueValidation(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Map, arg2: javawrappers.java.util.Map, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Class, arg5: javawrappers.java.lang.Object, arg6: javawrappers.java.lang.Object, arg7: javawrappers.java.lang.Object, arg8: javawrappers.javax.validation.Path, arg9: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg10: javawrappers.java.lang.annotation.ElementType, arg11: javawrappers.java.lang.Object, arg12: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintViolation: ...
	def getExecutableReturnValue(self, ) -> javawrappers.java.lang.Object: ...
	def getLeafBean(self, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def forParameterValidation(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Map, arg2: javawrappers.java.util.Map, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Class, arg5: javawrappers.java.lang.Object, arg6: javawrappers.java.lang.Object, arg7: javawrappers.java.lang.Object, arg8: javawrappers.javax.validation.Path, arg9: javawrappers.javax.validation.metadata.ConstraintDescriptor, arg10: javawrappers.java.lang.annotation.ElementType, arg11: JArray(javawrappers.java.lang.Object, 1), arg12: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintViolation: ...
	def getPropertyPath(self, ) -> javawrappers.javax.validation.Path: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ServiceLoaderBasedConstraintMappingContributor:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.util.TypeResolutionHelper, arg1: javawrappers.java.lang.ClassLoader, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def createConstraintMappings(self, arg0: javawrappers.org.hibernate.validator.spi.cfg.ConstraintMappingContributor.ConstraintMappingBuilder, ) -> None: ...


class DefaultClockProvider:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getClock(self, ) -> javawrappers.java.time.Clock: ...
	def notify(self, ) -> None: ...


class ValidatorImpl:
	def __init__(self, arg0: javawrappers.javax.validation.ConstraintValidatorFactory, arg1: javawrappers.org.hibernate.validator.internal.metadata.BeanMetaDataManager, arg2: javawrappers.org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager, arg3: javawrappers.org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorManager, arg4: javawrappers.org.hibernate.validator.internal.engine.groups.ValidationOrderGenerator, arg5: javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl.ValidatorFactoryScopedContext, ): ...
	class CascadingValueReceiver:
		def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.engine.ValidatorImpl, arg1: javawrappers.org.hibernate.validator.internal.engine.ValidationContext, arg2: javawrappers.org.hibernate.validator.internal.engine.ValueContext, arg3: javawrappers.org.hibernate.validator.internal.metadata.aggregated.ContainerCascadingMetaData, ): ...
		def keyedValue(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def indexedValue(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.Object, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def value(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def notify(self, ) -> None: ...
		def iterableValue(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def indexedValue(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def validateProperty(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def validateReturnValue(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.reflect.Method, arg2: javawrappers.java.lang.Object, *arg3: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def notifyAll(self, ) -> None: ...
	def getConstraintsForClass(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.metadata.BeanDescriptor: ...
	def validateValue(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, *arg3: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def validateConstructorParameters(self, arg0: javawrappers.java.lang.reflect.Constructor, arg1: JArray(javawrappers.java.lang.Object, 1), *arg2: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def notify(self, ) -> None: ...
	def validateParameters(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.reflect.Method, arg2: JArray(javawrappers.java.lang.Object, 1), *arg3: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def iterableValue(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def keyedValue(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def validateConstructorReturnValue(self, arg0: javawrappers.java.lang.reflect.Constructor, arg1: javawrappers.java.lang.Object, *arg2: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def value(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def validate(self, arg0: javawrappers.java.lang.Object, *arg1: javawrappers.java.lang.Class, ) -> javawrappers.java.util.Set: ...
	def forExecutables(self, ) -> javawrappers.javax.validation.executable.ExecutableValidator: ...


class ConfigurationImpl:
	@overload
	def __init__(self, arg0: javawrappers.javax.validation.spi.BootstrapState, ): ...
	@overload
	def __init__(self, arg0: javawrappers.javax.validation.spi.ValidationProvider, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isAllowMultipleCascadedValidationOnReturnValues(self, ) -> Union[int, JBoolean]: ...
	@overload
	def constraintValidatorFactory(self, arg0: javawrappers.javax.validation.ConstraintValidatorFactory, ) -> javawrappers.javax.validation.Configuration: ...
	@overload
	def constraintValidatorFactory(self, arg0: javawrappers.javax.validation.ConstraintValidatorFactory, ) -> javawrappers.org.hibernate.validator.internal.engine.ConfigurationImpl: ...
	@overload
	def createConstraintMapping(self, ) -> javawrappers.org.hibernate.validator.internal.cfg.context.DefaultConstraintMapping: ...
	@overload
	def createConstraintMapping(self, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintMapping: ...
	def getDefaultParameterNameProvider(self, ) -> javawrappers.javax.validation.ParameterNameProvider: ...
	def isAllowParallelMethodsDefineParameterConstraints(self, ) -> Union[int, JBoolean]: ...
	def getDefaultClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...
	def getExternalClassLoader(self, ) -> javawrappers.java.lang.ClassLoader: ...
	def getTemporalValidationTolerance(self, ) -> javawrappers.java.time.Duration: ...
	def getMethodValidationConfiguration(self, ) -> javawrappers.org.hibernate.validator.internal.engine.MethodValidationConfiguration: ...
	def getDefaultMessageInterpolator(self, ) -> javawrappers.javax.validation.MessageInterpolator: ...
	def isTraversableResolverResultCacheEnabled(self, ) -> Union[int, JBoolean]: ...
	def getMappingStreams(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def traversableResolver(self, arg0: javawrappers.javax.validation.TraversableResolver, ) -> javawrappers.org.hibernate.validator.internal.engine.ConfigurationImpl: ...
	@overload
	def traversableResolver(self, arg0: javawrappers.javax.validation.TraversableResolver, ) -> javawrappers.javax.validation.Configuration: ...
	def getFailFast(self, ) -> Union[int, JBoolean]: ...
	def getProperties(self, ) -> javawrappers.java.util.Map: ...
	def isIgnoreXmlConfiguration(self, ) -> Union[int, JBoolean]: ...
	def getProgrammaticMappings(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def addProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	@overload
	def addProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.Configuration: ...
	def failFast(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	def temporalValidationTolerance(self, arg0: javawrappers.java.time.Duration, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	@overload
	def ignoreXmlConfiguration(self, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	@overload
	def ignoreXmlConfiguration(self, ) -> javawrappers.javax.validation.Configuration: ...
	@overload
	def addValueExtractor(self, arg0: javawrappers.javax.validation.valueextraction.ValueExtractor, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	@overload
	def addValueExtractor(self, arg0: javawrappers.javax.validation.valueextraction.ValueExtractor, ) -> javawrappers.javax.validation.Configuration: ...
	def scriptEvaluatorFactory(self, arg0: javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	def getValueExtractors(self, ) -> javawrappers.java.util.Set: ...
	def getBootstrapConfiguration(self, ) -> javawrappers.javax.validation.BootstrapConfiguration: ...
	def getDefaultConstraintValidatorFactory(self, ) -> javawrappers.javax.validation.ConstraintValidatorFactory: ...
	def getDefaultTraversableResolver(self, ) -> javawrappers.javax.validation.TraversableResolver: ...
	def getConstraintValidatorFactory(self, ) -> javawrappers.javax.validation.ConstraintValidatorFactory: ...
	def allowMultipleCascadedValidationOnReturnValues(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDefaultResourceBundleLocator(self, ) -> javawrappers.org.hibernate.validator.spi.resourceloading.ResourceBundleLocator: ...
	@overload
	def addMapping(self, arg0: javawrappers.org.hibernate.validator.cfg.ConstraintMapping, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	@overload
	def addMapping(self, arg0: javawrappers.java.io.InputStream, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	@overload
	def addMapping(self, arg0: javawrappers.java.io.InputStream, ) -> javawrappers.javax.validation.Configuration: ...
	def allowParallelMethodsDefineParameterConstraints(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def buildValidatorFactory(self, ) -> javawrappers.javax.validation.ValidatorFactory: ...
	def getClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...
	@overload
	def messageInterpolator(self, arg0: javawrappers.javax.validation.MessageInterpolator, ) -> javawrappers.javax.validation.Configuration: ...
	@overload
	def messageInterpolator(self, arg0: javawrappers.javax.validation.MessageInterpolator, ) -> javawrappers.org.hibernate.validator.internal.engine.ConfigurationImpl: ...
	def getMessageInterpolator(self, ) -> javawrappers.javax.validation.MessageInterpolator: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def constraintValidatorPayload(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	def allowOverridingMethodAlterParameterConstraint(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	@overload
	def clockProvider(self, arg0: javawrappers.javax.validation.ClockProvider, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	@overload
	def clockProvider(self, arg0: javawrappers.javax.validation.ClockProvider, ) -> javawrappers.javax.validation.Configuration: ...
	def getTraversableResolver(self, ) -> javawrappers.javax.validation.TraversableResolver: ...
	def isAllowOverridingMethodAlterParameterConstraint(self, ) -> Union[int, JBoolean]: ...
	@overload
	def enableTraversableResolverResultCache(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	@overload
	def enableTraversableResolverResultCache(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.internal.engine.ConfigurationImpl: ...
	def externalClassLoader(self, arg0: javawrappers.java.lang.ClassLoader, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	def getParameterNameProvider(self, ) -> javawrappers.javax.validation.ParameterNameProvider: ...
	@overload
	def parameterNameProvider(self, arg0: javawrappers.javax.validation.ParameterNameProvider, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	@overload
	def parameterNameProvider(self, arg0: javawrappers.javax.validation.ParameterNameProvider, ) -> javawrappers.javax.validation.Configuration: ...
	def getConstraintValidatorPayload(self, ) -> javawrappers.java.lang.Object: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getScriptEvaluatorFactory(self, ) -> javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory: ...
	def getDefaultValueExtractors(self, ) -> javawrappers.java.util.Set: ...


class ValidatorContextImpl:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.engine.ValidatorFactoryImpl, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def allowMultipleCascadedValidationOnReturnValues(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def allowParallelMethodsDefineParameterConstraints(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def constraintValidatorFactory(self, arg0: javawrappers.javax.validation.ConstraintValidatorFactory, ) -> javawrappers.javax.validation.ValidatorContext: ...
	@overload
	def constraintValidatorFactory(self, arg0: javawrappers.javax.validation.ConstraintValidatorFactory, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	def enableTraversableResolverResultCache(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	def notify(self, ) -> None: ...
	def failFast(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	def temporalValidationTolerance(self, arg0: javawrappers.java.time.Duration, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	@overload
	def parameterNameProvider(self, arg0: javawrappers.javax.validation.ParameterNameProvider, ) -> javawrappers.javax.validation.ValidatorContext: ...
	@overload
	def parameterNameProvider(self, arg0: javawrappers.javax.validation.ParameterNameProvider, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	@overload
	def addValueExtractor(self, arg0: javawrappers.javax.validation.valueextraction.ValueExtractor, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	@overload
	def addValueExtractor(self, arg0: javawrappers.javax.validation.valueextraction.ValueExtractor, ) -> javawrappers.javax.validation.ValidatorContext: ...
	@overload
	def messageInterpolator(self, arg0: javawrappers.javax.validation.MessageInterpolator, ) -> javawrappers.javax.validation.ValidatorContext: ...
	@overload
	def messageInterpolator(self, arg0: javawrappers.javax.validation.MessageInterpolator, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def constraintValidatorPayload(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	def allowOverridingMethodAlterParameterConstraint(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	@overload
	def clockProvider(self, arg0: javawrappers.javax.validation.ClockProvider, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	@overload
	def clockProvider(self, arg0: javawrappers.javax.validation.ClockProvider, ) -> javawrappers.javax.validation.ValidatorContext: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getValidator(self, ) -> javawrappers.javax.validation.Validator: ...
	@overload
	def traversableResolver(self, arg0: javawrappers.javax.validation.TraversableResolver, ) -> javawrappers.javax.validation.ValidatorContext: ...
	@overload
	def traversableResolver(self, arg0: javawrappers.javax.validation.TraversableResolver, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...


class MethodValidationConfiguration:
	class Builder:
		@overload
		def __init__(self, ): ...
		@overload
		def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.engine.MethodValidationConfiguration, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def isAllowMultipleCascadedValidationOnReturnValues(self, ) -> Union[int, JBoolean]: ...
		def allowMultipleCascadedValidationOnReturnValues(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.internal.engine.MethodValidationConfiguration.Builder: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def allowParallelMethodsDefineParameterConstraints(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.internal.engine.MethodValidationConfiguration.Builder: ...
		def notifyAll(self, ) -> None: ...
		def isAllowOverridingMethodAlterParameterConstraint(self, ) -> Union[int, JBoolean]: ...
		def isAllowParallelMethodsDefineParameterConstraints(self, ) -> Union[int, JBoolean]: ...
		def notify(self, ) -> None: ...
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.engine.MethodValidationConfiguration: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def allowOverridingMethodAlterParameterConstraint(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.internal.engine.MethodValidationConfiguration.Builder: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...


	def allowMultipleCascadedValidationOnReturnValues(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.internal.engine.MethodValidationConfiguration.Builder: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def isAllowMultipleCascadedValidationOnReturnValues(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isAllowMultipleCascadedValidationOnReturnValues(self, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def allowParallelMethodsDefineParameterConstraints(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.internal.engine.MethodValidationConfiguration.Builder: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def isAllowOverridingMethodAlterParameterConstraint(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isAllowOverridingMethodAlterParameterConstraint(self, ) -> Union[int, JBoolean]: ...
	def getConfiguredRuleSet(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def isAllowParallelMethodsDefineParameterConstraints(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isAllowParallelMethodsDefineParameterConstraints(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.engine.MethodValidationConfiguration: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def allowOverridingMethodAlterParameterConstraint(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.internal.engine.MethodValidationConfiguration.Builder: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


