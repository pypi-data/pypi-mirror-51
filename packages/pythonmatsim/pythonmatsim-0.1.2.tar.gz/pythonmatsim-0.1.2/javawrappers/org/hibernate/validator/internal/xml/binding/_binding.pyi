################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.javax.validation.executable
import javawrappers.org.hibernate.validator.internal.xml.binding
import javawrappers.javax.xml.bind

from jpype.types import *
from typing import Union

from typing import overload

class GetterType:
	def __init__(self, ): ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setValid(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getValid(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def setIgnoreAnnotations(self, arg0: javawrappers.java.lang.Boolean, ) -> None: ...
	def getConvertGroup(self, ) -> javawrappers.java.util.List: ...
	def getConstraint(self, ) -> javawrappers.java.util.List: ...
	def getIgnoreAnnotations(self, ) -> javawrappers.java.lang.Boolean: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getContainerElementType(self, ) -> javawrappers.java.util.List: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class GroupSequenceType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getValue(self, ) -> javawrappers.java.util.List: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ParameterType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setValid(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setType(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getValid(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def setIgnoreAnnotations(self, arg0: javawrappers.java.lang.Boolean, ) -> None: ...
	def getConvertGroup(self, ) -> javawrappers.java.util.List: ...
	def getConstraint(self, ) -> javawrappers.java.util.List: ...
	def getType(self, ) -> javawrappers.java.lang.String: ...
	def getIgnoreAnnotations(self, ) -> javawrappers.java.lang.Boolean: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getContainerElementType(self, ) -> javawrappers.java.util.List: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ConstraintType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setAnnotation(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def setMessage(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getPayload(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.PayloadType: ...
	def getAnnotation(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getElement(self, ) -> javawrappers.java.util.List: ...
	def setPayload(self, arg0: javawrappers.org.hibernate.validator.internal.xml.binding.PayloadType, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setGroups(self, arg0: javawrappers.org.hibernate.validator.internal.xml.binding.GroupsType, ) -> None: ...
	def getGroups(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.GroupsType: ...


class ConstructorType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setReturnValue(self, arg0: javawrappers.org.hibernate.validator.internal.xml.binding.ReturnValueType, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def setIgnoreAnnotations(self, arg0: javawrappers.java.lang.Boolean, ) -> None: ...
	def getReturnValue(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ReturnValueType: ...
	def getIgnoreAnnotations(self, ) -> javawrappers.java.lang.Boolean: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setCrossParameter(self, arg0: javawrappers.org.hibernate.validator.internal.xml.binding.CrossParameterType, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getCrossParameter(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.CrossParameterType: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getParameter(self, ) -> javawrappers.java.util.List: ...


class ElementType:
	def __init__(self, ): ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getContent(self, ) -> javawrappers.java.util.List: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class GroupsType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getValue(self, ) -> javawrappers.java.util.List: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ContainerElementTypeType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getTypeArgumentIndex(self, ) -> javawrappers.java.lang.Integer: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setValid(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setTypeArgumentIndex(self, arg0: javawrappers.java.lang.Integer, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getValid(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getConvertGroup(self, ) -> javawrappers.java.util.List: ...
	def getConstraint(self, ) -> javawrappers.java.util.List: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getContainerElementType(self, ) -> javawrappers.java.util.List: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ConstraintMappingsType:
	def __init__(self, ): ...
	def setDefaultPackage(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getVersion(self, ) -> javawrappers.java.lang.String: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getConstraintDefinition(self, ) -> javawrappers.java.util.List: ...
	def setVersion(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDefaultPackage(self, ) -> javawrappers.java.lang.String: ...
	def getBean(self, ) -> javawrappers.java.util.List: ...
	def notify(self, ) -> None: ...


class AnnotationType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getElement(self, ) -> javawrappers.java.util.List: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class FieldType:
	def __init__(self, ): ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setValid(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getValid(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def setIgnoreAnnotations(self, arg0: javawrappers.java.lang.Boolean, ) -> None: ...
	def getConvertGroup(self, ) -> javawrappers.java.util.List: ...
	def getConstraint(self, ) -> javawrappers.java.util.List: ...
	def getIgnoreAnnotations(self, ) -> javawrappers.java.lang.Boolean: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getContainerElementType(self, ) -> javawrappers.java.util.List: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ValidationConfigType:
	def __init__(self, ): ...
	def getConstraintValidatorFactory(self, ) -> javawrappers.java.lang.String: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDefaultProvider(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getClockProvider(self, ) -> javawrappers.java.lang.String: ...
	def setTraversableResolver(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getMessageInterpolator(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setConstraintValidatorFactory(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setMessageInterpolator(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getConstraintMapping(self, ) -> javawrappers.java.util.List: ...
	def getValueExtractor(self, ) -> javawrappers.java.util.List: ...
	def getVersion(self, ) -> javawrappers.java.lang.String: ...
	def setClockProvider(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getProperty(self, ) -> javawrappers.java.util.List: ...
	def getTraversableResolver(self, ) -> javawrappers.java.lang.String: ...
	def setDefaultProvider(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setVersion(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setExecutableValidation(self, arg0: javawrappers.org.hibernate.validator.internal.xml.binding.ExecutableValidationType, ) -> None: ...
	def getExecutableValidation(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ExecutableValidationType: ...
	def getParameterNameProvider(self, ) -> javawrappers.java.lang.String: ...
	def setParameterNameProvider(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class Adapter1:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def unmarshal(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def unmarshal(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.executable.ExecutableType: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def marshal(self, arg0: javawrappers.javax.validation.executable.ExecutableType, ) -> javawrappers.java.lang.String: ...
	@overload
	def marshal(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class DefaultValidatedExecutableTypesType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getExecutableType(self, ) -> javawrappers.java.util.List: ...


class PropertyType:
	def __init__(self, ): ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getValue(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setValue(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class GroupConversionType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setFrom(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setTo(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getTo(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getFrom(self, ) -> javawrappers.java.lang.String: ...


class BeanType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getGetter(self, ) -> javawrappers.java.util.List: ...
	def getClazz(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getClassType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ClassType: ...
	def notifyAll(self, ) -> None: ...
	def setClazz(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getField(self, ) -> javawrappers.java.util.List: ...
	def getMethod(self, ) -> javawrappers.java.util.List: ...
	def getConstructor(self, ) -> javawrappers.java.util.List: ...
	def notify(self, ) -> None: ...
	def setIgnoreAnnotations(self, arg0: javawrappers.java.lang.Boolean, ) -> None: ...
	def getIgnoreAnnotations(self, ) -> javawrappers.java.lang.Boolean: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setClassType(self, arg0: javawrappers.org.hibernate.validator.internal.xml.binding.ClassType, ) -> None: ...


class ObjectFactory:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def createValidatedByType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ValidatedByType: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def createCrossParameterType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.CrossParameterType: ...
	def createValidationConfigType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ValidationConfigType: ...
	def createGroupsType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.GroupsType: ...
	def notifyAll(self, ) -> None: ...
	def createConstraintDefinitionType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ConstraintDefinitionType: ...
	def createDefaultValidatedExecutableTypesType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.DefaultValidatedExecutableTypesType: ...
	def createExecutableValidationType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ExecutableValidationType: ...
	def notify(self, ) -> None: ...
	def createAnnotationType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.AnnotationType: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def createReturnValueType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ReturnValueType: ...
	def createPayloadType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.PayloadType: ...
	def createElementTypeValue(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.xml.bind.JAXBElement: ...
	def createConstraintMappingsType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ConstraintMappingsType: ...
	def createValidationConfig(self, arg0: javawrappers.org.hibernate.validator.internal.xml.binding.ValidationConfigType, ) -> javawrappers.javax.xml.bind.JAXBElement: ...
	def createMethodType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.MethodType: ...
	def createGroupConversionType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.GroupConversionType: ...
	def createGroupSequenceType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.GroupSequenceType: ...
	def createBeanType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.BeanType: ...
	def createConstraintType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ConstraintType: ...
	def createFieldType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.FieldType: ...
	def createClassType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ClassType: ...
	def createElementType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ElementType: ...
	def createConstructorType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ConstructorType: ...
	def createParameterType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ParameterType: ...
	def createElementTypeAnnotation(self, arg0: javawrappers.org.hibernate.validator.internal.xml.binding.AnnotationType, ) -> javawrappers.javax.xml.bind.JAXBElement: ...
	def createContainerElementTypeType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ContainerElementTypeType: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def createConstraintMappings(self, arg0: javawrappers.org.hibernate.validator.internal.xml.binding.ConstraintMappingsType, ) -> javawrappers.javax.xml.bind.JAXBElement: ...
	def createGetterType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.GetterType: ...
	def createPropertyType(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.PropertyType: ...


class CrossParameterType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getConstraint(self, ) -> javawrappers.java.util.List: ...
	def getIgnoreAnnotations(self, ) -> javawrappers.java.lang.Boolean: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def setIgnoreAnnotations(self, arg0: javawrappers.java.lang.Boolean, ) -> None: ...


class ExecutableValidationType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setEnabled(self, arg0: javawrappers.java.lang.Boolean, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setDefaultValidatedExecutableTypes(self, arg0: javawrappers.org.hibernate.validator.internal.xml.binding.DefaultValidatedExecutableTypesType, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getEnabled(self, ) -> javawrappers.java.lang.Boolean: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDefaultValidatedExecutableTypes(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.DefaultValidatedExecutableTypesType: ...
	def notify(self, ) -> None: ...


class PayloadType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getValue(self, ) -> javawrappers.java.util.List: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ValidatedByType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getValue(self, ) -> javawrappers.java.util.List: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setIncludeExistingValidators(self, arg0: javawrappers.java.lang.Boolean, ) -> None: ...
	def getIncludeExistingValidators(self, ) -> javawrappers.java.lang.Boolean: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ReturnValueType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setValid(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getValid(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def setIgnoreAnnotations(self, arg0: javawrappers.java.lang.Boolean, ) -> None: ...
	def getConvertGroup(self, ) -> javawrappers.java.util.List: ...
	def getConstraint(self, ) -> javawrappers.java.util.List: ...
	def getIgnoreAnnotations(self, ) -> javawrappers.java.lang.Boolean: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getContainerElementType(self, ) -> javawrappers.java.util.List: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class MethodType:
	def __init__(self, ): ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setReturnValue(self, arg0: javawrappers.org.hibernate.validator.internal.xml.binding.ReturnValueType, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def setIgnoreAnnotations(self, arg0: javawrappers.java.lang.Boolean, ) -> None: ...
	def getReturnValue(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ReturnValueType: ...
	def getIgnoreAnnotations(self, ) -> javawrappers.java.lang.Boolean: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setCrossParameter(self, arg0: javawrappers.org.hibernate.validator.internal.xml.binding.CrossParameterType, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getCrossParameter(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.CrossParameterType: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getParameter(self, ) -> javawrappers.java.util.List: ...


class ClassType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setGroupSequence(self, arg0: javawrappers.org.hibernate.validator.internal.xml.binding.GroupSequenceType, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getGroupSequence(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.GroupSequenceType: ...
	def getConstraint(self, ) -> javawrappers.java.util.List: ...
	def getIgnoreAnnotations(self, ) -> javawrappers.java.lang.Boolean: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def setIgnoreAnnotations(self, arg0: javawrappers.java.lang.Boolean, ) -> None: ...


class ConstraintDefinitionType:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAnnotation(self, ) -> javawrappers.java.lang.String: ...
	def setAnnotation(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setValidatedBy(self, arg0: javawrappers.org.hibernate.validator.internal.xml.binding.ValidatedByType, ) -> None: ...
	def getValidatedBy(self, ) -> javawrappers.org.hibernate.validator.internal.xml.binding.ValidatedByType: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


