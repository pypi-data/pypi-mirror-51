################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.hibernate.validator.internal.metadata.aggregated
import javawrappers.org.hibernate.validator.internal.engine.path
import javawrappers.java.util.function
import javawrappers.javax.validation

from jpype.types import *
from typing import Union

from typing import overload

class PathImpl:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getLeafNode(self, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def makeLeafNodeIterableAndSetMapKey(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def makeLeafNodeIterable(self, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	@staticmethod
	def createPathForExecutable(arg0: javawrappers.org.hibernate.validator.internal.metadata.aggregated.ExecutableMetaData, ) -> javawrappers.org.hibernate.validator.internal.engine.path.PathImpl: ...
	def addReturnValueNode(self, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def addContainerElementNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	@staticmethod
	def createCopy(arg0: javawrappers.org.hibernate.validator.internal.engine.path.PathImpl, ) -> javawrappers.org.hibernate.validator.internal.engine.path.PathImpl: ...
	def makeLeafNodeIterableAndSetIndex(self, arg0: javawrappers.java.lang.Integer, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def createRootPath() -> javawrappers.org.hibernate.validator.internal.engine.path.PathImpl: ...
	def addPropertyNode(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def notify(self, ) -> None: ...
	def getPathWithoutLeafNode(self, ) -> javawrappers.org.hibernate.validator.internal.engine.path.PathImpl: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def addCrossParameterNode(self, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def asString(self, ) -> javawrappers.java.lang.String: ...
	def setLeafNodeTypeParameter(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Integer, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	@staticmethod
	def createPathFromString(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.engine.path.PathImpl: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def isRootPath(self, ) -> Union[int, JBoolean]: ...
	def addParameterNode(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def removeLeafNode(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def addBeanNode(self, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def setLeafNodeValueIfRequired(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...


class NodeImpl:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def createContainerElementNode(arg0: javawrappers.java.lang.String, arg1: javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def getIndex(self, ) -> javawrappers.java.lang.Integer: ...
	@staticmethod
	def createReturnValue(arg0: javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	@staticmethod
	def createConstructorNode(arg0: javawrappers.java.lang.String, arg1: javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl, arg2: JArray(javawrappers.java.lang.Class, 1), ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def setTypeParameter(arg0: javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def isInIterable(self, ) -> Union[int, JBoolean]: ...
	def getParameterTypes(self, ) -> javawrappers.java.util.List: ...
	def getKind(self, ) -> javawrappers.javax.validation.ElementKind: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def makeIterableAndSetMapKey(arg0: javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl, arg1: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def isIterable(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def createBeanNode(arg0: javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	@staticmethod
	def makeIterable(arg0: javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def makeIterableAndSetIndex(arg0: javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl, arg1: javawrappers.java.lang.Integer, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def asString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def createParameterNode(arg0: javawrappers.java.lang.String, arg1: javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl, arg2: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def getKey(self, ) -> javawrappers.java.lang.Object: ...
	def getTypeArgumentIndex(self, ) -> javawrappers.java.lang.Integer: ...
	def getParent(self, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	@staticmethod
	def createPropertyNode(arg0: javawrappers.java.lang.String, arg1: javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def getContainerClass(self, ) -> javawrappers.java.lang.Class: ...
	@staticmethod
	def createMethodNode(arg0: javawrappers.java.lang.String, arg1: javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl, arg2: JArray(javawrappers.java.lang.Class, 1), ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def buildHashCode(self, ) -> Union[int, JInt]: ...
	def getValue(self, ) -> javawrappers.java.lang.Object: ...
	def as_(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.Path.Node: ...
	def getParameterIndex(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def setPropertyValue(arg0: javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl, arg1: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def createCrossParameterNode(arg0: javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl, ) -> javawrappers.org.hibernate.validator.internal.engine.path.NodeImpl: ...


