################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.hibernate.validator
import javawrappers.java.security
import javawrappers.java.lang
import javawrappers.javax.validation.spi
import javawrappers.java.time
import javawrappers.org.hibernate.validator.spi.resourceloading
import javawrappers.java.util
import javawrappers.javax.validation.valueextraction
import javawrappers.org.hibernate.validator.cfg
import javawrappers.java.io
import javawrappers.org.hibernate.validator.spi.scripting
import javawrappers.javax.validation

from jpype.types import *
from typing import Union

from typing import overload

class HibernateValidator:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def createSpecializedConfiguration(self, arg0: javawrappers.javax.validation.spi.BootstrapState, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	@overload
	def createSpecializedConfiguration(self, arg0: javawrappers.javax.validation.spi.BootstrapState, ) -> javawrappers.javax.validation.Configuration: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def createGenericConfiguration(self, arg0: javawrappers.javax.validation.spi.BootstrapState, ) -> javawrappers.javax.validation.Configuration: ...
	def notify(self, ) -> None: ...
	def buildValidatorFactory(self, arg0: javawrappers.javax.validation.spi.ConfigurationState, ) -> javawrappers.javax.validation.ValidatorFactory: ...


class HibernateValidatorPermission:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def checkGuard(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def newPermissionCollection(self, ) -> javawrappers.java.security.PermissionCollection: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getActions(self, ) -> javawrappers.java.lang.String: ...
	def implies(self, arg0: javawrappers.java.security.Permission, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...


class HibernateValidatorFactory:
	def getConstraintValidatorFactory(self, ) -> javawrappers.javax.validation.ConstraintValidatorFactory: ...
	def getTraversableResolver(self, ) -> javawrappers.javax.validation.TraversableResolver: ...
	def getTemporalValidationTolerance(self, ) -> javawrappers.java.time.Duration: ...
	def getMessageInterpolator(self, ) -> javawrappers.javax.validation.MessageInterpolator: ...
	@overload
	def usingContext(self, ) -> javawrappers.javax.validation.ValidatorContext: ...
	@overload
	def usingContext(self, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	def getValidator(self, ) -> javawrappers.javax.validation.Validator: ...
	def getScriptEvaluatorFactory(self, ) -> javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory: ...
	def close(self, ) -> None: ...
	def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def getParameterNameProvider(self, ) -> javawrappers.javax.validation.ParameterNameProvider: ...
	def getClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...


class HibernateValidatorContext:
	def allowMultipleCascadedValidationOnReturnValues(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	def allowParallelMethodsDefineParameterConstraints(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	@overload
	def constraintValidatorFactory(self, arg0: javawrappers.javax.validation.ConstraintValidatorFactory, ) -> javawrappers.javax.validation.ValidatorContext: ...
	@overload
	def constraintValidatorFactory(self, arg0: javawrappers.javax.validation.ConstraintValidatorFactory, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	def enableTraversableResolverResultCache(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	def failFast(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	def temporalValidationTolerance(self, arg0: javawrappers.java.time.Duration, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	@overload
	def parameterNameProvider(self, arg0: javawrappers.javax.validation.ParameterNameProvider, ) -> javawrappers.javax.validation.ValidatorContext: ...
	@overload
	def parameterNameProvider(self, arg0: javawrappers.javax.validation.ParameterNameProvider, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	@overload
	def addValueExtractor(self, arg0: javawrappers.javax.validation.valueextraction.ValueExtractor, ) -> javawrappers.javax.validation.ValidatorContext: ...
	@overload
	def addValueExtractor(self, arg0: javawrappers.javax.validation.valueextraction.ValueExtractor, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	@overload
	def messageInterpolator(self, arg0: javawrappers.javax.validation.MessageInterpolator, ) -> javawrappers.javax.validation.ValidatorContext: ...
	@overload
	def messageInterpolator(self, arg0: javawrappers.javax.validation.MessageInterpolator, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	def constraintValidatorPayload(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	def allowOverridingMethodAlterParameterConstraint(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	@overload
	def clockProvider(self, arg0: javawrappers.javax.validation.ClockProvider, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...
	@overload
	def clockProvider(self, arg0: javawrappers.javax.validation.ClockProvider, ) -> javawrappers.javax.validation.ValidatorContext: ...
	def getValidator(self, ) -> javawrappers.javax.validation.Validator: ...
	@overload
	def traversableResolver(self, arg0: javawrappers.javax.validation.TraversableResolver, ) -> javawrappers.javax.validation.ValidatorContext: ...
	@overload
	def traversableResolver(self, arg0: javawrappers.javax.validation.TraversableResolver, ) -> javawrappers.org.hibernate.validator.HibernateValidatorContext: ...


class Incubating:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def annotationType(self, ) -> javawrappers.java.lang.Class: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class HibernateValidatorConfiguration:
	def getDefaultTraversableResolver(self, ) -> javawrappers.javax.validation.TraversableResolver: ...
	def allowMultipleCascadedValidationOnReturnValues(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	def getDefaultResourceBundleLocator(self, ) -> javawrappers.org.hibernate.validator.spi.resourceloading.ResourceBundleLocator: ...
	@overload
	def addMapping(self, arg0: javawrappers.java.io.InputStream, ) -> javawrappers.javax.validation.Configuration: ...
	@overload
	def addMapping(self, arg0: javawrappers.org.hibernate.validator.cfg.ConstraintMapping, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	def allowParallelMethodsDefineParameterConstraints(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	def constraintValidatorFactory(self, arg0: javawrappers.javax.validation.ConstraintValidatorFactory, ) -> javawrappers.javax.validation.Configuration: ...
	def getDefaultParameterNameProvider(self, ) -> javawrappers.javax.validation.ParameterNameProvider: ...
	def createConstraintMapping(self, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintMapping: ...
	def getDefaultClockProvider(self, ) -> javawrappers.javax.validation.ClockProvider: ...
	def buildValidatorFactory(self, ) -> javawrappers.javax.validation.ValidatorFactory: ...
	def messageInterpolator(self, arg0: javawrappers.javax.validation.MessageInterpolator, ) -> javawrappers.javax.validation.Configuration: ...
	def getDefaultMessageInterpolator(self, ) -> javawrappers.javax.validation.MessageInterpolator: ...
	def constraintValidatorPayload(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	def allowOverridingMethodAlterParameterConstraint(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	def clockProvider(self, arg0: javawrappers.javax.validation.ClockProvider, ) -> javawrappers.javax.validation.Configuration: ...
	def traversableResolver(self, arg0: javawrappers.javax.validation.TraversableResolver, ) -> javawrappers.javax.validation.Configuration: ...
	def enableTraversableResolverResultCache(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	def externalClassLoader(self, arg0: javawrappers.java.lang.ClassLoader, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	def addProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.Configuration: ...
	def failFast(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	def temporalValidationTolerance(self, arg0: javawrappers.java.time.Duration, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	def ignoreXmlConfiguration(self, ) -> javawrappers.javax.validation.Configuration: ...
	def parameterNameProvider(self, arg0: javawrappers.javax.validation.ParameterNameProvider, ) -> javawrappers.javax.validation.Configuration: ...
	def addValueExtractor(self, arg0: javawrappers.javax.validation.valueextraction.ValueExtractor, ) -> javawrappers.javax.validation.Configuration: ...
	def scriptEvaluatorFactory(self, arg0: javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory, ) -> javawrappers.org.hibernate.validator.HibernateValidatorConfiguration: ...
	def getBootstrapConfiguration(self, ) -> javawrappers.javax.validation.BootstrapConfiguration: ...
	def getDefaultConstraintValidatorFactory(self, ) -> javawrappers.javax.validation.ConstraintValidatorFactory: ...
	def getDefaultValueExtractors(self, ) -> javawrappers.java.util.Set: ...


