################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.hibernate.validator.internal.util.annotation
import javawrappers.org.hibernate.validator.internal.metadata.core
import javawrappers.org.hibernate.validator.constraints
import javawrappers.org.hibernate.validator.internal.metadata.descriptor
import javawrappers.java.lang.annotation
import javawrappers.javax.validation.metadata
import javawrappers.javax.validation

from jpype.types import *
from typing import Union

from typing import overload

class ContainerElementTypeDescriptorImpl:
	def __init__(self, arg0: javawrappers.java.lang.reflect.Type, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Integer, arg3: javawrappers.java.util.Set, arg4: javawrappers.java.util.Set, arg5: Union[int, JBoolean], arg6: Union[int, JBoolean], arg7: javawrappers.java.util.List, arg8: javawrappers.java.util.Set, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	def getTypeArgumentIndex(self, ) -> javawrappers.java.lang.Integer: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getContainerClass(self, ) -> javawrappers.java.lang.Class: ...
	def notifyAll(self, ) -> None: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstrainedContainerElementTypes(self, ) -> javawrappers.java.util.Set: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isCascaded(self, ) -> Union[int, JBoolean]: ...
	def getGroupConversions(self, ) -> javawrappers.java.util.Set: ...


class PropertyDescriptorImpl:
	def __init__(self, arg0: javawrappers.java.lang.reflect.Type, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.util.Set, arg3: javawrappers.java.util.Set, arg4: Union[int, JBoolean], arg5: Union[int, JBoolean], arg6: javawrappers.java.util.List, arg7: javawrappers.java.util.Set, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstrainedContainerElementTypes(self, ) -> javawrappers.java.util.Set: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isCascaded(self, ) -> Union[int, JBoolean]: ...
	def getPropertyName(self, ) -> javawrappers.java.lang.String: ...
	def getGroupConversions(self, ) -> javawrappers.java.util.Set: ...


class GroupConversionDescriptorImpl:
	def __init__(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Class, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getTo(self, ) -> javawrappers.java.lang.Class: ...
	def notify(self, ) -> None: ...
	def getFrom(self, ) -> javawrappers.java.lang.Class: ...


class ReturnValueDescriptorImpl:
	def __init__(self, arg0: javawrappers.java.lang.reflect.Type, arg1: javawrappers.java.util.Set, arg2: javawrappers.java.util.Set, arg3: Union[int, JBoolean], arg4: Union[int, JBoolean], arg5: javawrappers.java.util.List, arg6: javawrappers.java.util.Set, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstrainedContainerElementTypes(self, ) -> javawrappers.java.util.Set: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isCascaded(self, ) -> Union[int, JBoolean]: ...
	def getGroupConversions(self, ) -> javawrappers.java.util.Set: ...


class BeanDescriptorImpl:
	def __init__(self, arg0: javawrappers.java.lang.reflect.Type, arg1: javawrappers.java.util.Set, arg2: javawrappers.java.util.Map, arg3: javawrappers.java.util.Map, arg4: javawrappers.java.util.Map, arg5: Union[int, JBoolean], arg6: javawrappers.java.util.List, ): ...
	def getConstrainedMethods(self, arg0: javawrappers.javax.validation.metadata.MethodType, *arg1: javawrappers.javax.validation.metadata.MethodType, ) -> javawrappers.java.util.Set: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getConstrainedConstructors(self, ) -> javawrappers.java.util.Set: ...
	def notifyAll(self, ) -> None: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def getConstraintsForConstructor(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.metadata.ConstructorDescriptor: ...
	def notify(self, ) -> None: ...
	def getConstrainedProperties(self, ) -> javawrappers.java.util.Set: ...
	def getConstraintsForProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.metadata.PropertyDescriptor: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getConstraintsForMethod(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.metadata.MethodDescriptor: ...
	def isBeanConstrained(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class CrossParameterDescriptorImpl:
	def __init__(self, arg0: javawrappers.java.util.Set, arg1: Union[int, JBoolean], arg2: javawrappers.java.util.List, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...


class ExecutableDescriptorImpl:
	def __init__(self, arg0: javawrappers.java.lang.reflect.Type, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.util.Set, arg3: javawrappers.javax.validation.metadata.ReturnValueDescriptor, arg4: javawrappers.java.util.List, arg5: Union[int, JBoolean], arg6: Union[int, JBoolean], arg7: javawrappers.java.util.List, ): ...
	def isGetter(self, ) -> Union[int, JBoolean]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getParameterDescriptors(self, ) -> javawrappers.java.util.List: ...
	def notifyAll(self, ) -> None: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getReturnValueDescriptor(self, ) -> javawrappers.javax.validation.metadata.ReturnValueDescriptor: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def getCrossParameterDescriptor(self, ) -> javawrappers.javax.validation.metadata.CrossParameterDescriptor: ...
	def hasConstrainedReturnValue(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def hasConstrainedParameters(self, ) -> Union[int, JBoolean]: ...


class ElementDescriptorImpl:
	def __init__(self, arg0: javawrappers.java.lang.reflect.Type, arg1: javawrappers.java.util.Set, arg2: Union[int, JBoolean], arg3: javawrappers.java.util.List, ): ...
	class ConstraintFinderImpl:
		def lookingAt(self, arg0: javawrappers.javax.validation.metadata.Scope, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def unorderedAndMatchingGroups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def declaredOn(self, *arg0: javawrappers.java.lang.annotation.ElementType, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def hasConstraints(self, ) -> Union[int, JBoolean]: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def unorderedAndMatchingGroups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def notifyAll(self, ) -> None: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	@overload
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def lookingAt(self, arg0: javawrappers.javax.validation.metadata.Scope, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def declaredOn(self, *arg0: javawrappers.java.lang.annotation.ElementType, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ParameterDescriptorImpl:
	def __init__(self, arg0: javawrappers.java.lang.reflect.Type, arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.util.Set, arg4: javawrappers.java.util.Set, arg5: Union[int, JBoolean], arg6: Union[int, JBoolean], arg7: javawrappers.java.util.List, arg8: javawrappers.java.util.Set, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstraintDescriptors(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getIndex(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def findConstraints(self, ) -> javawrappers.javax.validation.metadata.ElementDescriptor.ConstraintFinder: ...
	def getElementClass(self, ) -> javawrappers.java.lang.Class: ...
	def getConstrainedContainerElementTypes(self, ) -> javawrappers.java.util.Set: ...
	def hasConstraints(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isCascaded(self, ) -> Union[int, JBoolean]: ...
	def getGroupConversions(self, ) -> javawrappers.java.util.Set: ...


class ConstraintDescriptorImpl:
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg1: javawrappers.java.lang.reflect.Member, arg2: javawrappers.org.hibernate.validator.internal.util.annotation.ConstraintAnnotationDescriptor, arg3: javawrappers.java.lang.annotation.ElementType, arg4: javawrappers.java.lang.Class, arg5: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintOrigin, arg6: javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.ConstraintType, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg1: javawrappers.java.lang.reflect.Member, arg2: javawrappers.org.hibernate.validator.internal.util.annotation.ConstraintAnnotationDescriptor, arg3: javawrappers.java.lang.annotation.ElementType, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintHelper, arg1: javawrappers.java.lang.reflect.Member, arg2: javawrappers.org.hibernate.validator.internal.util.annotation.ConstraintAnnotationDescriptor, arg3: javawrappers.java.lang.annotation.ElementType, arg4: javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.ConstraintType, ): ...
	class ComposingConstraintAnnotationLocation:
		DIRECT: ConstraintDescriptorImpl.ComposingConstraintAnnotationLocation = ...
		IN_CONTAINER: ConstraintDescriptorImpl.ComposingConstraintAnnotationLocation = ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.ComposingConstraintAnnotationLocation: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@staticmethod
		def values() -> JArray(javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.ComposingConstraintAnnotationLocation, 1): ...
		def name(self, ) -> javawrappers.java.lang.String: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def ordinal(self, ) -> Union[int, JInt]: ...


	class ConstraintType:
		GENERIC: ConstraintDescriptorImpl.ConstraintType = ...
		CROSS_PARAMETER: ConstraintDescriptorImpl.ConstraintType = ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.ConstraintType: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@staticmethod
		def values() -> JArray(javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.ConstraintType, 1): ...
		def name(self, ) -> javawrappers.java.lang.String: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def ordinal(self, ) -> Union[int, JInt]: ...


	class ClassIndexWrapper:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def values() -> JArray(javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.ComposingConstraintAnnotationLocation, 1): ...
	@overload
	@staticmethod
	def values() -> JArray(javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.ConstraintType, 1): ...
	def notifyAll(self, ) -> None: ...
	def getAnnotationType(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def unwrap(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def getAnnotationDescriptor(self, ) -> javawrappers.org.hibernate.validator.internal.util.annotation.ConstraintAnnotationDescriptor: ...
	def getValueUnwrapping(self, ) -> javawrappers.javax.validation.metadata.ValidateUnwrappedValue: ...
	def getConstraintType(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.ConstraintType: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getGroups(self, ) -> javawrappers.java.util.Set: ...
	def getElementType(self, ) -> javawrappers.java.lang.annotation.ElementType: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.ComposingConstraintAnnotationLocation: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.ConstraintType: ...
	def getConstraintValidatorClasses(self, ) -> javawrappers.java.util.List: ...
	def getValidationAppliesTo(self, ) -> javawrappers.javax.validation.ConstraintTarget: ...
	def getMessageTemplate(self, ) -> javawrappers.java.lang.String: ...
	def getMatchingConstraintValidatorDescriptors(self, ) -> javawrappers.java.util.List: ...
	def isReportAsSingleViolation(self, ) -> Union[int, JBoolean]: ...
	def getPayload(self, ) -> javawrappers.java.util.Set: ...
	def getAnnotation(self, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getDefinedOn(self, ) -> javawrappers.org.hibernate.validator.internal.metadata.core.ConstraintOrigin: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def getComposingConstraintImpls(self, ) -> javawrappers.java.util.Set: ...
	def getCompositionType(self, ) -> javawrappers.org.hibernate.validator.constraints.CompositionType: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getComposingConstraints(self, ) -> javawrappers.java.util.Set: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


