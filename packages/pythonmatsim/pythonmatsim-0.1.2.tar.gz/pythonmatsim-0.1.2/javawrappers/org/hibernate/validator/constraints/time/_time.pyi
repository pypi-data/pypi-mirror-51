################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.hibernate.validator.constraints.time

from jpype.types import *
from typing import Union

from typing import overload

class DurationMin:
	class List:
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def annotationType(self, ) -> javawrappers.java.lang.Class: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def value(self, ) -> JArray(javawrappers.org.hibernate.validator.constraints.time.DurationMin, 1): ...


	def inclusive(self, ) -> Union[int, JBoolean]: ...
	def hours(self, ) -> Union[long, JLong]: ...
	def nanos(self, ) -> Union[long, JLong]: ...
	def minutes(self, ) -> Union[long, JLong]: ...
	def annotationType(self, ) -> javawrappers.java.lang.Class: ...
	def groups(self, ) -> JArray(javawrappers.java.lang.Class, 1): ...
	def message(self, ) -> javawrappers.java.lang.String: ...
	def seconds(self, ) -> Union[long, JLong]: ...
	def payload(self, ) -> JArray(javawrappers.java.lang.Class, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def days(self, ) -> Union[long, JLong]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def millis(self, ) -> Union[long, JLong]: ...
	def value(self, ) -> JArray(javawrappers.org.hibernate.validator.constraints.time.DurationMin, 1): ...


class DurationMax:
	class List:
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def annotationType(self, ) -> javawrappers.java.lang.Class: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def value(self, ) -> JArray(javawrappers.org.hibernate.validator.constraints.time.DurationMax, 1): ...


	def inclusive(self, ) -> Union[int, JBoolean]: ...
	def hours(self, ) -> Union[long, JLong]: ...
	def nanos(self, ) -> Union[long, JLong]: ...
	def minutes(self, ) -> Union[long, JLong]: ...
	def annotationType(self, ) -> javawrappers.java.lang.Class: ...
	def groups(self, ) -> JArray(javawrappers.java.lang.Class, 1): ...
	def message(self, ) -> javawrappers.java.lang.String: ...
	def seconds(self, ) -> Union[long, JLong]: ...
	def payload(self, ) -> JArray(javawrappers.java.lang.Class, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def days(self, ) -> Union[long, JLong]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def millis(self, ) -> Union[long, JLong]: ...
	def value(self, ) -> JArray(javawrappers.org.hibernate.validator.constraints.time.DurationMax, 1): ...


