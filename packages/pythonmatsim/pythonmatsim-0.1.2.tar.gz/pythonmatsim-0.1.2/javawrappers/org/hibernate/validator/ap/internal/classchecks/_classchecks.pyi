################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.javax.lang.model.util
import javawrappers.org.hibernate.validator.ap.internal.util
import javawrappers.javax.lang.model.element
import javawrappers.org.hibernate.validator.ap.internal.classchecks

from jpype.types import *
from typing import Union

from typing import overload

class ParametersMethodOverrideCheck:
	def __init__(self, arg0: javawrappers.javax.lang.model.util.Elements, arg1: javawrappers.javax.lang.model.util.Types, arg2: javawrappers.org.hibernate.validator.ap.internal.util.ConstraintHelper, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, ) -> javawrappers.java.util.Collection: ...
	@overload
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def execute(self, arg0: javawrappers.javax.lang.model.element.Element, ) -> javawrappers.java.util.Collection: ...
	def notify(self, ) -> None: ...


class ClassCheck:
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, ) -> javawrappers.java.util.Collection: ...
	def execute(self, arg0: javawrappers.javax.lang.model.element.Element, ) -> javawrappers.java.util.Collection: ...


class MethodInheritanceTree:
	class MethodNode:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class Builder:
		def __init__(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def build(self, ) -> javawrappers.org.hibernate.validator.ap.internal.classchecks.MethodInheritanceTree: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...
		def addOverriddenMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.javax.lang.model.element.ExecutableElement, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getTopLevelMethods(self, ) -> javawrappers.java.util.Set: ...
	def notifyAll(self, ) -> None: ...
	def hasParallelDefinitions(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def build(self, ) -> javawrappers.org.hibernate.validator.ap.internal.classchecks.MethodInheritanceTree: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getAllMethods(self, ) -> javawrappers.java.util.Set: ...
	def hasOverriddenMethods(self, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getOverriddenMethods(self, ) -> javawrappers.java.util.Set: ...
	def addOverriddenMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.javax.lang.model.element.ExecutableElement, ) -> None: ...


class AbstractMethodOverrideCheck:
	def __init__(self, arg0: javawrappers.javax.lang.model.util.Elements, arg1: javawrappers.javax.lang.model.util.Types, arg2: javawrappers.org.hibernate.validator.ap.internal.util.ConstraintHelper, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, ) -> javawrappers.java.util.Collection: ...
	@overload
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def execute(self, arg0: javawrappers.javax.lang.model.element.Element, ) -> javawrappers.java.util.Collection: ...
	def notify(self, ) -> None: ...


class AbstractClassCheck:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, ) -> javawrappers.java.util.Collection: ...
	@overload
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def execute(self, arg0: javawrappers.javax.lang.model.element.Element, ) -> javawrappers.java.util.Collection: ...
	def notify(self, ) -> None: ...


class ReturnValueMethodOverrideCheck:
	def __init__(self, arg0: javawrappers.javax.lang.model.util.Elements, arg1: javawrappers.javax.lang.model.util.Types, arg2: javawrappers.org.hibernate.validator.ap.internal.util.ConstraintHelper, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, ) -> javawrappers.java.util.Collection: ...
	@overload
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def execute(self, arg0: javawrappers.javax.lang.model.element.Element, ) -> javawrappers.java.util.Collection: ...
	def notify(self, ) -> None: ...


class ClassCheckFactory:
	def __init__(self, arg0: javawrappers.javax.lang.model.util.Types, arg1: javawrappers.javax.lang.model.util.Elements, arg2: javawrappers.org.hibernate.validator.ap.internal.util.ConstraintHelper, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getInstance(arg0: javawrappers.javax.lang.model.util.Types, arg1: javawrappers.javax.lang.model.util.Elements, arg2: javawrappers.org.hibernate.validator.ap.internal.util.ConstraintHelper, ) -> javawrappers.org.hibernate.validator.ap.internal.classchecks.ClassCheckFactory: ...
	def notify(self, ) -> None: ...
	def getClassChecks(self, arg0: javawrappers.javax.lang.model.element.Element, ) -> javawrappers.java.util.Collection: ...


