################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.javax.lang.model.element

from jpype.types import *
from typing import Union

from typing import overload

class GroupSequenceCheck:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.ap.internal.util.AnnotationApiHelper, arg1: javawrappers.javax.lang.model.util.Types, arg2: javawrappers.org.hibernate.validator.ap.internal.util.ConstraintHelper, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def checkAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def checkField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def checkNonAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...


class AnnotationParametersScriptAssertCheck:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.ap.internal.util.AnnotationApiHelper, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def checkAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def checkField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def checkNonAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...


class AnnotationPayloadUnwrappingCheck:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.ap.internal.util.AnnotationApiHelper, arg1: javawrappers.javax.lang.model.util.Types, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def checkAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def checkField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def checkNonAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...


class AnnotationUserMessageCheck:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.ap.internal.util.AnnotationApiHelper, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def checkAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def checkField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def checkNonAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...


class AnnotationParametersDigitsCheck:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.ap.internal.util.AnnotationApiHelper, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def checkAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def checkField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def checkNonAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...


class AnnotationDefaultMessageCheck:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.ap.internal.util.AnnotationApiHelper, arg1: javawrappers.javax.lang.model.util.Elements, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def checkAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def checkField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def checkNonAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...


class AnnotationParametersGroupsCheck:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.ap.internal.util.AnnotationApiHelper, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def checkAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def checkField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def checkNonAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...


class AnnotationParametersSizeLengthCheck:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.ap.internal.util.AnnotationApiHelper, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def checkAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def checkField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def checkNonAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...


class AnnotationParametersAbstractCheck:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.ap.internal.util.AnnotationApiHelper, *arg1: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def checkAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def checkField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def checkNonAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...


class AnnotationMessageCheck:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.ap.internal.util.AnnotationApiHelper, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def checkAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def checkField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def checkNonAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...


class AnnotationParametersDecimalMinMaxCheck:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.ap.internal.util.AnnotationApiHelper, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def checkAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def checkField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def checkNonAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...


class AnnotationParametersPatternCheck:
	def __init__(self, arg0: javawrappers.org.hibernate.validator.ap.internal.util.AnnotationApiHelper, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def checkAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def checkField(self, arg0: javawrappers.javax.lang.model.element.VariableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def checkMethod(self, arg0: javawrappers.javax.lang.model.element.ExecutableElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def checkNonAnnotationType(self, arg0: javawrappers.javax.lang.model.element.TypeElement, arg1: javawrappers.javax.lang.model.element.AnnotationMirror, ) -> javawrappers.java.util.Set: ...


