################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.hibernate.validator.cfg
import javawrappers.org.hibernate.validator.constraints
import javawrappers.javax.validation.constraints
import javawrappers.org.hibernate.validator.cfg.defs

from jpype.types import *
from typing import Union

from typing import overload

class PatternDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def regexp(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.PatternDef: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def flags(self, arg0: JArray(javawrappers.javax.validation.constraints.Pattern.Flag, 1), ) -> javawrappers.org.hibernate.validator.cfg.defs.PatternDef: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class CodePointLengthDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def min(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.CodePointLengthDef: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def max(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.CodePointLengthDef: ...
	def normalizationStrategy(self, arg0: javawrappers.org.hibernate.validator.constraints.CodePointLength.NormalizationStrategy, ) -> javawrappers.org.hibernate.validator.cfg.defs.CodePointLengthDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class NotBlankDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class EmailDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def regexp(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.EmailDef: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def flags(self, *arg0: javawrappers.javax.validation.constraints.Pattern.Flag, ) -> javawrappers.org.hibernate.validator.cfg.defs.EmailDef: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class MinDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def value(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.MinDef: ...
	def notify(self, ) -> None: ...


class DecimalMinDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def inclusive(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.defs.DecimalMinDef: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def value(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.DecimalMinDef: ...
	def notify(self, ) -> None: ...


class ScriptAssertDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...
	def script(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.ScriptAssertDef: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def reportOn(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.ScriptAssertDef: ...
	def alias(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.ScriptAssertDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def lang(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.ScriptAssertDef: ...


class LengthDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def min(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.LengthDef: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def max(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.LengthDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class NegativeDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class NotNullDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class SizeDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def min(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.SizeDef: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def max(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.SizeDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class RangeDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def min(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.RangeDef: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def max(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.RangeDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class NullDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class SafeHtmlDef:
	def __init__(self, ): ...
	class AttributeDef:
		def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.String, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class TagDef:
		def __init__(self, arg0: javawrappers.java.lang.String, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@overload
		def attributes(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.SafeHtmlDef.TagDef: ...
		@overload
		def attributes(self, arg0: javawrappers.org.hibernate.validator.cfg.defs.SafeHtmlDef.AttributeDef, *arg1: javawrappers.org.hibernate.validator.cfg.defs.SafeHtmlDef.AttributeDef, ) -> javawrappers.org.hibernate.validator.cfg.defs.SafeHtmlDef.TagDef: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...
	@overload
	def additionalTags(self, *arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.SafeHtmlDef: ...
	@overload
	def additionalTags(self, arg0: javawrappers.org.hibernate.validator.cfg.defs.SafeHtmlDef.TagDef, *arg1: javawrappers.org.hibernate.validator.cfg.defs.SafeHtmlDef.TagDef, ) -> javawrappers.org.hibernate.validator.cfg.defs.SafeHtmlDef: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def additionalTagsWithAttributes(self, *arg0: javawrappers.org.hibernate.validator.constraints.SafeHtml.Tag, ) -> javawrappers.org.hibernate.validator.cfg.defs.SafeHtmlDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def baseURI(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.SafeHtmlDef: ...
	@overload
	def attributes(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.SafeHtmlDef.TagDef: ...
	@overload
	def attributes(self, arg0: javawrappers.org.hibernate.validator.cfg.defs.SafeHtmlDef.AttributeDef, *arg1: javawrappers.org.hibernate.validator.cfg.defs.SafeHtmlDef.AttributeDef, ) -> javawrappers.org.hibernate.validator.cfg.defs.SafeHtmlDef.TagDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def whitelistType(self, arg0: javawrappers.org.hibernate.validator.constraints.SafeHtml.WhiteListType, ) -> javawrappers.org.hibernate.validator.cfg.defs.SafeHtmlDef: ...


class FutureOrPresentDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class PositiveOrZeroDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class PositiveDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class DurationMaxDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def inclusive(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.defs.DurationMaxDef: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hours(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.DurationMaxDef: ...
	def nanos(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.DurationMaxDef: ...
	def minutes(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.DurationMaxDef: ...
	def notifyAll(self, ) -> None: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...
	def seconds(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.DurationMaxDef: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def days(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.DurationMaxDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def millis(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.DurationMaxDef: ...


class ISBNDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def type(self, arg0: javawrappers.org.hibernate.validator.constraints.ISBN.Type, ) -> javawrappers.org.hibernate.validator.cfg.defs.ISBNDef: ...
	def notify(self, ) -> None: ...


class NegativeOrZeroDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class CreditCardNumberDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class Mod10CheckDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def multiplier(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.Mod10CheckDef: ...
	def notifyAll(self, ) -> None: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def ignoreNonDigitCharacters(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.defs.Mod10CheckDef: ...
	def weight(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.Mod10CheckDef: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...
	def startIndex(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.Mod10CheckDef: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def endIndex(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.Mod10CheckDef: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def checkDigitIndex(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.Mod10CheckDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class FutureDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class UniqueElementsDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class LuhnCheckDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def ignoreNonDigitCharacters(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.defs.LuhnCheckDef: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...
	def startIndex(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.LuhnCheckDef: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def endIndex(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.LuhnCheckDef: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def checkDigitIndex(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.LuhnCheckDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class MaxDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def value(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.MaxDef: ...
	def notify(self, ) -> None: ...


class PastOrPresentDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class URLDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def regexp(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.URLDef: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def flags(self, *arg0: javawrappers.javax.validation.constraints.Pattern.Flag, ) -> javawrappers.org.hibernate.validator.cfg.defs.URLDef: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...
	def protocol(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.URLDef: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def port(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.URLDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def host(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.URLDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class DigitsDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def integer(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.DigitsDef: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...
	def fraction(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.DigitsDef: ...


class CurrencyDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def value(self, *arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.CurrencyDef: ...
	def notify(self, ) -> None: ...


class AssertTrueDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class DecimalMaxDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def inclusive(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.defs.DecimalMaxDef: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def value(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.DecimalMaxDef: ...
	def notify(self, ) -> None: ...


class Mod11CheckDef:
	def __init__(self, ): ...
	def treatCheck11As(self, arg0: Union[string, JString], ) -> javawrappers.org.hibernate.validator.cfg.defs.Mod11CheckDef: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def ignoreNonDigitCharacters(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.defs.Mod11CheckDef: ...
	def threshold(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.Mod11CheckDef: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def processingDirection(self, arg0: javawrappers.org.hibernate.validator.constraints.Mod11Check.ProcessingDirection, ) -> javawrappers.org.hibernate.validator.cfg.defs.Mod11CheckDef: ...
	def notify(self, ) -> None: ...
	def startIndex(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.Mod11CheckDef: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def endIndex(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.Mod11CheckDef: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def checkDigitIndex(self, arg0: Union[int, JInt], ) -> javawrappers.org.hibernate.validator.cfg.defs.Mod11CheckDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def treatCheck10As(self, arg0: Union[string, JString], ) -> javawrappers.org.hibernate.validator.cfg.defs.Mod11CheckDef: ...


class NotEmptyDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class ParameterScriptAssertDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def lang(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.ParameterScriptAssertDef: ...
	def notify(self, ) -> None: ...
	def script(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.defs.ParameterScriptAssertDef: ...


class EANDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def type(self, arg0: javawrappers.org.hibernate.validator.constraints.EAN.Type, ) -> javawrappers.org.hibernate.validator.cfg.defs.EANDef: ...
	def notify(self, ) -> None: ...


class AssertFalseDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class PastDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class DurationMinDef:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def inclusive(self, arg0: Union[int, JBoolean], ) -> javawrappers.org.hibernate.validator.cfg.defs.DurationMinDef: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hours(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.DurationMinDef: ...
	def nanos(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.DurationMinDef: ...
	def minutes(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.DurationMinDef: ...
	def notifyAll(self, ) -> None: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...
	def seconds(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.DurationMinDef: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def days(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.DurationMinDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def millis(self, arg0: Union[long, JLong], ) -> javawrappers.org.hibernate.validator.cfg.defs.DurationMinDef: ...


