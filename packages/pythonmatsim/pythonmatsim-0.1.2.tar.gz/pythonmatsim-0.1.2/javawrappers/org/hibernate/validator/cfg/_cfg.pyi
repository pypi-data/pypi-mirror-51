################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.hibernate.validator.cfg
import javawrappers.org.hibernate.validator.cfg.context

from jpype.types import *
from typing import Union

from typing import overload

class ConstraintMapping:
	def constraintDefinition(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.ConstraintDefinitionContext: ...
	def type(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.context.TypeConstraintMappingContext: ...


class AnnotationDef:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ConstraintDef:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


class GenericConstraintDef:
	def __init__(self, arg0: javawrappers.java.lang.Class, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def payload(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def param(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> javawrappers.org.hibernate.validator.cfg.GenericConstraintDef: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def groups(self, *arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def message(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.cfg.ConstraintDef: ...
	def notify(self, ) -> None: ...


