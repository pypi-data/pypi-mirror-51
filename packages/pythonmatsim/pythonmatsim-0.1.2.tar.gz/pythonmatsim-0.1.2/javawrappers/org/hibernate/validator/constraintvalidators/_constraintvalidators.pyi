################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.hibernate.validator.constraints
import javawrappers.java.lang.annotation
import javawrappers.javax.validation

from jpype.types import *
from typing import Union

from typing import overload

class RegexpURLValidator:
	def __init__(self, ): ...
	class ValueHolder:
		def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def getPort(self, ) -> Union[int, JInt]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getProtocol(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...
		def getHost(self, ) -> javawrappers.java.lang.String: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getPort(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.CharSequence, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.ConstraintValidatorContext, ) -> Union[int, JBoolean]: ...
	def getProtocol(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, arg0: javawrappers.java.lang.annotation.Annotation, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.org.hibernate.validator.constraints.URL, ) -> None: ...
	def getHost(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


