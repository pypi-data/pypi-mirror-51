################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang.reflect
import javawrappers.org.hibernate.validator.internal.xml
import javawrappers.java.util
import javawrappers.javax.validation.valueextraction
import javawrappers.javax.xml.stream
import javawrappers.org.hibernate.validator.internal.util.logging
import javawrappers.org.hibernate.validator.spi.scripting
import javawrappers.org.hibernate.validator.internal.metadata.descriptor
import javawrappers.java.lang.annotation
import javawrappers.org.hibernate.validator.internal.metadata.location
import javawrappers.java.lang
import javawrappers.java.time
import javawrappers.org.hibernate.validator.internal.engine.messageinterpolation.parser
import javawrappers.java.util.regex
import javawrappers.java.lang.invoke
import javawrappers.org.jboss.logging
import javawrappers.javax.validation

from jpype.types import *
from typing import Union

from typing import overload

class Messages:
	def validatedConstructorMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def parameterizedTypesWithMoreThanOneTypeArgument(self, ) -> javawrappers.java.lang.String: ...
	def validatedConstructorCreatedInstanceMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def classCannotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def propertyPathCannotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def validatedMethodMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def annotationTypeMustBeAnnotatedWithConstraint(self, ) -> javawrappers.java.lang.String: ...
	def parameterMustNotBeNull(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def validatedObjectMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def unableToUseResourceBundleAggregation(self, ) -> javawrappers.java.lang.String: ...
	def annotationTypeMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def constraintOnConstructorOfNonStaticInnerClass(self, ) -> javawrappers.java.lang.String: ...
	def classIsNull(self, ) -> javawrappers.java.lang.String: ...
	def groupMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def beanTypeCannotBeNull(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def mustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def mustNotBeNull(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def methodNameMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def parameterMustNotBeEmpty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def validatedParameterArrayMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def beanTypeMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def inputStreamCannotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def propertyNameMustNotBeEmpty(self, ) -> javawrappers.java.lang.String: ...


class Log:
	def getValueExtractorForTypeAndTypeUseAlreadyPresentException(self, arg0: javawrappers.javax.validation.valueextraction.ValueExtractor, arg1: javawrappers.javax.validation.valueextraction.ValueExtractor, ) -> javawrappers.javax.validation.valueextraction.ValueExtractorDeclarationException: ...
	def getUnableToInitializeELExpressionFactoryException(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.javax.validation.ValidationException: ...
	def getConstrainedElementConfiguredMultipleTimesException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getParallelDefinitionsOfValueExtractorsException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.valueextraction.ValueExtractorDefinitionException: ...
	def getInvalidRangeException(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	def getErrorWhileExtractingValuesInValueExtractorException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getImplicitConstraintTargetInAmbiguousConfigurationException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getUnableToInstantiateTraversableResolverClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToReachPropertyToValidateException(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.Path, ) -> javawrappers.javax.validation.ValidationException: ...
	def getVoidMethodsMustNotBeConstrainedException(self, arg0: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getInconsistentFailFastConfigurationException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	def getInvalidLengthForFractionPartException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: Union[long, JLong], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: Union[long, JLong], arg4: Union[long, JLong], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: Union[long, JLong], arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], arg3: Union[long, JLong], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: javawrappers.java.lang.Object, ) -> None: ...
	def getWrongTypeForMessageParameterException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getParameterConstraintsDefinedInMethodsFromParallelTypesException(self, arg0: javawrappers.java.lang.reflect.Executable, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getBeanClassHasAlreadyBeConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	def getNonTerminatedParameterException(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], ) -> javawrappers.org.hibernate.validator.internal.engine.messageinterpolation.parser.MessageDescriptorFormatException: ...
	def logTemporalValidationTolerance(self, arg0: javawrappers.java.time.Duration, ) -> None: ...
	def getUnableToFindPropertyWithAccessException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.annotation.ElementType, ) -> javawrappers.javax.validation.ValidationException: ...
	def warnElIsUnsupported(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getUnableToInstantiateParameterNameProviderClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.ValidationException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getMethodHasAlreadyBeConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToGetAnnotationAttributeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def version(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getHasToBeAPrimitiveTypeException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def unknownJvmVersion(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getUnableToFindAnnotationDefDeclaredMethods(self, arg0: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getHasToBeABoxedTypeException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getContainerElementTypeHasAlreadyBeenConfiguredViaXmlMappingConfigurationException(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation, arg1: javawrappers.org.hibernate.validator.internal.xml.ContainerElementTypePath, ) -> javawrappers.javax.validation.ValidationException: ...
	def getReturnValueHasAlreadyBeConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToInstantiateScriptEvaluatorFactoryClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getValidatorForCrossParameterConstraintMustEitherValidateObjectOrObjectArrayException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getUnableToFindAnnotationAttributeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.NoSuchMethodException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getAttemptToSpecifyAnArrayWhereSingleValueIsExpectedException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	def getBeanClassHasAlreadyBeConfiguredInXmlException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getValueExtractorDeclaresExtractedValueMultipleTimesException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.valueextraction.ValueExtractorDefinitionException: ...
	def getCharacterIsNotADigitException(self, arg0: Union[string, JString], ) -> javawrappers.java.lang.NumberFormatException: ...
	def getErrorDuringCallOfTraversableResolverIsReachableException(self, arg0: javawrappers.java.lang.RuntimeException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getBeanDoesNotContainThePropertyException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToInstantiateValueExtractorClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.ValidationException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getElementTypeHasToBeFieldOrMethodException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def getNoValueExtractorFoundForTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.TypeVariable, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	@overload
	def getNoValueExtractorFoundForTypeException(self, arg0: javawrappers.java.lang.reflect.Type, arg1: javawrappers.java.lang.reflect.TypeVariable, arg2: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def usingMessageInterpolator(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	def getUnableToConvertTypeToClassException(self, arg0: javawrappers.java.lang.reflect.Type, ) -> javawrappers.javax.validation.ValidationException: ...
	def getValidationAppliesToParameterMustHaveReturnTypeConstraintTargetException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getWrongPayloadClassException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getConstructorHasAlreadyBeConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToGetMostSpecificValueExtractorDueToSeveralMaximallySpecificValueExtractorsDeclaredException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.util.Collection, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getGroupConversionOnNonCascadingElementException(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def usingValidationProvider(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	def logValidatorFactoryScopedConfiguration(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	def getTryingToInstantiateAnnotationWithUnknownAttributesException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.util.Set, ) -> javawrappers.java.lang.RuntimeException: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	def getMissingActualTypeArgumentForTypeParameterException(self, arg0: javawrappers.java.lang.reflect.TypeVariable, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getExceptionOccurredDuringMessageInterpolationException(self, arg0: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getDuplicateDefinitionsOfValueExtractorException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.valueextraction.ValueExtractorDeclarationException: ...
	def getUnableToDetermineSchemaVersionException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.xml.stream.XMLStreamException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getBeanDoesNotContainConstructorException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.util.List, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	def getMinCannotBeNegativeException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getErrorExecutingScriptException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluationException: ...
	def getCrossParameterConstraintOnMethodWithoutParametersException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getValidateOnExecutionOnOverriddenOrInterfaceMethodException(self, arg0: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToCreateXMLEventReader(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getLengthCannotBeNegativeException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getMultiplierCannotBeNegativeException(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getMaxCannotBeNegativeException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getAtLeastOneCustomMessageMustBeCreatedException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	def getEmptyElementOnlySupportedWhenCharSequenceIsExpectedExpection(self, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def info(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: JArray(javawrappers.java.lang.Object, 1), arg3: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def info(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def info(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def info(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Throwable, ) -> None: ...
	def getUnableToExpandDefaultGroupListException(self, arg0: javawrappers.java.util.List, arg1: javawrappers.java.util.List, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	def getInvalidCheckDigitException(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getMethodsFromParallelTypesMustNotDefineGroupConversionsForCascadedReturnValueException(self, arg0: javawrappers.java.lang.reflect.Executable, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getCyclicDependencyInGroupsDefinitionException(self, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	def usingConstraintValidatorFactory(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	def getValidationAppliesToParameterMustNotBeDefinedForNonGenericAndCrossParameterConstraintException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getSequenceDefinitionsNotAllowedException(self, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	def getCrossParameterConstraintHasNoValidatorException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getInvalidNumberFormatException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.NumberFormatException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getParameterHasAlreadyBeConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Executable, arg2: Union[int, JInt], ) -> javawrappers.javax.validation.ValidationException: ...
	def getWrongTypeForGroupsParameterException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.ClassCastException, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getErrorDuringScriptExecutionException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getWeightCannotBeNegativeException(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getNoUnwrapperFoundForTypeException(self, arg0: javawrappers.java.lang.reflect.Type, ) -> javawrappers.javax.validation.ValidationException: ...
	def getOverridingConstraintDefinitionsInMultipleMappingFilesException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToInstantiateClockProviderClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.ValidationException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getComposedAndComposingConstraintsHaveDifferentTypesException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Class, arg2: javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.ConstraintType, arg3: javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.ConstraintType, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	@overload
	def warn(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: JArray(javawrappers.java.lang.Object, 1), arg3: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def warn(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def warn(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warn(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Throwable, ) -> None: ...
	def getUnableToLoadConstraintAnnotationClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getEndIndexCannotBeNegativeException(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getBeanDoesNotContainMethodException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.util.List, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToParseValidationXmlFileException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToAccessMemberException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getPropertyNotDefinedByValidatedTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def fatal(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatal(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: JArray(javawrappers.java.lang.Object, 1), arg3: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def fatal(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def fatal(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Throwable, ) -> None: ...
	def getNullIsAnInvalidTypeForAConstraintValidatorException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	def getWrongAttributeTypeForOverriddenConstraintException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getUnableToInstantiateConstraintValidatorFactoryClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.ValidationException, ) -> javawrappers.javax.validation.ValidationException: ...
	def isTraceEnabled(self, ) -> Union[int, JBoolean]: ...
	def getAtLeastOneGroupHasToBeSpecifiedException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getConstraintParametersCannotStartWithValidException(self, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getParameterConfigurationAlteredInSubTypeException(self, arg0: javawrappers.java.lang.reflect.Executable, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getUnableToFindProviderException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	def getWrongAnnotationAttributeTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Class, arg3: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToInstantiateMessageInterpolatorClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getIsNotAnAnnotationException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getReservedParameterNamesException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getBeanDoesNotContainTheFieldException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getMultipleValidatorsForSameTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Type, arg2: javawrappers.java.lang.Class, arg3: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.UnexpectedTypeException: ...
	def getCannotMixDirectAnnotationAndListContainerOnComposedConstraintException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getUnableToInitializeConstraintValidatorException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.RuntimeException, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def getInvalidPropertyPathException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def getInvalidPropertyPathException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getInvalidExecutableParameterIndexException(self, arg0: javawrappers.java.lang.reflect.Executable, arg1: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getNoDefaultGroupInGroupSequenceException(self, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	def getGenericAndCrossParameterConstraintDoesNotDefineValidationAppliesToParameterException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getUnwrappingOfConstraintDescriptorNotSupportedYetException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToParseTemporalValidationToleranceException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def unableToCloseInputStream(self, ) -> None: ...
	def getInconsistentValueUnwrappingConfigurationBetweenFieldAndItsGetterException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getExceptionDuringIsValidCallException(self, arg0: javawrappers.java.lang.RuntimeException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getCrossParameterConstraintOnFieldException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Member, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	@overload
	def getUnexpectedParameterValueException(self, arg0: javawrappers.java.lang.ClassCastException, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def getUnexpectedParameterValueException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnsupportedSchemaVersionException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getParameterIsNotAValidCallException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	def getNestedParameterException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.engine.messageinterpolation.parser.MessageDescriptorFormatException: ...
	def parsingXMLFile(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getInvalidReturnTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.ClassCastException, ) -> javawrappers.javax.validation.ValidationException: ...
	def ignoringXmlConfiguration(self, ) -> None: ...
	def getStartIndexCannotBeNegativeException(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getUnableToGetCurrentTimeFromClockProvider(self, arg0: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getNoTypeArgumentIndexIsGivenForTypeWithMultipleTypeArgumentsException(self, arg0: javawrappers.java.lang.reflect.Type, ) -> javawrappers.javax.validation.ValidationException: ...
	def getTypeIsNotAParameterizedNorArrayTypeException(self, arg0: javawrappers.java.lang.reflect.Type, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToCastException(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.ClassCastException: ...
	def getConstructorIsDefinedTwiceInMappingXmlForBeanException(self, arg0: javawrappers.java.lang.reflect.Constructor, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getReturnValueIsNotAValidCallException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	def getInvalidRegularExpressionException(self, arg0: javawrappers.java.util.regex.PatternSyntaxException, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getUnableToRetrieveAnnotationParameterValueException(self, arg0: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getIllegalArgumentException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getMemberIsNeitherAFieldNorAMethodException(self, arg0: javawrappers.java.lang.reflect.Member, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getWrongDefaultValueForGroupsParameterException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getUnableToCreateAnnotationDescriptor(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Throwable, ) -> javawrappers.javax.validation.ValidationException: ...
	def isEnabled(self, arg0: javawrappers.org.jboss.logging.Logger.Level, ) -> Union[int, JBoolean]: ...
	def getUnableToFindTypeParameterInClass(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def getScriptMustReturnTrueOrFalseException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	@overload
	def getScriptMustReturnTrueOrFalseException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def isDebugEnabled(self, ) -> Union[int, JBoolean]: ...
	def usingScriptEvaluatorFactory(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	def getErrorDuringCallOfTraversableResolverIsCascadableException(self, arg0: javawrappers.java.lang.RuntimeException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getParametersOrReturnValueConstraintTargetGivenAtNonExecutableException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.javax.validation.ConstraintTarget, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getInvalidLengthForIntegerPartException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def usingClockProvider(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	@overload
	def log(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Object, arg3: JArray(javawrappers.java.lang.Object, 1), arg4: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def log(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def log(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def log(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Throwable, ) -> None: ...
	def getConstraintWithoutMandatoryParameterException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getInvalidTypeArgumentIndexException(self, arg0: javawrappers.java.lang.reflect.Type, arg1: Union[int, JInt], ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToNarrowNodeTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.javax.validation.ElementKind, arg2: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.ClassCastException: ...
	def getNoValueProvidedForAnnotationAttributeException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getContainerElementConstraintsAndCascadedValidationNotSupportedOnArraysException(self, arg0: javawrappers.java.lang.reflect.Type, ) -> javawrappers.javax.validation.ValidationException: ...
	def getOverriddenConstraintAttributeNotFoundException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getInvalidParameterCountForExecutableException(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getInvalidBigDecimalFormatException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.NumberFormatException, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def isInfoEnabled(self, ) -> Union[int, JBoolean]: ...
	def getTreatCheckAsIsNotADigitNorALetterException(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getMultipleCrossParameterValidatorClassesException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getWrongDefaultGroupSequenceProviderTypeException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	def getUnableToAccessMethodException(self, arg0: javawrappers.java.lang.invoke.MethodHandles.Lookup, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.String, arg3: JArray(javawrappers.java.lang.Object, 1), arg4: javawrappers.java.lang.Throwable, ) -> javawrappers.javax.validation.ValidationException: ...
	def getMethodOrConstructorNotDefinedByValidatedTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getUnableToParsePropertyPathException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def logConstraintValidatorPayload(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def getInvalidJavaIdentifierException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getMethodReturnValueMustNotBeMarkedMoreThanOnceForCascadedValidationException(self, arg0: javawrappers.java.lang.reflect.Executable, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getMoreThanOneValidatorFoundForTypeException(self, arg0: javawrappers.java.lang.reflect.Type, arg1: javawrappers.java.util.Collection, ) -> javawrappers.javax.validation.UnexpectedTypeException: ...
	def evaluatingExpressionLanguageExpressionCausedException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> None: ...
	def getMultipleGroupConversionsForSameSourceException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.util.Collection, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	@overload
	def logv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, arg5: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, arg5: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, *arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, *arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, arg5: javawrappers.java.lang.Object, arg6: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	def getOnlyUnboundWildcardTypeArgumentsSupportedForContainerTypeOfValueExtractorException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.valueextraction.ValueExtractorDefinitionException: ...
	def getErrorParsingMappingFileException(self, arg0: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToLoadClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.ClassLoader, arg2: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getGroupHasToBeAnInterfaceException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getPropertyPathMustProvideIndexOrMapKeyException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getCrossParameterConstraintOnClassException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	def getMethodIsDefinedTwiceInMappingXmlForBeanException(self, arg0: javawrappers.java.lang.reflect.Method, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, *arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, arg5: javawrappers.java.lang.Object, arg6: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, arg5: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, arg5: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, *arg4: javawrappers.java.lang.Object, ) -> None: ...
	def getUnableToOpenInputStreamForMappingFileException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getExtractedValueOnTypeParameterOfContainerTypeMayNotDefineTypeAttributeException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.valueextraction.ValueExtractorDefinitionException: ...
	def errorInExpressionLanguage(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> None: ...
	def getUnableToInstantiateValidationProviderClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def usingTraversableResolver(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	def getParameterTypesDoNotMatchException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Type, arg2: Union[int, JInt], arg3: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getMixingImplicitWithOtherExecutableTypesException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def getUnableToInstantiateException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def getUnableToInstantiateException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: Union[long, JLong], arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], arg3: Union[long, JLong], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: Union[long, JLong], arg4: Union[long, JLong], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: Union[long, JLong], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	def unableToCloseXMLFileInputStream(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def unableToCreateSchema(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def getContainerElementTypeHasAlreadyBeenConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.reflect.Type, ) -> javawrappers.javax.validation.ValidationException: ...
	def getConstraintValidatorFactoryMustNotReturnNullException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getValueExtractorFailsToDeclareExtractedValueException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.valueextraction.ValueExtractorDefinitionException: ...
	def getWrongDefaultValueForPayloadParameterException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getTypeNotSupportedForUnwrappingException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	def getBeanClassMustBePartOfRedefinedDefaultGroupSequenceException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	def getInconsistentConfigurationException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	def getUnableToCreateAnnotationForConfiguredConstraintException(self, arg0: javawrappers.java.lang.RuntimeException, ) -> javawrappers.javax.validation.ValidationException: ...
	def addingValueExtractor(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	def getNoValueExtractorFoundForUnwrapException(self, arg0: javawrappers.java.lang.reflect.Type, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def unknownPropertyInExpressionLanguage(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> None: ...
	def getUnableToExpandGroupSequenceException(self, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	@overload
	def error(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def error(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: JArray(javawrappers.java.lang.Object, 1), arg3: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def error(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def error(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def getInvalidUnwrappingConfigurationForConstraintException(self, arg0: javawrappers.java.lang.reflect.Member, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getAnnotationDoesNotContainAParameterException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getNoValidatorFoundForTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.UnexpectedTypeException: ...
	@overload
	def trace(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: JArray(javawrappers.java.lang.Object, 1), arg3: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def trace(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def trace(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def trace(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Throwable, ) -> None: ...
	def getInvalidDefaultGroupSequenceDefinitionException(self, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	def getCreationOfScriptExecutorFailedException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getGroupConversionForSequenceException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getParameterNodeAddedForNonCrossParameterConstraintException(self, arg0: javawrappers.javax.validation.Path, ) -> javawrappers.java.lang.IllegalStateException: ...
	def getPropertyNameCannotBeNullOrEmptyException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def debug(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def debug(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debug(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def debug(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: JArray(javawrappers.java.lang.Object, 1), arg3: javawrappers.java.lang.Throwable, ) -> None: ...
	def getImplicitUnwrappingNotAllowedWhenSeveralMaximallySpecificValueExtractorsMarkedWithUnwrapByDefaultDeclaredException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.util.Collection, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getPropertyHasAlreadyBeConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getWrongTypeForPayloadParameterException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.ClassCastException, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getValidationAppliesToParameterMustHaveDefaultValueImplicitException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getInvalidCharValueException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getInvalidParameterTypeException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getInvalidLengthOfParameterMetaDataListException(self, arg0: javawrappers.java.lang.reflect.Executable, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getCrossParameterElementHasAlreadyBeConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ValidationException: ...
	def getIsDefinedTwiceInMappingXmlForBeanException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def usingParameterNameProvider(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	def getConstraintHasAlreadyBeenConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getIsNotAConstraintValidatorClassException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToFindScriptEngineException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorNotFoundException: ...


class Messages_$bundle:
	def validatedConstructorMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def parameterizedTypesWithMoreThanOneTypeArgument(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def validatedConstructorCreatedInstanceMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def annotationTypeMustBeAnnotatedWithConstraint(self, ) -> javawrappers.java.lang.String: ...
	def parameterMustNotBeNull(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def annotationTypeMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def constraintOnConstructorOfNonStaticInnerClass(self, ) -> javawrappers.java.lang.String: ...
	def classIsNull(self, ) -> javawrappers.java.lang.String: ...
	def beanTypeCannotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def methodNameMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def parameterMustNotBeEmpty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def classCannotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def propertyPathCannotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def validatedMethodMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def validatedObjectMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def unableToUseResourceBundleAggregation(self, ) -> javawrappers.java.lang.String: ...
	def groupMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def mustNotBeNull(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def mustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def validatedParameterArrayMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def beanTypeMustNotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def inputStreamCannotBeNull(self, ) -> javawrappers.java.lang.String: ...
	def propertyNameMustNotBeEmpty(self, ) -> javawrappers.java.lang.String: ...


class LoggerFactory:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def make(arg0: javawrappers.java.lang.invoke.MethodHandles.Lookup, ) -> javawrappers.org.hibernate.validator.internal.util.logging.Log: ...
	def notify(self, ) -> None: ...


class Log_$logger:
	def __init__(self, arg0: javawrappers.org.jboss.logging.Logger, ): ...
	def getValueExtractorForTypeAndTypeUseAlreadyPresentException(self, arg0: javawrappers.javax.validation.valueextraction.ValueExtractor, arg1: javawrappers.javax.validation.valueextraction.ValueExtractor, ) -> javawrappers.javax.validation.valueextraction.ValueExtractorDeclarationException: ...
	def getUnableToInitializeELExpressionFactoryException(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.javax.validation.ValidationException: ...
	def getConstrainedElementConfiguredMultipleTimesException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getParallelDefinitionsOfValueExtractorsException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.valueextraction.ValueExtractorDefinitionException: ...
	def getInvalidRangeException(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	def getErrorWhileExtractingValuesInValueExtractorException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getImplicitConstraintTargetInAmbiguousConfigurationException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getUnableToInstantiateTraversableResolverClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToReachPropertyToValidateException(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.validation.Path, ) -> javawrappers.javax.validation.ValidationException: ...
	def getVoidMethodsMustNotBeConstrainedException(self, arg0: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getInconsistentFailFastConfigurationException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	def getInvalidLengthForFractionPartException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], arg3: Union[long, JLong], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: Union[long, JLong], arg4: Union[long, JLong], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: Union[long, JLong], arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: Union[long, JLong], ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	def getWrongTypeForMessageParameterException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getParameterConstraintsDefinedInMethodsFromParallelTypesException(self, arg0: javawrappers.java.lang.reflect.Executable, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getBeanClassHasAlreadyBeConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warnf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	def getNonTerminatedParameterException(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], ) -> javawrappers.org.hibernate.validator.internal.engine.messageinterpolation.parser.MessageDescriptorFormatException: ...
	def logTemporalValidationTolerance(self, arg0: javawrappers.java.time.Duration, ) -> None: ...
	def getUnableToFindPropertyWithAccessException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.annotation.ElementType, ) -> javawrappers.javax.validation.ValidationException: ...
	def warnElIsUnsupported(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getUnableToInstantiateParameterNameProviderClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.ValidationException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getMethodHasAlreadyBeConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToGetAnnotationAttributeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def version(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getHasToBeAPrimitiveTypeException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def unknownJvmVersion(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getUnableToFindAnnotationDefDeclaredMethods(self, arg0: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getHasToBeABoxedTypeException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getContainerElementTypeHasAlreadyBeenConfiguredViaXmlMappingConfigurationException(self, arg0: javawrappers.org.hibernate.validator.internal.metadata.location.ConstraintLocation, arg1: javawrappers.org.hibernate.validator.internal.xml.ContainerElementTypePath, ) -> javawrappers.javax.validation.ValidationException: ...
	def getReturnValueHasAlreadyBeConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToInstantiateScriptEvaluatorFactoryClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getValidatorForCrossParameterConstraintMustEitherValidateObjectOrObjectArrayException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getUnableToFindAnnotationAttributeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.NoSuchMethodException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getAttemptToSpecifyAnArrayWhereSingleValueIsExpectedException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	def getBeanClassHasAlreadyBeConfiguredInXmlException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getValueExtractorDeclaresExtractedValueMultipleTimesException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.valueextraction.ValueExtractorDefinitionException: ...
	def getCharacterIsNotADigitException(self, arg0: Union[string, JString], ) -> javawrappers.java.lang.NumberFormatException: ...
	def getErrorDuringCallOfTraversableResolverIsReachableException(self, arg0: javawrappers.java.lang.RuntimeException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getBeanDoesNotContainThePropertyException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToInstantiateValueExtractorClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.ValidationException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getElementTypeHasToBeFieldOrMethodException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def getNoValueExtractorFoundForTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.TypeVariable, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	@overload
	def getNoValueExtractorFoundForTypeException(self, arg0: javawrappers.java.lang.reflect.Type, arg1: javawrappers.java.lang.reflect.TypeVariable, arg2: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def usingMessageInterpolator(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	def getUnableToConvertTypeToClassException(self, arg0: javawrappers.java.lang.reflect.Type, ) -> javawrappers.javax.validation.ValidationException: ...
	def getValidationAppliesToParameterMustHaveReturnTypeConstraintTargetException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getWrongPayloadClassException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getConstructorHasAlreadyBeConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToGetMostSpecificValueExtractorDueToSeveralMaximallySpecificValueExtractorsDeclaredException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.util.Collection, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getGroupConversionOnNonCascadingElementException(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def usingValidationProvider(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	def logValidatorFactoryScopedConfiguration(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	def getTryingToInstantiateAnnotationWithUnknownAttributesException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.util.Set, ) -> javawrappers.java.lang.RuntimeException: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infov(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	def getMissingActualTypeArgumentForTypeParameterException(self, arg0: javawrappers.java.lang.reflect.TypeVariable, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getExceptionOccurredDuringMessageInterpolationException(self, arg0: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getDuplicateDefinitionsOfValueExtractorException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.valueextraction.ValueExtractorDeclarationException: ...
	def getUnableToDetermineSchemaVersionException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.xml.stream.XMLStreamException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getBeanDoesNotContainConstructorException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.util.List, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatalf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getMinCannotBeNegativeException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def infof(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getErrorExecutingScriptException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluationException: ...
	def getCrossParameterConstraintOnMethodWithoutParametersException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getValidateOnExecutionOnOverriddenOrInterfaceMethodException(self, arg0: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToCreateXMLEventReader(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getLengthCannotBeNegativeException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getMultiplierCannotBeNegativeException(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getMaxCannotBeNegativeException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getAtLeastOneCustomMessageMustBeCreatedException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	def getEmptyElementOnlySupportedWhenCharSequenceIsExpectedExpection(self, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def info(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: JArray(javawrappers.java.lang.Object, 1), arg3: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def info(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def info(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def info(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Throwable, ) -> None: ...
	def getUnableToExpandDefaultGroupListException(self, arg0: javawrappers.java.util.List, arg1: javawrappers.java.util.List, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	def getInvalidCheckDigitException(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getMethodsFromParallelTypesMustNotDefineGroupConversionsForCascadedReturnValueException(self, arg0: javawrappers.java.lang.reflect.Executable, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getCyclicDependencyInGroupsDefinitionException(self, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	def usingConstraintValidatorFactory(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	def getValidationAppliesToParameterMustNotBeDefinedForNonGenericAndCrossParameterConstraintException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getSequenceDefinitionsNotAllowedException(self, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	def getCrossParameterConstraintHasNoValidatorException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getInvalidNumberFormatException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.NumberFormatException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getParameterHasAlreadyBeConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Executable, arg2: Union[int, JInt], ) -> javawrappers.javax.validation.ValidationException: ...
	def getWrongTypeForGroupsParameterException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.ClassCastException, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getErrorDuringScriptExecutionException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getWeightCannotBeNegativeException(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getNoUnwrapperFoundForTypeException(self, arg0: javawrappers.java.lang.reflect.Type, ) -> javawrappers.javax.validation.ValidationException: ...
	def getOverridingConstraintDefinitionsInMultipleMappingFilesException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToInstantiateClockProviderClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.ValidationException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getComposedAndComposingConstraintsHaveDifferentTypesException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Class, arg2: javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.ConstraintType, arg3: javawrappers.org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl.ConstraintType, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	@overload
	def warn(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: JArray(javawrappers.java.lang.Object, 1), arg3: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def warn(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def warn(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def warn(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Throwable, ) -> None: ...
	def getUnableToLoadConstraintAnnotationClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getEndIndexCannotBeNegativeException(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getBeanDoesNotContainMethodException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.util.List, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToParseValidationXmlFileException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToAccessMemberException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def notifyAll(self, ) -> None: ...
	def getPropertyNotDefinedByValidatedTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def fatal(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def fatal(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: JArray(javawrappers.java.lang.Object, 1), arg3: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def fatal(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def fatal(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Throwable, ) -> None: ...
	def getNullIsAnInvalidTypeForAConstraintValidatorException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getWrongAttributeTypeForOverriddenConstraintException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getUnableToInstantiateConstraintValidatorFactoryClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.validation.ValidationException, ) -> javawrappers.javax.validation.ValidationException: ...
	def isTraceEnabled(self, ) -> Union[int, JBoolean]: ...
	def getAtLeastOneGroupHasToBeSpecifiedException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getConstraintParametersCannotStartWithValidException(self, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getParameterConfigurationAlteredInSubTypeException(self, arg0: javawrappers.java.lang.reflect.Executable, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getUnableToFindProviderException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debugv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	def getWrongAnnotationAttributeTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Class, arg3: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToInstantiateMessageInterpolatorClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getIsNotAnAnnotationException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getReservedParameterNamesException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getBeanDoesNotContainTheFieldException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getMultipleValidatorsForSameTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Type, arg2: javawrappers.java.lang.Class, arg3: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.UnexpectedTypeException: ...
	def getCannotMixDirectAnnotationAndListContainerOnComposedConstraintException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getUnableToInitializeConstraintValidatorException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.RuntimeException, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def getInvalidPropertyPathException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def getInvalidPropertyPathException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getInvalidExecutableParameterIndexException(self, arg0: javawrappers.java.lang.reflect.Executable, arg1: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getNoDefaultGroupInGroupSequenceException(self, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	def getGenericAndCrossParameterConstraintDoesNotDefineValidationAppliesToParameterException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getUnwrappingOfConstraintDescriptorNotSupportedYetException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToParseTemporalValidationToleranceException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def unableToCloseInputStream(self, ) -> None: ...
	def getInconsistentValueUnwrappingConfigurationBetweenFieldAndItsGetterException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getExceptionDuringIsValidCallException(self, arg0: javawrappers.java.lang.RuntimeException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getCrossParameterConstraintOnFieldException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Member, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	@overload
	def getUnexpectedParameterValueException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def getUnexpectedParameterValueException(self, arg0: javawrappers.java.lang.ClassCastException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnsupportedSchemaVersionException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getParameterIsNotAValidCallException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	def getNestedParameterException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.engine.messageinterpolation.parser.MessageDescriptorFormatException: ...
	def parsingXMLFile(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getInvalidReturnTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.ClassCastException, ) -> javawrappers.javax.validation.ValidationException: ...
	def ignoringXmlConfiguration(self, ) -> None: ...
	def getStartIndexCannotBeNegativeException(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getUnableToGetCurrentTimeFromClockProvider(self, arg0: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getNoTypeArgumentIndexIsGivenForTypeWithMultipleTypeArgumentsException(self, arg0: javawrappers.java.lang.reflect.Type, ) -> javawrappers.javax.validation.ValidationException: ...
	def getTypeIsNotAParameterizedNorArrayTypeException(self, arg0: javawrappers.java.lang.reflect.Type, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToCastException(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.ClassCastException: ...
	def getConstructorIsDefinedTwiceInMappingXmlForBeanException(self, arg0: javawrappers.java.lang.reflect.Constructor, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getReturnValueIsNotAValidCallException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	def getInvalidRegularExpressionException(self, arg0: javawrappers.java.util.regex.PatternSyntaxException, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getUnableToRetrieveAnnotationParameterValueException(self, arg0: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getIllegalArgumentException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getMemberIsNeitherAFieldNorAMethodException(self, arg0: javawrappers.java.lang.reflect.Member, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getWrongDefaultValueForGroupsParameterException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getUnableToCreateAnnotationDescriptor(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Throwable, ) -> javawrappers.javax.validation.ValidationException: ...
	def isEnabled(self, arg0: javawrappers.org.jboss.logging.Logger.Level, ) -> Union[int, JBoolean]: ...
	def getUnableToFindTypeParameterInClass(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def getScriptMustReturnTrueOrFalseException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	@overload
	def getScriptMustReturnTrueOrFalseException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def isDebugEnabled(self, ) -> Union[int, JBoolean]: ...
	def usingScriptEvaluatorFactory(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	def getErrorDuringCallOfTraversableResolverIsCascadableException(self, arg0: javawrappers.java.lang.RuntimeException, ) -> javawrappers.javax.validation.ValidationException: ...
	def getParametersOrReturnValueConstraintTargetGivenAtNonExecutableException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.javax.validation.ConstraintTarget, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getInvalidLengthForIntegerPartException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def usingClockProvider(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	@overload
	def log(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Object, arg3: JArray(javawrappers.java.lang.Object, 1), arg4: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def log(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def log(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def log(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Throwable, ) -> None: ...
	def getConstraintWithoutMandatoryParameterException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getInvalidTypeArgumentIndexException(self, arg0: javawrappers.java.lang.reflect.Type, arg1: Union[int, JInt], ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToNarrowNodeTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.javax.validation.ElementKind, arg2: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.ClassCastException: ...
	def getNoValueProvidedForAnnotationAttributeException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getContainerElementConstraintsAndCascadedValidationNotSupportedOnArraysException(self, arg0: javawrappers.java.lang.reflect.Type, ) -> javawrappers.javax.validation.ValidationException: ...
	def notify(self, ) -> None: ...
	def getOverriddenConstraintAttributeNotFoundException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getInvalidParameterCountForExecutableException(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getInvalidBigDecimalFormatException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.NumberFormatException, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def isInfoEnabled(self, ) -> Union[int, JBoolean]: ...
	def getTreatCheckAsIsNotADigitNorALetterException(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getMultipleCrossParameterValidatorClassesException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getWrongDefaultGroupSequenceProviderTypeException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	def getUnableToAccessMethodException(self, arg0: javawrappers.java.lang.invoke.MethodHandles.Lookup, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.String, arg3: JArray(javawrappers.java.lang.Object, 1), arg4: javawrappers.java.lang.Throwable, ) -> javawrappers.javax.validation.ValidationException: ...
	def getMethodOrConstructorNotDefinedByValidatedTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getUnableToParsePropertyPathException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def logConstraintValidatorPayload(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def getInvalidJavaIdentifierException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getMethodReturnValueMustNotBeMarkedMoreThanOnceForCascadedValidationException(self, arg0: javawrappers.java.lang.reflect.Executable, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getMoreThanOneValidatorFoundForTypeException(self, arg0: javawrappers.java.lang.reflect.Type, arg1: javawrappers.java.util.Collection, ) -> javawrappers.javax.validation.UnexpectedTypeException: ...
	def evaluatingExpressionLanguageExpressionCausedException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> None: ...
	def getMultipleGroupConversionsForSameSourceException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.util.Collection, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	@overload
	def logv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, arg5: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, *arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, arg5: javawrappers.java.lang.Object, arg6: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, arg5: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, *arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logv(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	def getOnlyUnboundWildcardTypeArgumentsSupportedForContainerTypeOfValueExtractorException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.valueextraction.ValueExtractorDefinitionException: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getErrorParsingMappingFileException(self, arg0: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToLoadClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.ClassLoader, arg2: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def getGroupHasToBeAnInterfaceException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getPropertyPathMustProvideIndexOrMapKeyException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getCrossParameterConstraintOnClassException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorf(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	def getMethodIsDefinedTwiceInMappingXmlForBeanException(self, arg0: javawrappers.java.lang.reflect.Method, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def logf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, *arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.Throwable, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, arg5: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, *arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, arg5: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jboss.logging.Logger.Level, arg2: javawrappers.java.lang.Throwable, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.Object, arg5: javawrappers.java.lang.Object, arg6: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def logf(self, arg0: javawrappers.org.jboss.logging.Logger.Level, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	def getUnableToOpenInputStreamForMappingFileException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getExtractedValueOnTypeParameterOfContainerTypeMayNotDefineTypeAttributeException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.valueextraction.ValueExtractorDefinitionException: ...
	def errorInExpressionLanguage(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> None: ...
	def getUnableToInstantiateValidationProviderClassException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	def usingTraversableResolver(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	def getParameterTypesDoNotMatchException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Type, arg2: Union[int, JInt], arg3: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getMixingImplicitWithOtherExecutableTypesException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def getUnableToInstantiateException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def getUnableToInstantiateException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, arg2: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: Union[long, JLong], arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: Union[long, JLong], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: Union[long, JLong], arg4: Union[long, JLong], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], arg3: Union[long, JLong], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracef(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	def unableToCloseXMLFileInputStream(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def unableToCreateSchema(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def getContainerElementTypeHasAlreadyBeenConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.reflect.Type, ) -> javawrappers.javax.validation.ValidationException: ...
	def getConstraintValidatorFactoryMustNotReturnNullException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getValueExtractorFailsToDeclareExtractedValueException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.valueextraction.ValueExtractorDefinitionException: ...
	def getWrongDefaultValueForPayloadParameterException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getTypeNotSupportedForUnwrappingException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def tracev(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	def getBeanClassMustBePartOfRedefinedDefaultGroupSequenceException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	def getInconsistentConfigurationException(self, ) -> javawrappers.javax.validation.ValidationException: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, arg4: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.String, *arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Object, arg3: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def errorv(self, arg0: javawrappers.java.lang.Throwable, arg1: javawrappers.java.lang.String, *arg2: javawrappers.java.lang.Object, ) -> None: ...
	def getUnableToCreateAnnotationForConfiguredConstraintException(self, arg0: javawrappers.java.lang.RuntimeException, ) -> javawrappers.javax.validation.ValidationException: ...
	def addingValueExtractor(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	def getNoValueExtractorFoundForUnwrapException(self, arg0: javawrappers.java.lang.reflect.Type, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def unknownPropertyInExpressionLanguage(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> None: ...
	def getUnableToExpandGroupSequenceException(self, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	@overload
	def error(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def error(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: JArray(javawrappers.java.lang.Object, 1), arg3: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def error(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def error(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def getInvalidUnwrappingConfigurationForConstraintException(self, arg0: javawrappers.java.lang.reflect.Member, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getAnnotationDoesNotContainAParameterException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getNoValidatorFoundForTypeException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.UnexpectedTypeException: ...
	@overload
	def trace(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: JArray(javawrappers.java.lang.Object, 1), arg3: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def trace(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def trace(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def trace(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Throwable, ) -> None: ...
	def getInvalidDefaultGroupSequenceDefinitionException(self, ) -> javawrappers.javax.validation.GroupDefinitionException: ...
	def getCreationOfScriptExecutorFailedException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Exception, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getGroupConversionForSequenceException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getParameterNodeAddedForNonCrossParameterConstraintException(self, arg0: javawrappers.javax.validation.Path, ) -> javawrappers.java.lang.IllegalStateException: ...
	def getPropertyNameCannotBeNullOrEmptyException(self, ) -> javawrappers.java.lang.IllegalArgumentException: ...
	@overload
	def debug(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def debug(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def debug(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Throwable, ) -> None: ...
	@overload
	def debug(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: JArray(javawrappers.java.lang.Object, 1), arg3: javawrappers.java.lang.Throwable, ) -> None: ...
	def getImplicitUnwrappingNotAllowedWhenSeveralMaximallySpecificValueExtractorsMarkedWithUnwrapByDefaultDeclaredException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.util.Collection, ) -> javawrappers.javax.validation.ConstraintDeclarationException: ...
	def getPropertyHasAlreadyBeConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getWrongTypeForPayloadParameterException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.ClassCastException, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getValidationAppliesToParameterMustHaveDefaultValueImplicitException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ConstraintDefinitionException: ...
	def getInvalidCharValueException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.validation.ValidationException: ...
	def getInvalidParameterTypeException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getInvalidLengthOfParameterMetaDataListException(self, arg0: javawrappers.java.lang.reflect.Executable, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.IllegalArgumentException: ...
	def getCrossParameterElementHasAlreadyBeConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.reflect.Executable, ) -> javawrappers.javax.validation.ValidationException: ...
	def getIsDefinedTwiceInMappingXmlForBeanException(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def usingParameterNameProvider(self, arg0: javawrappers.java.lang.Class, ) -> None: ...
	def getConstraintHasAlreadyBeenConfiguredViaProgrammaticApiException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getIsNotAConstraintValidatorClassException(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.validation.ValidationException: ...
	def getUnableToFindScriptEngineException(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.spi.scripting.ScriptEvaluatorNotFoundException: ...


