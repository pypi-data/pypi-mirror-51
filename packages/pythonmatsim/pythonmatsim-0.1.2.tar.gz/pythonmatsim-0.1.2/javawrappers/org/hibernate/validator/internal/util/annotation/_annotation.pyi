################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.hibernate.validator.internal.util.annotation
import javawrappers.java.lang.annotation
import javawrappers.javax.validation

from jpype.types import *
from typing import Union

from typing import overload

class AnnotationDescriptor:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.annotation.Annotation, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.util.annotation.AnnotationDescriptor, ): ...
	class Builder:
		@overload
		def __init__(self, arg0: javawrappers.java.lang.Class, ): ...
		@overload
		def __init__(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.util.Map, ): ...
		@overload
		def __init__(self, arg0: javawrappers.java.lang.annotation.Annotation, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def setAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.util.annotation.AnnotationDescriptor: ...
		def getType(self, ) -> javawrappers.java.lang.Class: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def hasAttribute(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def hasAttribute(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def getMandatoryAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...
	def setAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def getAttribute(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.util.annotation.AnnotationDescriptor: ...
	@overload
	def getType(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def getType(self, ) -> javawrappers.java.lang.Class: ...
	def getAnnotation(self, ) -> javawrappers.java.lang.annotation.Annotation: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...


class AnnotationFactory:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def create(arg0: javawrappers.org.hibernate.validator.internal.util.annotation.AnnotationDescriptor, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ConstraintAnnotationDescriptor:
	@overload
	def __init__(self, arg0: javawrappers.org.hibernate.validator.internal.util.annotation.AnnotationDescriptor, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.annotation.Annotation, ): ...
	class Builder:
		@overload
		def __init__(self, arg0: javawrappers.java.lang.Class, ): ...
		@overload
		def __init__(self, arg0: javawrappers.java.lang.annotation.Annotation, ): ...
		@overload
		def __init__(self, arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.util.Map, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def hasAttribute(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
		def setMessage(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.util.annotation.ConstraintAnnotationDescriptor.Builder: ...
		def notify(self, ) -> None: ...
		def setAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
		def getType(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.util.annotation.AnnotationDescriptor: ...
		@overload
		def build(self, ) -> javawrappers.org.hibernate.validator.internal.util.annotation.ConstraintAnnotationDescriptor: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def setPayload(self, arg0: JArray(javawrappers.java.lang.Class, 1), ) -> javawrappers.org.hibernate.validator.internal.util.annotation.ConstraintAnnotationDescriptor.Builder: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def setValidationAppliesTo(self, arg0: javawrappers.javax.validation.ConstraintTarget, ) -> javawrappers.org.hibernate.validator.internal.util.annotation.ConstraintAnnotationDescriptor.Builder: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def setGroups(self, arg0: JArray(javawrappers.java.lang.Class, 1), ) -> javawrappers.org.hibernate.validator.internal.util.annotation.ConstraintAnnotationDescriptor.Builder: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def hasAttribute(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def getValidationAppliesTo(self, ) -> javawrappers.javax.validation.ConstraintTarget: ...
	def getMandatoryAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def setMessage(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.hibernate.validator.internal.util.annotation.ConstraintAnnotationDescriptor.Builder: ...
	def notify(self, ) -> None: ...
	def getPayload(self, ) -> JArray(javawrappers.java.lang.Class, 1): ...
	def setAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def getAttribute(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.Object: ...
	@overload
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.util.annotation.AnnotationDescriptor: ...
	@overload
	def build(self, ) -> javawrappers.org.hibernate.validator.internal.util.annotation.ConstraintAnnotationDescriptor: ...
	@overload
	def getType(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def getType(self, ) -> javawrappers.java.lang.Class: ...
	def getAnnotation(self, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def setPayload(self, arg0: JArray(javawrappers.java.lang.Class, 1), ) -> javawrappers.org.hibernate.validator.internal.util.annotation.ConstraintAnnotationDescriptor.Builder: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setValidationAppliesTo(self, arg0: javawrappers.javax.validation.ConstraintTarget, ) -> javawrappers.org.hibernate.validator.internal.util.annotation.ConstraintAnnotationDescriptor.Builder: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setGroups(self, arg0: JArray(javawrappers.java.lang.Class, 1), ) -> javawrappers.org.hibernate.validator.internal.util.annotation.ConstraintAnnotationDescriptor.Builder: ...
	def getGroups(self, ) -> JArray(javawrappers.java.lang.Class, 1): ...


