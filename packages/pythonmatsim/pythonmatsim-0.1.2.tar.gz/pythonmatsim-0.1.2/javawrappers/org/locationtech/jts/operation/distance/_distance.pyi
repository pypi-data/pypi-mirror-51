################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.locationtech.jts.index.strtree
import javawrappers.org.locationtech.jts.operation.distance
import javawrappers.org.locationtech.jts.geom

from jpype.types import *
from typing import Union

from typing import overload

class DistanceOp:
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: javawrappers.org.locationtech.jts.geom.Geometry, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: javawrappers.org.locationtech.jts.geom.Geometry, arg2: Union[float, JDouble], ): ...
	def nearestLocations(self, ) -> JArray(javawrappers.org.locationtech.jts.operation.distance.GeometryLocation, 1): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def closestPoints(self, ) -> JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1): ...
	@overload
	@staticmethod
	def closestPoints(arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: javawrappers.org.locationtech.jts.geom.Geometry, ) -> JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1): ...
	@overload
	@staticmethod
	def distance(arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: javawrappers.org.locationtech.jts.geom.Geometry, ) -> Union[float, JDouble]: ...
	@overload
	def distance(self, ) -> Union[float, JDouble]: ...
	def closestLocations(self, ) -> JArray(javawrappers.org.locationtech.jts.operation.distance.GeometryLocation, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def isWithinDistance(arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: javawrappers.org.locationtech.jts.geom.Geometry, arg2: Union[float, JDouble], ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def nearestPoints(self, ) -> JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1): ...
	@overload
	@staticmethod
	def nearestPoints(arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: javawrappers.org.locationtech.jts.geom.Geometry, ) -> JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1): ...
	def notify(self, ) -> None: ...


class FacetSequenceTreeBuilder:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def build(arg0: javawrappers.org.locationtech.jts.geom.Geometry, ) -> javawrappers.org.locationtech.jts.index.strtree.STRtree: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ConnectedElementPointFilter:
	def filter(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getCoordinates(arg0: javawrappers.org.locationtech.jts.geom.Geometry, ) -> javawrappers.java.util.List: ...
	def notify(self, ) -> None: ...


class IndexedFacetDistance:
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ): ...
	class FacetSequenceDistance:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def distance(self, arg0: javawrappers.org.locationtech.jts.index.strtree.ItemBoundable, arg1: javawrappers.org.locationtech.jts.index.strtree.ItemBoundable, ) -> Union[float, JDouble]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getDistance(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ) -> Union[float, JDouble]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def distance(arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: javawrappers.org.locationtech.jts.geom.Geometry, ) -> Union[float, JDouble]: ...
	@overload
	def distance(self, arg0: javawrappers.org.locationtech.jts.index.strtree.ItemBoundable, arg1: javawrappers.org.locationtech.jts.index.strtree.ItemBoundable, ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class FacetSequence:
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.CoordinateSequence, arg1: Union[int, JInt], arg2: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.CoordinateSequence, arg1: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isPoint(self, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getCoordinate(self, arg0: Union[int, JInt], ) -> javawrappers.org.locationtech.jts.geom.Coordinate: ...
	def distance(self, arg0: javawrappers.org.locationtech.jts.operation.distance.FacetSequence, ) -> Union[float, JDouble]: ...
	def size(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getEnvelope(self, ) -> javawrappers.org.locationtech.jts.geom.Envelope: ...
	def notify(self, ) -> None: ...


class GeometryLocation:
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: javawrappers.org.locationtech.jts.geom.Coordinate, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: Union[int, JInt], arg2: javawrappers.org.locationtech.jts.geom.Coordinate, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getCoordinate(self, ) -> javawrappers.org.locationtech.jts.geom.Coordinate: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isInsideArea(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getSegmentIndex(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def getGeometryComponent(self, ) -> javawrappers.org.locationtech.jts.geom.Geometry: ...


class ConnectedElementLocationFilter:
	def filter(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getLocations(arg0: javawrappers.org.locationtech.jts.geom.Geometry, ) -> javawrappers.java.util.List: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


