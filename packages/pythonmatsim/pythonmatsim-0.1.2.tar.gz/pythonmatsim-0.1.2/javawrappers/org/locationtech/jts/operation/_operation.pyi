################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.locationtech.jts.geom
import javawrappers.org.locationtech.jts.algorithm

from jpype.types import *
from typing import Union

from typing import overload

class GeometryGraphOperation:
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: javawrappers.org.locationtech.jts.geom.Geometry, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: javawrappers.org.locationtech.jts.geom.Geometry, arg2: javawrappers.org.locationtech.jts.algorithm.BoundaryNodeRule, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getArgGeometry(self, arg0: Union[int, JInt], ) -> javawrappers.org.locationtech.jts.geom.Geometry: ...


class BoundaryOp:
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: javawrappers.org.locationtech.jts.algorithm.BoundaryNodeRule, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getBoundary(self, ) -> javawrappers.org.locationtech.jts.geom.Geometry: ...
	@overload
	@staticmethod
	def getBoundary(arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: javawrappers.org.locationtech.jts.algorithm.BoundaryNodeRule, ) -> javawrappers.org.locationtech.jts.geom.Geometry: ...
	@overload
	@staticmethod
	def getBoundary(arg0: javawrappers.org.locationtech.jts.geom.Geometry, ) -> javawrappers.org.locationtech.jts.geom.Geometry: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class IsSimpleOp:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: javawrappers.org.locationtech.jts.algorithm.BoundaryNodeRule, ): ...
	class EndpointInfo:
		def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Coordinate, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def addEndpoint(self, arg0: Union[int, JBoolean], ) -> None: ...
		def getCoordinate(self, ) -> javawrappers.org.locationtech.jts.geom.Coordinate: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def addEndpoint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getCoordinate(self, ) -> javawrappers.org.locationtech.jts.geom.Coordinate: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isSimple(self, arg0: javawrappers.org.locationtech.jts.geom.LineString, ) -> Union[int, JBoolean]: ...
	@overload
	def isSimple(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isSimple(self, arg0: javawrappers.org.locationtech.jts.geom.MultiLineString, ) -> Union[int, JBoolean]: ...
	@overload
	def isSimple(self, arg0: javawrappers.org.locationtech.jts.geom.MultiPoint, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getNonSimpleLocation(self, ) -> javawrappers.org.locationtech.jts.geom.Coordinate: ...
	def notify(self, ) -> None: ...


