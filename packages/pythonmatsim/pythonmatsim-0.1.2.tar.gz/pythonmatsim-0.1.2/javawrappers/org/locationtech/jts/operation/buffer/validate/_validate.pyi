################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.locationtech.jts.operation.buffer.validate
import javawrappers.org.locationtech.jts.geom

from jpype.types import *
from typing import Union

from typing import overload

class DistanceToPointFinder:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def computeDistance(arg0: javawrappers.org.locationtech.jts.geom.LineSegment, arg1: javawrappers.org.locationtech.jts.geom.Coordinate, arg2: javawrappers.org.locationtech.jts.operation.buffer.validate.PointPairDistance, ) -> None: ...
	@overload
	@staticmethod
	def computeDistance(arg0: javawrappers.org.locationtech.jts.geom.Polygon, arg1: javawrappers.org.locationtech.jts.geom.Coordinate, arg2: javawrappers.org.locationtech.jts.operation.buffer.validate.PointPairDistance, ) -> None: ...
	@overload
	@staticmethod
	def computeDistance(arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: javawrappers.org.locationtech.jts.geom.Coordinate, arg2: javawrappers.org.locationtech.jts.operation.buffer.validate.PointPairDistance, ) -> None: ...
	@overload
	@staticmethod
	def computeDistance(arg0: javawrappers.org.locationtech.jts.geom.LineString, arg1: javawrappers.org.locationtech.jts.geom.Coordinate, arg2: javawrappers.org.locationtech.jts.operation.buffer.validate.PointPairDistance, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class BufferResultValidator:
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: Union[float, JDouble], arg2: javawrappers.org.locationtech.jts.geom.Geometry, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getErrorIndicator(self, ) -> javawrappers.org.locationtech.jts.geom.Geometry: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def isValid(self, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def isValid(arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: Union[float, JDouble], arg2: javawrappers.org.locationtech.jts.geom.Geometry, ) -> Union[int, JBoolean]: ...
	def getErrorLocation(self, ) -> javawrappers.org.locationtech.jts.geom.Coordinate: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getErrorMessage(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def isValidMsg(arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: Union[float, JDouble], arg2: javawrappers.org.locationtech.jts.geom.Geometry, ) -> javawrappers.java.lang.String: ...


class BufferCurveMaximumDistanceFinder:
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ): ...
	class MaxMidpointDistanceFilter:
		def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ): ...
		def filter(self, arg0: javawrappers.org.locationtech.jts.geom.CoordinateSequence, arg1: Union[int, JInt], ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def isGeometryChanged(self, ) -> Union[int, JBoolean]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def getMaxPointDistance(self, ) -> javawrappers.org.locationtech.jts.operation.buffer.validate.PointPairDistance: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def isDone(self, ) -> Union[int, JBoolean]: ...
		def notify(self, ) -> None: ...


	class MaxPointDistanceFilter:
		def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ): ...
		def filter(self, arg0: javawrappers.org.locationtech.jts.geom.Coordinate, ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def getMaxPointDistance(self, ) -> javawrappers.org.locationtech.jts.operation.buffer.validate.PointPairDistance: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def findDistance(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, ) -> Union[float, JDouble]: ...
	@overload
	def getMaxPointDistance(self, ) -> javawrappers.org.locationtech.jts.operation.buffer.validate.PointPairDistance: ...
	@overload
	def getMaxPointDistance(self, ) -> javawrappers.org.locationtech.jts.operation.buffer.validate.PointPairDistance: ...
	def notifyAll(self, ) -> None: ...
	def isDone(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	@overload
	def filter(self, arg0: javawrappers.org.locationtech.jts.geom.CoordinateSequence, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def filter(self, arg0: javawrappers.org.locationtech.jts.geom.Coordinate, ) -> None: ...
	def getDistancePoints(self, ) -> javawrappers.org.locationtech.jts.operation.buffer.validate.PointPairDistance: ...
	def isGeometryChanged(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class BufferDistanceValidator:
	def __init__(self, arg0: javawrappers.org.locationtech.jts.geom.Geometry, arg1: Union[float, JDouble], arg2: javawrappers.org.locationtech.jts.geom.Geometry, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getErrorIndicator(self, ) -> javawrappers.org.locationtech.jts.geom.Geometry: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getErrorLocation(self, ) -> javawrappers.org.locationtech.jts.geom.Coordinate: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getErrorMessage(self, ) -> javawrappers.java.lang.String: ...


class PointPairDistance:
	def __init__(self, ): ...
	def getDistance(self, ) -> Union[float, JDouble]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getCoordinate(self, arg0: Union[int, JInt], ) -> javawrappers.org.locationtech.jts.geom.Coordinate: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def setMaximum(self, arg0: javawrappers.org.locationtech.jts.geom.Coordinate, arg1: javawrappers.org.locationtech.jts.geom.Coordinate, ) -> None: ...
	@overload
	def setMaximum(self, arg0: javawrappers.org.locationtech.jts.operation.buffer.validate.PointPairDistance, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def initialize(self, ) -> None: ...
	@overload
	def initialize(self, arg0: javawrappers.org.locationtech.jts.geom.Coordinate, arg1: javawrappers.org.locationtech.jts.geom.Coordinate, ) -> None: ...
	def getCoordinates(self, ) -> JArray(javawrappers.org.locationtech.jts.geom.Coordinate, 1): ...
	def notify(self, ) -> None: ...
	@overload
	def setMinimum(self, arg0: javawrappers.org.locationtech.jts.operation.buffer.validate.PointPairDistance, ) -> None: ...
	@overload
	def setMinimum(self, arg0: javawrappers.org.locationtech.jts.geom.Coordinate, arg1: javawrappers.org.locationtech.jts.geom.Coordinate, ) -> None: ...


