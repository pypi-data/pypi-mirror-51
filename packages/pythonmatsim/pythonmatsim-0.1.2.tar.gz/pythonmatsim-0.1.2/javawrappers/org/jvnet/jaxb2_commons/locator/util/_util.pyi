################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.jvnet.jaxb2_commons.locator
import javawrappers.java.lang
import javawrappers.org.xml.sax

from jpype.types import *
from typing import Union

from typing import overload

class LocatorUtils:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def getLocation(arg0: javawrappers.org.xml.sax.Locator, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def item(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: Union[int, JInt], arg2: Union[float, JDouble], ) -> javawrappers.org.jvnet.jaxb2_commons.locator.ItemObjectLocator: ...
	@overload
	@staticmethod
	def item(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: Union[int, JInt], arg2: Union[string, JString], ) -> javawrappers.org.jvnet.jaxb2_commons.locator.ItemObjectLocator: ...
	@overload
	@staticmethod
	def item(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: Union[int, JInt], arg2: JByte, ) -> javawrappers.org.jvnet.jaxb2_commons.locator.ItemObjectLocator: ...
	@overload
	@staticmethod
	def item(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: Union[int, JInt], arg2: Union[int, JBoolean], ) -> javawrappers.org.jvnet.jaxb2_commons.locator.ItemObjectLocator: ...
	@overload
	@staticmethod
	def item(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: Union[int, JInt], arg2: javawrappers.java.lang.Object, ) -> javawrappers.org.jvnet.jaxb2_commons.locator.ItemObjectLocator: ...
	@overload
	@staticmethod
	def item(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: Union[int, JInt], arg2: Union[int, JShort], ) -> javawrappers.org.jvnet.jaxb2_commons.locator.ItemObjectLocator: ...
	@overload
	@staticmethod
	def item(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: Union[int, JInt], arg2: Union[long, JLong], ) -> javawrappers.org.jvnet.jaxb2_commons.locator.ItemObjectLocator: ...
	@overload
	@staticmethod
	def item(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.org.jvnet.jaxb2_commons.locator.ItemObjectLocator: ...
	@overload
	@staticmethod
	def item(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: Union[int, JInt], arg2: Union[float, JFloat], ) -> javawrappers.org.jvnet.jaxb2_commons.locator.ItemObjectLocator: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def property(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: javawrappers.java.lang.String, arg2: Union[int, JShort], ) -> javawrappers.org.jvnet.jaxb2_commons.locator.PropertyObjectLocator: ...
	@overload
	@staticmethod
	def property(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: javawrappers.java.lang.String, arg2: Union[string, JString], ) -> javawrappers.org.jvnet.jaxb2_commons.locator.PropertyObjectLocator: ...
	@overload
	@staticmethod
	def property(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: javawrappers.java.lang.String, arg2: JByte, ) -> javawrappers.org.jvnet.jaxb2_commons.locator.PropertyObjectLocator: ...
	@overload
	@staticmethod
	def property(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: javawrappers.java.lang.String, arg2: Union[int, JBoolean], ) -> javawrappers.org.jvnet.jaxb2_commons.locator.PropertyObjectLocator: ...
	@overload
	@staticmethod
	def property(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Object, ) -> javawrappers.org.jvnet.jaxb2_commons.locator.PropertyObjectLocator: ...
	@overload
	@staticmethod
	def property(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: javawrappers.java.lang.String, arg2: Union[long, JLong], ) -> javawrappers.org.jvnet.jaxb2_commons.locator.PropertyObjectLocator: ...
	@overload
	@staticmethod
	def property(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], ) -> javawrappers.org.jvnet.jaxb2_commons.locator.PropertyObjectLocator: ...
	@overload
	@staticmethod
	def property(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: javawrappers.java.lang.String, arg2: Union[float, JFloat], ) -> javawrappers.org.jvnet.jaxb2_commons.locator.PropertyObjectLocator: ...
	@overload
	@staticmethod
	def property(arg0: javawrappers.org.jvnet.jaxb2_commons.locator.ObjectLocator, arg1: javawrappers.java.lang.String, arg2: Union[float, JDouble], ) -> javawrappers.org.jvnet.jaxb2_commons.locator.PropertyObjectLocator: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


