################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.net
import javawrappers.javax.xml.validation
import javawrappers.java.io
import javawrappers.org.jdom2.input.sax
import javawrappers.org.jdom2
import javawrappers.org.xml.sax
import javawrappers.javax.xml.parsers

from jpype.types import *
from typing import Union

from typing import overload

class XMLReaderSAX2Factory:
	@overload
	def __init__(self, arg0: Union[int, JBoolean], arg1: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: Union[int, JBoolean], ): ...
	def createXMLReader(self, ) -> javawrappers.org.xml.sax.XMLReader: ...
	def getDriverClassName(self, ) -> javawrappers.java.lang.String: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def isValidating(self, ) -> Union[int, JBoolean]: ...


class XMLReaderXSDFactory:
	@overload
	def __init__(self, *arg0: javawrappers.java.io.File, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.ClassLoader, *arg2: javawrappers.java.io.File, ): ...
	@overload
	def __init__(self, *arg0: javawrappers.javax.xml.transform.Source, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.ClassLoader, *arg2: javawrappers.javax.xml.transform.Source, ): ...
	@overload
	def __init__(self, *arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.ClassLoader, *arg2: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, *arg0: javawrappers.java.net.URL, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.ClassLoader, *arg2: javawrappers.java.net.URL, ): ...
	def createXMLReader(self, ) -> javawrappers.org.xml.sax.XMLReader: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def isValidating(self, ) -> Union[int, JBoolean]: ...


class DefaultSAXHandlerFactory:
	def __init__(self, ): ...
	class DefaultSAXHandler:
		def __init__(self, arg0: javawrappers.org.jdom2.JDOMFactory, ): ...
		def externalEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def setIgnoringElementContentWhitespace(self, arg0: Union[int, JBoolean], ) -> None: ...
		def endPrefixMapping(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def getDocumentLocator(self, ) -> javawrappers.org.xml.sax.Locator: ...
		def endCDATA(self, ) -> None: ...
		def error(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
		def getExpandEntities(self, ) -> Union[int, JBoolean]: ...
		def notify(self, ) -> None: ...
		def notationDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
		def getCurrentElement(self, ) -> javawrappers.org.jdom2.Element: ...
		def setExpandEntities(self, arg0: Union[int, JBoolean], ) -> None: ...
		def startCDATA(self, ) -> None: ...
		def characters(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
		def startPrefixMapping(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
		def endElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def warning(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
		def setDocumentLocator(self, arg0: javawrappers.org.xml.sax.Locator, ) -> None: ...
		def ignorableWhitespace(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
		def getIgnoringElementContentWhitespace(self, ) -> Union[int, JBoolean]: ...
		def elementDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
		def startElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.org.xml.sax.Attributes, ) -> None: ...
		def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
		def fatalError(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
		def startEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def resolveEntity(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.xml.sax.InputSource: ...
		def setIgnoringBoundaryWhitespace(self, arg0: Union[int, JBoolean], ) -> None: ...
		def getFactory(self, ) -> javawrappers.org.jdom2.JDOMFactory: ...
		def endDocument(self, ) -> None: ...
		def endEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def startDocument(self, ) -> None: ...
		def startDTD(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
		def endDTD(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def skippedEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def internalEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
		def unparsedEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
		def reset(self, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def comment(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
		def attributeDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> None: ...
		def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
		def getIgnoringBoundaryWhitespace(self, ) -> Union[int, JBoolean]: ...


	def externalEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setIgnoringElementContentWhitespace(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def endPrefixMapping(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def createSAXHandler(self, arg0: javawrappers.org.jdom2.JDOMFactory, ) -> javawrappers.org.jdom2.input.sax.SAXHandler: ...
	def notifyAll(self, ) -> None: ...
	def getDocumentLocator(self, ) -> javawrappers.org.xml.sax.Locator: ...
	def endCDATA(self, ) -> None: ...
	def error(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def getExpandEntities(self, ) -> Union[int, JBoolean]: ...
	def notationDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def getCurrentElement(self, ) -> javawrappers.org.jdom2.Element: ...
	def notify(self, ) -> None: ...
	def setExpandEntities(self, arg0: Union[int, JBoolean], ) -> None: ...
	def startCDATA(self, ) -> None: ...
	def characters(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def startPrefixMapping(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def endElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def warning(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def setDocumentLocator(self, arg0: javawrappers.org.xml.sax.Locator, ) -> None: ...
	def ignorableWhitespace(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def getIgnoringElementContentWhitespace(self, ) -> Union[int, JBoolean]: ...
	def elementDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def startElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.org.xml.sax.Attributes, ) -> None: ...
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	def fatalError(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def startEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def resolveEntity(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.xml.sax.InputSource: ...
	def setIgnoringBoundaryWhitespace(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getFactory(self, ) -> javawrappers.org.jdom2.JDOMFactory: ...
	def endDocument(self, ) -> None: ...
	def endEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def startDocument(self, ) -> None: ...
	def startDTD(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def endDTD(self, ) -> None: ...
	def skippedEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def internalEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def unparsedEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	def reset(self, ) -> None: ...
	def comment(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def attributeDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> None: ...
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def getIgnoringBoundaryWhitespace(self, ) -> Union[int, JBoolean]: ...


class SAXHandler:
	@overload
	def __init__(self, arg0: javawrappers.org.jdom2.JDOMFactory, ): ...
	@overload
	def __init__(self, ): ...
	def externalEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setIgnoringElementContentWhitespace(self, arg0: Union[int, JBoolean], ) -> None: ...
	def endPrefixMapping(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getDocumentLocator(self, ) -> javawrappers.org.xml.sax.Locator: ...
	def endCDATA(self, ) -> None: ...
	def error(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def getExpandEntities(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def notationDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def getCurrentElement(self, ) -> javawrappers.org.jdom2.Element: ...
	def setExpandEntities(self, arg0: Union[int, JBoolean], ) -> None: ...
	def startCDATA(self, ) -> None: ...
	def characters(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def startPrefixMapping(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def endElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def warning(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def setDocumentLocator(self, arg0: javawrappers.org.xml.sax.Locator, ) -> None: ...
	def ignorableWhitespace(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def getIgnoringElementContentWhitespace(self, ) -> Union[int, JBoolean]: ...
	def elementDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def startElement(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.org.xml.sax.Attributes, ) -> None: ...
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	def fatalError(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def startEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def resolveEntity(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.xml.sax.InputSource: ...
	def setIgnoringBoundaryWhitespace(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getFactory(self, ) -> javawrappers.org.jdom2.JDOMFactory: ...
	def endDocument(self, ) -> None: ...
	def endEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def startDocument(self, ) -> None: ...
	def startDTD(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def endDTD(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def skippedEntity(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def internalEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def unparsedEntityDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	def reset(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def comment(self, arg0: JArray(Union[string, JString], 1), arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> None: ...
	def attributeDecl(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> None: ...
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def getIgnoringBoundaryWhitespace(self, ) -> Union[int, JBoolean]: ...


class AbstractReaderSchemaFactory:
	def __init__(self, arg0: javawrappers.javax.xml.parsers.SAXParserFactory, arg1: javawrappers.javax.xml.validation.Schema, ): ...
	def createXMLReader(self, ) -> javawrappers.org.xml.sax.XMLReader: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def isValidating(self, ) -> Union[int, JBoolean]: ...


class XMLReaderJAXPFactory:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.ClassLoader, arg2: Union[int, JBoolean], ): ...
	def createXMLReader(self, ) -> javawrappers.org.xml.sax.XMLReader: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def isValidating(self, ) -> Union[int, JBoolean]: ...


class XMLReaderSchemaFactory:
	@overload
	def __init__(self, arg0: javawrappers.javax.xml.validation.Schema, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.ClassLoader, arg2: javawrappers.javax.xml.validation.Schema, ): ...
	def createXMLReader(self, ) -> javawrappers.org.xml.sax.XMLReader: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def isValidating(self, ) -> Union[int, JBoolean]: ...


class SAXHandlerFactory:
	def createSAXHandler(self, arg0: javawrappers.org.jdom2.JDOMFactory, ) -> javawrappers.org.jdom2.input.sax.SAXHandler: ...


class SAXBuilderEngine:
	def __init__(self, arg0: javawrappers.org.xml.sax.XMLReader, arg1: javawrappers.org.jdom2.input.sax.SAXHandler, arg2: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getEntityResolver(self, ) -> javawrappers.org.xml.sax.EntityResolver: ...
	def getExpandEntities(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def isValidating(self, ) -> Union[int, JBoolean]: ...
	def getErrorHandler(self, ) -> javawrappers.org.xml.sax.ErrorHandler: ...
	@overload
	def build(self, arg0: javawrappers.java.io.Reader, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def build(self, arg0: javawrappers.java.io.Reader, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def build(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def build(self, arg0: javawrappers.org.xml.sax.InputSource, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def build(self, arg0: javawrappers.java.io.InputStream, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def build(self, arg0: javawrappers.java.io.File, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def build(self, arg0: javawrappers.java.net.URL, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def build(self, arg0: javawrappers.java.io.InputStream, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Document: ...
	def getDTDHandler(self, ) -> javawrappers.org.xml.sax.DTDHandler: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getJDOMFactory(self, ) -> javawrappers.org.jdom2.JDOMFactory: ...
	def getIgnoringBoundaryWhitespace(self, ) -> Union[int, JBoolean]: ...
	def getIgnoringElementContentWhitespace(self, ) -> Union[int, JBoolean]: ...


class XMLReaderJDOMFactory:
	def createXMLReader(self, ) -> javawrappers.org.xml.sax.XMLReader: ...
	def isValidating(self, ) -> Union[int, JBoolean]: ...


class SAXEngine:
	def getErrorHandler(self, ) -> javawrappers.org.xml.sax.ErrorHandler: ...
	@overload
	def build(self, arg0: javawrappers.java.io.InputStream, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def build(self, arg0: javawrappers.java.io.Reader, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def build(self, arg0: javawrappers.java.io.Reader, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def build(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def build(self, arg0: javawrappers.org.xml.sax.InputSource, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def build(self, arg0: javawrappers.java.io.InputStream, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def build(self, arg0: javawrappers.java.io.File, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def build(self, arg0: javawrappers.java.net.URL, ) -> javawrappers.org.jdom2.Document: ...
	def getDTDHandler(self, ) -> javawrappers.org.xml.sax.DTDHandler: ...
	def getJDOMFactory(self, ) -> javawrappers.org.jdom2.JDOMFactory: ...
	def getEntityResolver(self, ) -> javawrappers.org.xml.sax.EntityResolver: ...
	def getExpandEntities(self, ) -> Union[int, JBoolean]: ...
	def isValidating(self, ) -> Union[int, JBoolean]: ...
	def getIgnoringBoundaryWhitespace(self, ) -> Union[int, JBoolean]: ...
	def getIgnoringElementContentWhitespace(self, ) -> Union[int, JBoolean]: ...


class AbstractReaderXSDFactory:
	@overload
	def __init__(self, arg0: javawrappers.javax.xml.parsers.SAXParserFactory, arg1: javawrappers.org.jdom2.input.sax.AbstractReaderXSDFactory.SchemaFactoryProvider, *arg2: javawrappers.javax.xml.transform.Source, ): ...
	@overload
	def __init__(self, arg0: javawrappers.javax.xml.parsers.SAXParserFactory, arg1: javawrappers.org.jdom2.input.sax.AbstractReaderXSDFactory.SchemaFactoryProvider, *arg2: javawrappers.java.io.File, ): ...
	@overload
	def __init__(self, arg0: javawrappers.javax.xml.parsers.SAXParserFactory, arg1: javawrappers.org.jdom2.input.sax.AbstractReaderXSDFactory.SchemaFactoryProvider, *arg2: javawrappers.java.net.URL, ): ...
	@overload
	def __init__(self, arg0: javawrappers.javax.xml.parsers.SAXParserFactory, arg1: javawrappers.org.jdom2.input.sax.AbstractReaderXSDFactory.SchemaFactoryProvider, *arg2: javawrappers.java.lang.String, ): ...
	class SchemaFactoryProvider:
		def getSchemaFactory(self, ) -> javawrappers.javax.xml.validation.SchemaFactory: ...


	def createXMLReader(self, ) -> javawrappers.org.xml.sax.XMLReader: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSchemaFactory(self, ) -> javawrappers.javax.xml.validation.SchemaFactory: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def isValidating(self, ) -> Union[int, JBoolean]: ...


class XMLReaders:
	NONVALIDATING: XMLReaders = ...
	DTDVALIDATING: XMLReaders = ...
	XSDVALIDATING: XMLReaders = ...
	class XSDSingleton:
		INSTANCE: XMLReaders.XSDSingleton = ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.input.sax.XMLReaders.XSDSingleton: ...
		def notifyAll(self, ) -> None: ...
		@staticmethod
		def values() -> JArray(javawrappers.org.jdom2.input.sax.XMLReaders.XSDSingleton, 1): ...
		def validates(self, ) -> Union[int, JBoolean]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
		def supply(self, ) -> javawrappers.javax.xml.parsers.SAXParserFactory: ...
		def notify(self, ) -> None: ...
		def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def name(self, ) -> javawrappers.java.lang.String: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def ordinal(self, ) -> Union[int, JInt]: ...


	class DTDSingleton:
		INSTANCE: XMLReaders.DTDSingleton = ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.input.sax.XMLReaders.DTDSingleton: ...
		def notifyAll(self, ) -> None: ...
		@staticmethod
		def values() -> JArray(javawrappers.org.jdom2.input.sax.XMLReaders.DTDSingleton, 1): ...
		def validates(self, ) -> Union[int, JBoolean]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
		def supply(self, ) -> javawrappers.javax.xml.parsers.SAXParserFactory: ...
		def notify(self, ) -> None: ...
		def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def name(self, ) -> javawrappers.java.lang.String: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def ordinal(self, ) -> Union[int, JInt]: ...


	class NONSingleton:
		INSTANCE: XMLReaders.NONSingleton = ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.input.sax.XMLReaders.NONSingleton: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
		def notifyAll(self, ) -> None: ...
		@staticmethod
		def values() -> JArray(javawrappers.org.jdom2.input.sax.XMLReaders.NONSingleton, 1): ...
		def validates(self, ) -> Union[int, JBoolean]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
		def supply(self, ) -> javawrappers.javax.xml.parsers.SAXParserFactory: ...
		def notify(self, ) -> None: ...
		def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def name(self, ) -> javawrappers.java.lang.String: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def ordinal(self, ) -> Union[int, JInt]: ...


	class FactorySupplier:
		def validates(self, ) -> Union[int, JBoolean]: ...
		def supply(self, ) -> javawrappers.javax.xml.parsers.SAXParserFactory: ...


	def createXMLReader(self, ) -> javawrappers.org.xml.sax.XMLReader: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.input.sax.XMLReaders.NONSingleton: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.input.sax.XMLReaders.DTDSingleton: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.input.sax.XMLReaders: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.input.sax.XMLReaders.XSDSingleton: ...
	@overload
	def validates(self, ) -> Union[int, JBoolean]: ...
	@overload
	def validates(self, ) -> Union[int, JBoolean]: ...
	@overload
	def validates(self, ) -> Union[int, JBoolean]: ...
	@overload
	def validates(self, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	@overload
	@staticmethod
	def values() -> JArray(javawrappers.org.jdom2.input.sax.XMLReaders.NONSingleton, 1): ...
	@overload
	@staticmethod
	def values() -> JArray(javawrappers.org.jdom2.input.sax.XMLReaders.DTDSingleton, 1): ...
	@overload
	@staticmethod
	def values() -> JArray(javawrappers.org.jdom2.input.sax.XMLReaders, 1): ...
	@overload
	@staticmethod
	def values() -> JArray(javawrappers.org.jdom2.input.sax.XMLReaders.XSDSingleton, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	@overload
	def supply(self, ) -> javawrappers.javax.xml.parsers.SAXParserFactory: ...
	@overload
	def supply(self, ) -> javawrappers.javax.xml.parsers.SAXParserFactory: ...
	@overload
	def supply(self, ) -> javawrappers.javax.xml.parsers.SAXParserFactory: ...
	@overload
	def supply(self, ) -> javawrappers.javax.xml.parsers.SAXParserFactory: ...
	def notify(self, ) -> None: ...
	def isValidating(self, ) -> Union[int, JBoolean]: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class BuilderErrorHandler:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def fatalError(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def warning(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def error(self, arg0: javawrappers.org.xml.sax.SAXParseException, ) -> None: ...
	def notify(self, ) -> None: ...


