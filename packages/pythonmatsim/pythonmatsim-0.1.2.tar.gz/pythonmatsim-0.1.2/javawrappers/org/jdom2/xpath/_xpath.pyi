################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.jdom2.xpath
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.jdom2
import javawrappers.org.jdom2.filter

from jpype.types import *
from typing import Union

from typing import overload

class XPathBuilder:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.filter.Filter, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setVariable(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getVariable(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def notify(self, ) -> None: ...
	def getFilter(self, ) -> javawrappers.org.jdom2.filter.Filter: ...
	def getExpression(self, ) -> javawrappers.java.lang.String: ...
	def getNamespace(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Namespace: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setNamespaces(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def compileWith(self, arg0: javawrappers.org.jdom2.xpath.XPathFactory, ) -> javawrappers.org.jdom2.xpath.XPathExpression: ...
	@overload
	def setNamespace(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def setNamespace(self, arg0: javawrappers.org.jdom2.Namespace, ) -> Union[int, JBoolean]: ...


class XPathHelper:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def getAbsolutePath(arg0: javawrappers.org.jdom2.Content, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getAbsolutePath(arg0: javawrappers.org.jdom2.Attribute, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getRelativePath(arg0: javawrappers.org.jdom2.Attribute, arg1: javawrappers.org.jdom2.Content, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getRelativePath(arg0: javawrappers.org.jdom2.Attribute, arg1: javawrappers.org.jdom2.Attribute, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getRelativePath(arg0: javawrappers.org.jdom2.Content, arg1: javawrappers.org.jdom2.Attribute, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getRelativePath(arg0: javawrappers.org.jdom2.Content, arg1: javawrappers.org.jdom2.Content, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class XPathFactory:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def instance() -> javawrappers.org.jdom2.xpath.XPathFactory: ...
	@overload
	def compile(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.xpath.XPathExpression: ...
	@overload
	def compile(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.filter.Filter, arg2: javawrappers.java.util.Map, arg3: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.xpath.XPathExpression: ...
	@overload
	def compile(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.filter.Filter, ) -> javawrappers.org.jdom2.xpath.XPathExpression: ...
	@overload
	def compile(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.filter.Filter, arg2: javawrappers.java.util.Map, *arg3: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.xpath.XPathExpression: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newInstance(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.xpath.XPathFactory: ...
	def notify(self, ) -> None: ...


class XPathDiagnostic:
	def getRawResults(self, ) -> javawrappers.java.util.List: ...
	def getResult(self, ) -> javawrappers.java.util.List: ...
	def isFirstOnly(self, ) -> Union[int, JBoolean]: ...
	def getFilteredResults(self, ) -> javawrappers.java.util.List: ...
	def getXPathExpression(self, ) -> javawrappers.org.jdom2.xpath.XPathExpression: ...
	def getContext(self, ) -> javawrappers.java.lang.Object: ...


class XPath:
	def __init__(self, ): ...
	class XPathString:
		def __init__(self, arg0: javawrappers.java.lang.String, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def valueOf(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def setVariable(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@staticmethod
	def setXPathClass(arg0: javawrappers.java.lang.Class, ) -> None: ...
	@staticmethod
	def newInstance(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.xpath.XPath: ...
	def notify(self, ) -> None: ...
	@overload
	def selectNodes(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.util.List: ...
	@overload
	@staticmethod
	def selectNodes(arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	@overload
	def addNamespace(self, arg0: javawrappers.org.jdom2.Namespace, ) -> None: ...
	@overload
	def addNamespace(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	@staticmethod
	def selectSingleNode(arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def selectSingleNode(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def numberValueOf(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Number: ...
	def getXPath(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class XPathExpression:
	def getFilter(self, ) -> javawrappers.org.jdom2.filter.Filter: ...
	def getExpression(self, ) -> javawrappers.java.lang.String: ...
	def getNamespace(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Namespace: ...
	def getNamespaces(self, ) -> JArray(javawrappers.org.jdom2.Namespace, 1): ...
	def diagnose(self, arg0: javawrappers.java.lang.Object, arg1: Union[int, JBoolean], ) -> javawrappers.org.jdom2.xpath.XPathDiagnostic: ...
	def clone(self, ) -> javawrappers.org.jdom2.xpath.XPathExpression: ...
	@overload
	def setVariable(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def setVariable(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, arg2: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getVariable(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getVariable(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ) -> javawrappers.java.lang.Object: ...
	def evaluate(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.util.List: ...
	def evaluateFirst(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...


