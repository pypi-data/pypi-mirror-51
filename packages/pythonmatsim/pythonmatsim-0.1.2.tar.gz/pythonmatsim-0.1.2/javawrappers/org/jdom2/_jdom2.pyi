################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.net
import javawrappers.java.io
import javawrappers.org.jdom2.util
import javawrappers.org.jdom2
import javawrappers.org.jdom2.filter

from jpype.types import *
from typing import Union

from typing import overload

class DataConversionException:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class Content:
	class CType:
		Comment: Content.CType = ...
		Element: Content.CType = ...
		ProcessingInstruction: Content.CType = ...
		EntityRef: Content.CType = ...
		Text: Content.CType = ...
		CDATA: Content.CType = ...
		DocType: Content.CType = ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Content.CType: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@staticmethod
		def values() -> JArray(javawrappers.org.jdom2.Content.CType, 1): ...
		def name(self, ) -> javawrappers.java.lang.String: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def ordinal(self, ) -> Union[int, JInt]: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.org.jdom2.Parent: ...
	def getParentElement(self, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Content.CType: ...
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.jdom2.Content.CType, 1): ...
	def notifyAll(self, ) -> None: ...
	def getNamespacesInScope(self, ) -> javawrappers.java.util.List: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def getNamespacesIntroduced(self, ) -> javawrappers.java.util.List: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def getValue(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.CloneBase: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.Content: ...
	def getNamespacesInherited(self, ) -> javawrappers.java.util.List: ...
	def detach(self, ) -> javawrappers.org.jdom2.Content: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def ordinal(self, ) -> Union[int, JInt]: ...
	def getCType(self, ) -> javawrappers.org.jdom2.Content.CType: ...


class CDATA:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getParent(self, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def getParent(self, ) -> javawrappers.org.jdom2.Parent: ...
	def getParentElement(self, ) -> javawrappers.org.jdom2.Element: ...
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getNamespacesInScope(self, ) -> javawrappers.java.util.List: ...
	def getTextTrim(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getNamespacesIntroduced(self, ) -> javawrappers.java.util.List: ...
	def getValue(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTextNormalize(self, ) -> javawrappers.java.lang.String: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getNamespacesInherited(self, ) -> javawrappers.java.util.List: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.CloneBase: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.Content: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.CDATA: ...
	@overload
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.Text: ...
	@overload
	def detach(self, ) -> javawrappers.org.jdom2.CDATA: ...
	@overload
	def detach(self, ) -> javawrappers.org.jdom2.Text: ...
	@overload
	def detach(self, ) -> javawrappers.org.jdom2.Content: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def normalizeString(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def append(self, arg0: javawrappers.org.jdom2.Text, ) -> None: ...
	@overload
	def append(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getCType(self, ) -> javawrappers.org.jdom2.Content.CType: ...
	@overload
	def setText(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Text: ...
	@overload
	def setText(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.CDATA: ...


class IllegalNameException:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class Attribute:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.AttributeType, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.AttributeType, arg3: javawrappers.org.jdom2.Namespace, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: javawrappers.org.jdom2.Namespace, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.Namespace, ): ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Attribute: ...
	def getAttributeType(self, ) -> javawrappers.org.jdom2.AttributeType: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getIntValue(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def getDoubleValue(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def setSpecified(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getQualifiedName(self, ) -> javawrappers.java.lang.String: ...
	def getNamespacePrefix(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getLongValue(self, ) -> Union[long, JLong]: ...
	def getNamespacesInherited(self, ) -> javawrappers.java.util.List: ...
	def getBooleanValue(self, ) -> Union[int, JBoolean]: ...
	def isSpecified(self, ) -> Union[int, JBoolean]: ...
	def getParent(self, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def setAttributeType(self, arg0: Union[int, JInt], ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def setAttributeType(self, arg0: javawrappers.org.jdom2.AttributeType, ) -> javawrappers.org.jdom2.Attribute: ...
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	def getNamespacesInScope(self, ) -> javawrappers.java.util.List: ...
	def getNamespacesIntroduced(self, ) -> javawrappers.java.util.List: ...
	def getValue(self, ) -> javawrappers.java.lang.String: ...
	def getNamespace(self, ) -> javawrappers.org.jdom2.Namespace: ...
	def getFloatValue(self, ) -> Union[float, JFloat]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setValue(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.CloneBase: ...
	def detach(self, ) -> javawrappers.org.jdom2.Attribute: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getNamespaceURI(self, ) -> javawrappers.java.lang.String: ...
	def setNamespace(self, arg0: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Attribute: ...


class DocType:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getParent(self, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def getParent(self, ) -> javawrappers.org.jdom2.Parent: ...
	def getSystemID(self, ) -> javawrappers.java.lang.String: ...
	def getParentElement(self, ) -> javawrappers.org.jdom2.Element: ...
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	def setElementName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	def notifyAll(self, ) -> None: ...
	def getNamespacesInScope(self, ) -> javawrappers.java.util.List: ...
	def setPublicID(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	def notify(self, ) -> None: ...
	def getNamespacesIntroduced(self, ) -> javawrappers.java.util.List: ...
	def getPublicID(self, ) -> javawrappers.java.lang.String: ...
	def getElementName(self, ) -> javawrappers.java.lang.String: ...
	def getValue(self, ) -> javawrappers.java.lang.String: ...
	def getInternalSubset(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setSystemID(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	def getNamespacesInherited(self, ) -> javawrappers.java.util.List: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.CloneBase: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.Content: ...
	@overload
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def detach(self, ) -> javawrappers.org.jdom2.Content: ...
	@overload
	def detach(self, ) -> javawrappers.org.jdom2.DocType: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setInternalSubset(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getCType(self, ) -> javawrappers.org.jdom2.Content.CType: ...


class JDOMException:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Throwable, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class IllegalDataException:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class IllegalAddException:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class Text:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getParent(self, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def getParent(self, ) -> javawrappers.org.jdom2.Parent: ...
	def getParentElement(self, ) -> javawrappers.org.jdom2.Element: ...
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getNamespacesInScope(self, ) -> javawrappers.java.util.List: ...
	def getTextTrim(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getNamespacesIntroduced(self, ) -> javawrappers.java.util.List: ...
	def getValue(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTextNormalize(self, ) -> javawrappers.java.lang.String: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getNamespacesInherited(self, ) -> javawrappers.java.util.List: ...
	@overload
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.CloneBase: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.Text: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.Content: ...
	@overload
	def detach(self, ) -> javawrappers.org.jdom2.Content: ...
	@overload
	def detach(self, ) -> javawrappers.org.jdom2.Text: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def normalizeString(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def append(self, arg0: javawrappers.org.jdom2.Text, ) -> None: ...
	@overload
	def append(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getCType(self, ) -> javawrappers.org.jdom2.Content.CType: ...
	def setText(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Text: ...


class Element:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getAttributeValue(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, arg2: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def getAttributeValue(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def getAttributeValue(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def getAttributeValue(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ) -> javawrappers.java.lang.String: ...
	@overload
	def removeChild(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ) -> Union[int, JBoolean]: ...
	@overload
	def removeChild(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def removeNamespaceDeclaration(self, arg0: javawrappers.org.jdom2.Namespace, ) -> None: ...
	def coalesceText(self, arg0: Union[int, JBoolean], ) -> Union[int, JBoolean]: ...
	def indexOf(self, arg0: javawrappers.org.jdom2.Content, ) -> Union[int, JInt]: ...
	def getAttributes(self, ) -> javawrappers.java.util.List: ...
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getChild(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def getChild(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Element: ...
	def getNamespacesInScope(self, ) -> javawrappers.java.util.List: ...
	@overload
	def removeContent(self, arg0: javawrappers.org.jdom2.filter.Filter, ) -> javawrappers.java.util.List: ...
	@overload
	def removeContent(self, ) -> javawrappers.java.util.List: ...
	@overload
	def removeContent(self, arg0: Union[int, JInt], ) -> javawrappers.org.jdom2.Content: ...
	@overload
	def removeContent(self, arg0: javawrappers.org.jdom2.Content, ) -> Union[int, JBoolean]: ...
	def getNamespacesIntroduced(self, ) -> javawrappers.java.util.List: ...
	def isAncestor(self, arg0: javawrappers.org.jdom2.Element, ) -> Union[int, JBoolean]: ...
	@overload
	def getChildren(self, ) -> javawrappers.java.util.List: ...
	@overload
	def getChildren(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ) -> javawrappers.java.util.List: ...
	@overload
	def getChildren(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	def getAdditionalNamespaces(self, ) -> javawrappers.java.util.List: ...
	@overload
	def getNamespace(self, ) -> javawrappers.org.jdom2.Namespace: ...
	@overload
	def getNamespace(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Namespace: ...
	@overload
	def getChildTextTrim(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ) -> javawrappers.java.lang.String: ...
	@overload
	def getChildTextTrim(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def sortAttributes(self, arg0: javawrappers.java.util.Comparator, ) -> None: ...
	def getNamespaceURI(self, ) -> javawrappers.java.lang.String: ...
	def getXMLBaseURI(self, ) -> javawrappers.java.net.URI: ...
	def getCType(self, ) -> javawrappers.org.jdom2.Content.CType: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def setContent(self, arg0: Union[int, JInt], arg1: javawrappers.org.jdom2.Content, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def setContent(self, arg0: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def setContent(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.Parent: ...
	@overload
	def setContent(self, arg0: javawrappers.org.jdom2.Content, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def removeChildren(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def removeChildren(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ) -> Union[int, JBoolean]: ...
	def isRootElement(self, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def getContent(self, ) -> javawrappers.java.util.List: ...
	@overload
	def getContent(self, arg0: Union[int, JInt], ) -> javawrappers.org.jdom2.Content: ...
	@overload
	def getContent(self, arg0: javawrappers.org.jdom2.filter.Filter, ) -> javawrappers.java.util.List: ...
	def getContentSize(self, ) -> Union[int, JInt]: ...
	def setAttributes(self, arg0: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.Element: ...
	def notify(self, ) -> None: ...
	def sortChildren(self, arg0: javawrappers.java.util.Comparator, ) -> None: ...
	def canContainContent(self, arg0: javawrappers.org.jdom2.Content, arg1: Union[int, JInt], arg2: Union[int, JBoolean], ) -> None: ...
	def getQualifiedName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getDescendants(self, ) -> javawrappers.org.jdom2.util.IteratorIterable: ...
	@overload
	def getDescendants(self, arg0: javawrappers.org.jdom2.filter.Filter, ) -> javawrappers.org.jdom2.util.IteratorIterable: ...
	@overload
	def setAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def setAttribute(self, arg0: javawrappers.org.jdom2.Attribute, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def setAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def getAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def getAttribute(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Attribute: ...
	def getNamespacePrefix(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def hasAttributes(self, ) -> Union[int, JBoolean]: ...
	def getNamespacesInherited(self, ) -> javawrappers.java.util.List: ...
	@overload
	def removeAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ) -> Union[int, JBoolean]: ...
	@overload
	def removeAttribute(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def removeAttribute(self, arg0: javawrappers.org.jdom2.Attribute, ) -> Union[int, JBoolean]: ...
	def getParent(self, ) -> javawrappers.org.jdom2.Parent: ...
	def getParentElement(self, ) -> javawrappers.org.jdom2.Element: ...
	def cloneContent(self, ) -> javawrappers.java.util.List: ...
	@overload
	def addContent(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def addContent(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.Parent: ...
	@overload
	def addContent(self, arg0: javawrappers.org.jdom2.Content, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def addContent(self, arg0: javawrappers.org.jdom2.Content, ) -> javawrappers.org.jdom2.Parent: ...
	@overload
	def addContent(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def addContent(self, arg0: Union[int, JInt], arg1: javawrappers.org.jdom2.Content, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def addContent(self, arg0: Union[int, JInt], arg1: javawrappers.org.jdom2.Content, ) -> javawrappers.org.jdom2.Parent: ...
	@overload
	def addContent(self, arg0: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def addContent(self, arg0: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.Parent: ...
	def getTextTrim(self, ) -> javawrappers.java.lang.String: ...
	def getValue(self, ) -> javawrappers.java.lang.String: ...
	def hasAdditionalNamespaces(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getChildText(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ) -> javawrappers.java.lang.String: ...
	@overload
	def getChildText(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def getChildTextNormalize(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ) -> javawrappers.java.lang.String: ...
	@overload
	def getChildTextNormalize(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def getTextNormalize(self, ) -> javawrappers.java.lang.String: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.CloneBase: ...
	@overload
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.Content: ...
	@overload
	def detach(self, ) -> javawrappers.org.jdom2.Content: ...
	@overload
	def detach(self, ) -> javawrappers.org.jdom2.Element: ...
	def addNamespaceDeclaration(self, arg0: javawrappers.org.jdom2.Namespace, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setNamespace(self, arg0: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def sortContent(self, arg0: javawrappers.java.util.Comparator, ) -> None: ...
	@overload
	def sortContent(self, arg0: javawrappers.org.jdom2.filter.Filter, arg1: javawrappers.java.util.Comparator, ) -> None: ...
	def setText(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...


class Verifier:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def isXMLDigit(arg0: Union[string, JString], ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def isURICharacter(arg0: Union[string, JString], ) -> Union[int, JBoolean]: ...
	@staticmethod
	def isXMLLetter(arg0: Union[string, JString], ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def checkNamespacePrefix(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def isXMLCombiningChar(arg0: Union[string, JString], ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def isXMLExtender(arg0: Union[string, JString], ) -> Union[int, JBoolean]: ...
	@staticmethod
	def checkProcessingInstructionTarget(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def checkNamespaceURI(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def checkAttributeName(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def isAllXMLWhitespace(arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def checkXMLName(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def isXMLNameStartCharacter(arg0: Union[string, JString], ) -> Union[int, JBoolean]: ...
	@staticmethod
	def checkURI(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def isXMLPublicIDCharacter(arg0: Union[string, JString], ) -> Union[int, JBoolean]: ...
	@staticmethod
	def isHexDigit(arg0: Union[string, JString], ) -> Union[int, JBoolean]: ...
	@staticmethod
	def checkCharacterData(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def decodeSurrogatePair(arg0: Union[string, JString], arg1: Union[string, JString], ) -> Union[int, JInt]: ...
	@staticmethod
	def isHighSurrogate(arg0: Union[string, JString], ) -> Union[int, JBoolean]: ...
	@staticmethod
	def checkPublicID(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def checkSystemLiteral(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def isXMLNameCharacter(arg0: Union[string, JString], ) -> Union[int, JBoolean]: ...
	@staticmethod
	def isXMLCharacter(arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@staticmethod
	def checkElementName(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def checkNamespaceCollision(arg0: javawrappers.org.jdom2.Attribute, arg1: javawrappers.org.jdom2.Element, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def checkNamespaceCollision(arg0: javawrappers.org.jdom2.Namespace, arg1: javawrappers.org.jdom2.Namespace, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def checkNamespaceCollision(arg0: javawrappers.org.jdom2.Namespace, arg1: javawrappers.org.jdom2.Attribute, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def checkNamespaceCollision(arg0: javawrappers.org.jdom2.Namespace, arg1: javawrappers.org.jdom2.Element, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def checkNamespaceCollision(arg0: javawrappers.org.jdom2.Namespace, arg1: javawrappers.org.jdom2.Element, arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def checkNamespaceCollision(arg0: javawrappers.org.jdom2.Namespace, arg1: javawrappers.java.util.List, arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def checkNamespaceCollision(arg0: javawrappers.org.jdom2.Attribute, arg1: javawrappers.org.jdom2.Element, arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def checkNamespaceCollision(arg0: javawrappers.org.jdom2.Namespace, arg1: javawrappers.java.util.List, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def checkProcessingInstructionData(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def checkCDATASection(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def isXMLLetterOrDigit(arg0: Union[string, JString], ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def checkCommentData(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def isXMLWhitespace(arg0: Union[string, JString], ) -> Union[int, JBoolean]: ...
	@staticmethod
	def isLowSurrogate(arg0: Union[string, JString], ) -> Union[int, JBoolean]: ...


class NamespaceAware:
	def getNamespacesInherited(self, ) -> javawrappers.java.util.List: ...
	def getNamespacesInScope(self, ) -> javawrappers.java.util.List: ...
	def getNamespacesIntroduced(self, ) -> javawrappers.java.util.List: ...


class UncheckedJDOMFactory:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def docType(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def document(self, arg0: javawrappers.org.jdom2.Element, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def document(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.DocType, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def document(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.DocType, ) -> javawrappers.org.jdom2.Document: ...
	def setRoot(self, arg0: javawrappers.org.jdom2.Document, arg1: javawrappers.org.jdom2.Element, ) -> None: ...
	@overload
	def entityRef(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	def addContent(self, arg0: javawrappers.org.jdom2.Parent, arg1: javawrappers.org.jdom2.Content, ) -> None: ...
	def notify(self, ) -> None: ...
	@overload
	def cdata(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.CDATA: ...
	@overload
	def cdata(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.CDATA: ...
	def setAttribute(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.Attribute, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def addNamespaceDeclaration(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.Namespace, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def comment(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Comment: ...
	@overload
	def comment(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Comment: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.AttributeType, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.AttributeType, arg3: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def text(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Text: ...
	@overload
	def text(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Text: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Map, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.util.Map, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...


class DefaultJDOMFactory:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def docType(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def document(self, arg0: javawrappers.org.jdom2.Element, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def document(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.DocType, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def document(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.DocType, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Document: ...
	def setRoot(self, arg0: javawrappers.org.jdom2.Document, arg1: javawrappers.org.jdom2.Element, ) -> None: ...
	@overload
	def entityRef(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	def addContent(self, arg0: javawrappers.org.jdom2.Parent, arg1: javawrappers.org.jdom2.Content, ) -> None: ...
	def notify(self, ) -> None: ...
	@overload
	def cdata(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.CDATA: ...
	@overload
	def cdata(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.CDATA: ...
	def setAttribute(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.Attribute, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def addNamespaceDeclaration(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.Namespace, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def comment(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Comment: ...
	@overload
	def comment(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Comment: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.AttributeType, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.AttributeType, arg3: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def text(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Text: ...
	@overload
	def text(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Text: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def processingInstruction(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.util.Map, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Map, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...


class Namespace:
	class NamespaceSerializationProxy:
		def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getPrefix(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getNamespace(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Namespace: ...
	@overload
	@staticmethod
	def getNamespace(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Namespace: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getURI(self, ) -> javawrappers.java.lang.String: ...


class Parent:
	def getParent(self, ) -> javawrappers.org.jdom2.Parent: ...
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def getContent(self, ) -> javawrappers.java.util.List: ...
	@overload
	def getContent(self, arg0: javawrappers.org.jdom2.filter.Filter, ) -> javawrappers.java.util.List: ...
	@overload
	def getContent(self, arg0: Union[int, JInt], ) -> javawrappers.org.jdom2.Content: ...
	def getContentSize(self, ) -> Union[int, JInt]: ...
	def getNamespacesInScope(self, ) -> javawrappers.java.util.List: ...
	def cloneContent(self, ) -> javawrappers.java.util.List: ...
	@overload
	def addContent(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.Parent: ...
	@overload
	def addContent(self, arg0: Union[int, JInt], arg1: javawrappers.org.jdom2.Content, ) -> javawrappers.org.jdom2.Parent: ...
	@overload
	def addContent(self, arg0: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.Parent: ...
	@overload
	def addContent(self, arg0: javawrappers.org.jdom2.Content, ) -> javawrappers.org.jdom2.Parent: ...
	@overload
	def removeContent(self, ) -> javawrappers.java.util.List: ...
	@overload
	def removeContent(self, arg0: javawrappers.org.jdom2.filter.Filter, ) -> javawrappers.java.util.List: ...
	@overload
	def removeContent(self, arg0: javawrappers.org.jdom2.Content, ) -> Union[int, JBoolean]: ...
	@overload
	def removeContent(self, arg0: Union[int, JInt], ) -> javawrappers.org.jdom2.Content: ...
	def getNamespacesIntroduced(self, ) -> javawrappers.java.util.List: ...
	def canContainContent(self, arg0: javawrappers.org.jdom2.Content, arg1: Union[int, JInt], arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def getDescendants(self, ) -> javawrappers.org.jdom2.util.IteratorIterable: ...
	@overload
	def getDescendants(self, arg0: javawrappers.org.jdom2.filter.Filter, ) -> javawrappers.org.jdom2.util.IteratorIterable: ...
	def getNamespacesInherited(self, ) -> javawrappers.java.util.List: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def indexOf(self, arg0: javawrappers.org.jdom2.Content, ) -> Union[int, JInt]: ...


class ProcessingInstruction:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Map, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getPseudoAttributeValue(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.org.jdom2.Parent: ...
	def getParentElement(self, ) -> javawrappers.org.jdom2.Element: ...
	def removePseudoAttribute(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def setData(self, arg0: javawrappers.java.util.Map, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def setData(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	def notifyAll(self, ) -> None: ...
	def getNamespacesInScope(self, ) -> javawrappers.java.util.List: ...
	def notify(self, ) -> None: ...
	def getNamespacesIntroduced(self, ) -> javawrappers.java.util.List: ...
	def getValue(self, ) -> javawrappers.java.lang.String: ...
	def getTarget(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getNamespacesInherited(self, ) -> javawrappers.java.util.List: ...
	@overload
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.Content: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.CloneBase: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	def getPseudoAttributeNames(self, ) -> javawrappers.java.util.List: ...
	def setTarget(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def detach(self, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def detach(self, ) -> javawrappers.org.jdom2.Content: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getData(self, ) -> javawrappers.java.lang.String: ...
	def setPseudoAttribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	def getCType(self, ) -> javawrappers.org.jdom2.Content.CType: ...


class SlimJDOMFactory:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def docType(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def document(self, arg0: javawrappers.org.jdom2.Element, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def document(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.DocType, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def document(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.DocType, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Document: ...
	def setRoot(self, arg0: javawrappers.org.jdom2.Document, arg1: javawrappers.org.jdom2.Element, ) -> None: ...
	def clearCache(self, ) -> None: ...
	@overload
	def entityRef(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	def addContent(self, arg0: javawrappers.org.jdom2.Parent, arg1: javawrappers.org.jdom2.Content, ) -> None: ...
	def notify(self, ) -> None: ...
	@overload
	def cdata(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.CDATA: ...
	@overload
	def cdata(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.CDATA: ...
	def setAttribute(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.Attribute, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def addNamespaceDeclaration(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.Namespace, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def comment(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Comment: ...
	@overload
	def comment(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Comment: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.AttributeType, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.AttributeType, arg3: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def text(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Text: ...
	@overload
	def text(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Text: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def processingInstruction(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.util.Map, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Map, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...


class IllegalTargetException:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class AttributeType:
	UNDECLARED: AttributeType = ...
	CDATA: AttributeType = ...
	ID: AttributeType = ...
	IDREF: AttributeType = ...
	IDREFS: AttributeType = ...
	ENTITY: AttributeType = ...
	ENTITIES: AttributeType = ...
	NMTOKEN: AttributeType = ...
	NMTOKENS: AttributeType = ...
	NOTATION: AttributeType = ...
	ENUMERATION: AttributeType = ...
	@staticmethod
	def getAttributeType(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.AttributeType: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.AttributeType: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.jdom2.AttributeType, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def byIndex(arg0: Union[int, JInt], ) -> javawrappers.org.jdom2.AttributeType: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class Comment:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.org.jdom2.Parent: ...
	def getParentElement(self, ) -> javawrappers.org.jdom2.Element: ...
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getNamespacesInScope(self, ) -> javawrappers.java.util.List: ...
	def notify(self, ) -> None: ...
	def getNamespacesIntroduced(self, ) -> javawrappers.java.util.List: ...
	def getValue(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getNamespacesInherited(self, ) -> javawrappers.java.util.List: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.CloneBase: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.Content: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.Comment: ...
	@overload
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def detach(self, ) -> javawrappers.org.jdom2.Comment: ...
	@overload
	def detach(self, ) -> javawrappers.org.jdom2.Content: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCType(self, ) -> javawrappers.org.jdom2.Content.CType: ...
	def setText(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Comment: ...


class JDOMFactory:
	@overload
	def docType(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def docType(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.DocType: ...
	@overload
	def document(self, arg0: javawrappers.org.jdom2.Element, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def document(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.DocType, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def document(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.DocType, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Document: ...
	def setRoot(self, arg0: javawrappers.org.jdom2.Document, arg1: javawrappers.org.jdom2.Element, ) -> None: ...
	@overload
	def entityRef(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def entityRef(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	def addContent(self, arg0: javawrappers.org.jdom2.Parent, arg1: javawrappers.org.jdom2.Content, ) -> None: ...
	@overload
	def cdata(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.CDATA: ...
	@overload
	def cdata(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.CDATA: ...
	def setAttribute(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.Attribute, ) -> None: ...
	def addNamespaceDeclaration(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.Namespace, ) -> None: ...
	@overload
	def comment(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Comment: ...
	@overload
	def comment(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Comment: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.AttributeType, arg3: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.jdom2.AttributeType, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def attribute(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], ) -> javawrappers.org.jdom2.Attribute: ...
	@overload
	def text(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Text: ...
	@overload
	def text(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Text: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def element(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.org.jdom2.Namespace, ) -> javawrappers.org.jdom2.Element: ...
	@overload
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Map, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.util.Map, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...
	@overload
	def processingInstruction(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.ProcessingInstruction: ...


class Document:
	@overload
	def __init__(self, arg0: javawrappers.java.util.List, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.DocType, arg2: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.jdom2.Element, arg1: javawrappers.org.jdom2.DocType, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.jdom2.Element, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def setContent(self, arg0: javawrappers.org.jdom2.Content, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def setContent(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def setContent(self, arg0: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def setContent(self, arg0: Union[int, JInt], arg1: javawrappers.org.jdom2.Content, ) -> javawrappers.org.jdom2.Document: ...
	def setRootElement(self, arg0: javawrappers.org.jdom2.Element, ) -> javawrappers.org.jdom2.Document: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def getContent(self, ) -> javawrappers.java.util.List: ...
	@overload
	def getContent(self, arg0: javawrappers.org.jdom2.filter.Filter, ) -> javawrappers.java.util.List: ...
	@overload
	def getContent(self, arg0: Union[int, JInt], ) -> javawrappers.org.jdom2.Content: ...
	def getContentSize(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def canContainContent(self, arg0: javawrappers.org.jdom2.Content, arg1: Union[int, JInt], arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def getDescendants(self, ) -> javawrappers.org.jdom2.util.IteratorIterable: ...
	@overload
	def getDescendants(self, arg0: javawrappers.org.jdom2.filter.Filter, ) -> javawrappers.org.jdom2.util.IteratorIterable: ...
	def getRootElement(self, ) -> javawrappers.org.jdom2.Element: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getNamespacesInherited(self, ) -> javawrappers.java.util.List: ...
	def getBaseURI(self, ) -> javawrappers.java.lang.String: ...
	def indexOf(self, arg0: javawrappers.org.jdom2.Content, ) -> Union[int, JInt]: ...
	def getDocType(self, ) -> javawrappers.org.jdom2.DocType: ...
	def getParent(self, ) -> javawrappers.org.jdom2.Parent: ...
	def setDocType(self, arg0: javawrappers.org.jdom2.DocType, ) -> javawrappers.org.jdom2.Document: ...
	def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	def cloneContent(self, ) -> javawrappers.java.util.List: ...
	def getNamespacesInScope(self, ) -> javawrappers.java.util.List: ...
	@overload
	def addContent(self, arg0: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.Parent: ...
	@overload
	def addContent(self, arg0: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def addContent(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.Parent: ...
	@overload
	def addContent(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Collection, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def addContent(self, arg0: Union[int, JInt], arg1: javawrappers.org.jdom2.Content, ) -> javawrappers.org.jdom2.Parent: ...
	@overload
	def addContent(self, arg0: Union[int, JInt], arg1: javawrappers.org.jdom2.Content, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def addContent(self, arg0: javawrappers.org.jdom2.Content, ) -> javawrappers.org.jdom2.Parent: ...
	@overload
	def addContent(self, arg0: javawrappers.org.jdom2.Content, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def removeContent(self, ) -> javawrappers.java.util.List: ...
	@overload
	def removeContent(self, arg0: javawrappers.org.jdom2.filter.Filter, ) -> javawrappers.java.util.List: ...
	@overload
	def removeContent(self, arg0: javawrappers.org.jdom2.Content, ) -> Union[int, JBoolean]: ...
	@overload
	def removeContent(self, arg0: Union[int, JInt], ) -> javawrappers.org.jdom2.Content: ...
	def getNamespacesIntroduced(self, ) -> javawrappers.java.util.List: ...
	def setBaseURI(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def hasRootElement(self, ) -> Union[int, JBoolean]: ...
	def setProperty(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.CloneBase: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.Document: ...
	@overload
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def detachRootElement(self, ) -> javawrappers.org.jdom2.Element: ...


class JDOMConstants:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class EntityRef:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ): ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getParent(self, ) -> javawrappers.org.jdom2.Parent: ...
	@overload
	def getParent(self, ) -> javawrappers.org.jdom2.Element: ...
	def getSystemID(self, ) -> javawrappers.java.lang.String: ...
	def getParentElement(self, ) -> javawrappers.org.jdom2.Element: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getDocument(self, ) -> javawrappers.org.jdom2.Document: ...
	def notifyAll(self, ) -> None: ...
	def getNamespacesInScope(self, ) -> javawrappers.java.util.List: ...
	def setPublicID(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	def notify(self, ) -> None: ...
	def getNamespacesIntroduced(self, ) -> javawrappers.java.util.List: ...
	def getPublicID(self, ) -> javawrappers.java.lang.String: ...
	def getValue(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setSystemID(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jdom2.EntityRef: ...
	def getNamespacesInherited(self, ) -> javawrappers.java.util.List: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.CloneBase: ...
	@overload
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def clone(self, ) -> javawrappers.org.jdom2.Content: ...
	@overload
	def detach(self, ) -> javawrappers.org.jdom2.EntityRef: ...
	@overload
	def detach(self, ) -> javawrappers.org.jdom2.Content: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCType(self, ) -> javawrappers.org.jdom2.Content.CType: ...


