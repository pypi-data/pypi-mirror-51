################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.checkerframework.checker.formatter.qual

from jpype.types import *
from typing import Union

from typing import overload

class Format:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def annotationType(self, ) -> javawrappers.java.lang.Class: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def value(self, ) -> JArray(javawrappers.org.checkerframework.checker.formatter.qual.ConversionCategory, 1): ...


class ConversionCategory:
	GENERAL: ConversionCategory = ...
	CHAR: ConversionCategory = ...
	INT: ConversionCategory = ...
	FLOAT: ConversionCategory = ...
	TIME: ConversionCategory = ...
	CHAR_AND_INT: ConversionCategory = ...
	INT_AND_TIME: ConversionCategory = ...
	NULL: ConversionCategory = ...
	UNUSED: ConversionCategory = ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def intersect(arg0: javawrappers.org.checkerframework.checker.formatter.qual.ConversionCategory, arg1: javawrappers.org.checkerframework.checker.formatter.qual.ConversionCategory, ) -> javawrappers.org.checkerframework.checker.formatter.qual.ConversionCategory: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.checkerframework.checker.formatter.qual.ConversionCategory: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def values() -> JArray(javawrappers.org.checkerframework.checker.formatter.qual.ConversionCategory, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	@staticmethod
	def union(arg0: javawrappers.org.checkerframework.checker.formatter.qual.ConversionCategory, arg1: javawrappers.org.checkerframework.checker.formatter.qual.ConversionCategory, ) -> javawrappers.org.checkerframework.checker.formatter.qual.ConversionCategory: ...
	def notify(self, ) -> None: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	@staticmethod
	def isSubsetOf(arg0: javawrappers.org.checkerframework.checker.formatter.qual.ConversionCategory, arg1: javawrappers.org.checkerframework.checker.formatter.qual.ConversionCategory, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def fromConversionChar(arg0: Union[string, JString], ) -> javawrappers.org.checkerframework.checker.formatter.qual.ConversionCategory: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class FormatBottom:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def annotationType(self, ) -> javawrappers.java.lang.Class: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class UnknownFormat:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def annotationType(self, ) -> javawrappers.java.lang.Class: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ReturnsFormat:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def annotationType(self, ) -> javawrappers.java.lang.Class: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class FormatMethod:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def annotationType(self, ) -> javawrappers.java.lang.Class: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class InvalidFormat:
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def annotationType(self, ) -> javawrappers.java.lang.Class: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def value(self, ) -> javawrappers.java.lang.String: ...


