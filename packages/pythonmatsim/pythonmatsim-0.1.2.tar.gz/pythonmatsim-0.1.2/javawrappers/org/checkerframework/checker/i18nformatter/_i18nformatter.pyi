################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.checkerframework.checker.i18nformatter.qual
import javawrappers.org.checkerframework.checker.i18nformatter

from jpype.types import *
from typing import Union

from typing import overload

class I18nFormatUtil:
	def __init__(self, ): ...
	class MessageFormatParser:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@staticmethod
		def parse(arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.org.checkerframework.checker.i18nformatter.I18nFormatUtil.I18nConversion, 1): ...
		def notify(self, ) -> None: ...


	class I18nConversion:
		def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	@staticmethod
	def formatParameterCategories(arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory, 1): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@staticmethod
	def hasFormat(arg0: javawrappers.java.lang.String, *arg1: javawrappers.org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def tryFormatSatisfiability(arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def parse(arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.org.checkerframework.checker.i18nformatter.I18nFormatUtil.I18nConversion, 1): ...
	@staticmethod
	def isFormat(arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...


