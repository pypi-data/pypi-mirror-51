################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang

from jpype.types import *
from typing import Union

from typing import overload

class UnitsTools:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@staticmethod
	def fromMeterToKiloMeter(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def fromGramToKiloGram(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def fromKiloMeterPerHourToMeterPerSecond(arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	@staticmethod
	def toDegrees(arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	@staticmethod
	def fromSecondToMinute(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	@staticmethod
	def toRadians(arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	@staticmethod
	def fromMilliMeterToMeter(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def fromMinuteToHour(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	@staticmethod
	def fromMinuteToSecond(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	@staticmethod
	def fromKelvinToCelsius(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	@staticmethod
	def fromKiloMeterToMeter(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	@staticmethod
	def fromHourToMinute(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	@staticmethod
	def fromCelsiusToKelvin(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def fromMeterToMilliMeter(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def fromMeterPerSecondToKiloMeterPerHour(arg0: Union[float, JDouble], ) -> Union[float, JDouble]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def fromKiloGramToGram(arg0: Union[int, JInt], ) -> Union[int, JInt]: ...


