################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.matsim.api.core.v01

from jpype.types import *
from typing import Union

from typing import overload

class GenericEvent:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class VehicleAbortsEvent:
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.matsim.api.core.v01.Id, arg2: javawrappers.org.matsim.api.core.v01.Id, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def getLinkId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getVehicleId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class PersonStuckEvent:
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.matsim.api.core.v01.Id, arg2: javawrappers.org.matsim.api.core.v01.Id, arg3: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getPersonId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def getLinkId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getLegMode(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class HasLinkId:
	def getLinkId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...


class LinkEnterEvent:
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.matsim.api.core.v01.Id, arg2: javawrappers.org.matsim.api.core.v01.Id, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def getLinkId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getVehicleId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getDriverId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class PersonMoneyEvent:
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.matsim.api.core.v01.Id, arg2: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getPersonId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getAmount(self, ) -> Union[float, JDouble]: ...


class PersonEntersVehicleEvent:
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.matsim.api.core.v01.Id, arg2: javawrappers.org.matsim.api.core.v01.Id, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getPersonId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getVehicleId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class VehicleLeavesTrafficEvent:
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.matsim.api.core.v01.Id, arg2: javawrappers.org.matsim.api.core.v01.Id, arg3: javawrappers.org.matsim.api.core.v01.Id, arg4: javawrappers.java.lang.String, arg5: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getPersonId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getRelativePositionOnLink(self, ) -> Union[float, JDouble]: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getLinkId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getVehicleId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getNetworkMode(self, ) -> javawrappers.java.lang.String: ...


class VehicleEntersTrafficEvent:
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.matsim.api.core.v01.Id, arg2: javawrappers.org.matsim.api.core.v01.Id, arg3: javawrappers.org.matsim.api.core.v01.Id, arg4: javawrappers.java.lang.String, arg5: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getPersonId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getRelativePositionOnLink(self, ) -> Union[float, JDouble]: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getLinkId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getVehicleId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getNetworkMode(self, ) -> javawrappers.java.lang.String: ...


class ActivityStartEvent:
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.matsim.api.core.v01.Id, arg2: javawrappers.org.matsim.api.core.v01.Id, arg3: javawrappers.org.matsim.api.core.v01.Id, arg4: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getPersonId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def getFacilityId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def notify(self, ) -> None: ...
	def getActType(self, ) -> javawrappers.java.lang.String: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getLinkId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ActivityEndEvent:
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.matsim.api.core.v01.Id, arg2: javawrappers.org.matsim.api.core.v01.Id, arg3: javawrappers.org.matsim.api.core.v01.Id, arg4: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getPersonId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def getFacilityId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def notify(self, ) -> None: ...
	def getActType(self, ) -> javawrappers.java.lang.String: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getLinkId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class PersonDepartureEvent:
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.matsim.api.core.v01.Id, arg2: javawrappers.org.matsim.api.core.v01.Id, arg3: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getPersonId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def getLinkId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getLegMode(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class PersonArrivalEvent:
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.matsim.api.core.v01.Id, arg2: javawrappers.org.matsim.api.core.v01.Id, arg3: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getPersonId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def getLinkId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getLegMode(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class TransitDriverStartsEvent:
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.matsim.api.core.v01.Id, arg2: javawrappers.org.matsim.api.core.v01.Id, arg3: javawrappers.org.matsim.api.core.v01.Id, arg4: javawrappers.org.matsim.api.core.v01.Id, arg5: javawrappers.org.matsim.api.core.v01.Id, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getTransitLineId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def getDriverId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getTransitRouteId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def notify(self, ) -> None: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getVehicleId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDepartureId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...


class LinkLeaveEvent:
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.matsim.api.core.v01.Id, arg2: javawrappers.org.matsim.api.core.v01.Id, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def getLinkId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getVehicleId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getDriverId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class Event:
	def __init__(self, arg0: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class PersonLeavesVehicleEvent:
	def __init__(self, arg0: Union[float, JDouble], arg1: javawrappers.org.matsim.api.core.v01.Id, arg2: javawrappers.org.matsim.api.core.v01.Id, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getPersonId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getAttributes(self, ) -> javawrappers.java.util.Map: ...
	def getEventType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTime(self, ) -> Union[float, JDouble]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getVehicleId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


