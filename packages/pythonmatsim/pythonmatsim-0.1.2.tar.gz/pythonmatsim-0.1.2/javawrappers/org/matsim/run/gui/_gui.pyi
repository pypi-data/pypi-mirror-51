################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.util
import javawrappers.java.awt.image
import javawrappers.java.awt.dnd
import javawrappers.java.beans
import javawrappers.java.awt.im
import javawrappers.javax.swing.text
import javawrappers.javax.swing.event
import javawrappers.java.awt
import javawrappers.java.lang
import javawrappers.javax.accessibility
import javawrappers.java.io
import javawrappers.org.matsim.run.gui
import javawrappers.java.awt.event
import javawrappers.javax.swing

from jpype.types import *
from typing import Union

from typing import overload

class Gui:
	@overload
	def getLocation(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Point: ...
	@overload
	def getLocation(self, ) -> javawrappers.java.awt.Point: ...
	@overload
	def requestFocusInWindow(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocusInWindow(self, ) -> Union[int, JBoolean]: ...
	def isOpaque(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getFrames() -> JArray(javawrappers.java.awt.Frame, 1): ...
	def setModalExclusionType(self, arg0: javawrappers.java.awt.Dialog.ModalExclusionType, ) -> None: ...
	def paint(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def removeWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def getInputMethodListeners(self, ) -> JArray(javawrappers.java.awt.event.InputMethodListener, 1): ...
	def setLayout(self, arg0: javawrappers.java.awt.LayoutManager, ) -> None: ...
	def mouseDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getOwner(self, ) -> javawrappers.java.awt.Window: ...
	def getInputMethodRequests(self, ) -> javawrappers.java.awt.im.InputMethodRequests: ...
	def addHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def removeAll(self, ) -> None: ...
	def getMinimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getAlignmentY(self, ) -> Union[float, JFloat]: ...
	def getWindowStateListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowStateListener, 1): ...
	def getAlignmentX(self, ) -> Union[float, JFloat]: ...
	def dispatchEvent(self, arg0: javawrappers.java.awt.AWTEvent, ) -> None: ...
	def setFocusableWindowState(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getMostRecentFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def reshape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def pack(self, ) -> None: ...
	def toBack(self, ) -> None: ...
	def postEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.BufferCapabilities, ) -> None: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def contains(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def size(self, ) -> javawrappers.java.awt.Dimension: ...
	def getType(self, ) -> javawrappers.java.awt.Window.Type: ...
	def mouseUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def enableInputMethods(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setLayeredPane(self, arg0: javawrappers.javax.swing.JLayeredPane, ) -> None: ...
	def removeContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def addComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	@staticmethod
	def setDefaultLookAndFeelDecorated(arg0: Union[int, JBoolean], ) -> None: ...
	def getMaximizedBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	def removeHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def removeWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getFontMetrics(self, arg0: javawrappers.java.awt.Font, ) -> javawrappers.java.awt.FontMetrics: ...
	def getHeight(self, ) -> Union[int, JInt]: ...
	def getIgnoreRepaint(self, ) -> Union[int, JBoolean]: ...
	def getBaselineResizeBehavior(self, ) -> javawrappers.java.awt.Component.BaselineResizeBehavior: ...
	def removeMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def applyComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def isAlwaysOnTopSupported(self, ) -> Union[int, JBoolean]: ...
	def validate(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.java.awt.Container: ...
	def isMinimumSizeSet(self, ) -> Union[int, JBoolean]: ...
	def getWindowFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowFocusListener, 1): ...
	def setComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	@overload
	def setBounds(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	@staticmethod
	def getWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def isValidateRoot(self, ) -> Union[int, JBoolean]: ...
	def addNotify(self, ) -> None: ...
	def addInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFocusCycleRootAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def setFocusTraversalPolicyProvider(self, arg0: Union[int, JBoolean], ) -> None: ...
	def addWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def countComponents(self, ) -> Union[int, JInt]: ...
	def isFocusTraversable(self, ) -> Union[int, JBoolean]: ...
	def run(self, ) -> None: ...
	def inside(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def nextFocus(self, ) -> None: ...
	def getFocusTraversalKeys(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.Set: ...
	def getInputContext(self, ) -> javawrappers.java.awt.im.InputContext: ...
	def isCursorSet(self, ) -> Union[int, JBoolean]: ...
	def setMenuBar(self, arg0: javawrappers.java.awt.MenuBar, ) -> None: ...
	def getMouseWheelListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseWheelListener, 1): ...
	def getComponents(self, ) -> JArray(javawrappers.java.awt.Component, 1): ...
	def removeMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def doLayout(self, ) -> None: ...
	def isLocationByPlatform(self, ) -> Union[int, JBoolean]: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.PopupMenu, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def setFocusCycleRoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setTitle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def isResizable(self, ) -> Union[int, JBoolean]: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def setDropTarget(self, arg0: javawrappers.java.awt.dnd.DropTarget, ) -> None: ...
	@overload
	def list(self, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, arg1: Union[int, JInt], ) -> None: ...
	def isFocused(self, ) -> Union[int, JBoolean]: ...
	def revalidate(self, ) -> None: ...
	def removeWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def setContentPane(self, arg0: javawrappers.java.awt.Container, ) -> None: ...
	def removeNotify(self, ) -> None: ...
	def getWarningString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getOwnerlessWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def gotFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def handleEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isForegroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def show(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.matsim.run.gui.Gui: ...
	@overload
	def show(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def show(self, ) -> None: ...
	def getShape(self, ) -> javawrappers.java.awt.Shape: ...
	def update(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def isFocusTraversalPolicySet(self, ) -> Union[int, JBoolean]: ...
	def setMaximumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.MenuComponent, ) -> None: ...
	def addMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def imageUpdate(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	def getLayout(self, ) -> javawrappers.java.awt.LayoutManager: ...
	def addKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getContainerListeners(self, ) -> JArray(javawrappers.java.awt.event.ContainerListener, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getComponentListeners(self, ) -> JArray(javawrappers.java.awt.event.ComponentListener, 1): ...
	def getLayeredPane(self, ) -> javawrappers.javax.swing.JLayeredPane: ...
	def isMaximumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def getWindowListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowListener, 1): ...
	def getCursorType(self, ) -> Union[int, JInt]: ...
	def getCursor(self, ) -> javawrappers.java.awt.Cursor: ...
	@overload
	def createImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Image: ...
	@overload
	def createImage(self, arg0: javawrappers.java.awt.image.ImageProducer, ) -> javawrappers.java.awt.Image: ...
	def mouseMove(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def areFocusTraversalKeysSet(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getKeyListeners(self, ) -> JArray(javawrappers.java.awt.event.KeyListener, 1): ...
	def getContentPane(self, ) -> javawrappers.java.awt.Container: ...
	def setType(self, arg0: javawrappers.java.awt.Window.Type, ) -> None: ...
	def layout(self, ) -> None: ...
	def setExtendedState(self, arg0: Union[int, JInt], ) -> None: ...
	def getBaseline(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def print_(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def paintComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.FocusListener, 1): ...
	@overload
	def resize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def resize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.awt.ImageCapabilities, ) -> javawrappers.java.awt.image.VolatileImage: ...
	def isAutoRequestFocus(self, ) -> Union[int, JBoolean]: ...
	def setState(self, arg0: Union[int, JInt], ) -> None: ...
	def location(self, ) -> javawrappers.java.awt.Point: ...
	def lostFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def keyDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getDropTarget(self, ) -> javawrappers.java.awt.dnd.DropTarget: ...
	def getTransferHandler(self, ) -> javawrappers.javax.swing.TransferHandler: ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def setGlassPane(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def setOpacity(self, arg0: Union[float, JFloat], ) -> None: ...
	def getIconImage(self, ) -> javawrappers.java.awt.Image: ...
	def getHierarchyBoundsListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyBoundsListener, 1): ...
	def loadConfigFile(self, arg0: javawrappers.java.io.File, ) -> None: ...
	def getRootPane(self, ) -> javawrappers.javax.swing.JRootPane: ...
	@overload
	def getBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def getBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> javawrappers.java.awt.Rectangle: ...
	def setPreferredSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def getJMenuBar(self, ) -> javawrappers.javax.swing.JMenuBar: ...
	@overload
	def enable(self, ) -> None: ...
	@overload
	def enable(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def getMousePosition(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.awt.Point: ...
	@overload
	def getMousePosition(self, ) -> javawrappers.java.awt.Point: ...
	def action(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setIconImages(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def setDefaultCloseOperation(self, arg0: Union[int, JInt], ) -> None: ...
	def addContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def setComponentZOrder(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: JByte, arg2: JByte, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], arg2: Union[string, JString], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], arg2: Union[int, JShort], ) -> None: ...
	def addMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	@staticmethod
	def isDefaultLookAndFeelDecorated() -> Union[int, JBoolean]: ...
	def getComponentOrientation(self, ) -> javawrappers.java.awt.ComponentOrientation: ...
	def setFocusable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getTreeLock(self, ) -> javawrappers.java.lang.Object: ...
	def addHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def isBackgroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def findComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def findComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocationByPlatform(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLightweight(self, ) -> Union[int, JBoolean]: ...
	def setTransferHandler(self, arg0: javawrappers.javax.swing.TransferHandler, ) -> None: ...
	def isEnabled(self, ) -> Union[int, JBoolean]: ...
	def minimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def bounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def getMouseMotionListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseMotionListener, 1): ...
	def getModalExclusionType(self, ) -> javawrappers.java.awt.Dialog.ModalExclusionType: ...
	def setMinimumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def transferFocus(self, ) -> None: ...
	def printComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	def setJMenuBar(self, arg0: javawrappers.javax.swing.JMenuBar, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getMaximumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getLocationOnScreen(self, ) -> javawrappers.java.awt.Point: ...
	def keyUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getWidth(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def setFocusTraversalPolicy(self, arg0: javawrappers.java.awt.FocusTraversalPolicy, ) -> None: ...
	def addWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def paintAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setFocusTraversalKeys(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ) -> None: ...
	def hasFocus(self, ) -> Union[int, JBoolean]: ...
	def isPreferredSizeSet(self, ) -> Union[int, JBoolean]: ...
	def addWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def getFocusableWindowState(self, ) -> Union[int, JBoolean]: ...
	def getIconImages(self, ) -> javawrappers.java.util.List: ...
	def isDoubleBuffered(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getPropertyChangeListeners(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	@overload
	def getPropertyChangeListeners(self, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	def getColorModel(self, ) -> javawrappers.java.awt.image.ColorModel: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getInsets(self, ) -> javawrappers.java.awt.Insets: ...
	def getFocusTraversalKeysEnabled(self, ) -> Union[int, JBoolean]: ...
	def hide(self, ) -> None: ...
	def getPreferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def setUndecorated(self, arg0: Union[int, JBoolean], ) -> None: ...
	def disable(self, ) -> None: ...
	def isUndecorated(self, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	def isFocusableWindow(self, ) -> Union[int, JBoolean]: ...
	def isFocusable(self, ) -> Union[int, JBoolean]: ...
	def setLocationRelativeTo(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def stopMATSim(self, ) -> None: ...
	def insets(self, ) -> javawrappers.java.awt.Insets: ...
	def setIconImage(self, arg0: javawrappers.java.awt.Image, ) -> None: ...
	def setMixingCutoutShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	@staticmethod
	def main(arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def isActive(self, ) -> Union[int, JBoolean]: ...
	def getMenuBar(self, ) -> javawrappers.java.awt.MenuBar: ...
	def mouseExit(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getHierarchyListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyListener, 1): ...
	def getOpacity(self, ) -> Union[float, JFloat]: ...
	def isShowing(self, ) -> Union[int, JBoolean]: ...
	def mouseEnter(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getTitle(self, ) -> javawrappers.java.lang.String: ...
	def mouseDrag(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def preferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getDefaultCloseOperation(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def create(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> javawrappers.org.matsim.run.gui.Gui: ...
	def getMouseListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseListener, 1): ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def setAutoRequestFocus(self, arg0: Union[int, JBoolean], ) -> None: ...
	def toFront(self, ) -> None: ...
	def getGlassPane(self, ) -> javawrappers.java.awt.Component: ...
	def deliverEvent(self, arg0: javawrappers.java.awt.Event, ) -> None: ...
	def getForeground(self, ) -> javawrappers.java.awt.Color: ...
	def isAncestorOf(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def getComponentCount(self, ) -> Union[int, JInt]: ...
	def getExtendedState(self, ) -> Union[int, JInt]: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def dispose(self, ) -> None: ...
	@overload
	def setCursor(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def setCursor(self, arg0: javawrappers.java.awt.Cursor, ) -> None: ...
	def isDisplayable(self, ) -> Union[int, JBoolean]: ...
	def getGraphicsConfiguration(self, ) -> javawrappers.java.awt.GraphicsConfiguration: ...
	def getComponent(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def removeComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	@overload
	def requestFocus(self, ) -> None: ...
	@overload
	def requestFocus(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> None: ...
	def locate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def addFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	@overload
	def getComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def getComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def isAlwaysOnTop(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, arg0: javawrappers.java.awt.Container, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, ) -> Union[int, JBoolean]: ...
	def setFocusTraversalKeysEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getComponentZOrder(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JInt]: ...
	def setBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def printAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getToolkit(self, ) -> javawrappers.java.awt.Toolkit: ...
	def transferFocusUpCycle(self, ) -> None: ...
	def isFontSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def setSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def isFocusTraversalPolicyProvider(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setLocation(self, arg0: javawrappers.java.awt.Point, ) -> None: ...
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	def removeFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def setIgnoreRepaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def transferFocusBackward(self, ) -> None: ...
	def getOwnedWindows(self, ) -> JArray(javawrappers.java.awt.Window, 1): ...
	def setMaximizedBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def move(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def transferFocusDownCycle(self, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.util.ResourceBundle, ) -> None: ...
	def setResizable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def invalidate(self, ) -> None: ...
	def getBufferStrategy(self, ) -> javawrappers.java.awt.image.BufferStrategy: ...
	def getAccessibleContext(self, ) -> javawrappers.javax.accessibility.AccessibleContext: ...
	def setShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def isFocusOwner(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getSize(self, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def getSize(self, arg0: javawrappers.java.awt.Dimension, ) -> javawrappers.java.awt.Dimension: ...
	def getX(self, ) -> Union[int, JInt]: ...
	def startMATSim(self, ) -> None: ...
	def removeHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def getY(self, ) -> Union[int, JInt]: ...
	def getState(self, ) -> Union[int, JInt]: ...
	def getFocusTraversalPolicy(self, ) -> javawrappers.java.awt.FocusTraversalPolicy: ...
	def setAlwaysOnTop(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def removeMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def getBackground(self, ) -> javawrappers.java.awt.Color: ...
	def addMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...


class ConfigEditor:
	def __init__(self, arg0: javawrappers.java.io.File, arg1: javawrappers.org.matsim.run.gui.ConfigEditor.ConfigChangeListener, ): ...
	class XmlView:
		def __init__(self, arg0: javawrappers.javax.swing.text.Element, ): ...
		def getViewFactory(self, ) -> javawrappers.javax.swing.text.ViewFactory: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def preferenceChanged(self, arg0: javawrappers.javax.swing.text.View, arg1: Union[int, JBoolean], arg2: Union[int, JBoolean], ) -> None: ...
		@overload
		def getViewIndex(self, arg0: Union[int, JInt], arg1: javawrappers.javax.swing.text.Position.Bias, ) -> Union[int, JInt]: ...
		@overload
		def getViewIndex(self, arg0: Union[float, JFloat], arg1: Union[float, JFloat], arg2: javawrappers.java.awt.Shape, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def replace(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: JArray(javawrappers.javax.swing.text.View, 1), ) -> None: ...
		def insert(self, arg0: Union[int, JInt], arg1: javawrappers.javax.swing.text.View, ) -> None: ...
		def getChildAllocation(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Shape, ) -> javawrappers.java.awt.Shape: ...
		def paint(self, arg0: javawrappers.java.awt.Graphics, arg1: javawrappers.java.awt.Shape, ) -> None: ...
		def createFragment(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.javax.swing.text.View: ...
		def notify(self, ) -> None: ...
		def remove(self, arg0: Union[int, JInt], ) -> None: ...
		@overload
		def modelToView(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Shape, arg2: javawrappers.javax.swing.text.Position.Bias, ) -> javawrappers.java.awt.Shape: ...
		@overload
		def modelToView(self, arg0: Union[int, JInt], arg1: javawrappers.javax.swing.text.Position.Bias, arg2: Union[int, JInt], arg3: javawrappers.javax.swing.text.Position.Bias, arg4: javawrappers.java.awt.Shape, ) -> javawrappers.java.awt.Shape: ...
		@overload
		def modelToView(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Shape, ) -> javawrappers.java.awt.Shape: ...
		def removeAll(self, ) -> None: ...
		@overload
		def viewToModel(self, arg0: Union[float, JFloat], arg1: Union[float, JFloat], arg2: javawrappers.java.awt.Shape, ) -> Union[int, JInt]: ...
		@overload
		def viewToModel(self, arg0: Union[float, JFloat], arg1: Union[float, JFloat], arg2: javawrappers.java.awt.Shape, arg3: JArray(javawrappers.javax.swing.text.Position.Bias, 1), ) -> Union[int, JInt]: ...
		def setSize(self, arg0: Union[float, JFloat], arg1: Union[float, JFloat], ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def setParent(self, arg0: javawrappers.javax.swing.text.View, ) -> None: ...
		def getNextVisualPositionFrom(self, arg0: Union[int, JInt], arg1: javawrappers.javax.swing.text.Position.Bias, arg2: javawrappers.java.awt.Shape, arg3: Union[int, JInt], arg4: JArray(javawrappers.javax.swing.text.Position.Bias, 1), ) -> Union[int, JInt]: ...
		def getMaximumSpan(self, arg0: Union[int, JInt], ) -> Union[float, JFloat]: ...
		def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
		def getView(self, arg0: Union[int, JInt], ) -> javawrappers.javax.swing.text.View: ...
		def changedUpdate(self, arg0: javawrappers.javax.swing.event.DocumentEvent, arg1: javawrappers.java.awt.Shape, arg2: javawrappers.javax.swing.text.ViewFactory, ) -> None: ...
		def getAlignment(self, arg0: Union[int, JInt], ) -> Union[float, JFloat]: ...
		def getEndOffset(self, ) -> Union[int, JInt]: ...
		def removeUpdate(self, arg0: javawrappers.javax.swing.event.DocumentEvent, arg1: javawrappers.java.awt.Shape, arg2: javawrappers.javax.swing.text.ViewFactory, ) -> None: ...
		def getParent(self, ) -> javawrappers.javax.swing.text.View: ...
		def getStartOffset(self, ) -> Union[int, JInt]: ...
		def getAttributes(self, ) -> javawrappers.javax.swing.text.AttributeSet: ...
		def breakView(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[float, JFloat], arg3: Union[float, JFloat], ) -> javawrappers.javax.swing.text.View: ...
		def getContainer(self, ) -> javawrappers.java.awt.Container: ...
		def getDocument(self, ) -> javawrappers.javax.swing.text.Document: ...
		def getViewCount(self, ) -> Union[int, JInt]: ...
		def isVisible(self, ) -> Union[int, JBoolean]: ...
		def getMinimumSpan(self, arg0: Union[int, JInt], ) -> Union[float, JFloat]: ...
		def getPreferredSpan(self, arg0: Union[int, JInt], ) -> Union[float, JFloat]: ...
		def getResizeWeight(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
		def getElement(self, ) -> javawrappers.javax.swing.text.Element: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def getBreakWeight(self, arg0: Union[int, JInt], arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> Union[int, JInt]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def nextTabStop(self, arg0: Union[float, JFloat], arg1: Union[int, JInt], ) -> Union[float, JFloat]: ...
		def append(self, arg0: javawrappers.javax.swing.text.View, ) -> None: ...
		def getToolTipText(self, arg0: Union[float, JFloat], arg1: Union[float, JFloat], arg2: javawrappers.java.awt.Shape, ) -> javawrappers.java.lang.String: ...
		def insertUpdate(self, arg0: javawrappers.javax.swing.event.DocumentEvent, arg1: javawrappers.java.awt.Shape, arg2: javawrappers.javax.swing.text.ViewFactory, ) -> None: ...


	class XmlViewFactory:
		def __init__(self, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def create(self, arg0: javawrappers.javax.swing.text.Element, ) -> javawrappers.javax.swing.text.View: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class XmlEditorKit:
		def __init__(self, ): ...
		def getViewFactory(self, ) -> javawrappers.javax.swing.text.ViewFactory: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		@overload
		def read(self, arg0: javawrappers.java.io.InputStream, arg1: javawrappers.javax.swing.text.Document, arg2: Union[int, JInt], ) -> None: ...
		@overload
		def read(self, arg0: javawrappers.java.io.Reader, arg1: javawrappers.javax.swing.text.Document, arg2: Union[int, JInt], ) -> None: ...
		def createDefaultDocument(self, ) -> javawrappers.javax.swing.text.Document: ...
		def createCaret(self, ) -> javawrappers.javax.swing.text.Caret: ...
		def notifyAll(self, ) -> None: ...
		def getActions(self, ) -> JArray(javawrappers.javax.swing.Action, 1): ...
		def notify(self, ) -> None: ...
		def getCharacterAttributeRun(self, ) -> javawrappers.javax.swing.text.Element: ...
		def install(self, arg0: javawrappers.javax.swing.JEditorPane, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def clone(self, ) -> javawrappers.java.lang.Object: ...
		def getContentType(self, ) -> javawrappers.java.lang.String: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def deinstall(self, arg0: javawrappers.javax.swing.JEditorPane, ) -> None: ...
		def getInputAttributes(self, ) -> javawrappers.javax.swing.text.MutableAttributeSet: ...
		@overload
		def write(self, arg0: javawrappers.java.io.OutputStream, arg1: javawrappers.javax.swing.text.Document, arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
		@overload
		def write(self, arg0: javawrappers.java.io.Writer, arg1: javawrappers.javax.swing.text.Document, arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...


	class ConfigChangeListener:
		def configChanged(self, arg0: javawrappers.java.io.File, ) -> None: ...


	@overload
	def getLocation(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Point: ...
	@overload
	def getLocation(self, ) -> javawrappers.java.awt.Point: ...
	@overload
	def requestFocusInWindow(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocusInWindow(self, ) -> Union[int, JBoolean]: ...
	def closeEditor(self, ) -> None: ...
	def preferenceChanged(self, arg0: javawrappers.javax.swing.text.View, arg1: Union[int, JBoolean], arg2: Union[int, JBoolean], ) -> None: ...
	@overload
	def getViewIndex(self, arg0: Union[int, JInt], arg1: javawrappers.javax.swing.text.Position.Bias, ) -> Union[int, JInt]: ...
	@overload
	def getViewIndex(self, arg0: Union[float, JFloat], arg1: Union[float, JFloat], arg2: javawrappers.java.awt.Shape, ) -> Union[int, JInt]: ...
	def isOpaque(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getFrames() -> JArray(javawrappers.java.awt.Frame, 1): ...
	def setModalExclusionType(self, arg0: javawrappers.java.awt.Dialog.ModalExclusionType, ) -> None: ...
	@overload
	def paint(self, arg0: javawrappers.java.awt.Graphics, arg1: javawrappers.java.awt.Shape, ) -> None: ...
	@overload
	def paint(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def removeWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def getInputMethodListeners(self, ) -> JArray(javawrappers.java.awt.event.InputMethodListener, 1): ...
	def setLayout(self, arg0: javawrappers.java.awt.LayoutManager, ) -> None: ...
	def mouseDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getOwner(self, ) -> javawrappers.java.awt.Window: ...
	def getInputMethodRequests(self, ) -> javawrappers.java.awt.im.InputMethodRequests: ...
	def addHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	@overload
	def removeAll(self, ) -> None: ...
	@overload
	def removeAll(self, ) -> None: ...
	def getMinimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getAlignmentY(self, ) -> Union[float, JFloat]: ...
	def getMaximumSpan(self, arg0: Union[int, JInt], ) -> Union[float, JFloat]: ...
	def getWindowStateListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowStateListener, 1): ...
	def getAlignmentX(self, ) -> Union[float, JFloat]: ...
	def removeUpdate(self, arg0: javawrappers.javax.swing.event.DocumentEvent, arg1: javawrappers.java.awt.Shape, arg2: javawrappers.javax.swing.text.ViewFactory, ) -> None: ...
	def dispatchEvent(self, arg0: javawrappers.java.awt.AWTEvent, ) -> None: ...
	def setFocusableWindowState(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getMostRecentFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def reshape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def pack(self, ) -> None: ...
	def toBack(self, ) -> None: ...
	def postEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.BufferCapabilities, ) -> None: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def contains(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getCharacterAttributeRun(self, ) -> javawrappers.javax.swing.text.Element: ...
	def size(self, ) -> javawrappers.java.awt.Dimension: ...
	def getType(self, ) -> javawrappers.java.awt.Window.Type: ...
	def mouseUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def enableInputMethods(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setLayeredPane(self, arg0: javawrappers.javax.swing.JLayeredPane, ) -> None: ...
	def removeContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def configChanged(self, arg0: javawrappers.java.io.File, ) -> None: ...
	def addComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	@staticmethod
	def setDefaultLookAndFeelDecorated(arg0: Union[int, JBoolean], ) -> None: ...
	def getMaximizedBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	def removeHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def getActions(self, ) -> JArray(javawrappers.javax.swing.Action, 1): ...
	def removeWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getFontMetrics(self, arg0: javawrappers.java.awt.Font, ) -> javawrappers.java.awt.FontMetrics: ...
	def getHeight(self, ) -> Union[int, JInt]: ...
	def getIgnoreRepaint(self, ) -> Union[int, JBoolean]: ...
	def getBaselineResizeBehavior(self, ) -> javawrappers.java.awt.Component.BaselineResizeBehavior: ...
	def removeMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def getNextVisualPositionFrom(self, arg0: Union[int, JInt], arg1: javawrappers.javax.swing.text.Position.Bias, arg2: javawrappers.java.awt.Shape, arg3: Union[int, JInt], arg4: JArray(javawrappers.javax.swing.text.Position.Bias, 1), ) -> Union[int, JInt]: ...
	def getInputAttributes(self, ) -> javawrappers.javax.swing.text.MutableAttributeSet: ...
	def applyComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def isAlwaysOnTopSupported(self, ) -> Union[int, JBoolean]: ...
	def validate(self, ) -> None: ...
	@overload
	def getParent(self, ) -> javawrappers.javax.swing.text.View: ...
	@overload
	def getParent(self, ) -> javawrappers.java.awt.Container: ...
	def isMinimumSizeSet(self, ) -> Union[int, JBoolean]: ...
	def getWindowFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowFocusListener, 1): ...
	def setComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	@overload
	def setBounds(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	@staticmethod
	def getWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def isValidateRoot(self, ) -> Union[int, JBoolean]: ...
	def addNotify(self, ) -> None: ...
	def getElement(self, ) -> javawrappers.javax.swing.text.Element: ...
	def addInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFocusCycleRootAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def setFocusTraversalPolicyProvider(self, arg0: Union[int, JBoolean], ) -> None: ...
	def addWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def countComponents(self, ) -> Union[int, JInt]: ...
	def isFocusTraversable(self, ) -> Union[int, JBoolean]: ...
	def inside(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def nextFocus(self, ) -> None: ...
	def getFocusTraversalKeys(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.Set: ...
	def getInputContext(self, ) -> javawrappers.java.awt.im.InputContext: ...
	def isCursorSet(self, ) -> Union[int, JBoolean]: ...
	def setMenuBar(self, arg0: javawrappers.java.awt.MenuBar, ) -> None: ...
	@overload
	def viewToModel(self, arg0: Union[float, JFloat], arg1: Union[float, JFloat], arg2: javawrappers.java.awt.Shape, ) -> Union[int, JInt]: ...
	@overload
	def viewToModel(self, arg0: Union[float, JFloat], arg1: Union[float, JFloat], arg2: javawrappers.java.awt.Shape, arg3: JArray(javawrappers.javax.swing.text.Position.Bias, 1), ) -> Union[int, JInt]: ...
	def getMouseWheelListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseWheelListener, 1): ...
	def getComponents(self, ) -> JArray(javawrappers.java.awt.Component, 1): ...
	def removeMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def doLayout(self, ) -> None: ...
	def isLocationByPlatform(self, ) -> Union[int, JBoolean]: ...
	def getView(self, arg0: Union[int, JInt], ) -> javawrappers.javax.swing.text.View: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.PopupMenu, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getStartOffset(self, ) -> Union[int, JInt]: ...
	def removeKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def breakView(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[float, JFloat], arg3: Union[float, JFloat], ) -> javawrappers.javax.swing.text.View: ...
	def createDefaultDocument(self, ) -> javawrappers.javax.swing.text.Document: ...
	def setFocusCycleRoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setTitle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getViewCount(self, ) -> Union[int, JInt]: ...
	def isResizable(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	def getMinimumSpan(self, arg0: Union[int, JInt], ) -> Union[float, JFloat]: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def setDropTarget(self, arg0: javawrappers.java.awt.dnd.DropTarget, ) -> None: ...
	@overload
	def list(self, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, arg1: Union[int, JInt], ) -> None: ...
	def isFocused(self, ) -> Union[int, JBoolean]: ...
	def getPreferredSpan(self, arg0: Union[int, JInt], ) -> Union[float, JFloat]: ...
	def revalidate(self, ) -> None: ...
	def removeWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def setContentPane(self, arg0: javawrappers.java.awt.Container, ) -> None: ...
	def getContentType(self, ) -> javawrappers.java.lang.String: ...
	def removeNotify(self, ) -> None: ...
	def deinstall(self, arg0: javawrappers.javax.swing.JEditorPane, ) -> None: ...
	def getWarningString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getOwnerlessWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def gotFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def handleEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isForegroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def show(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def show(self, ) -> None: ...
	def getShape(self, ) -> javawrappers.java.awt.Shape: ...
	def update(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def isFocusTraversalPolicySet(self, ) -> Union[int, JBoolean]: ...
	def setMaximumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def modelToView(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Shape, arg2: javawrappers.javax.swing.text.Position.Bias, ) -> javawrappers.java.awt.Shape: ...
	@overload
	def modelToView(self, arg0: Union[int, JInt], arg1: javawrappers.javax.swing.text.Position.Bias, arg2: Union[int, JInt], arg3: javawrappers.javax.swing.text.Position.Bias, arg4: javawrappers.java.awt.Shape, ) -> javawrappers.java.awt.Shape: ...
	@overload
	def modelToView(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Shape, ) -> javawrappers.java.awt.Shape: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.MenuComponent, ) -> None: ...
	def addMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def imageUpdate(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	def getLayout(self, ) -> javawrappers.java.awt.LayoutManager: ...
	def addKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getContainerListeners(self, ) -> JArray(javawrappers.java.awt.event.ContainerListener, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getComponentListeners(self, ) -> JArray(javawrappers.java.awt.event.ComponentListener, 1): ...
	def getLayeredPane(self, ) -> javawrappers.javax.swing.JLayeredPane: ...
	def isMaximumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def getWindowListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowListener, 1): ...
	def getCursorType(self, ) -> Union[int, JInt]: ...
	def getCursor(self, ) -> javawrappers.java.awt.Cursor: ...
	@overload
	def createImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Image: ...
	@overload
	def createImage(self, arg0: javawrappers.java.awt.image.ImageProducer, ) -> javawrappers.java.awt.Image: ...
	def createCaret(self, ) -> javawrappers.javax.swing.text.Caret: ...
	def mouseMove(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def areFocusTraversalKeysSet(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getKeyListeners(self, ) -> JArray(javawrappers.java.awt.event.KeyListener, 1): ...
	def getContentPane(self, ) -> javawrappers.java.awt.Container: ...
	def setType(self, arg0: javawrappers.java.awt.Window.Type, ) -> None: ...
	def layout(self, ) -> None: ...
	def setExtendedState(self, arg0: Union[int, JInt], ) -> None: ...
	def getBaseline(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def print_(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def paintComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.FocusListener, 1): ...
	def getBreakWeight(self, arg0: Union[int, JInt], arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> Union[int, JInt]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def resize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def resize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.awt.ImageCapabilities, ) -> javawrappers.java.awt.image.VolatileImage: ...
	def isAutoRequestFocus(self, ) -> Union[int, JBoolean]: ...
	def setState(self, arg0: Union[int, JInt], ) -> None: ...
	def location(self, ) -> javawrappers.java.awt.Point: ...
	def lostFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def keyDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getDropTarget(self, ) -> javawrappers.java.awt.dnd.DropTarget: ...
	def getTransferHandler(self, ) -> javawrappers.javax.swing.TransferHandler: ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def append(self, arg0: javawrappers.javax.swing.text.View, ) -> None: ...
	def setGlassPane(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def insertUpdate(self, arg0: javawrappers.javax.swing.event.DocumentEvent, arg1: javawrappers.java.awt.Shape, arg2: javawrappers.javax.swing.text.ViewFactory, ) -> None: ...
	def setOpacity(self, arg0: Union[float, JFloat], ) -> None: ...
	def getIconImage(self, ) -> javawrappers.java.awt.Image: ...
	def getHierarchyBoundsListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyBoundsListener, 1): ...
	def getRootPane(self, ) -> javawrappers.javax.swing.JRootPane: ...
	@overload
	def getBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def getBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> javawrappers.java.awt.Rectangle: ...
	def setPreferredSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def getJMenuBar(self, ) -> javawrappers.javax.swing.JMenuBar: ...
	@overload
	def enable(self, ) -> None: ...
	@overload
	def enable(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def getMousePosition(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.awt.Point: ...
	@overload
	def getMousePosition(self, ) -> javawrappers.java.awt.Point: ...
	def action(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setIconImages(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def setDefaultCloseOperation(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def write(self, arg0: javawrappers.java.io.OutputStream, arg1: javawrappers.javax.swing.text.Document, arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def write(self, arg0: javawrappers.java.io.Writer, arg1: javawrappers.javax.swing.text.Document, arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def addContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def getEndOffset(self, ) -> Union[int, JInt]: ...
	def setComponentZOrder(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> None: ...
	def getAttributes(self, ) -> javawrappers.javax.swing.text.AttributeSet: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: JByte, arg2: JByte, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], arg2: Union[string, JString], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], arg2: Union[int, JShort], ) -> None: ...
	def getContainer(self, ) -> javawrappers.java.awt.Container: ...
	def addMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	@staticmethod
	def isDefaultLookAndFeelDecorated() -> Union[int, JBoolean]: ...
	def getComponentOrientation(self, ) -> javawrappers.java.awt.ComponentOrientation: ...
	def setFocusable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def showEditor(self, ) -> None: ...
	def getTreeLock(self, ) -> javawrappers.java.lang.Object: ...
	def addHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def isBackgroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def findComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def findComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocationByPlatform(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLightweight(self, ) -> Union[int, JBoolean]: ...
	def install(self, arg0: javawrappers.javax.swing.JEditorPane, ) -> None: ...
	def setTransferHandler(self, arg0: javawrappers.javax.swing.TransferHandler, ) -> None: ...
	def isEnabled(self, ) -> Union[int, JBoolean]: ...
	def minimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def bounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	def nextTabStop(self, arg0: Union[float, JFloat], arg1: Union[int, JInt], ) -> Union[float, JFloat]: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def getMouseMotionListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseMotionListener, 1): ...
	def getModalExclusionType(self, ) -> javawrappers.java.awt.Dialog.ModalExclusionType: ...
	def setMinimumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def transferFocus(self, ) -> None: ...
	def printComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	@overload
	def getViewFactory(self, ) -> javawrappers.javax.swing.text.ViewFactory: ...
	@overload
	def getViewFactory(self, ) -> javawrappers.javax.swing.text.ViewFactory: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	def setJMenuBar(self, arg0: javawrappers.javax.swing.JMenuBar, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getMaximumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def saveAs(self, ) -> None: ...
	def getLocationOnScreen(self, ) -> javawrappers.java.awt.Point: ...
	def save(self, ) -> None: ...
	def keyUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getWidth(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def setFocusTraversalPolicy(self, arg0: javawrappers.java.awt.FocusTraversalPolicy, ) -> None: ...
	def addWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def paintAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setFocusTraversalKeys(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ) -> None: ...
	def setParent(self, arg0: javawrappers.javax.swing.text.View, ) -> None: ...
	def hasFocus(self, ) -> Union[int, JBoolean]: ...
	def changedUpdate(self, arg0: javawrappers.javax.swing.event.DocumentEvent, arg1: javawrappers.java.awt.Shape, arg2: javawrappers.javax.swing.text.ViewFactory, ) -> None: ...
	def isPreferredSizeSet(self, ) -> Union[int, JBoolean]: ...
	def addWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def getFocusableWindowState(self, ) -> Union[int, JBoolean]: ...
	def getIconImages(self, ) -> javawrappers.java.util.List: ...
	def isDoubleBuffered(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getPropertyChangeListeners(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	@overload
	def getPropertyChangeListeners(self, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	def getColorModel(self, ) -> javawrappers.java.awt.image.ColorModel: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getInsets(self, ) -> javawrappers.java.awt.Insets: ...
	def getFocusTraversalKeysEnabled(self, ) -> Union[int, JBoolean]: ...
	def getResizeWeight(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def hide(self, ) -> None: ...
	def getPreferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def setUndecorated(self, arg0: Union[int, JBoolean], ) -> None: ...
	def disable(self, ) -> None: ...
	def isUndecorated(self, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	def isFocusableWindow(self, ) -> Union[int, JBoolean]: ...
	def getToolTipText(self, arg0: Union[float, JFloat], arg1: Union[float, JFloat], arg2: javawrappers.java.awt.Shape, ) -> javawrappers.java.lang.String: ...
	def isFocusable(self, ) -> Union[int, JBoolean]: ...
	def setLocationRelativeTo(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def insets(self, ) -> javawrappers.java.awt.Insets: ...
	def setIconImage(self, arg0: javawrappers.java.awt.Image, ) -> None: ...
	def replace(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: JArray(javawrappers.javax.swing.text.View, 1), ) -> None: ...
	def setMixingCutoutShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def isActive(self, ) -> Union[int, JBoolean]: ...
	def getMenuBar(self, ) -> javawrappers.java.awt.MenuBar: ...
	def mouseExit(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getHierarchyListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyListener, 1): ...
	def getOpacity(self, ) -> Union[float, JFloat]: ...
	def isShowing(self, ) -> Union[int, JBoolean]: ...
	def mouseEnter(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getTitle(self, ) -> javawrappers.java.lang.String: ...
	def mouseDrag(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def preferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def create(self, arg0: javawrappers.javax.swing.text.Element, ) -> javawrappers.javax.swing.text.View: ...
	def getDefaultCloseOperation(self, ) -> Union[int, JInt]: ...
	def getMouseListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseListener, 1): ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def setAutoRequestFocus(self, arg0: Union[int, JBoolean], ) -> None: ...
	def toFront(self, ) -> None: ...
	@overload
	def read(self, arg0: javawrappers.java.io.InputStream, arg1: javawrappers.javax.swing.text.Document, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def read(self, arg0: javawrappers.java.io.Reader, arg1: javawrappers.javax.swing.text.Document, arg2: Union[int, JInt], ) -> None: ...
	def getDocument(self, ) -> javawrappers.javax.swing.text.Document: ...
	def getGlassPane(self, ) -> javawrappers.java.awt.Component: ...
	def deliverEvent(self, arg0: javawrappers.java.awt.Event, ) -> None: ...
	def getForeground(self, ) -> javawrappers.java.awt.Color: ...
	def isAncestorOf(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def getComponentCount(self, ) -> Union[int, JInt]: ...
	def getExtendedState(self, ) -> Union[int, JInt]: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def dispose(self, ) -> None: ...
	@overload
	def setCursor(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def setCursor(self, arg0: javawrappers.java.awt.Cursor, ) -> None: ...
	def isDisplayable(self, ) -> Union[int, JBoolean]: ...
	def getGraphicsConfiguration(self, ) -> javawrappers.java.awt.GraphicsConfiguration: ...
	def getComponent(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def removeComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	@overload
	def requestFocus(self, ) -> None: ...
	@overload
	def requestFocus(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> None: ...
	def locate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def addFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	@overload
	def getComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def getComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def isAlwaysOnTop(self, ) -> Union[int, JBoolean]: ...
	def insert(self, arg0: Union[int, JInt], arg1: javawrappers.javax.swing.text.View, ) -> None: ...
	def getChildAllocation(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.Shape, ) -> javawrappers.java.awt.Shape: ...
	@overload
	def isFocusCycleRoot(self, arg0: javawrappers.java.awt.Container, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, ) -> Union[int, JBoolean]: ...
	def createFragment(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.javax.swing.text.View: ...
	def setFocusTraversalKeysEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getComponentZOrder(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JInt]: ...
	def setBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def printAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getToolkit(self, ) -> javawrappers.java.awt.Toolkit: ...
	def transferFocusUpCycle(self, ) -> None: ...
	def isFontSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def setSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setSize(self, arg0: Union[float, JFloat], arg1: Union[float, JFloat], ) -> None: ...
	def isFocusTraversalPolicyProvider(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setLocation(self, arg0: javawrappers.java.awt.Point, ) -> None: ...
	@overload
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	@overload
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	def removeFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def setIgnoreRepaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getAlignment(self, arg0: Union[int, JInt], ) -> Union[float, JFloat]: ...
	def transferFocusBackward(self, ) -> None: ...
	def getOwnedWindows(self, ) -> JArray(javawrappers.java.awt.Window, 1): ...
	def setMaximizedBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def move(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def transferFocusDownCycle(self, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.util.ResourceBundle, ) -> None: ...
	def setResizable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def invalidate(self, ) -> None: ...
	def getBufferStrategy(self, ) -> javawrappers.java.awt.image.BufferStrategy: ...
	def getAccessibleContext(self, ) -> javawrappers.javax.accessibility.AccessibleContext: ...
	def setShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def isFocusOwner(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getSize(self, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def getSize(self, arg0: javawrappers.java.awt.Dimension, ) -> javawrappers.java.awt.Dimension: ...
	def getX(self, ) -> Union[int, JInt]: ...
	def removeHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def getY(self, ) -> Union[int, JInt]: ...
	def getState(self, ) -> Union[int, JInt]: ...
	def getFocusTraversalPolicy(self, ) -> javawrappers.java.awt.FocusTraversalPolicy: ...
	def setAlwaysOnTop(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def removeMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def getBackground(self, ) -> javawrappers.java.awt.Color: ...
	def addMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...


class PopulationSampler:
	def __init__(self, ): ...
	@overload
	def getLocation(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Point: ...
	@overload
	def getLocation(self, ) -> javawrappers.java.awt.Point: ...
	@overload
	def requestFocusInWindow(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> Union[int, JBoolean]: ...
	@overload
	def requestFocusInWindow(self, ) -> Union[int, JBoolean]: ...
	def isOpaque(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getFrames() -> JArray(javawrappers.java.awt.Frame, 1): ...
	def setModalExclusionType(self, arg0: javawrappers.java.awt.Dialog.ModalExclusionType, ) -> None: ...
	def paint(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def removeWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def getInputMethodListeners(self, ) -> JArray(javawrappers.java.awt.event.InputMethodListener, 1): ...
	def setLayout(self, arg0: javawrappers.java.awt.LayoutManager, ) -> None: ...
	def mouseDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getOwner(self, ) -> javawrappers.java.awt.Window: ...
	def getInputMethodRequests(self, ) -> javawrappers.java.awt.im.InputMethodRequests: ...
	def addHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def removeAll(self, ) -> None: ...
	def getMinimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getAlignmentY(self, ) -> Union[float, JFloat]: ...
	def getWindowStateListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowStateListener, 1): ...
	def getAlignmentX(self, ) -> Union[float, JFloat]: ...
	def dispatchEvent(self, arg0: javawrappers.java.awt.AWTEvent, ) -> None: ...
	def setFocusableWindowState(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getMostRecentFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def reshape(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def pack(self, ) -> None: ...
	def toBack(self, ) -> None: ...
	def postEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], arg1: javawrappers.java.awt.BufferCapabilities, ) -> None: ...
	@overload
	def createBufferStrategy(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def contains(self, arg0: javawrappers.java.awt.Point, ) -> Union[int, JBoolean]: ...
	@overload
	def contains(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def size(self, ) -> javawrappers.java.awt.Dimension: ...
	def getType(self, ) -> javawrappers.java.awt.Window.Type: ...
	def mouseUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def enableInputMethods(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setLayeredPane(self, arg0: javawrappers.javax.swing.JLayeredPane, ) -> None: ...
	def removeContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def addComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def removeInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	@staticmethod
	def setDefaultLookAndFeelDecorated(arg0: Union[int, JBoolean], ) -> None: ...
	def getMaximizedBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	def removeHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def removeWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getFontMetrics(self, arg0: javawrappers.java.awt.Font, ) -> javawrappers.java.awt.FontMetrics: ...
	def getHeight(self, ) -> Union[int, JInt]: ...
	def getIgnoreRepaint(self, ) -> Union[int, JBoolean]: ...
	def getBaselineResizeBehavior(self, ) -> javawrappers.java.awt.Component.BaselineResizeBehavior: ...
	def removeMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def applyComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	def isAlwaysOnTopSupported(self, ) -> Union[int, JBoolean]: ...
	def validate(self, ) -> None: ...
	def getParent(self, ) -> javawrappers.java.awt.Container: ...
	def isMinimumSizeSet(self, ) -> Union[int, JBoolean]: ...
	def getWindowFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowFocusListener, 1): ...
	def setComponentOrientation(self, arg0: javawrappers.java.awt.ComponentOrientation, ) -> None: ...
	@overload
	def setBounds(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	@overload
	def setBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	@staticmethod
	def getWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def isValidateRoot(self, ) -> Union[int, JBoolean]: ...
	def addNotify(self, ) -> None: ...
	def addInputMethodListener(self, arg0: javawrappers.java.awt.event.InputMethodListener, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFocusCycleRootAncestor(self, ) -> javawrappers.java.awt.Container: ...
	def setFocusTraversalPolicyProvider(self, arg0: Union[int, JBoolean], ) -> None: ...
	def addWindowFocusListener(self, arg0: javawrappers.java.awt.event.WindowFocusListener, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def countComponents(self, ) -> Union[int, JInt]: ...
	def isFocusTraversable(self, ) -> Union[int, JBoolean]: ...
	def inside(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def nextFocus(self, ) -> None: ...
	def getFocusTraversalKeys(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.Set: ...
	def getInputContext(self, ) -> javawrappers.java.awt.im.InputContext: ...
	def isCursorSet(self, ) -> Union[int, JBoolean]: ...
	def setMenuBar(self, arg0: javawrappers.java.awt.MenuBar, ) -> None: ...
	def getMouseWheelListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseWheelListener, 1): ...
	def getComponents(self, ) -> JArray(javawrappers.java.awt.Component, 1): ...
	def removeMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	def doLayout(self, ) -> None: ...
	def isLocationByPlatform(self, ) -> Union[int, JBoolean]: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: javawrappers.java.lang.Object, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	@overload
	def add(self, arg0: javawrappers.java.awt.PopupMenu, ) -> None: ...
	def setVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def removeKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def setFocusCycleRoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setTitle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def isResizable(self, ) -> Union[int, JBoolean]: ...
	def isVisible(self, ) -> Union[int, JBoolean]: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def removePropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def setDropTarget(self, arg0: javawrappers.java.awt.dnd.DropTarget, ) -> None: ...
	@overload
	def list(self, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintWriter, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def list(self, arg0: javawrappers.java.io.PrintStream, arg1: Union[int, JInt], ) -> None: ...
	def isFocused(self, ) -> Union[int, JBoolean]: ...
	def revalidate(self, ) -> None: ...
	def removeWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def setContentPane(self, arg0: javawrappers.java.awt.Container, ) -> None: ...
	def removeNotify(self, ) -> None: ...
	def getWarningString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getOwnerlessWindows() -> JArray(javawrappers.java.awt.Window, 1): ...
	def gotFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def handleEvent(self, arg0: javawrappers.java.awt.Event, ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def isForegroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def show(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def show(self, ) -> None: ...
	def getShape(self, ) -> javawrappers.java.awt.Shape: ...
	def update(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def isFocusTraversalPolicySet(self, ) -> Union[int, JBoolean]: ...
	def setMaximumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def remove(self, arg0: javawrappers.java.awt.MenuComponent, ) -> None: ...
	def addMouseWheelListener(self, arg0: javawrappers.java.awt.event.MouseWheelListener, ) -> None: ...
	def imageUpdate(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], arg5: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	@overload
	def checkImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JInt]: ...
	def getLayout(self, ) -> javawrappers.java.awt.LayoutManager: ...
	def addKeyListener(self, arg0: javawrappers.java.awt.event.KeyListener, ) -> None: ...
	def getContainerListeners(self, ) -> JArray(javawrappers.java.awt.event.ContainerListener, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getComponentListeners(self, ) -> JArray(javawrappers.java.awt.event.ComponentListener, 1): ...
	def getLayeredPane(self, ) -> javawrappers.javax.swing.JLayeredPane: ...
	def isMaximumSizeSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	@overload
	def addPropertyChangeListener(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.beans.PropertyChangeListener, ) -> None: ...
	def getWindowListeners(self, ) -> JArray(javawrappers.java.awt.event.WindowListener, 1): ...
	def getCursorType(self, ) -> Union[int, JInt]: ...
	def getCursor(self, ) -> javawrappers.java.awt.Cursor: ...
	@overload
	def createImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Image: ...
	@overload
	def createImage(self, arg0: javawrappers.java.awt.image.ImageProducer, ) -> javawrappers.java.awt.Image: ...
	def mouseMove(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def areFocusTraversalKeysSet(self, arg0: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getKeyListeners(self, ) -> JArray(javawrappers.java.awt.event.KeyListener, 1): ...
	def getContentPane(self, ) -> javawrappers.java.awt.Container: ...
	def setType(self, arg0: javawrappers.java.awt.Window.Type, ) -> None: ...
	def layout(self, ) -> None: ...
	def setExtendedState(self, arg0: Union[int, JInt], ) -> None: ...
	def getBaseline(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	def print_(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def paintComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getFocusListeners(self, ) -> JArray(javawrappers.java.awt.event.FocusListener, 1): ...
	@overload
	def resize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def resize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.image.VolatileImage: ...
	@overload
	def createVolatileImage(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: javawrappers.java.awt.ImageCapabilities, ) -> javawrappers.java.awt.image.VolatileImage: ...
	def isAutoRequestFocus(self, ) -> Union[int, JBoolean]: ...
	def setState(self, arg0: Union[int, JInt], ) -> None: ...
	def location(self, ) -> javawrappers.java.awt.Point: ...
	def lostFocus(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def keyDown(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getDropTarget(self, ) -> javawrappers.java.awt.dnd.DropTarget: ...
	def getTransferHandler(self, ) -> javawrappers.javax.swing.TransferHandler: ...
	def getLocale(self, ) -> javawrappers.java.util.Locale: ...
	def setGlassPane(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def setOpacity(self, arg0: Union[float, JFloat], ) -> None: ...
	def getIconImage(self, ) -> javawrappers.java.awt.Image: ...
	def getHierarchyBoundsListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyBoundsListener, 1): ...
	def getRootPane(self, ) -> javawrappers.javax.swing.JRootPane: ...
	@overload
	def getBounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def getBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> javawrappers.java.awt.Rectangle: ...
	def setPreferredSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def getJMenuBar(self, ) -> javawrappers.javax.swing.JMenuBar: ...
	@overload
	def enable(self, ) -> None: ...
	@overload
	def enable(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def getMousePosition(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.awt.Point: ...
	@overload
	def getMousePosition(self, ) -> javawrappers.java.awt.Point: ...
	def action(self, arg0: javawrappers.java.awt.Event, arg1: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setIconImages(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def setDefaultCloseOperation(self, arg0: Union[int, JInt], ) -> None: ...
	def addContainerListener(self, arg0: javawrappers.java.awt.event.ContainerListener, ) -> None: ...
	def setComponentZOrder(self, arg0: javawrappers.java.awt.Component, arg1: Union[int, JInt], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: JByte, arg2: JByte, ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], arg2: Union[long, JLong], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], arg2: Union[float, JFloat], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], arg2: Union[string, JString], ) -> None: ...
	@overload
	def firePropertyChange(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], arg2: Union[int, JShort], ) -> None: ...
	def addMouseMotionListener(self, arg0: javawrappers.java.awt.event.MouseMotionListener, ) -> None: ...
	@staticmethod
	def isDefaultLookAndFeelDecorated() -> Union[int, JBoolean]: ...
	def getComponentOrientation(self, ) -> javawrappers.java.awt.ComponentOrientation: ...
	def setFocusable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getTreeLock(self, ) -> javawrappers.java.lang.Object: ...
	def addHierarchyListener(self, arg0: javawrappers.java.awt.event.HierarchyListener, ) -> None: ...
	def isBackgroundSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def findComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def findComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocationByPlatform(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isLightweight(self, ) -> Union[int, JBoolean]: ...
	def setTransferHandler(self, arg0: javawrappers.javax.swing.TransferHandler, ) -> None: ...
	def isEnabled(self, ) -> Union[int, JBoolean]: ...
	def minimumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def bounds(self, ) -> javawrappers.java.awt.Rectangle: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: Union[int, JInt], ) -> None: ...
	@overload
	def repaint(self, ) -> None: ...
	@overload
	def repaint(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def repaint(self, arg0: Union[int, JInt], arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], ) -> None: ...
	def getMouseMotionListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseMotionListener, 1): ...
	def getModalExclusionType(self, ) -> javawrappers.java.awt.Dialog.ModalExclusionType: ...
	def setMinimumSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	def transferFocus(self, ) -> None: ...
	def printComponents(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getListeners(self, arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.util.EventListener, 1): ...
	def setJMenuBar(self, arg0: javawrappers.javax.swing.JMenuBar, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getMaximumSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getLocationOnScreen(self, ) -> javawrappers.java.awt.Point: ...
	def keyUp(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getWidth(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def setFocusTraversalPolicy(self, arg0: javawrappers.java.awt.FocusTraversalPolicy, ) -> None: ...
	def addWindowListener(self, arg0: javawrappers.java.awt.event.WindowListener, ) -> None: ...
	def paintAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def setFocusTraversalKeys(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Set, ) -> None: ...
	def hasFocus(self, ) -> Union[int, JBoolean]: ...
	def isPreferredSizeSet(self, ) -> Union[int, JBoolean]: ...
	def addWindowStateListener(self, arg0: javawrappers.java.awt.event.WindowStateListener, ) -> None: ...
	def getFocusableWindowState(self, ) -> Union[int, JBoolean]: ...
	def getIconImages(self, ) -> javawrappers.java.util.List: ...
	def isDoubleBuffered(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getPropertyChangeListeners(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	@overload
	def getPropertyChangeListeners(self, ) -> JArray(javawrappers.java.beans.PropertyChangeListener, 1): ...
	def getColorModel(self, ) -> javawrappers.java.awt.image.ColorModel: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getInsets(self, ) -> javawrappers.java.awt.Insets: ...
	def getFocusTraversalKeysEnabled(self, ) -> Union[int, JBoolean]: ...
	def hide(self, ) -> None: ...
	def getPreferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def setUndecorated(self, arg0: Union[int, JBoolean], ) -> None: ...
	def disable(self, ) -> None: ...
	def isUndecorated(self, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	@overload
	def prepareImage(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.awt.image.ImageObserver, ) -> Union[int, JBoolean]: ...
	def isFocusableWindow(self, ) -> Union[int, JBoolean]: ...
	def isFocusable(self, ) -> Union[int, JBoolean]: ...
	def setLocationRelativeTo(self, arg0: javawrappers.java.awt.Component, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def insets(self, ) -> javawrappers.java.awt.Insets: ...
	def setIconImage(self, arg0: javawrappers.java.awt.Image, ) -> None: ...
	def setMixingCutoutShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def isActive(self, ) -> Union[int, JBoolean]: ...
	def getMenuBar(self, ) -> javawrappers.java.awt.MenuBar: ...
	def mouseExit(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getHierarchyListeners(self, ) -> JArray(javawrappers.java.awt.event.HierarchyListener, 1): ...
	def getOpacity(self, ) -> Union[float, JFloat]: ...
	def isShowing(self, ) -> Union[int, JBoolean]: ...
	def mouseEnter(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def getTitle(self, ) -> javawrappers.java.lang.String: ...
	def mouseDrag(self, arg0: javawrappers.java.awt.Event, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> Union[int, JBoolean]: ...
	def preferredSize(self, ) -> javawrappers.java.awt.Dimension: ...
	def getDefaultCloseOperation(self, ) -> Union[int, JInt]: ...
	def getMouseListeners(self, ) -> JArray(javawrappers.java.awt.event.MouseListener, 1): ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def setAutoRequestFocus(self, arg0: Union[int, JBoolean], ) -> None: ...
	def toFront(self, ) -> None: ...
	def getGlassPane(self, ) -> javawrappers.java.awt.Component: ...
	def deliverEvent(self, arg0: javawrappers.java.awt.Event, ) -> None: ...
	def getForeground(self, ) -> javawrappers.java.awt.Color: ...
	def isAncestorOf(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JBoolean]: ...
	def getComponentCount(self, ) -> Union[int, JInt]: ...
	def getExtendedState(self, ) -> Union[int, JInt]: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def dispose(self, ) -> None: ...
	@overload
	def setCursor(self, arg0: Union[int, JInt], ) -> None: ...
	@overload
	def setCursor(self, arg0: javawrappers.java.awt.Cursor, ) -> None: ...
	def isDisplayable(self, ) -> Union[int, JBoolean]: ...
	def getGraphicsConfiguration(self, ) -> javawrappers.java.awt.GraphicsConfiguration: ...
	def getComponent(self, arg0: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def setLocale(self, arg0: javawrappers.java.util.Locale, ) -> None: ...
	def removeComponentListener(self, arg0: javawrappers.java.awt.event.ComponentListener, ) -> None: ...
	@overload
	def requestFocus(self, ) -> None: ...
	@overload
	def requestFocus(self, arg0: javawrappers.java.awt.event.FocusEvent.Cause, ) -> None: ...
	def locate(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def addFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	@overload
	def getComponentAt(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.Component: ...
	@overload
	def getComponentAt(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.awt.Component: ...
	def isAlwaysOnTop(self, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, arg0: javawrappers.java.awt.Container, ) -> Union[int, JBoolean]: ...
	@overload
	def isFocusCycleRoot(self, ) -> Union[int, JBoolean]: ...
	def setFocusTraversalKeysEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getComponentZOrder(self, arg0: javawrappers.java.awt.Component, ) -> Union[int, JInt]: ...
	def setBackground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def printAll(self, arg0: javawrappers.java.awt.Graphics, ) -> None: ...
	def getToolkit(self, ) -> javawrappers.java.awt.Toolkit: ...
	def transferFocusUpCycle(self, ) -> None: ...
	def isFontSet(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setSize(self, arg0: javawrappers.java.awt.Dimension, ) -> None: ...
	@overload
	def setSize(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def isFocusTraversalPolicyProvider(self, ) -> Union[int, JBoolean]: ...
	@overload
	def setLocation(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def setLocation(self, arg0: javawrappers.java.awt.Point, ) -> None: ...
	def getGraphics(self, ) -> javawrappers.java.awt.Graphics: ...
	def removeFocusListener(self, arg0: javawrappers.java.awt.event.FocusListener, ) -> None: ...
	def setIgnoreRepaint(self, arg0: Union[int, JBoolean], ) -> None: ...
	def transferFocusBackward(self, ) -> None: ...
	def getOwnedWindows(self, ) -> JArray(javawrappers.java.awt.Window, 1): ...
	def setMaximizedBounds(self, arg0: javawrappers.java.awt.Rectangle, ) -> None: ...
	def move(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def transferFocusDownCycle(self, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def applyResourceBundle(self, arg0: javawrappers.java.util.ResourceBundle, ) -> None: ...
	def setResizable(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setForeground(self, arg0: javawrappers.java.awt.Color, ) -> None: ...
	def invalidate(self, ) -> None: ...
	def getBufferStrategy(self, ) -> javawrappers.java.awt.image.BufferStrategy: ...
	def getAccessibleContext(self, ) -> javawrappers.javax.accessibility.AccessibleContext: ...
	def setShape(self, arg0: javawrappers.java.awt.Shape, ) -> None: ...
	def isFocusOwner(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getSize(self, ) -> javawrappers.java.awt.Dimension: ...
	@overload
	def getSize(self, arg0: javawrappers.java.awt.Dimension, ) -> javawrappers.java.awt.Dimension: ...
	def getX(self, ) -> Union[int, JInt]: ...
	def removeHierarchyBoundsListener(self, arg0: javawrappers.java.awt.event.HierarchyBoundsListener, ) -> None: ...
	def getY(self, ) -> Union[int, JInt]: ...
	def getState(self, ) -> Union[int, JInt]: ...
	def getFocusTraversalPolicy(self, ) -> javawrappers.java.awt.FocusTraversalPolicy: ...
	def setAlwaysOnTop(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getFocusOwner(self, ) -> javawrappers.java.awt.Component: ...
	def removeMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...
	def getBackground(self, ) -> javawrappers.java.awt.Color: ...
	def addMouseListener(self, arg0: javawrappers.java.awt.event.MouseListener, ) -> None: ...


