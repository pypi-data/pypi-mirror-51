################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.io
import javawrappers.org.matsim.api.core.v01.population
import javawrappers.net.opengis.kml.v_2_2_0
import javawrappers.org.matsim.vis.kml
import javawrappers.org.matsim.api.core.v01.network

from jpype.types import *
from typing import Union

from typing import overload

class NetworkKmlStyleFactory:
	def createDefaultNetworkLinkStyle(self, ) -> javawrappers.net.opengis.kml.v_2_2_0.StyleType: ...
	def createDefaultNetworkNodeStyle(self, ) -> javawrappers.net.opengis.kml.v_2_2_0.StyleType: ...


class KMZWriter:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def writeLinkedKml(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.net.opengis.kml.v_2_2_0.KmlType, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def writeMainKml(self, arg0: javawrappers.net.opengis.kml.v_2_2_0.KmlType, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def addNonKMLFile(self, arg0: JArray(JByte, 1), arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def addNonKMLFile(self, arg0: javawrappers.java.io.InputStream, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def addNonKMLFile(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	def close(self, ) -> None: ...
	def notify(self, ) -> None: ...


class MatsimKMLLogo:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def writeMatsimKMLLogo(arg0: javawrappers.org.matsim.vis.kml.KMZWriter, ) -> javawrappers.net.opengis.kml.v_2_2_0.ScreenOverlayType: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class NetworkFeatureFactory:
	def __init__(self, arg0: javawrappers.org.matsim.core.utils.geometry.CoordinateTransformation, arg1: javawrappers.org.matsim.api.core.v01.network.Network, ): ...
	def createNodeFeature(self, arg0: javawrappers.org.matsim.api.core.v01.network.Node, arg1: javawrappers.net.opengis.kml.v_2_2_0.StyleType, ) -> javawrappers.net.opengis.kml.v_2_2_0.AbstractFeatureType: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def createLinkFeature(self, arg0: javawrappers.org.matsim.api.core.v01.network.Link, arg1: javawrappers.net.opengis.kml.v_2_2_0.StyleType, ) -> javawrappers.net.opengis.kml.v_2_2_0.AbstractFeatureType: ...
	def createLegFeature(self, arg0: javawrappers.org.matsim.api.core.v01.population.Leg, arg1: javawrappers.net.opengis.kml.v_2_2_0.StyleType, ) -> javawrappers.net.opengis.kml.v_2_2_0.AbstractFeatureType: ...
	def createActFeature(self, arg0: javawrappers.org.matsim.api.core.v01.population.Activity, arg1: javawrappers.net.opengis.kml.v_2_2_0.StyleType, ) -> javawrappers.net.opengis.kml.v_2_2_0.AbstractFeatureType: ...
	def notify(self, ) -> None: ...


class MatsimKmlStyleFactory:
	def __init__(self, arg0: javawrappers.org.matsim.vis.kml.KMZWriter, arg1: javawrappers.net.opengis.kml.v_2_2_0.DocumentType, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def createDefaultNetworkLinkStyle(self, ) -> javawrappers.net.opengis.kml.v_2_2_0.StyleType: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def createDefaultNetworkNodeStyle(self, ) -> javawrappers.net.opengis.kml.v_2_2_0.StyleType: ...
	def notify(self, ) -> None: ...


