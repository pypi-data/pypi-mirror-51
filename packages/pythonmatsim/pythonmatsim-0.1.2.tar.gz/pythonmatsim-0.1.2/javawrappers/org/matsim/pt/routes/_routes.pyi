################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.matsim.api.core.v01.population
import javawrappers.org.matsim.pt.routes
import javawrappers.org.matsim.core.population.routes
import javawrappers.org.matsim.api.core.v01

from jpype.types import *
from typing import Union

from typing import overload

class ExperimentalTransitRoute:
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.pt.transitSchedule.api.TransitStopFacility, arg1: javawrappers.org.matsim.pt.transitSchedule.api.TransitStopFacility, arg2: javawrappers.org.matsim.api.core.v01.Id, arg3: javawrappers.org.matsim.api.core.v01.Id, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.pt.transitSchedule.api.TransitStopFacility, arg1: javawrappers.org.matsim.pt.transitSchedule.api.TransitLine, arg2: javawrappers.org.matsim.pt.transitSchedule.api.TransitRoute, arg3: javawrappers.org.matsim.pt.transitSchedule.api.TransitStopFacility, ): ...
	def getDistance(self, ) -> Union[float, JDouble]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setTravelTime(self, arg0: Union[float, JDouble], ) -> None: ...
	def setStartLinkId(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> None: ...
	def getEgressStopId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def getRouteType(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getRouteDescription(self, ) -> javawrappers.java.lang.String: ...
	def getRouteId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def setRouteDescription(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getStartLinkId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def notify(self, ) -> None: ...
	def setLocked(self, ) -> None: ...
	def getAccessStopId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def setEndLinkId(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> None: ...
	def getEndLinkId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def setDistance(self, arg0: Union[float, JDouble], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getTravelTime(self, ) -> Union[float, JDouble]: ...
	@overload
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def clone(self, ) -> javawrappers.org.matsim.api.core.v01.population.Route: ...
	@overload
	def clone(self, ) -> javawrappers.org.matsim.core.population.routes.AbstractRoute: ...
	@overload
	def clone(self, ) -> javawrappers.org.matsim.pt.routes.ExperimentalTransitRoute: ...
	def getLineId(self, ) -> javawrappers.org.matsim.api.core.v01.Id: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class ExperimentalTransitRouteFactory:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def createRoute(self, arg0: javawrappers.org.matsim.api.core.v01.Id, arg1: javawrappers.org.matsim.api.core.v01.Id, ) -> javawrappers.org.matsim.api.core.v01.population.Route: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getCreatedRouteType(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


