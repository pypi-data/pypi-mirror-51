################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.matsim.pt.utils
import javawrappers.org.matsim.pt.transitSchedule.api
import javawrappers.org.matsim.api.core.v01.network

from jpype.types import *
from typing import Union

from typing import overload

class CreatePseudoNetwork:
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.pt.transitSchedule.api.TransitSchedule, arg1: javawrappers.org.matsim.api.core.v01.network.Network, arg2: javawrappers.java.lang.String, arg3: Union[float, JDouble], arg4: Union[float, JDouble], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.matsim.pt.transitSchedule.api.TransitSchedule, arg1: javawrappers.org.matsim.api.core.v01.network.Network, arg2: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getLinkBetweenStops(self, arg0: javawrappers.org.matsim.pt.transitSchedule.api.TransitStopFacility, arg1: javawrappers.org.matsim.pt.transitSchedule.api.TransitStopFacility, ) -> javawrappers.org.matsim.api.core.v01.network.Link: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def createNetwork(self, ) -> None: ...
	def notify(self, ) -> None: ...


class TransitScheduleValidator:
	class ValidationResult:
		def __init__(self, ): ...
		class ValidationIssue:
			def __init__(self, arg0: javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Severity, arg1: javawrappers.java.lang.String, arg2: javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Type, arg3: javawrappers.java.util.Collection, ): ...
			def getClass(self, ) -> javawrappers.java.lang.Class: ...
			@overload
			def wait(self, arg0: Union[long, JLong], ) -> None: ...
			@overload
			def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
			@overload
			def wait(self, ) -> None: ...
			def getSeverity(self, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Severity: ...
			def getErrorCode(self, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Type: ...
			def hashCode(self, ) -> Union[int, JInt]: ...
			def notifyAll(self, ) -> None: ...
			def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
			def getMessage(self, ) -> javawrappers.java.lang.String: ...
			def getEntities(self, ) -> javawrappers.java.util.Collection: ...
			def toString(self, ) -> javawrappers.java.lang.String: ...
			def notify(self, ) -> None: ...


		class Type:
			HAS_MISSING_STOP_FACILITY: TransitScheduleValidator.ValidationResult.Type = ...
			HAS_NO_LINK_REF: TransitScheduleValidator.ValidationResult.Type = ...
			ROUTE_HAS_UNREACHABLE_STOP: TransitScheduleValidator.ValidationResult.Type = ...
			OTHER: TransitScheduleValidator.ValidationResult.Type = ...
			def getClass(self, ) -> javawrappers.java.lang.Class: ...
			def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
			@overload
			def wait(self, arg0: Union[long, JLong], ) -> None: ...
			@overload
			def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
			@overload
			def wait(self, ) -> None: ...
			def hashCode(self, ) -> Union[int, JInt]: ...
			@overload
			@staticmethod
			def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
			@overload
			@staticmethod
			def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Type: ...
			def notifyAll(self, ) -> None: ...
			def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
			@staticmethod
			def values() -> JArray(javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Type, 1): ...
			def name(self, ) -> javawrappers.java.lang.String: ...
			def toString(self, ) -> javawrappers.java.lang.String: ...
			@overload
			def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
			@overload
			def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
			def notify(self, ) -> None: ...
			def ordinal(self, ) -> Union[int, JInt]: ...


		class Severity:
			WARNING: TransitScheduleValidator.ValidationResult.Severity = ...
			ERROR: TransitScheduleValidator.ValidationResult.Severity = ...
			def getClass(self, ) -> javawrappers.java.lang.Class: ...
			def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
			@overload
			def wait(self, arg0: Union[long, JLong], ) -> None: ...
			@overload
			def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
			@overload
			def wait(self, ) -> None: ...
			def hashCode(self, ) -> Union[int, JInt]: ...
			@overload
			@staticmethod
			def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
			@overload
			@staticmethod
			def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Severity: ...
			def notifyAll(self, ) -> None: ...
			def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
			@staticmethod
			def values() -> JArray(javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Severity, 1): ...
			def name(self, ) -> javawrappers.java.lang.String: ...
			def toString(self, ) -> javawrappers.java.lang.String: ...
			@overload
			def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
			@overload
			def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
			def notify(self, ) -> None: ...
			def ordinal(self, ) -> Union[int, JInt]: ...


		def addError(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def getSeverity(self, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Severity: ...
		@overload
		@staticmethod
		def values() -> JArray(javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Severity, 1): ...
		@overload
		@staticmethod
		def values() -> JArray(javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Type, 1): ...
		def notifyAll(self, ) -> None: ...
		def getWarnings(self, ) -> javawrappers.java.util.List: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
		def getErrors(self, ) -> javawrappers.java.util.List: ...
		def notify(self, ) -> None: ...
		def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
		def getErrorCode(self, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Type: ...
		@overload
		def hashCode(self, ) -> Union[int, JInt]: ...
		@overload
		def hashCode(self, ) -> Union[int, JInt]: ...
		def addIssue(self, arg0: javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.ValidationIssue, ) -> None: ...
		def add(self, arg0: javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult, ) -> None: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Severity: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Type: ...
		def isValid(self, ) -> Union[int, JBoolean]: ...
		def getMessage(self, ) -> javawrappers.java.lang.String: ...
		@overload
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@overload
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def name(self, ) -> javawrappers.java.lang.String: ...
		def addWarning(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def getEntities(self, ) -> javawrappers.java.util.Collection: ...
		@overload
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@overload
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getIssues(self, ) -> javawrappers.java.util.List: ...
		def ordinal(self, ) -> Union[int, JInt]: ...


	def addError(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getSeverity(self, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Severity: ...
	@overload
	@staticmethod
	def values() -> JArray(javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Severity, 1): ...
	@overload
	@staticmethod
	def values() -> JArray(javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Type, 1): ...
	def getWarnings(self, ) -> javawrappers.java.util.List: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def main(arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	@staticmethod
	def validateOffsets(arg0: javawrappers.org.matsim.pt.transitSchedule.api.TransitSchedule, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult: ...
	@staticmethod
	def validateUsedStopsHaveLinkId(arg0: javawrappers.org.matsim.pt.transitSchedule.api.TransitSchedule, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def getErrors(self, ) -> javawrappers.java.util.List: ...
	def notify(self, ) -> None: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	@staticmethod
	def validateTransfers(arg0: javawrappers.org.matsim.pt.transitSchedule.api.TransitSchedule, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult: ...
	@staticmethod
	def validateAll(arg0: javawrappers.org.matsim.pt.transitSchedule.api.TransitSchedule, arg1: javawrappers.org.matsim.api.core.v01.network.Network, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult: ...
	def getErrorCode(self, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Type: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	def addIssue(self, arg0: javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.ValidationIssue, ) -> None: ...
	def add(self, arg0: javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult, ) -> None: ...
	@staticmethod
	def validateStopsOnNetworkRoute(arg0: javawrappers.org.matsim.pt.transitSchedule.api.TransitSchedule, arg1: javawrappers.org.matsim.api.core.v01.network.Network, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Severity: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult.Type: ...
	def isValid(self, ) -> Union[int, JBoolean]: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def validateAllStopsExist(arg0: javawrappers.org.matsim.pt.transitSchedule.api.TransitSchedule, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult: ...
	@staticmethod
	def validateNetworkRoutes(arg0: javawrappers.org.matsim.pt.transitSchedule.api.TransitSchedule, arg1: javawrappers.org.matsim.api.core.v01.network.Network, ) -> javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult: ...
	@staticmethod
	def printResult(arg0: javawrappers.org.matsim.pt.utils.TransitScheduleValidator.ValidationResult, ) -> None: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def addWarning(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getEntities(self, ) -> javawrappers.java.util.Collection: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getIssues(self, ) -> javawrappers.java.util.List: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class CreateVehiclesForSchedule:
	def __init__(self, arg0: javawrappers.org.matsim.pt.transitSchedule.api.TransitSchedule, arg1: javawrappers.org.matsim.vehicles.Vehicles, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def run(self, ) -> None: ...
	def notify(self, ) -> None: ...


