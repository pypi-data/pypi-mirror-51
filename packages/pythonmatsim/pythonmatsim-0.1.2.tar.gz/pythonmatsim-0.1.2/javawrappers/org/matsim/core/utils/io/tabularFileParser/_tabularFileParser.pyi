################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.net
import javawrappers.org.matsim.core.utils.io.tabularFileParser
import javawrappers.java.nio.charset

from jpype.types import *
from typing import Union

from typing import overload

class TabularFileHandler:
	def startRow(self, arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...


class TabularFileParserConfig:
	def __init__(self, ): ...
	def setEndRegex(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setCharset(self, arg0: javawrappers.java.nio.charset.Charset, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setEndTag(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setCommentRegex(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getStartRegex(self, ) -> javawrappers.java.lang.String: ...
	def setStartRegex(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setCommentTags(self, arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def getCharset(self, ) -> javawrappers.java.nio.charset.Charset: ...
	def getFile(self, ) -> javawrappers.java.lang.String: ...
	def getDelimiterRegex(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def setUrl(self, arg0: javawrappers.java.net.URL, ) -> None: ...
	def setDelimiterTags(self, arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def getUrl(self, ) -> javawrappers.java.net.URL: ...
	def setFileName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setDelimiterRegex(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getEndRegex(self, ) -> javawrappers.java.lang.String: ...
	def setStartTag(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCommentRegex(self, ) -> javawrappers.java.lang.String: ...


class TabularFileParser:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def parse(self, arg0: javawrappers.org.matsim.core.utils.io.tabularFileParser.TabularFileParserConfig, arg1: javawrappers.org.matsim.core.utils.io.tabularFileParser.TabularFileHandler, ) -> None: ...
	def notify(self, ) -> None: ...


