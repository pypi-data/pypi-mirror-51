################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.matsim.withinday.replanning.identifiers.filter
import javawrappers.org.matsim.api.core.v01
import javawrappers.org.matsim.withinday.replanning.identifiers.interfaces

from jpype.types import *
from typing import Union

from typing import overload

class TransportModeFilterFactory:
	def __init__(self, arg0: javawrappers.java.util.Set, arg1: javawrappers.org.matsim.withinday.mobsim.MobsimDataProvider, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.filter.TransportModeFilter: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.interfaces.AgentFilter: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class CollectionAgentFilterFactory:
	def __init__(self, arg0: javawrappers.java.util.Set, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.filter.CollectionAgentFilter: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.interfaces.AgentFilter: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ActivityStartingFilterFactory:
	def __init__(self, arg0: javawrappers.org.matsim.withinday.mobsim.MobsimDataProvider, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.filter.ActivityStartingFilter: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.interfaces.AgentFilter: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ProbabilityFilterFactory:
	def __init__(self, arg0: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.filter.ProbabilityFilter: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.interfaces.AgentFilter: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class LinkFilter:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.java.util.Set, arg1: Union[float, JDouble], ) -> None: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.org.matsim.api.core.v01.Id, arg1: Union[float, JDouble], ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class CollectionAgentFilter:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getIncludedAgents(self, ) -> javawrappers.java.util.Collection: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.org.matsim.api.core.v01.Id, arg1: Union[float, JDouble], ) -> Union[int, JBoolean]: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.java.util.Set, arg1: Union[float, JDouble], ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class TransportModeFilter:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.java.util.Set, arg1: Union[float, JDouble], ) -> None: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.org.matsim.api.core.v01.Id, arg1: Union[float, JDouble], ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class NextTransportModeFilterFactory:
	def __init__(self, arg0: javawrappers.java.util.Set, arg1: javawrappers.org.matsim.withinday.mobsim.MobsimDataProvider, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.filter.NextTransportModeFilter: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.interfaces.AgentFilter: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class EarliestLinkExitTimeFilter:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.java.util.Set, arg1: Union[float, JDouble], ) -> None: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.org.matsim.api.core.v01.Id, arg1: Union[float, JDouble], ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ActivityStartingFilter:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.java.util.Set, arg1: Union[float, JDouble], ) -> None: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.org.matsim.api.core.v01.Id, arg1: Union[float, JDouble], ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ProbabilityFilter:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.java.util.Set, arg1: Union[float, JDouble], ) -> None: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.org.matsim.api.core.v01.Id, arg1: Union[float, JDouble], ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class AgentTypeFilterFactory:
	def __init__(self, arg0: javawrappers.java.util.Set, arg1: javawrappers.org.matsim.withinday.mobsim.MobsimDataProvider, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.filter.AgentTypeFilter: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.interfaces.AgentFilter: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class LinkFilterFactory:
	def __init__(self, arg0: javawrappers.java.util.Set, arg1: javawrappers.org.matsim.withinday.mobsim.MobsimDataProvider, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.filter.LinkFilter: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.interfaces.AgentFilter: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class NextTransportModeFilter:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.java.util.Set, arg1: Union[float, JDouble], ) -> None: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.org.matsim.api.core.v01.Id, arg1: Union[float, JDouble], ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class EarliestLinkExitTimeFilterFactory:
	def __init__(self, arg0: javawrappers.org.matsim.withinday.trafficmonitoring.EarliestLinkExitTimeProvider, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.filter.EarliestLinkExitTimeFilter: ...
	@overload
	def createAgentFilter(self, ) -> javawrappers.org.matsim.withinday.replanning.identifiers.interfaces.AgentFilter: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class AgentTypeFilter:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.java.util.Set, arg1: Union[float, JDouble], ) -> None: ...
	@overload
	def applyAgentFilter(self, arg0: javawrappers.org.matsim.api.core.v01.Id, arg1: Union[float, JDouble], ) -> Union[int, JBoolean]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


