################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.matsim.core.mobsim.framework.events
import javawrappers.java.lang
import javawrappers.org.matsim.core.mobsim.framework
import javawrappers.java.util
import javawrappers.com.google.inject
import javawrappers.org.matsim.core.config
import javawrappers.org.matsim.core.mobsim.qsim.components
import javawrappers.org.matsim.core.mobsim.qsim.interfaces
import javawrappers.org.matsim.withinday.replanning.replanners.interfaces
import javawrappers.org.matsim.core.mobsim.qsim
import javawrappers.org.matsim.api.core.v01

from jpype.types import *
from typing import Union

from typing import overload

class WithinDayQSimModule:
	def __init__(self, arg0: javawrappers.org.matsim.withinday.mobsim.WithinDayEngine, arg1: javawrappers.org.matsim.core.mobsim.framework.listeners.FixedOrderSimulationListener, arg2: javawrappers.org.matsim.withinday.trafficmonitoring.WithinDayTravelTime, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def overrideMobsimModules(arg0: javawrappers.java.util.Collection, arg1: javawrappers.java.util.List, ) -> javawrappers.org.matsim.core.mobsim.framework.AbstractMobsimModule: ...
	@staticmethod
	def configureComponents(arg0: javawrappers.org.matsim.core.mobsim.qsim.components.QSimComponentsConfig, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def configure(self, arg0: javawrappers.com.google.inject.Binder, ) -> None: ...
	def setParent(self, arg0: javawrappers.org.matsim.core.mobsim.framework.AbstractMobsimModule, ) -> None: ...
	@staticmethod
	def overrideQSimModules(arg0: javawrappers.java.util.Collection, arg1: javawrappers.java.util.List, ) -> javawrappers.org.matsim.core.mobsim.qsim.AbstractQSimModule: ...
	def notify(self, ) -> None: ...
	def setConfig(self, arg0: javawrappers.org.matsim.core.config.Config, ) -> None: ...


class DuringActivityReplanningModule:
	def __init__(self, arg0: javawrappers.org.matsim.withinday.replanning.parallel.ParallelDuringActivityReplanner, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def doReplanning(self, arg0: Union[float, JDouble], ) -> None: ...
	def notify(self, ) -> None: ...


class InitialReplanningModule:
	def __init__(self, arg0: javawrappers.org.matsim.withinday.replanning.parallel.ParallelInitialReplanner, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def doReplanning(self, arg0: Union[float, JDouble], ) -> None: ...
	def notify(self, ) -> None: ...


class WithinDayQSimFactory:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, ) -> javawrappers.org.matsim.core.mobsim.framework.Mobsim: ...
	@overload
	def get(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class MobsimDataProvider:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getVehiclesDriver(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> javawrappers.org.matsim.core.mobsim.framework.MobsimAgent: ...
	def getDriversVehicle(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> javawrappers.org.matsim.core.mobsim.qsim.interfaces.MobsimVehicle: ...
	def getVehicle(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> javawrappers.org.matsim.core.mobsim.qsim.interfaces.MobsimVehicle: ...
	def notifyAll(self, ) -> None: ...
	def getAgent(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> javawrappers.org.matsim.core.mobsim.framework.MobsimAgent: ...
	def notify(self, ) -> None: ...
	def getVehicles(self, ) -> javawrappers.java.util.Map: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyMobsimInitialized(self, arg0: javawrappers.org.matsim.core.mobsim.framework.events.MobsimInitializedEvent, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getEnrouteVehiclesOnLink(self, arg0: javawrappers.org.matsim.api.core.v01.Id, ) -> javawrappers.java.util.Collection: ...
	def getAgents(self, ) -> javawrappers.java.util.Map: ...


class DuringLegReplanningModule:
	def __init__(self, arg0: javawrappers.org.matsim.withinday.replanning.parallel.ParallelDuringLegReplanner, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def doReplanning(self, arg0: Union[float, JDouble], ) -> None: ...
	def notify(self, ) -> None: ...


class WithinDayReplanningModule:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def doReplanning(self, arg0: Union[float, JDouble], ) -> None: ...
	def notify(self, ) -> None: ...


class WithinDayEngine:
	def __init__(self, arg0: javawrappers.org.matsim.core.api.experimental.events.EventsManager, arg1: javawrappers.org.matsim.core.config.groups.GlobalConfigGroup, ): ...
	def addIntialReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayInitialReplannerFactory, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def addTimedDuringLegReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayDuringLegReplannerFactory, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	def isDuringActivityReplanning(self, ) -> Union[int, JBoolean]: ...
	def onPrepareSim(self, ) -> None: ...
	def doInitialReplanning(self, arg0: Union[int, JBoolean], ) -> None: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def removeInitialReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayInitialReplannerFactory, ) -> None: ...
	def afterSim(self, ) -> None: ...
	def addDuringLegReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayDuringLegReplannerFactory, ) -> None: ...
	def addDuringActivityReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayDuringActivityReplannerFactory, ) -> None: ...
	def removeDuringLegReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayDuringLegReplannerFactory, ) -> None: ...
	def addTimedDuringActivityReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayDuringActivityReplannerFactory, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ) -> None: ...
	def doDuringActivityReplanning(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isInitialReplanning(self, ) -> Union[int, JBoolean]: ...
	def getActivityRescheduler(self, ) -> javawrappers.org.matsim.core.mobsim.qsim.ActivityEndRescheduler: ...
	def doSimStep(self, arg0: Union[float, JDouble], ) -> None: ...
	def setInternalInterface(self, arg0: javawrappers.org.matsim.core.mobsim.qsim.InternalInterface, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def removeDuringActivityReplannerFactory(self, arg0: javawrappers.org.matsim.withinday.replanning.replanners.interfaces.WithinDayDuringActivityReplannerFactory, ) -> None: ...
	def doDuringLegReplanning(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isDuringLegReplanning(self, ) -> Union[int, JBoolean]: ...


