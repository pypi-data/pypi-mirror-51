################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.awt
import javawrappers.org.jfree.chart.ui
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.org.jfree.data
import javawrappers.org.jfree.chart.util
import javawrappers.java.awt.geom
import javawrappers.org.jfree.chart.title
import javawrappers.org.jfree.chart.plot
import javawrappers.org.jfree.chart.event
import javawrappers.org.jfree.chart.axis

from jpype.types import *
from typing import Union

from typing import overload

class CategoryPointerAnnotation:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Comparable, arg2: Union[float, JDouble], arg3: Union[float, JDouble], ): ...
	def getArrowWidth(self, ) -> Union[float, JDouble]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getBaseRadius(self, ) -> Union[float, JDouble]: ...
	def getArrowPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def notifyAll(self, ) -> None: ...
	def setTipRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotationAngle(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotationAnchor(self, arg0: javawrappers.org.jfree.chart.ui.TextAnchor, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def setCategory(self, arg0: javawrappers.java.lang.Comparable, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def getRotationAngle(self, ) -> Union[float, JDouble]: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getLabelOffset(self, ) -> Union[float, JDouble]: ...
	def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getArrowLength(self, ) -> Union[float, JDouble]: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	def setArrowLength(self, arg0: Union[float, JDouble], ) -> None: ...
	def getArrowStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def setBaseRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	def setArrowPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setAngle(self, arg0: Union[float, JDouble], ) -> None: ...
	def getCategory(self, ) -> javawrappers.java.lang.Comparable: ...
	def setArrowWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def getRotationAnchor(self, ) -> javawrappers.org.jfree.chart.ui.TextAnchor: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.CategoryPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.CategoryAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, ) -> None: ...
	def setArrowStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def getTipRadius(self, ) -> Union[float, JDouble]: ...
	def getValue(self, ) -> Union[float, JDouble]: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def setLabelOffset(self, arg0: Union[float, JDouble], ) -> None: ...
	def getAngle(self, ) -> Union[float, JDouble]: ...
	def setTextAnchor(self, arg0: javawrappers.org.jfree.chart.ui.TextAnchor, ) -> None: ...
	def getTextAnchor(self, ) -> javawrappers.org.jfree.chart.ui.TextAnchor: ...
	def setValue(self, arg0: Union[float, JDouble], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def getCategoryAnchor(self, ) -> javawrappers.org.jfree.chart.axis.CategoryAnchor: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...
	def setText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setCategoryAnchor(self, arg0: javawrappers.org.jfree.chart.axis.CategoryAnchor, ) -> None: ...


class XYImageAnnotation:
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: javawrappers.java.awt.Image, ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: javawrappers.java.awt.Image, arg3: javawrappers.org.jfree.chart.ui.RectangleAnchor, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.XYPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.ValueAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, arg5: Union[int, JInt], arg6: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def setURL(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getURL(self, ) -> javawrappers.java.lang.String: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def getX(self, ) -> Union[float, JDouble]: ...
	def getY(self, ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getImageAnchor(self, ) -> javawrappers.org.jfree.chart.ui.RectangleAnchor: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getImage(self, ) -> javawrappers.java.awt.Image: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class XYAnnotation:
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.XYPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.ValueAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, arg5: Union[int, JInt], arg6: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...


class XYShapeAnnotation:
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Shape, arg1: javawrappers.java.awt.Stroke, arg2: javawrappers.java.awt.Paint, arg3: javawrappers.java.awt.Paint, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Shape, arg1: javawrappers.java.awt.Stroke, arg2: javawrappers.java.awt.Paint, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Shape, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.XYPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.ValueAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, arg5: Union[int, JInt], arg6: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def setURL(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getURL(self, ) -> javawrappers.java.lang.String: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class XYPointerAnnotation:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ): ...
	def isOutlineVisible(self, ) -> Union[int, JBoolean]: ...
	def getArrowWidth(self, ) -> Union[float, JDouble]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setY(self, arg0: Union[float, JDouble], ) -> None: ...
	def getBaseRadius(self, ) -> Union[float, JDouble]: ...
	def setX(self, arg0: Union[float, JDouble], ) -> None: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getArrowPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setTipRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotationAngle(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotationAnchor(self, arg0: javawrappers.org.jfree.chart.ui.TextAnchor, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def getLabelOffset(self, ) -> Union[float, JDouble]: ...
	def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	def setArrowLength(self, arg0: Union[float, JDouble], ) -> None: ...
	def setBaseRadius(self, arg0: Union[float, JDouble], ) -> None: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	def setArrowPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setAngle(self, arg0: Union[float, JDouble], ) -> None: ...
	def getRotationAnchor(self, ) -> javawrappers.org.jfree.chart.ui.TextAnchor: ...
	def setArrowStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def setURL(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setOutlineVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setBackgroundPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getTipRadius(self, ) -> Union[float, JDouble]: ...
	def getURL(self, ) -> javawrappers.java.lang.String: ...
	def setLabelOffset(self, arg0: Union[float, JDouble], ) -> None: ...
	def getAngle(self, ) -> Union[float, JDouble]: ...
	def getTextAnchor(self, ) -> javawrappers.org.jfree.chart.ui.TextAnchor: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getBackgroundPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getRotationAngle(self, ) -> Union[float, JDouble]: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def getArrowLength(self, ) -> Union[float, JDouble]: ...
	def getArrowStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def setArrowWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.XYPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.ValueAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, arg5: Union[int, JInt], arg6: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def getX(self, ) -> Union[float, JDouble]: ...
	def getY(self, ) -> Union[float, JDouble]: ...
	def setTextAnchor(self, arg0: javawrappers.org.jfree.chart.ui.TextAnchor, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...
	def setText(self, arg0: javawrappers.java.lang.String, ) -> None: ...


class AbstractAnnotation:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class CategoryAnnotation:
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.CategoryPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.CategoryAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...


class XYAnnotationBoundsInfo:
	def getXRange(self, ) -> javawrappers.org.jfree.data.Range: ...
	def getYRange(self, ) -> javawrappers.org.jfree.data.Range: ...
	def getIncludeInDataBounds(self, ) -> Union[int, JBoolean]: ...


class XYDrawableAnnotation:
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], arg4: javawrappers.org.jfree.chart.ui.Drawable, ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], arg4: Union[float, JDouble], arg5: javawrappers.org.jfree.chart.ui.Drawable, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.XYPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.ValueAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, arg5: Union[int, JInt], arg6: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def setURL(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getURL(self, ) -> javawrappers.java.lang.String: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class Annotation:
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...


class XYPolygonAnnotation:
	@overload
	def __init__(self, arg0: JArray(Union[float, JDouble], 1), ): ...
	@overload
	def __init__(self, arg0: JArray(Union[float, JDouble], 1), arg1: javawrappers.java.awt.Stroke, arg2: javawrappers.java.awt.Paint, arg3: javawrappers.java.awt.Paint, ): ...
	@overload
	def __init__(self, arg0: JArray(Union[float, JDouble], 1), arg1: javawrappers.java.awt.Stroke, arg2: javawrappers.java.awt.Paint, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getPolygonCoordinates(self, ) -> JArray(Union[float, JDouble], 1): ...
	def notifyAll(self, ) -> None: ...
	def getFillPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.XYPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.ValueAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, arg5: Union[int, JInt], arg6: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setURL(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getURL(self, ) -> javawrappers.java.lang.String: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class CategoryLineAnnotation:
	def __init__(self, arg0: javawrappers.java.lang.Comparable, arg1: Union[float, JDouble], arg2: javawrappers.java.lang.Comparable, arg3: Union[float, JDouble], arg4: javawrappers.java.awt.Paint, arg5: javawrappers.java.awt.Stroke, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def setValue2(self, arg0: Union[float, JDouble], ) -> None: ...
	def setValue1(self, arg0: Union[float, JDouble], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	def setCategory2(self, arg0: javawrappers.java.lang.Comparable, ) -> None: ...
	def setCategory1(self, arg0: javawrappers.java.lang.Comparable, ) -> None: ...
	def getValue1(self, ) -> Union[float, JDouble]: ...
	def getValue2(self, ) -> Union[float, JDouble]: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.CategoryPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.CategoryAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, ) -> None: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCategory2(self, ) -> javawrappers.java.lang.Comparable: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...
	def getCategory1(self, ) -> javawrappers.java.lang.Comparable: ...


class XYBoxAnnotation:
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], arg4: javawrappers.java.awt.Stroke, arg5: javawrappers.java.awt.Paint, arg6: javawrappers.java.awt.Paint, ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], arg4: javawrappers.java.awt.Stroke, arg5: javawrappers.java.awt.Paint, ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.XYPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.ValueAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, arg5: Union[int, JInt], arg6: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def setURL(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getURL(self, ) -> javawrappers.java.lang.String: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class AbstractXYAnnotation:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.XYPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.ValueAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, arg5: Union[int, JInt], arg6: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def setURL(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getURL(self, ) -> javawrappers.java.lang.String: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class XYDataImageAnnotation:
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Image, arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], arg4: Union[float, JDouble], ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Image, arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], arg4: Union[float, JDouble], arg5: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getWidth(self, ) -> Union[float, JDouble]: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def getHeight(self, ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getXRange(self, ) -> javawrappers.org.jfree.data.Range: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.XYPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.ValueAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, arg5: Union[int, JInt], arg6: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, ) -> None: ...
	def setURL(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getURL(self, ) -> javawrappers.java.lang.String: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def getX(self, ) -> Union[float, JDouble]: ...
	def getY(self, ) -> Union[float, JDouble]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def getYRange(self, ) -> javawrappers.org.jfree.data.Range: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getIncludeInDataBounds(self, ) -> Union[int, JBoolean]: ...
	def getImage(self, ) -> javawrappers.java.awt.Image: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class XYTitleAnnotation:
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: javawrappers.org.jfree.chart.title.Title, ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: javawrappers.org.jfree.chart.title.Title, arg3: javawrappers.org.jfree.chart.ui.RectangleAnchor, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def getMaxWidth(self, ) -> Union[float, JDouble]: ...
	def getTitle(self, ) -> javawrappers.org.jfree.chart.title.Title: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setMaxHeight(self, arg0: Union[float, JDouble], ) -> None: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getMaxHeight(self, ) -> Union[float, JDouble]: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	def getTitleAnchor(self, ) -> javawrappers.org.jfree.chart.ui.RectangleAnchor: ...
	def setMaxWidth(self, arg0: Union[float, JDouble], ) -> None: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.XYPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.ValueAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, arg5: Union[int, JInt], arg6: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, ) -> None: ...
	def setURL(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getURL(self, ) -> javawrappers.java.lang.String: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def getX(self, ) -> Union[float, JDouble]: ...
	def getY(self, ) -> Union[float, JDouble]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCoordinateType(self, ) -> javawrappers.org.jfree.chart.util.XYCoordinateType: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class XYTextAnnotation:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], arg2: Union[float, JDouble], ): ...
	def isOutlineVisible(self, ) -> Union[int, JBoolean]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setY(self, arg0: Union[float, JDouble], ) -> None: ...
	def setX(self, arg0: Union[float, JDouble], ) -> None: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setRotationAngle(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotationAnchor(self, arg0: javawrappers.org.jfree.chart.ui.TextAnchor, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def getBackgroundPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setOutlinePaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def getRotationAngle(self, ) -> Union[float, JDouble]: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	def getRotationAnchor(self, ) -> javawrappers.org.jfree.chart.ui.TextAnchor: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.XYPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.ValueAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, arg5: Union[int, JInt], arg6: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, ) -> None: ...
	def setOutlineStroke(self, arg0: javawrappers.java.awt.Stroke, ) -> None: ...
	def getOutlinePaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setURL(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setOutlineVisible(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setBackgroundPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getURL(self, ) -> javawrappers.java.lang.String: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def getX(self, ) -> Union[float, JDouble]: ...
	def getY(self, ) -> Union[float, JDouble]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setTextAnchor(self, arg0: javawrappers.org.jfree.chart.ui.TextAnchor, ) -> None: ...
	def getTextAnchor(self, ) -> javawrappers.org.jfree.chart.ui.TextAnchor: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def getOutlineStroke(self, ) -> javawrappers.java.awt.Stroke: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...
	def setText(self, arg0: javawrappers.java.lang.String, ) -> None: ...


class XYLineAnnotation:
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], ): ...
	@overload
	def __init__(self, arg0: Union[float, JDouble], arg1: Union[float, JDouble], arg2: Union[float, JDouble], arg3: Union[float, JDouble], arg4: javawrappers.java.awt.Stroke, arg5: javawrappers.java.awt.Paint, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setToolTipText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.XYPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.ValueAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, arg5: Union[int, JInt], arg6: javawrappers.org.jfree.chart.plot.PlotRenderingInfo, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def setURL(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getURL(self, ) -> javawrappers.java.lang.String: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getToolTipText(self, ) -> javawrappers.java.lang.String: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...


class CategoryTextAnnotation:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Comparable, arg2: Union[float, JDouble], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setRotationAngle(self, arg0: Union[float, JDouble], ) -> None: ...
	def setRotationAnchor(self, arg0: javawrappers.org.jfree.chart.ui.TextAnchor, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def setCategory(self, arg0: javawrappers.java.lang.Comparable, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def getRotationAngle(self, ) -> Union[float, JDouble]: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	def getCategory(self, ) -> javawrappers.java.lang.Comparable: ...
	def getRotationAnchor(self, ) -> javawrappers.org.jfree.chart.ui.TextAnchor: ...
	def draw(self, arg0: javawrappers.java.awt.Graphics2D, arg1: javawrappers.org.jfree.chart.plot.CategoryPlot, arg2: javawrappers.java.awt.geom.Rectangle2D, arg3: javawrappers.org.jfree.chart.axis.CategoryAxis, arg4: javawrappers.org.jfree.chart.axis.ValueAxis, ) -> None: ...
	def getValue(self, ) -> Union[float, JDouble]: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def setTextAnchor(self, arg0: javawrappers.org.jfree.chart.ui.TextAnchor, ) -> None: ...
	def getTextAnchor(self, ) -> javawrappers.org.jfree.chart.ui.TextAnchor: ...
	def setValue(self, arg0: Union[float, JDouble], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def getCategoryAnchor(self, ) -> javawrappers.org.jfree.chart.axis.CategoryAnchor: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...
	def setText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setCategoryAnchor(self, arg0: javawrappers.org.jfree.chart.axis.CategoryAnchor, ) -> None: ...


class TextAnnotation:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getNotify(self, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getText(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def setRotationAngle(self, arg0: Union[float, JDouble], ) -> None: ...
	def getRotationAnchor(self, ) -> javawrappers.org.jfree.chart.ui.TextAnchor: ...
	def setRotationAnchor(self, arg0: javawrappers.org.jfree.chart.ui.TextAnchor, ) -> None: ...
	def notify(self, ) -> None: ...
	def addChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def removeChangeListener(self, arg0: javawrappers.org.jfree.chart.event.AnnotationChangeListener, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setTextAnchor(self, arg0: javawrappers.org.jfree.chart.ui.TextAnchor, ) -> None: ...
	def getTextAnchor(self, ) -> javawrappers.org.jfree.chart.ui.TextAnchor: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setNotify(self, arg0: Union[int, JBoolean], ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFont(self, ) -> javawrappers.java.awt.Font: ...
	def setFont(self, arg0: javawrappers.java.awt.Font, ) -> None: ...
	def getRotationAngle(self, ) -> Union[float, JDouble]: ...
	def getPaint(self, ) -> javawrappers.java.awt.Paint: ...
	def hasListener(self, arg0: javawrappers.java.util.EventListener, ) -> Union[int, JBoolean]: ...
	def setText(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setPaint(self, arg0: javawrappers.java.awt.Paint, ) -> None: ...


