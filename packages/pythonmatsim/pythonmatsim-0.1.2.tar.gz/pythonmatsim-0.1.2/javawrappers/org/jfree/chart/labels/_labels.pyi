################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.org.jfree.data.xy
import javawrappers.org.jfree.chart.ui
import javawrappers.java.lang
import javawrappers.java.text
import javawrappers.java.util
import javawrappers.org.jfree.chart.plot
import javawrappers.org.jfree.data.category
import javawrappers.org.jfree.data.general
import javawrappers.org.jfree.chart.labels

from jpype.types import *
from typing import Union

from typing import overload

class SymbolicXYItemLabelGenerator:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def generateLabel(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class AbstractPieItemLabelGenerator:
	def getNumberFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getLabelFormat(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def getPercentFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class PieToolTipGenerator:
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.general.PieDataset, arg1: javawrappers.java.lang.Comparable, ) -> javawrappers.java.lang.String: ...


class PieSectionLabelGenerator:
	def generateAttributedSectionLabel(self, arg0: javawrappers.org.jfree.data.general.PieDataset, arg1: javawrappers.java.lang.Comparable, ) -> javawrappers.java.text.AttributedString: ...
	def generateSectionLabel(self, arg0: javawrappers.org.jfree.data.general.PieDataset, arg1: javawrappers.java.lang.Comparable, ) -> javawrappers.java.lang.String: ...


class IntervalXYItemLabelGenerator:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, arg2: javawrappers.java.text.DateFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.DateFormat, arg2: javawrappers.java.text.DateFormat, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, arg2: javawrappers.java.text.NumberFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.DateFormat, arg2: javawrappers.java.text.NumberFormat, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getNullYString(self, ) -> javawrappers.java.lang.String: ...
	def getXFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def getFormatString(self, ) -> javawrappers.java.lang.String: ...
	def generateLabelString(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getYDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getXDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def getYFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def generateLabel(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class AbstractXYItemLabelGenerator:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getNullYString(self, ) -> javawrappers.java.lang.String: ...
	def getXFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def getFormatString(self, ) -> javawrappers.java.lang.String: ...
	def generateLabelString(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getYDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getXDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def getYFormat(self, ) -> javawrappers.java.text.NumberFormat: ...


class BubbleXYItemLabelGenerator:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.DateFormat, arg2: javawrappers.java.text.DateFormat, arg3: javawrappers.java.text.DateFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, arg2: javawrappers.java.text.NumberFormat, arg3: javawrappers.java.text.NumberFormat, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getNullYString(self, ) -> javawrappers.java.lang.String: ...
	def getXFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def getFormatString(self, ) -> javawrappers.java.lang.String: ...
	def generateLabelString(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getYDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def notify(self, ) -> None: ...
	def getZDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def getZFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getXDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def getYFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def generateLabel(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class XYItemLabelGenerator:
	def generateLabel(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class StandardPieSectionLabelGenerator:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Locale, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Locale, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, arg2: javawrappers.java.text.NumberFormat, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getLabelFormat(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def generateSectionLabel(self, arg0: javawrappers.org.jfree.data.general.PieDataset, arg1: javawrappers.java.lang.Comparable, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def setAttributedLabel(self, arg0: Union[int, JInt], arg1: javawrappers.java.text.AttributedString, ) -> None: ...
	def getNumberFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def generateAttributedSectionLabel(self, arg0: javawrappers.org.jfree.data.general.PieDataset, arg1: javawrappers.java.lang.Comparable, ) -> javawrappers.java.text.AttributedString: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def getPercentFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def getAttributedLabel(self, arg0: Union[int, JInt], ) -> javawrappers.java.text.AttributedString: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class IntervalCategoryItemLabelGenerator:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.DateFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getLabelFormat(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def generateColumnLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def generateRowLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getNumberFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def generateLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class StandardXYToolTipGenerator:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, arg2: javawrappers.java.text.DateFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.DateFormat, arg2: javawrappers.java.text.DateFormat, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, arg2: javawrappers.java.text.NumberFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.DateFormat, arg2: javawrappers.java.text.NumberFormat, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getNullYString(self, ) -> javawrappers.java.lang.String: ...
	def getXFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def getFormatString(self, ) -> javawrappers.java.lang.String: ...
	def generateLabelString(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getYDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def getTimeSeriesInstance() -> javawrappers.org.jfree.chart.labels.StandardXYToolTipGenerator: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getXDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def getYFormat(self, ) -> javawrappers.java.text.NumberFormat: ...


class CrosshairLabelGenerator:
	def generateLabel(self, arg0: javawrappers.org.jfree.chart.plot.Crosshair, ) -> javawrappers.java.lang.String: ...


class StandardXYSeriesLabelGenerator:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def generateLabel(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class StandardCategoryToolTipGenerator:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.DateFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getLabelFormat(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def generateColumnLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def generateRowLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getNumberFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class StandardXYZToolTipGenerator:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, arg2: javawrappers.java.text.NumberFormat, arg3: javawrappers.java.text.NumberFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.DateFormat, arg2: javawrappers.java.text.DateFormat, arg3: javawrappers.java.text.DateFormat, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getNullYString(self, ) -> javawrappers.java.lang.String: ...
	def getXFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def getFormatString(self, ) -> javawrappers.java.lang.String: ...
	def generateLabelString(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getYDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def notify(self, ) -> None: ...
	def getZDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def getZFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	@staticmethod
	def getTimeSeriesInstance() -> javawrappers.org.jfree.chart.labels.StandardXYToolTipGenerator: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getXDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	@overload
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.xy.XYZDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def getYFormat(self, ) -> javawrappers.java.text.NumberFormat: ...


class XYSeriesLabelGenerator:
	def generateLabel(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class BoxAndWhiskerToolTipGenerator:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getLabelFormat(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def generateColumnLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def generateRowLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getNumberFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class StandardCrosshairLabelGenerator:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, ): ...
	def getNumberFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getLabelTemplate(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def generateLabel(self, arg0: javawrappers.org.jfree.chart.plot.Crosshair, ) -> javawrappers.java.lang.String: ...


class IntervalXYToolTipGenerator:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, arg2: javawrappers.java.text.DateFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.DateFormat, arg2: javawrappers.java.text.DateFormat, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, arg2: javawrappers.java.text.NumberFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.DateFormat, arg2: javawrappers.java.text.NumberFormat, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getNullYString(self, ) -> javawrappers.java.lang.String: ...
	def getXFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def getFormatString(self, ) -> javawrappers.java.lang.String: ...
	def generateLabelString(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getYDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getXDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def getYFormat(self, ) -> javawrappers.java.text.NumberFormat: ...


class BoxAndWhiskerXYToolTipGenerator:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.DateFormat, arg2: javawrappers.java.text.NumberFormat, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getNullYString(self, ) -> javawrappers.java.lang.String: ...
	def getXFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def getFormatString(self, ) -> javawrappers.java.lang.String: ...
	def generateLabelString(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getYDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def getTimeSeriesInstance() -> javawrappers.org.jfree.chart.labels.StandardXYToolTipGenerator: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getXDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def getYFormat(self, ) -> javawrappers.java.text.NumberFormat: ...


class IntervalCategoryToolTipGenerator:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.DateFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getLabelFormat(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def generateColumnLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def generateRowLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getNumberFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class ItemLabelPosition:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.jfree.chart.labels.ItemLabelAnchor, arg1: javawrappers.org.jfree.chart.ui.TextAnchor, arg2: javawrappers.org.jfree.chart.ui.TextAnchor, arg3: Union[float, JDouble], ): ...
	@overload
	def __init__(self, arg0: javawrappers.org.jfree.chart.labels.ItemLabelAnchor, arg1: javawrappers.org.jfree.chart.ui.TextAnchor, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAngle(self, ) -> Union[float, JDouble]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getTextAnchor(self, ) -> javawrappers.org.jfree.chart.ui.TextAnchor: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getRotationAnchor(self, ) -> javawrappers.org.jfree.chart.ui.TextAnchor: ...
	def notify(self, ) -> None: ...
	def getItemLabelAnchor(self, ) -> javawrappers.org.jfree.chart.labels.ItemLabelAnchor: ...


class StandardCategorySeriesLabelGenerator:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def generateLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class CustomXYToolTipGenerator:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getListCount(self, ) -> Union[int, JInt]: ...
	def addToolTipSeries(self, arg0: javawrappers.java.util.List, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getToolTipCount(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getToolTipText(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class CategorySeriesLabelGenerator:
	def generateLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class XYToolTipGenerator:
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class XYZToolTipGenerator:
	@overload
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.xy.XYZDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class ItemLabelAnchor:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class AbstractCategoryItemLabelGenerator:
	def getNumberFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getLabelFormat(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def generateColumnLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def generateRowLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def notify(self, ) -> None: ...


class HighLowItemLabelGenerator:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.text.DateFormat, arg1: javawrappers.java.text.NumberFormat, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def generateLabel(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class StandardPieToolTipGenerator:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, arg2: javawrappers.java.text.NumberFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Locale, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Locale, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getNumberFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getLabelFormat(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def getPercentFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.general.PieDataset, arg1: javawrappers.java.lang.Comparable, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class StandardXYItemLabelGenerator:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.DateFormat, arg2: javawrappers.java.text.NumberFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, arg2: javawrappers.java.text.DateFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.DateFormat, arg2: javawrappers.java.text.DateFormat, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, arg2: javawrappers.java.text.NumberFormat, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getNullYString(self, ) -> javawrappers.java.lang.String: ...
	def getXFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def getFormatString(self, ) -> javawrappers.java.lang.String: ...
	def generateLabelString(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getYDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getXDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def getYFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def generateLabel(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class MultipleXYSeriesLabelGenerator:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def clearSeriesLabels(self, arg0: Union[int, JInt], ) -> None: ...
	def addSeriesLabel(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def generateLabel(self, arg0: javawrappers.org.jfree.data.xy.XYDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class StandardCategoryItemLabelGenerator:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.DateFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, arg2: javawrappers.java.text.NumberFormat, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.text.NumberFormat, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getLabelFormat(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def generateColumnLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def generateRowLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getNumberFormat(self, ) -> javawrappers.java.text.NumberFormat: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDateFormat(self, ) -> javawrappers.java.text.DateFormat: ...
	def generateLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class CategoryToolTipGenerator:
	def generateToolTip(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


class CategoryItemLabelGenerator:
	def generateColumnLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def generateRowLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	def generateLabel(self, arg0: javawrappers.org.jfree.data.category.CategoryDataset, arg1: Union[int, JInt], arg2: Union[int, JInt], ) -> javawrappers.java.lang.String: ...


