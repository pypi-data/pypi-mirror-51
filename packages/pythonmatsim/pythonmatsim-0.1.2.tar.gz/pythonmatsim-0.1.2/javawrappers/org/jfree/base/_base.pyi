################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.jfree.util
import javawrappers.org.jfree.base.modules
import javawrappers.org.jfree.base
import javawrappers.org.jfree.base.config

from jpype.types import *
from typing import Union

from typing import overload

class BootableProjectInfo:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ): ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def addOptionalLibrary(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def addOptionalLibrary(self, arg0: javawrappers.org.jfree.base.Library, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def setCopyright(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setAutoBoot(self, arg0: Union[int, JBoolean], ) -> None: ...
	def notify(self, ) -> None: ...
	def setLicenceName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getLicenceName(self, ) -> javawrappers.java.lang.String: ...
	def setBootClass(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getBootClass(self, ) -> javawrappers.java.lang.String: ...
	def getOptionalLibraries(self, ) -> JArray(javawrappers.org.jfree.base.Library, 1): ...
	def getVersion(self, ) -> javawrappers.java.lang.String: ...
	def getCopyright(self, ) -> javawrappers.java.lang.String: ...
	def getInfo(self, ) -> javawrappers.java.lang.String: ...
	def setVersion(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getDependencies(self, ) -> JArray(javawrappers.org.jfree.base.BootableProjectInfo, 1): ...
	def addDependency(self, arg0: javawrappers.org.jfree.base.BootableProjectInfo, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setInfo(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def isAutoBoot(self, ) -> Union[int, JBoolean]: ...
	def getLibraries(self, ) -> JArray(javawrappers.org.jfree.base.Library, 1): ...
	def addLibrary(self, arg0: javawrappers.org.jfree.base.Library, ) -> None: ...


class ClassPathDebugger:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def main(arg0: JArray(javawrappers.java.lang.String, 1), ) -> None: ...
	def notify(self, ) -> None: ...


class Library:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ): ...
	def getVersion(self, ) -> javawrappers.java.lang.String: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getInfo(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getLicenceName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class BasicProjectInfo:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, ): ...
	class OptionalLibraryHolder:
		@overload
		def __init__(self, arg0: javawrappers.java.lang.String, ): ...
		@overload
		def __init__(self, arg0: javawrappers.org.jfree.base.Library, ): ...
		def getLibrary(self, ) -> javawrappers.org.jfree.base.Library: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...
		def getLibraryClass(self, ) -> javawrappers.java.lang.String: ...


	def getVersion(self, ) -> javawrappers.java.lang.String: ...
	def setName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def addOptionalLibrary(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def addOptionalLibrary(self, arg0: javawrappers.org.jfree.base.Library, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def setCopyright(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getCopyright(self, ) -> javawrappers.java.lang.String: ...
	def getInfo(self, ) -> javawrappers.java.lang.String: ...
	def setVersion(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getLibraryClass(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def setLicenceName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getLibrary(self, ) -> javawrappers.org.jfree.base.Library: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getLicenceName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setInfo(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getLibraries(self, ) -> JArray(javawrappers.org.jfree.base.Library, 1): ...
	def getOptionalLibraries(self, ) -> JArray(javawrappers.org.jfree.base.Library, 1): ...
	def addLibrary(self, arg0: javawrappers.org.jfree.base.Library, ) -> None: ...


class AbstractBoot:
	def getExtendedConfig(self, ) -> javawrappers.org.jfree.util.ExtendedConfiguration: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getGlobalConfig(self, ) -> javawrappers.org.jfree.util.Configuration: ...
	def isBootDone(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def start(self, ) -> None: ...
	def getPackageManager(self, ) -> javawrappers.org.jfree.base.modules.PackageManager: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isBootInProgress(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...


class BaseBoot:
	def getExtendedConfig(self, ) -> javawrappers.org.jfree.util.ExtendedConfiguration: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def start(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getGlobalConfig(self, ) -> javawrappers.org.jfree.util.Configuration: ...
	@staticmethod
	def getConfiguration() -> javawrappers.org.jfree.base.config.ModifiableConfiguration: ...
	def isBootDone(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getPackageManager(self, ) -> javawrappers.org.jfree.base.modules.PackageManager: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getInstance() -> javawrappers.org.jfree.base.AbstractBoot: ...
	def isBootInProgress(self, ) -> Union[int, JBoolean]: ...


