################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.org.jfree.base.log
import javawrappers.org.jfree.util
import javawrappers.org.jfree.base.modules

from jpype.types import *
from typing import Union

from typing import overload

class MemoryUsageMessage:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class LogConfiguration:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def isDisableLogging() -> Union[int, JBoolean]: ...
	@staticmethod
	def setLogTarget(arg0: javawrappers.java.lang.String, ) -> None: ...
	@staticmethod
	def setLogLevel(arg0: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getLogLevel() -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def setDisableLogging(arg0: Union[int, JBoolean], ) -> None: ...
	@staticmethod
	def getLogTarget() -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class PadMessage:
	def __init__(self, arg0: javawrappers.java.lang.Object, arg1: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class DefaultLog:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def log(arg0: Union[int, JInt], arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.lang.Exception, ) -> None: ...
	@overload
	@staticmethod
	def log(arg0: Union[int, JInt], arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getDebuglevel(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def getDefaultLog() -> javawrappers.org.jfree.base.log.DefaultLog: ...
	@overload
	@staticmethod
	def error(arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	@staticmethod
	def error(arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Exception, ) -> None: ...
	@overload
	@staticmethod
	def createContext(arg0: javawrappers.java.lang.String, ) -> javawrappers.org.jfree.util.LogContext: ...
	@overload
	@staticmethod
	def createContext(arg0: javawrappers.java.lang.Class, ) -> javawrappers.org.jfree.util.LogContext: ...
	def notify(self, ) -> None: ...
	def getTargets(self, ) -> JArray(javawrappers.org.jfree.util.LogTarget, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def isInfoEnabled() -> Union[int, JBoolean]: ...
	@staticmethod
	def isErrorEnabled() -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def info(arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Exception, ) -> None: ...
	@overload
	@staticmethod
	def info(arg0: javawrappers.java.lang.Object, ) -> None: ...
	def init(self, ) -> None: ...
	@overload
	@staticmethod
	def debug(arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	@staticmethod
	def debug(arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Exception, ) -> None: ...
	def addTarget(self, arg0: javawrappers.org.jfree.util.LogTarget, ) -> None: ...
	@overload
	@staticmethod
	def warn(arg0: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	@staticmethod
	def warn(arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.lang.Exception, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getInstance() -> javawrappers.org.jfree.util.Log: ...
	@staticmethod
	def isDebugEnabled() -> Union[int, JBoolean]: ...
	def replaceTargets(self, arg0: javawrappers.org.jfree.util.LogTarget, ) -> None: ...
	@staticmethod
	def isWarningEnabled() -> Union[int, JBoolean]: ...
	def removeTarget(self, arg0: javawrappers.org.jfree.util.LogTarget, ) -> None: ...
	@staticmethod
	def installDefaultLog() -> None: ...


class DefaultLogModule:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getSubSystem(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setPatchLevel(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def setOptionalModules(self, arg0: JArray(javawrappers.org.jfree.base.modules.ModuleInfo, 1), ) -> None: ...
	def getRequiredModules(self, ) -> JArray(javawrappers.org.jfree.base.modules.ModuleInfo, 1): ...
	def getModuleClass(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getMinorVersion(self, ) -> javawrappers.java.lang.String: ...
	def getPatchLevel(self, ) -> javawrappers.java.lang.String: ...
	def configure(self, arg0: javawrappers.org.jfree.base.modules.SubSystem, ) -> None: ...
	def getDescription(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def setMajorVersion(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getProducer(self, ) -> javawrappers.java.lang.String: ...
	def getMajorVersion(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def initialize(self, arg0: javawrappers.org.jfree.base.modules.SubSystem, ) -> None: ...
	def getOptionalModules(self, ) -> JArray(javawrappers.org.jfree.base.modules.ModuleInfo, 1): ...
	def setMinorVersion(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setModuleClass(self, arg0: javawrappers.java.lang.String, ) -> None: ...


