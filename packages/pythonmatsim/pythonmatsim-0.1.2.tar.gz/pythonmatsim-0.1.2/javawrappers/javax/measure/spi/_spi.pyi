################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.javax.measure.spi
import javawrappers.javax.measure
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.javax.measure.format

from jpype.types import *
from typing import Union

from typing import overload

class SystemOfUnitsService:
	@overload
	def getSystemOfUnits(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.measure.spi.SystemOfUnits: ...
	@overload
	def getSystemOfUnits(self, ) -> javawrappers.javax.measure.spi.SystemOfUnits: ...
	def getAvailableSystemsOfUnits(self, ) -> javawrappers.java.util.Collection: ...


class UnitFormatService:
	def getAvailableFormatNames(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def getUnitFormat(self, ) -> javawrappers.javax.measure.format.UnitFormat: ...
	@overload
	def getUnitFormat(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.measure.format.UnitFormat: ...


class QuantityFactory:
	def create(self, arg0: javawrappers.java.lang.Number, arg1: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Quantity: ...
	def getSystemUnit(self, ) -> javawrappers.javax.measure.Unit: ...


class SystemOfUnits:
	def getName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getUnits(self, arg0: javawrappers.javax.measure.Dimension, ) -> javawrappers.java.util.Set: ...
	@overload
	def getUnits(self, ) -> javawrappers.java.util.Set: ...
	def getUnit(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.measure.Unit: ...


class ServiceProvider:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getQuantityFactory(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.measure.spi.QuantityFactory: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def available() -> javawrappers.java.util.List: ...
	def getUnitFormatService(self, ) -> javawrappers.javax.measure.spi.UnitFormatService: ...
	def notify(self, ) -> None: ...
	def getSystemOfUnitsService(self, ) -> javawrappers.javax.measure.spi.SystemOfUnitsService: ...
	@staticmethod
	def current() -> javawrappers.javax.measure.spi.ServiceProvider: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getPriority(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def setCurrent(arg0: javawrappers.javax.measure.spi.ServiceProvider, ) -> javawrappers.javax.measure.spi.ServiceProvider: ...


