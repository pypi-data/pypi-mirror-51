################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang.reflect
import javawrappers.java.awt
import javawrappers.javax.media.jai.remote
import javawrappers.javax.media.jai
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.awt.image
import javawrappers.java.io
import javawrappers.javax.media.jai.tilecodec
import javawrappers.java.awt.image.renderable

from jpype.types import *
from typing import Union

from typing import overload

class TileDecoderRegistryMode:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def addMode(arg0: javawrappers.javax.media.jai.RegistryMode, ) -> Union[int, JBoolean]: ...
	def getProductClass(self, ) -> javawrappers.java.lang.Class: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getDescriptorClass(self, ) -> javawrappers.java.lang.Class: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def getDescriptorClasses() -> javawrappers.java.util.Set: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def removeMode(arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def arePreferencesSupported(self, ) -> Union[int, JBoolean]: ...
	def getFactoryClass(self, ) -> javawrappers.java.lang.Class: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getModeNames() -> JArray(javawrappers.java.lang.String, 1): ...
	@overload
	@staticmethod
	def getModeNames(arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.lang.String, 1): ...
	def arePropertiesSupported(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getMode(arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.RegistryMode: ...
	def getFactoryMethod(self, ) -> javawrappers.java.lang.reflect.Method: ...


class RIFRegistry:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def unregister(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.awt.image.renderable.RenderedImageFactory, ) -> None: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def unsetPreference(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.awt.image.renderable.RenderedImageFactory, arg4: javawrappers.java.awt.image.renderable.RenderedImageFactory, ) -> None: ...
	@staticmethod
	def getIterator(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.util.Iterator: ...
	@staticmethod
	def clearPreferences(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def getPropertySource(arg0: javawrappers.javax.media.jai.RenderedOp, ) -> javawrappers.javax.media.jai.PropertySource: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def get(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.awt.image.renderable.RenderedImageFactory: ...
	@staticmethod
	def create(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.awt.image.renderable.ParameterBlock, arg3: javawrappers.java.awt.RenderingHints, ) -> javawrappers.java.awt.image.RenderedImage: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def setPreference(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.awt.image.renderable.RenderedImageFactory, arg4: javawrappers.java.awt.image.renderable.RenderedImageFactory, ) -> None: ...
	@staticmethod
	def getOrderedList(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	@staticmethod
	def register(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.awt.image.renderable.RenderedImageFactory, ) -> None: ...


class CRIFRegistry:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def getPropertySource(arg0: javawrappers.javax.media.jai.RenderableOp, ) -> javawrappers.javax.media.jai.PropertySource: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def get(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.awt.image.renderable.ContextualRenderedImageFactory: ...
	@staticmethod
	def unregister(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.awt.image.renderable.ContextualRenderedImageFactory, ) -> None: ...
	@staticmethod
	def create(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.awt.image.renderable.RenderContext, arg3: javawrappers.java.awt.image.renderable.ParameterBlock, ) -> javawrappers.java.awt.image.RenderedImage: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def register(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.awt.image.renderable.ContextualRenderedImageFactory, ) -> None: ...


class RemoteRIFRegistry:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def get(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.remote.RemoteRIF: ...
	@staticmethod
	def unregister(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.media.jai.remote.RemoteRIF, ) -> None: ...
	@staticmethod
	def create(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.awt.image.renderable.ParameterBlock, arg5: javawrappers.java.awt.RenderingHints, ) -> javawrappers.javax.media.jai.remote.RemoteRenderedImage: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def register(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.media.jai.remote.RemoteRIF, ) -> None: ...


class CollectionRegistryMode:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def addMode(arg0: javawrappers.javax.media.jai.RegistryMode, ) -> Union[int, JBoolean]: ...
	def getProductClass(self, ) -> javawrappers.java.lang.Class: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getDescriptorClass(self, ) -> javawrappers.java.lang.Class: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def getDescriptorClasses() -> javawrappers.java.util.Set: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def removeMode(arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def arePreferencesSupported(self, ) -> Union[int, JBoolean]: ...
	def getFactoryClass(self, ) -> javawrappers.java.lang.Class: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getModeNames() -> JArray(javawrappers.java.lang.String, 1): ...
	@overload
	@staticmethod
	def getModeNames(arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.lang.String, 1): ...
	def arePropertiesSupported(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getMode(arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.RegistryMode: ...
	def getFactoryMethod(self, ) -> javawrappers.java.lang.reflect.Method: ...


class RCIFRegistry:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def getPropertySource(arg0: javawrappers.javax.media.jai.CollectionOp, ) -> javawrappers.javax.media.jai.PropertySource: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def get(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.RenderableCollectionImageFactory: ...
	@staticmethod
	def unregister(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.media.jai.RenderableCollectionImageFactory, ) -> None: ...
	@staticmethod
	def create(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.awt.image.renderable.ParameterBlock, ) -> javawrappers.javax.media.jai.CollectionImage: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def register(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.media.jai.RenderableCollectionImageFactory, ) -> None: ...


class RemoteCRIFRegistry:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def get(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.remote.RemoteCRIF: ...
	@staticmethod
	def unregister(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.media.jai.remote.RemoteCRIF, ) -> None: ...
	@staticmethod
	def create(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.awt.image.renderable.RenderContext, arg5: javawrappers.java.awt.image.renderable.ParameterBlock, ) -> javawrappers.javax.media.jai.remote.RemoteRenderedImage: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def register(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.media.jai.remote.RemoteCRIF, ) -> None: ...


class TileEncoderRegistryMode:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def addMode(arg0: javawrappers.javax.media.jai.RegistryMode, ) -> Union[int, JBoolean]: ...
	def getProductClass(self, ) -> javawrappers.java.lang.Class: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getDescriptorClass(self, ) -> javawrappers.java.lang.Class: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def getDescriptorClasses() -> javawrappers.java.util.Set: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def removeMode(arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def arePreferencesSupported(self, ) -> Union[int, JBoolean]: ...
	def getFactoryClass(self, ) -> javawrappers.java.lang.Class: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getModeNames() -> JArray(javawrappers.java.lang.String, 1): ...
	@overload
	@staticmethod
	def getModeNames(arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.lang.String, 1): ...
	def arePropertiesSupported(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getMode(arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.RegistryMode: ...
	def getFactoryMethod(self, ) -> javawrappers.java.lang.reflect.Method: ...


class CIFRegistry:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def unregister(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.javax.media.jai.CollectionImageFactory, ) -> None: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def unsetPreference(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.javax.media.jai.CollectionImageFactory, arg4: javawrappers.javax.media.jai.CollectionImageFactory, ) -> None: ...
	@staticmethod
	def getIterator(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.util.Iterator: ...
	@staticmethod
	def clearPreferences(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def getPropertySource(arg0: javawrappers.javax.media.jai.CollectionOp, ) -> javawrappers.javax.media.jai.PropertySource: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def get(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.CollectionImageFactory: ...
	@staticmethod
	def create(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.awt.image.renderable.ParameterBlock, arg3: javawrappers.java.awt.RenderingHints, ) -> javawrappers.javax.media.jai.CollectionImage: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def setPreference(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.javax.media.jai.CollectionImageFactory, arg4: javawrappers.javax.media.jai.CollectionImageFactory, ) -> None: ...
	@staticmethod
	def getOrderedList(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	@staticmethod
	def register(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.javax.media.jai.CollectionImageFactory, ) -> None: ...


class RenderedRegistryMode:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def addMode(arg0: javawrappers.javax.media.jai.RegistryMode, ) -> Union[int, JBoolean]: ...
	def getProductClass(self, ) -> javawrappers.java.lang.Class: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getDescriptorClass(self, ) -> javawrappers.java.lang.Class: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def getDescriptorClasses() -> javawrappers.java.util.Set: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def removeMode(arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def arePreferencesSupported(self, ) -> Union[int, JBoolean]: ...
	def getFactoryClass(self, ) -> javawrappers.java.lang.Class: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getModeNames() -> JArray(javawrappers.java.lang.String, 1): ...
	@overload
	@staticmethod
	def getModeNames(arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.lang.String, 1): ...
	def arePropertiesSupported(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getMode(arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.RegistryMode: ...
	def getFactoryMethod(self, ) -> javawrappers.java.lang.reflect.Method: ...


class TileDecoderRegistry:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def unregister(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.javax.media.jai.tilecodec.TileDecoderFactory, ) -> None: ...
	@overload
	@staticmethod
	def decode(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.io.InputStream, arg3: javawrappers.javax.media.jai.tilecodec.TileCodecParameterList, arg4: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.image.Raster: ...
	@overload
	@staticmethod
	def decode(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.io.InputStream, arg3: javawrappers.javax.media.jai.tilecodec.TileCodecParameterList, ) -> javawrappers.java.awt.image.Raster: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def unsetPreference(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.javax.media.jai.tilecodec.TileDecoderFactory, arg4: javawrappers.javax.media.jai.tilecodec.TileDecoderFactory, ) -> None: ...
	@staticmethod
	def getIterator(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.util.Iterator: ...
	@staticmethod
	def clearPreferences(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def get(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.tilecodec.TileDecoderFactory: ...
	@staticmethod
	def create(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.io.InputStream, arg3: javawrappers.javax.media.jai.tilecodec.TileCodecParameterList, ) -> javawrappers.javax.media.jai.tilecodec.TileDecoder: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def setPreference(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.javax.media.jai.tilecodec.TileDecoderFactory, arg4: javawrappers.javax.media.jai.tilecodec.TileDecoderFactory, ) -> None: ...
	@staticmethod
	def getOrderedList(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	@staticmethod
	def register(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.javax.media.jai.tilecodec.TileDecoderFactory, ) -> None: ...


class RenderableCollectionRegistryMode:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def addMode(arg0: javawrappers.javax.media.jai.RegistryMode, ) -> Union[int, JBoolean]: ...
	def getProductClass(self, ) -> javawrappers.java.lang.Class: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getDescriptorClass(self, ) -> javawrappers.java.lang.Class: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def getDescriptorClasses() -> javawrappers.java.util.Set: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def removeMode(arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def arePreferencesSupported(self, ) -> Union[int, JBoolean]: ...
	def getFactoryClass(self, ) -> javawrappers.java.lang.Class: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getModeNames() -> JArray(javawrappers.java.lang.String, 1): ...
	@overload
	@staticmethod
	def getModeNames(arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.lang.String, 1): ...
	def arePropertiesSupported(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getMode(arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.RegistryMode: ...
	def getFactoryMethod(self, ) -> javawrappers.java.lang.reflect.Method: ...


class RenderableRegistryMode:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def addMode(arg0: javawrappers.javax.media.jai.RegistryMode, ) -> Union[int, JBoolean]: ...
	def getProductClass(self, ) -> javawrappers.java.lang.Class: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getDescriptorClass(self, ) -> javawrappers.java.lang.Class: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def getDescriptorClasses() -> javawrappers.java.util.Set: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def removeMode(arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def arePreferencesSupported(self, ) -> Union[int, JBoolean]: ...
	def getFactoryClass(self, ) -> javawrappers.java.lang.Class: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getModeNames() -> JArray(javawrappers.java.lang.String, 1): ...
	@overload
	@staticmethod
	def getModeNames(arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.lang.String, 1): ...
	def arePropertiesSupported(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getMode(arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.RegistryMode: ...
	def getFactoryMethod(self, ) -> javawrappers.java.lang.reflect.Method: ...


class RemoteRenderableRegistryMode:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def addMode(arg0: javawrappers.javax.media.jai.RegistryMode, ) -> Union[int, JBoolean]: ...
	def getProductClass(self, ) -> javawrappers.java.lang.Class: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getDescriptorClass(self, ) -> javawrappers.java.lang.Class: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def getDescriptorClasses() -> javawrappers.java.util.Set: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def removeMode(arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def arePreferencesSupported(self, ) -> Union[int, JBoolean]: ...
	def getFactoryClass(self, ) -> javawrappers.java.lang.Class: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getModeNames() -> JArray(javawrappers.java.lang.String, 1): ...
	@overload
	@staticmethod
	def getModeNames(arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.lang.String, 1): ...
	def arePropertiesSupported(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getMode(arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.RegistryMode: ...
	def getFactoryMethod(self, ) -> javawrappers.java.lang.reflect.Method: ...


class TileEncoderRegistry:
	def __init__(self, ): ...
	@staticmethod
	def encode(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.awt.image.Raster, arg3: javawrappers.java.io.OutputStream, arg4: javawrappers.javax.media.jai.tilecodec.TileCodecParameterList, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def unregister(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.javax.media.jai.tilecodec.TileEncoderFactory, ) -> None: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def unsetPreference(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.javax.media.jai.tilecodec.TileEncoderFactory, arg4: javawrappers.javax.media.jai.tilecodec.TileEncoderFactory, ) -> None: ...
	@staticmethod
	def getIterator(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.util.Iterator: ...
	@staticmethod
	def clearPreferences(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def get(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.tilecodec.TileEncoderFactory: ...
	@staticmethod
	def create(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.io.OutputStream, arg3: javawrappers.javax.media.jai.tilecodec.TileCodecParameterList, arg4: javawrappers.java.awt.image.SampleModel, ) -> javawrappers.javax.media.jai.tilecodec.TileEncoder: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def setPreference(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.javax.media.jai.tilecodec.TileEncoderFactory, arg4: javawrappers.javax.media.jai.tilecodec.TileEncoderFactory, ) -> None: ...
	@staticmethod
	def getOrderedList(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	@staticmethod
	def register(arg0: javawrappers.javax.media.jai.OperationRegistry, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.javax.media.jai.tilecodec.TileEncoderFactory, ) -> None: ...


class RemoteRenderedRegistryMode:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def addMode(arg0: javawrappers.javax.media.jai.RegistryMode, ) -> Union[int, JBoolean]: ...
	def getProductClass(self, ) -> javawrappers.java.lang.Class: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getDescriptorClass(self, ) -> javawrappers.java.lang.Class: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def getDescriptorClasses() -> javawrappers.java.util.Set: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def removeMode(arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def arePreferencesSupported(self, ) -> Union[int, JBoolean]: ...
	def getFactoryClass(self, ) -> javawrappers.java.lang.Class: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getModeNames() -> JArray(javawrappers.java.lang.String, 1): ...
	@overload
	@staticmethod
	def getModeNames(arg0: javawrappers.java.lang.Class, ) -> JArray(javawrappers.java.lang.String, 1): ...
	def arePropertiesSupported(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getMode(arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.RegistryMode: ...
	def getFactoryMethod(self, ) -> javawrappers.java.lang.reflect.Method: ...


