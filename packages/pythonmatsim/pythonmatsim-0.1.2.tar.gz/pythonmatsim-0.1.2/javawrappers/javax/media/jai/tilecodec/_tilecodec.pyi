################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.javax.media.jai.remote
import javawrappers.java.awt
import javawrappers.javax.media.jai
import javawrappers.java.lang
import javawrappers.java.awt.image
import javawrappers.java.io
import javawrappers.javax.media.jai.tilecodec

from jpype.types import *
from typing import Union

from typing import overload

class RawTileCodecDescriptor:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def isModeSupported(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getCompatibleParameters(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.media.jai.tilecodec.TileCodecParameterList, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	def getPropertyGenerators(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.javax.media.jai.PropertyGenerator, 1): ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def includesSampleModelInfo(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def includesLocationInfo(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getDefaultParameters(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.image.SampleModel, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	@overload
	def getDefaultParameters(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	def arePropertiesSupported(self, ) -> Union[int, JBoolean]: ...
	def getParameterListDescriptor(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.ParameterListDescriptor: ...
	def getSupportedModes(self, ) -> JArray(javawrappers.java.lang.String, 1): ...


class JPEGTileCodecDescriptor:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def isModeSupported(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getCompatibleParameters(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.media.jai.tilecodec.TileCodecParameterList, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	def getPropertyGenerators(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.javax.media.jai.PropertyGenerator, 1): ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def includesSampleModelInfo(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def includesLocationInfo(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getDefaultParameters(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.image.SampleModel, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	@overload
	def getDefaultParameters(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	def arePropertiesSupported(self, ) -> Union[int, JBoolean]: ...
	def getParameterListDescriptor(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.ParameterListDescriptor: ...
	def getSupportedModes(self, ) -> JArray(javawrappers.java.lang.String, 1): ...


class TileCodecDescriptor:
	def isModeSupported(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getCompatibleParameters(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.media.jai.tilecodec.TileCodecParameterList, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	def getPropertyGenerators(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.javax.media.jai.PropertyGenerator, 1): ...
	def includesSampleModelInfo(self, ) -> Union[int, JBoolean]: ...
	def includesLocationInfo(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getDefaultParameters(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	@overload
	def getDefaultParameters(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.image.SampleModel, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	def arePropertiesSupported(self, ) -> Union[int, JBoolean]: ...
	def getParameterListDescriptor(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.ParameterListDescriptor: ...
	def getSupportedModes(self, ) -> JArray(javawrappers.java.lang.String, 1): ...


class TileCodecDescriptorImpl:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], arg2: Union[int, JBoolean], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def isModeSupported(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def getCompatibleParameters(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.media.jai.tilecodec.TileCodecParameterList, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getPropertyGenerators(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.javax.media.jai.PropertyGenerator, 1): ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def includesSampleModelInfo(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getDefaultParameters(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	@overload
	def getDefaultParameters(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.image.SampleModel, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def includesLocationInfo(self, ) -> Union[int, JBoolean]: ...
	def arePropertiesSupported(self, ) -> Union[int, JBoolean]: ...
	def getParameterListDescriptor(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.ParameterListDescriptor: ...
	def getSupportedModes(self, ) -> JArray(javawrappers.java.lang.String, 1): ...


class GZIPTileCodecDescriptor:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def isModeSupported(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getCompatibleParameters(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.javax.media.jai.tilecodec.TileCodecParameterList, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	def getPropertyGenerators(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.javax.media.jai.PropertyGenerator, 1): ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def includesSampleModelInfo(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def includesLocationInfo(self, ) -> Union[int, JBoolean]: ...
	@overload
	def getDefaultParameters(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.awt.image.SampleModel, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	@overload
	def getDefaultParameters(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	def arePropertiesSupported(self, ) -> Union[int, JBoolean]: ...
	def getParameterListDescriptor(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.media.jai.ParameterListDescriptor: ...
	def getSupportedModes(self, ) -> JArray(javawrappers.java.lang.String, 1): ...


class TileEncoderFactory:
	def getEncodeCapability(self, ) -> javawrappers.javax.media.jai.remote.NegotiableCapability: ...
	def createEncoder(self, arg0: javawrappers.java.io.OutputStream, arg1: javawrappers.javax.media.jai.tilecodec.TileCodecParameterList, arg2: javawrappers.java.awt.image.SampleModel, ) -> javawrappers.javax.media.jai.tilecodec.TileEncoder: ...


class TileDecoderFactory:
	def createDecoder(self, arg0: javawrappers.java.io.InputStream, arg1: javawrappers.javax.media.jai.tilecodec.TileCodecParameterList, ) -> javawrappers.javax.media.jai.tilecodec.TileDecoder: ...
	def getDecodeCapability(self, ) -> javawrappers.javax.media.jai.remote.NegotiableCapability: ...


class TileDecoderImpl:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.io.InputStream, arg2: javawrappers.javax.media.jai.tilecodec.TileCodecParameterList, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getFormatName(self, ) -> javawrappers.java.lang.String: ...
	def getDecodeParameterList(self, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def decode(self, ) -> javawrappers.java.awt.image.Raster: ...
	@overload
	def decode(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.image.Raster: ...
	def getInputStream(self, ) -> javawrappers.java.io.InputStream: ...
	def notify(self, ) -> None: ...


class TileEncoder:
	def encode(self, arg0: javawrappers.java.awt.image.Raster, ) -> None: ...
	def getEncodeParameterList(self, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	def getFormatName(self, ) -> javawrappers.java.lang.String: ...
	def getOutputStream(self, ) -> javawrappers.java.io.OutputStream: ...


class TileDecoder:
	def getFormatName(self, ) -> javawrappers.java.lang.String: ...
	def getDecodeParameterList(self, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	@overload
	def decode(self, ) -> javawrappers.java.awt.image.Raster: ...
	@overload
	def decode(self, arg0: javawrappers.java.awt.Point, ) -> javawrappers.java.awt.image.Raster: ...
	def getInputStream(self, ) -> javawrappers.java.io.InputStream: ...


class TileEncoderImpl:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.io.OutputStream, arg2: javawrappers.javax.media.jai.tilecodec.TileCodecParameterList, ): ...
	def encode(self, arg0: javawrappers.java.awt.image.Raster, ) -> None: ...
	def getEncodeParameterList(self, ) -> javawrappers.javax.media.jai.tilecodec.TileCodecParameterList: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getFormatName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getOutputStream(self, ) -> javawrappers.java.io.OutputStream: ...
	def notify(self, ) -> None: ...


class TileCodecParameterList:
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: JArray(javawrappers.java.lang.String, 1), arg2: javawrappers.javax.media.jai.ParameterListDescriptor, ): ...
	def getFloatParameter(self, arg0: javawrappers.java.lang.String, ) -> Union[float, JFloat]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getByteParameter(self, arg0: javawrappers.java.lang.String, ) -> JByte: ...
	def getValidModes(self, ) -> JArray(javawrappers.java.lang.String, 1): ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getDoubleParameter(self, arg0: javawrappers.java.lang.String, ) -> Union[float, JDouble]: ...
	def getShortParameter(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JShort]: ...
	def notify(self, ) -> None: ...
	def isValidForMode(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def getFormatName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getBooleanParameter(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def getObjectParameter(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getLongParameter(self, arg0: javawrappers.java.lang.String, ) -> Union[long, JLong]: ...
	@overload
	def setParameter(self, arg0: javawrappers.java.lang.String, arg1: Union[string, JString], ) -> javawrappers.javax.media.jai.ParameterList: ...
	@overload
	def setParameter(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JShort], ) -> javawrappers.javax.media.jai.ParameterList: ...
	@overload
	def setParameter(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], ) -> javawrappers.javax.media.jai.ParameterList: ...
	@overload
	def setParameter(self, arg0: javawrappers.java.lang.String, arg1: Union[long, JLong], ) -> javawrappers.javax.media.jai.ParameterList: ...
	@overload
	def setParameter(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JFloat], ) -> javawrappers.javax.media.jai.ParameterList: ...
	@overload
	def setParameter(self, arg0: javawrappers.java.lang.String, arg1: Union[float, JDouble], ) -> javawrappers.javax.media.jai.ParameterList: ...
	@overload
	def setParameter(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> javawrappers.javax.media.jai.ParameterList: ...
	@overload
	def setParameter(self, arg0: javawrappers.java.lang.String, arg1: JByte, ) -> javawrappers.javax.media.jai.ParameterList: ...
	@overload
	def setParameter(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], ) -> javawrappers.javax.media.jai.ParameterList: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getIntParameter(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JInt]: ...
	def getParameterListDescriptor(self, ) -> javawrappers.javax.media.jai.ParameterListDescriptor: ...
	def getCharParameter(self, arg0: javawrappers.java.lang.String, ) -> Union[string, JString]: ...


