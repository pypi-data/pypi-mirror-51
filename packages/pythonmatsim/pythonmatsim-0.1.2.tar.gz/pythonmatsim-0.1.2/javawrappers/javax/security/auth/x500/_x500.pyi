################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.security
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.javax.security.auth
import javawrappers.java.security.cert

from jpype.types import *
from typing import Union

from typing import overload

class X500PrivateCredential:
	@overload
	def __init__(self, arg0: javawrappers.java.security.cert.X509Certificate, arg1: javawrappers.java.security.PrivateKey, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.security.cert.X509Certificate, arg1: javawrappers.java.security.PrivateKey, arg2: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getCertificate(self, ) -> javawrappers.java.security.cert.X509Certificate: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isDestroyed(self, ) -> Union[int, JBoolean]: ...
	def destroy(self, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getPrivateKey(self, ) -> javawrappers.java.security.PrivateKey: ...
	def getAlias(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class X500Principal:
	@overload
	def __init__(self, arg0: javawrappers.java.io.InputStream, ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Map, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def getName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Map, ) -> javawrappers.java.lang.String: ...
	@overload
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getEncoded(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def implies(self, arg0: javawrappers.javax.security.auth.Subject, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...


