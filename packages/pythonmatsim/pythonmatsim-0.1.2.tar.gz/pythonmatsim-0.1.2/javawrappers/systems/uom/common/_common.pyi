################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.javax.measure
import javawrappers.javax.measure.spi
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.systems.uom.common

from jpype.types import *
from typing import Union

from typing import overload

class IndianPrefix:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@staticmethod
	def ARAWB(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def PADMA(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	@staticmethod
	def CRORE(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	@staticmethod
	def SAU(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	@staticmethod
	def EK(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def SHANKH(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	@staticmethod
	def HAZAAR(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def LAKH(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	@staticmethod
	def SAHASR(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	@staticmethod
	def MAHASHANKH(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	@staticmethod
	def KHARAWB(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def DAS(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def NEEL(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...


class TamilPrefix:
	def __init__(self, ): ...
	class Sanskrit:
		def __init__(self, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		@staticmethod
		def ONDRU(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		@staticmethod
		def PATHU(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	@staticmethod
	def neLai(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def iLanji(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def eegiyam(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	@staticmethod
	def nooRaayiram(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def aambal(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	@staticmethod
	def patthu(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	@staticmethod
	def aayiram(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	@staticmethod
	def nooRu(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	@staticmethod
	def ONDRU(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	@staticmethod
	def veLLam(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	@staticmethod
	def PATHU(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@staticmethod
	def onRu(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def thoLLunn(arg0: javawrappers.javax.measure.Unit, ) -> javawrappers.javax.measure.Unit: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class USCustomary:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def getUnits(self, arg0: javawrappers.javax.measure.Dimension, ) -> javawrappers.java.util.Set: ...
	@overload
	def getUnits(self, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getInstance() -> javawrappers.javax.measure.spi.SystemOfUnits: ...
	def getUnit(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.measure.Unit: ...
	def notify(self, ) -> None: ...


class Imperial:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def getUnits(self, arg0: javawrappers.javax.measure.Dimension, ) -> javawrappers.java.util.Set: ...
	@overload
	def getUnits(self, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getInstance() -> javawrappers.javax.measure.spi.SystemOfUnits: ...
	def getUnit(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.measure.Unit: ...
	def notify(self, ) -> None: ...


class CGS:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def getUnits(self, arg0: javawrappers.javax.measure.Dimension, ) -> javawrappers.java.util.Set: ...
	@overload
	def getUnits(self, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getInstance() -> javawrappers.systems.uom.common.CGS: ...
	def getUnit(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.javax.measure.Unit: ...
	def notify(self, ) -> None: ...


