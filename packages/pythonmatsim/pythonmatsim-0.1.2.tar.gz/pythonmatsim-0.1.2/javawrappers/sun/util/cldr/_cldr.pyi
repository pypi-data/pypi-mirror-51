################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.text.spi
import javawrappers.java.util.spi
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.sun.util.resources
import javawrappers.sun.util.locale.provider
import javawrappers.sun.text.spi
import javawrappers.sun.util.spi

from jpype.types import *
from typing import Union

from typing import overload

class CLDRTimeZoneNameProviderImpl:
	def __init__(self, arg0: javawrappers.sun.util.locale.provider.LocaleProviderAdapter.Type, arg1: javawrappers.java.util.Set, ): ...
	class AVAILABLE_IDS:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isSupportedLocale(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDisplayName(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JBoolean], arg2: Union[int, JInt], arg3: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getGenericDisplayName(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...


class CLDRBaseLocaleDataMetaInfo:
	def __init__(self, ): ...
	class TZCanonicalIDMapHolder:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def tzCanonicalIDs(self, ) -> javawrappers.java.util.Map: ...
	def availableLanguageTags(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def getType(self, ) -> javawrappers.sun.util.locale.provider.LocaleProviderAdapter.Type: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def parentLocales(self, ) -> javawrappers.java.util.Map: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getLanguageAliasMap(self, ) -> javawrappers.java.util.Map: ...


class CLDRLocaleProviderAdapter:
	def __init__(self, ): ...
	def getBreakIteratorProvider(self, ) -> javawrappers.java.text.spi.BreakIteratorProvider: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def getAdapterPreference() -> javawrappers.java.util.List: ...
	def getLocaleServiceProvider(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.util.spi.LocaleServiceProvider: ...
	def getAdapterType(self, ) -> javawrappers.sun.util.locale.provider.LocaleProviderAdapter.Type: ...
	@staticmethod
	def getResourceBundleBased() -> javawrappers.sun.util.locale.provider.LocaleProviderAdapter: ...
	@staticmethod
	def forJRE() -> javawrappers.sun.util.locale.provider.LocaleProviderAdapter: ...
	@staticmethod
	def toLocaleArray(arg0: javawrappers.java.util.Set, ) -> JArray(javawrappers.java.util.Locale, 1): ...
	def notify(self, ) -> None: ...
	def getTimeZoneNameProvider(self, ) -> javawrappers.java.util.spi.TimeZoneNameProvider: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getJavaTimeDateTimePatternProvider(self, ) -> javawrappers.sun.text.spi.JavaTimeDateTimePatternProvider: ...
	def canonicalTZID(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Optional: ...
	def getDecimalFormatSymbolsProvider(self, ) -> javawrappers.java.text.spi.DecimalFormatSymbolsProvider: ...
	def getCalendarProvider(self, ) -> javawrappers.sun.util.spi.CalendarProvider: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...
	def getCalendarDataProvider(self, ) -> javawrappers.java.util.spi.CalendarDataProvider: ...
	@staticmethod
	def getAdapter(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.util.Locale, ) -> javawrappers.sun.util.locale.provider.LocaleProviderAdapter: ...
	def getCalendarNameProvider(self, ) -> javawrappers.java.util.spi.CalendarNameProvider: ...
	def isSupportedProviderLocale(self, arg0: javawrappers.java.util.Locale, arg1: javawrappers.java.util.Set, ) -> Union[int, JBoolean]: ...
	def getLanguageTagSet(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Set: ...
	def getLocaleNameProvider(self, ) -> javawrappers.java.util.spi.LocaleNameProvider: ...
	def getDateFormatProvider(self, ) -> javawrappers.java.text.spi.DateFormatProvider: ...
	def getCurrencyNameProvider(self, ) -> javawrappers.java.util.spi.CurrencyNameProvider: ...
	def getLocaleData(self, ) -> javawrappers.sun.util.resources.LocaleData: ...
	def getCandidateLocales(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Locale, ) -> javawrappers.java.util.List: ...
	def getCollatorProvider(self, ) -> javawrappers.java.text.spi.CollatorProvider: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def forType(arg0: javawrappers.sun.util.locale.provider.LocaleProviderAdapter.Type, ) -> javawrappers.sun.util.locale.provider.LocaleProviderAdapter: ...
	def getNumberFormatProvider(self, ) -> javawrappers.java.text.spi.NumberFormatProvider: ...
	def getLocaleResources(self, arg0: javawrappers.java.util.Locale, ) -> javawrappers.sun.util.locale.provider.LocaleResources: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDateFormatSymbolsProvider(self, ) -> javawrappers.java.text.spi.DateFormatSymbolsProvider: ...


class CLDRCalendarNameProviderImpl:
	def __init__(self, arg0: javawrappers.sun.util.locale.provider.LocaleProviderAdapter.Type, arg1: javawrappers.java.util.Set, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isSupportedLocale(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getDisplayNameImpl(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: javawrappers.java.util.Locale, arg5: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	def getJavaTimeDisplayNames(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.util.Locale, ) -> javawrappers.java.util.Map: ...
	def notifyAll(self, ) -> None: ...
	def getJavaTimeDisplayName(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getAvailableLanguageTags(self, ) -> javawrappers.java.util.Set: ...
	def getDisplayName(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: Union[int, JInt], arg4: javawrappers.java.util.Locale, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getDisplayNames(self, arg0: javawrappers.java.lang.String, arg1: Union[int, JInt], arg2: Union[int, JInt], arg3: javawrappers.java.util.Locale, ) -> javawrappers.java.util.Map: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...


class CLDRCalendarDataProviderImpl:
	def __init__(self, arg0: javawrappers.sun.util.locale.provider.LocaleProviderAdapter.Type, arg1: javawrappers.java.util.Set, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def isSupportedLocale(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getMinimalDaysInFirstWeek(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JInt]: ...
	def getFirstDayOfWeek(self, arg0: javawrappers.java.util.Locale, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getAvailableLanguageTags(self, ) -> javawrappers.java.util.Set: ...
	def getAvailableLocales(self, ) -> JArray(javawrappers.java.util.Locale, 1): ...


