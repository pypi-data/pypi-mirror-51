################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.security
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.sun.security.validator
import javawrappers.java.io
import javawrappers.java.security.cert

from jpype.types import *
from typing import Union

from typing import overload

class SimpleValidator:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setValidationDate(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.security.KeyStore, ) -> javawrappers.sun.security.validator.Validator: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.security.cert.PKIXBuilderParameters, ) -> javawrappers.sun.security.validator.Validator: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.util.Collection, ) -> javawrappers.sun.security.validator.Validator: ...
	def notify(self, ) -> None: ...
	def getTrustedCertificates(self, ) -> javawrappers.java.util.Collection: ...
	@overload
	def validate(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.util.Collection, arg2: javawrappers.java.lang.Object, ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...
	@overload
	def validate(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.util.Collection, arg2: javawrappers.java.util.List, arg3: javawrappers.java.security.AlgorithmConstraints, arg4: javawrappers.java.lang.Object, ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...
	@overload
	def validate(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...
	@overload
	def validate(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.util.Collection, ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...


class ValidatorException:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.security.cert.X509Certificate, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.security.cert.X509Certificate, arg2: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, arg2: javawrappers.java.security.cert.X509Certificate, arg3: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.java.security.cert.X509Certificate, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getErrorCertificate(self, ) -> javawrappers.java.security.cert.X509Certificate: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getErrorType(self, ) -> javawrappers.java.lang.Object: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class TrustStoreUtil:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getTrustedCerts(arg0: javawrappers.java.security.KeyStore, ) -> javawrappers.java.util.Set: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class Validator:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setValidationDate(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.security.KeyStore, ) -> javawrappers.sun.security.validator.Validator: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.security.cert.PKIXBuilderParameters, ) -> javawrappers.sun.security.validator.Validator: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.util.Collection, ) -> javawrappers.sun.security.validator.Validator: ...
	def notify(self, ) -> None: ...
	def getTrustedCertificates(self, ) -> javawrappers.java.util.Collection: ...
	@overload
	def validate(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.util.Collection, arg2: javawrappers.java.lang.Object, ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...
	@overload
	def validate(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.util.Collection, arg2: javawrappers.java.util.List, arg3: javawrappers.java.security.AlgorithmConstraints, arg4: javawrappers.java.lang.Object, ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...
	@overload
	def validate(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...
	@overload
	def validate(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.util.Collection, ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...


class PKIXValidator:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setValidationDate(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getParameters(self, ) -> javawrappers.java.security.cert.PKIXBuilderParameters: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCertPathLength(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.security.KeyStore, ) -> javawrappers.sun.security.validator.Validator: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.security.cert.PKIXBuilderParameters, ) -> javawrappers.sun.security.validator.Validator: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.util.Collection, ) -> javawrappers.sun.security.validator.Validator: ...
	def notify(self, ) -> None: ...
	def getTrustedCertificates(self, ) -> javawrappers.java.util.Collection: ...
	@overload
	def validate(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.util.Collection, arg2: javawrappers.java.lang.Object, ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...
	@overload
	def validate(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.util.Collection, arg2: javawrappers.java.util.List, arg3: javawrappers.java.security.AlgorithmConstraints, arg4: javawrappers.java.lang.Object, ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...
	@overload
	def validate(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...
	@overload
	def validate(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.util.Collection, ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...


