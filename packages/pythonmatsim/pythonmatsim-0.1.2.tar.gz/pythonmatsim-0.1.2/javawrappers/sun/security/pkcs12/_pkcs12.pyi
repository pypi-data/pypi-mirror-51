################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.security
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.io
import javawrappers.sun.security.pkcs12
import javawrappers.java.security.cert

from jpype.types import *
from typing import Union

from typing import overload

class PKCS12KeyStore:
	def __init__(self, ): ...
	class RetryWithZero:
		def tryOnce(self, arg0: JArray(Union[string, JString], 1), ) -> javawrappers.java.lang.Object: ...
		@staticmethod
		def run(arg0: javawrappers.sun.security.pkcs12.PKCS12KeyStore.RetryWithZero, arg1: JArray(Union[string, JString], 1), ) -> javawrappers.java.lang.Object: ...


	class CertEntry:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class SecretKeyEntry:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class PrivateKeyEntry:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class KeyEntry:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class Entry:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class DualFormatPKCS12:
		def __init__(self, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def engineAliases(self, ) -> javawrappers.java.util.Enumeration: ...
		def engineGetEntry(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.KeyStore.ProtectionParameter, ) -> javawrappers.java.security.KeyStore.Entry: ...
		@overload
		def engineStore(self, arg0: javawrappers.java.io.OutputStream, arg1: JArray(Union[string, JString], 1), ) -> None: ...
		@overload
		def engineStore(self, arg0: javawrappers.java.security.KeyStore.LoadStoreParameter, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def engineDeleteEntry(self, arg0: javawrappers.java.lang.String, ) -> None: ...
		def engineGetCertificateChain(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.security.cert.Certificate, 1): ...
		@overload
		def engineSetKeyEntry(self, arg0: javawrappers.java.lang.String, arg1: JArray(JByte, 1), arg2: JArray(javawrappers.java.security.cert.Certificate, 1), ) -> None: ...
		@overload
		def engineSetKeyEntry(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.Key, arg2: JArray(Union[string, JString], 1), arg3: JArray(javawrappers.java.security.cert.Certificate, 1), ) -> None: ...
		def notify(self, ) -> None: ...
		def engineIsCertificateEntry(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
		def engineEntryInstanceOf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def engineGetCertificateAlias(self, arg0: javawrappers.java.security.cert.Certificate, ) -> javawrappers.java.lang.String: ...
		def engineGetCreationDate(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Date: ...
		@overload
		def engineLoad(self, arg0: javawrappers.java.io.InputStream, arg1: JArray(Union[string, JString], 1), ) -> None: ...
		@overload
		def engineLoad(self, arg0: javawrappers.java.security.KeyStore.LoadStoreParameter, ) -> None: ...
		def engineProbe(self, arg0: javawrappers.java.io.InputStream, ) -> Union[int, JBoolean]: ...
		def engineSetCertificateEntry(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.cert.Certificate, ) -> None: ...
		def engineIsKeyEntry(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
		def engineGetCertificate(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.security.cert.Certificate: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def engineSize(self, ) -> Union[int, JInt]: ...
		def engineGetKey(self, arg0: javawrappers.java.lang.String, arg1: JArray(Union[string, JString], 1), ) -> javawrappers.java.security.Key: ...
		def engineSetEntry(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.KeyStore.Entry, arg2: javawrappers.java.security.KeyStore.ProtectionParameter, ) -> None: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def engineContainsAlias(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def engineAliases(self, ) -> javawrappers.java.util.Enumeration: ...
	@overload
	def engineAliases(self, ) -> javawrappers.java.util.Enumeration: ...
	@overload
	def engineGetEntry(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.KeyStore.ProtectionParameter, ) -> javawrappers.java.security.KeyStore.Entry: ...
	@overload
	def engineGetEntry(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.KeyStore.ProtectionParameter, ) -> javawrappers.java.security.KeyStore.Entry: ...
	@overload
	def engineStore(self, arg0: javawrappers.java.io.OutputStream, arg1: JArray(Union[string, JString], 1), ) -> None: ...
	@overload
	def engineStore(self, arg0: javawrappers.java.io.OutputStream, arg1: JArray(Union[string, JString], 1), ) -> None: ...
	@overload
	def engineStore(self, arg0: javawrappers.java.security.KeyStore.LoadStoreParameter, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def run(arg0: javawrappers.sun.security.pkcs12.PKCS12KeyStore.RetryWithZero, arg1: JArray(Union[string, JString], 1), ) -> javawrappers.java.lang.Object: ...
	@overload
	def engineDeleteEntry(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def engineDeleteEntry(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def engineGetCertificateChain(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.security.cert.Certificate, 1): ...
	@overload
	def engineGetCertificateChain(self, arg0: javawrappers.java.lang.String, ) -> JArray(javawrappers.java.security.cert.Certificate, 1): ...
	@overload
	def engineSetKeyEntry(self, arg0: javawrappers.java.lang.String, arg1: JArray(JByte, 1), arg2: JArray(javawrappers.java.security.cert.Certificate, 1), ) -> None: ...
	@overload
	def engineSetKeyEntry(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.Key, arg2: JArray(Union[string, JString], 1), arg3: JArray(javawrappers.java.security.cert.Certificate, 1), ) -> None: ...
	@overload
	def engineSetKeyEntry(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.Key, arg2: JArray(Union[string, JString], 1), arg3: JArray(javawrappers.java.security.cert.Certificate, 1), ) -> None: ...
	@overload
	def engineSetKeyEntry(self, arg0: javawrappers.java.lang.String, arg1: JArray(JByte, 1), arg2: JArray(javawrappers.java.security.cert.Certificate, 1), ) -> None: ...
	def notify(self, ) -> None: ...
	@overload
	def engineIsCertificateEntry(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def engineIsCertificateEntry(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def engineEntryInstanceOf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	@overload
	def engineEntryInstanceOf(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def engineGetCertificateAlias(self, arg0: javawrappers.java.security.cert.Certificate, ) -> javawrappers.java.lang.String: ...
	@overload
	def engineGetCertificateAlias(self, arg0: javawrappers.java.security.cert.Certificate, ) -> javawrappers.java.lang.String: ...
	@overload
	def engineGetCreationDate(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Date: ...
	@overload
	def engineGetCreationDate(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Date: ...
	@overload
	def engineLoad(self, arg0: javawrappers.java.io.InputStream, arg1: JArray(Union[string, JString], 1), ) -> None: ...
	@overload
	def engineLoad(self, arg0: javawrappers.java.security.KeyStore.LoadStoreParameter, ) -> None: ...
	@overload
	def engineLoad(self, arg0: javawrappers.java.io.InputStream, arg1: JArray(Union[string, JString], 1), ) -> None: ...
	@overload
	def engineProbe(self, arg0: javawrappers.java.io.InputStream, ) -> Union[int, JBoolean]: ...
	@overload
	def engineProbe(self, arg0: javawrappers.java.io.InputStream, ) -> Union[int, JBoolean]: ...
	@overload
	def engineSetCertificateEntry(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.cert.Certificate, ) -> None: ...
	@overload
	def engineSetCertificateEntry(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.cert.Certificate, ) -> None: ...
	@overload
	def engineIsKeyEntry(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def engineIsKeyEntry(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def engineGetCertificate(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.security.cert.Certificate: ...
	@overload
	def engineGetCertificate(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.security.cert.Certificate: ...
	def tryOnce(self, arg0: JArray(Union[string, JString], 1), ) -> javawrappers.java.lang.Object: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def engineSize(self, ) -> Union[int, JInt]: ...
	@overload
	def engineSize(self, ) -> Union[int, JInt]: ...
	@overload
	def engineGetKey(self, arg0: javawrappers.java.lang.String, arg1: JArray(Union[string, JString], 1), ) -> javawrappers.java.security.Key: ...
	@overload
	def engineGetKey(self, arg0: javawrappers.java.lang.String, arg1: JArray(Union[string, JString], 1), ) -> javawrappers.java.security.Key: ...
	@overload
	def engineSetEntry(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.KeyStore.Entry, arg2: javawrappers.java.security.KeyStore.ProtectionParameter, ) -> None: ...
	@overload
	def engineSetEntry(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.KeyStore.Entry, arg2: javawrappers.java.security.KeyStore.ProtectionParameter, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def engineContainsAlias(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def engineContainsAlias(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...


