################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.security
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.sun.security.x509
import javawrappers.java.net
import javawrappers.javax.security.auth.x500
import javawrappers.java.io
import javawrappers.sun.security.provider.certpath
import javawrappers.java.math
import javawrappers.java.security.cert
import javawrappers.sun.security.util

from jpype.types import *
from typing import Union

from typing import overload

class SunCertPathBuilderException:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Throwable, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getAdjacencyList(self, ) -> javawrappers.sun.security.provider.certpath.AdjacencyList: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class CertPathHelper:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def setDateAndTime(arg0: javawrappers.java.security.cert.X509CRLSelector, arg1: javawrappers.java.util.Date, arg2: Union[long, JLong], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class SunCertPathBuilderResult:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getTrustAnchor(self, ) -> javawrappers.java.security.cert.TrustAnchor: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getAdjacencyList(self, ) -> javawrappers.sun.security.provider.certpath.AdjacencyList: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def getPolicyTree(self, ) -> javawrappers.java.security.cert.PolicyNode: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getPublicKey(self, ) -> javawrappers.java.security.PublicKey: ...
	def getCertPath(self, ) -> javawrappers.java.security.cert.CertPath: ...
	def notify(self, ) -> None: ...


class Vertex:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getIndex(self, ) -> Union[int, JInt]: ...
	def certToString(self, ) -> javawrappers.java.lang.String: ...
	def throwableToString(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def moreToString(self, ) -> javawrappers.java.lang.String: ...
	def getCertificate(self, ) -> javawrappers.java.security.cert.X509Certificate: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def indexToString(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getThrowable(self, ) -> javawrappers.java.lang.Throwable: ...


class DistributionPointFetcher:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def getCRLs(arg0: javawrappers.java.security.cert.X509CRLSelector, arg1: Union[int, JBoolean], arg2: javawrappers.java.security.PublicKey, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.util.List, arg5: JArray(Union[int, JBoolean], 1), arg6: javawrappers.java.util.Set, arg7: javawrappers.java.util.Date, arg8: javawrappers.java.lang.String, ) -> javawrappers.java.util.Collection: ...
	@overload
	@staticmethod
	def getCRLs(arg0: javawrappers.java.security.cert.X509CRLSelector, arg1: Union[int, JBoolean], arg2: javawrappers.java.security.PublicKey, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.util.List, arg5: JArray(Union[int, JBoolean], 1), arg6: javawrappers.java.util.Set, arg7: javawrappers.java.util.Date, ) -> javawrappers.java.util.Collection: ...
	@overload
	@staticmethod
	def getCRLs(arg0: javawrappers.java.security.cert.X509CRLSelector, arg1: Union[int, JBoolean], arg2: javawrappers.java.security.PublicKey, arg3: javawrappers.java.security.cert.X509Certificate, arg4: javawrappers.java.lang.String, arg5: javawrappers.java.util.List, arg6: JArray(Union[int, JBoolean], 1), arg7: javawrappers.java.util.Set, arg8: javawrappers.java.util.Date, arg9: javawrappers.java.lang.String, ) -> javawrappers.java.util.Collection: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class CollectionCertStore:
	def __init__(self, arg0: javawrappers.java.security.cert.CertStoreParameters, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def engineGetCRLs(self, arg0: javawrappers.java.security.cert.CRLSelector, ) -> javawrappers.java.util.Collection: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def engineGetCertificates(self, arg0: javawrappers.java.security.cert.CertSelector, ) -> javawrappers.java.util.Collection: ...


class PKIXCertPathValidator:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def engineGetRevocationChecker(self, ) -> javawrappers.java.security.cert.CertPathChecker: ...
	def notify(self, ) -> None: ...
	def engineValidate(self, arg0: javawrappers.java.security.cert.CertPath, arg1: javawrappers.java.security.cert.CertPathParameters, ) -> javawrappers.java.security.cert.CertPathValidatorResult: ...


class PKIXExtendedParameters:
	def __init__(self, arg0: javawrappers.java.security.cert.PKIXBuilderParameters, arg1: javawrappers.java.security.Timestamp, arg2: javawrappers.java.lang.String, ): ...
	def setPolicyQualifiersRejected(self, arg0: Union[int, JBoolean], ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getPolicyQualifiersRejected(self, ) -> Union[int, JBoolean]: ...
	def setExplicitPolicyRequired(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setInitialPolicies(self, arg0: javawrappers.java.util.Set, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def setMaxPathLength(self, arg0: Union[int, JInt], ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def isAnyPolicyInhibited(self, ) -> Union[int, JBoolean]: ...
	def addCertPathChecker(self, arg0: javawrappers.java.security.cert.PKIXCertPathChecker, ) -> None: ...
	def getTargetCertConstraints(self, ) -> javawrappers.java.security.cert.CertSelector: ...
	def notify(self, ) -> None: ...
	def setCertPathCheckers(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def getSigProvider(self, ) -> javawrappers.java.lang.String: ...
	def getCertStores(self, ) -> javawrappers.java.util.List: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getTimestamp(self, ) -> javawrappers.java.security.Timestamp: ...
	def getDate(self, ) -> javawrappers.java.util.Date: ...
	def setTimestamp(self, arg0: javawrappers.java.security.Timestamp, ) -> None: ...
	def setTrustAnchors(self, arg0: javawrappers.java.util.Set, ) -> None: ...
	def getInitialPolicies(self, ) -> javawrappers.java.util.Set: ...
	def getVariant(self, ) -> javawrappers.java.lang.String: ...
	def setCertStores(self, arg0: javawrappers.java.util.List, ) -> None: ...
	def setTargetCertConstraints(self, arg0: javawrappers.java.security.cert.CertSelector, ) -> None: ...
	def isExplicitPolicyRequired(self, ) -> Union[int, JBoolean]: ...
	def isRevocationEnabled(self, ) -> Union[int, JBoolean]: ...
	def getMaxPathLength(self, ) -> Union[int, JInt]: ...
	def addCertStore(self, arg0: javawrappers.java.security.cert.CertStore, ) -> None: ...
	def getTrustAnchors(self, ) -> javawrappers.java.util.Set: ...
	def setPolicyMappingInhibited(self, arg0: Union[int, JBoolean], ) -> None: ...
	def isPolicyMappingInhibited(self, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getCertPathCheckers(self, ) -> javawrappers.java.util.List: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def setDate(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def setRevocationEnabled(self, arg0: Union[int, JBoolean], ) -> None: ...
	def setSigProvider(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def setAnyPolicyInhibited(self, arg0: Union[int, JBoolean], ) -> None: ...


class OCSPNonceExtension:
	@overload
	def __init__(self, arg0: Union[int, JBoolean], arg1: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: Union[int, JBoolean], arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getNonceValue(self, ) -> JArray(JByte, 1): ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class IndexedCollectionCertStore:
	def __init__(self, arg0: javawrappers.java.security.cert.CertStoreParameters, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def engineGetCRLs(self, arg0: javawrappers.java.security.cert.CRLSelector, ) -> javawrappers.java.util.Collection: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def engineGetCertificates(self, arg0: javawrappers.java.security.cert.CertSelector, ) -> javawrappers.java.util.Collection: ...


class X509CertificatePair:
	@overload
	def __init__(self, arg0: javawrappers.java.security.cert.X509Certificate, arg1: javawrappers.java.security.cert.X509Certificate, ): ...
	@overload
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def setForward(self, arg0: javawrappers.java.security.cert.X509Certificate, ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getEncoded(self, ) -> JArray(JByte, 1): ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def generateCertificatePair(arg0: JArray(JByte, 1), ) -> javawrappers.sun.security.provider.certpath.X509CertificatePair: ...
	@staticmethod
	def clearCache() -> None: ...
	def setReverse(self, arg0: javawrappers.java.security.cert.X509Certificate, ) -> None: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getReverse(self, ) -> javawrappers.java.security.cert.X509Certificate: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getForward(self, ) -> javawrappers.java.security.cert.X509Certificate: ...


class OCSP:
	class RevocationStatus:
		class CertStatus:
			GOOD: OCSP.RevocationStatus.CertStatus = ...
			REVOKED: OCSP.RevocationStatus.CertStatus = ...
			UNKNOWN: OCSP.RevocationStatus.CertStatus = ...
			def getClass(self, ) -> javawrappers.java.lang.Class: ...
			def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
			@overload
			def wait(self, arg0: Union[long, JLong], ) -> None: ...
			@overload
			def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
			@overload
			def wait(self, ) -> None: ...
			def hashCode(self, ) -> Union[int, JInt]: ...
			@overload
			@staticmethod
			def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
			@overload
			@staticmethod
			def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.provider.certpath.OCSP.RevocationStatus.CertStatus: ...
			def notifyAll(self, ) -> None: ...
			def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
			@staticmethod
			def values() -> JArray(javawrappers.sun.security.provider.certpath.OCSP.RevocationStatus.CertStatus, 1): ...
			def name(self, ) -> javawrappers.java.lang.String: ...
			def toString(self, ) -> javawrappers.java.lang.String: ...
			@overload
			def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
			@overload
			def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
			def notify(self, ) -> None: ...
			def ordinal(self, ) -> Union[int, JInt]: ...


		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def getRevocationTime(self, ) -> javawrappers.java.util.Date: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.provider.certpath.OCSP.RevocationStatus.CertStatus: ...
		def notifyAll(self, ) -> None: ...
		@staticmethod
		def values() -> JArray(javawrappers.sun.security.provider.certpath.OCSP.RevocationStatus.CertStatus, 1): ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def getRevocationReason(self, ) -> javawrappers.java.security.cert.CRLReason: ...
		def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
		def getSingleExtensions(self, ) -> javawrappers.java.util.Map: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def name(self, ) -> javawrappers.java.lang.String: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getCertStatus(self, ) -> javawrappers.sun.security.provider.certpath.OCSP.RevocationStatus.CertStatus: ...
		def ordinal(self, ) -> Union[int, JInt]: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getRevocationTime(self, ) -> javawrappers.java.util.Date: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.provider.certpath.OCSP.RevocationStatus.CertStatus: ...
	@staticmethod
	def values() -> JArray(javawrappers.sun.security.provider.certpath.OCSP.RevocationStatus.CertStatus, 1): ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def getOCSPBytes(arg0: javawrappers.java.util.List, arg1: javawrappers.java.net.URI, arg2: javawrappers.java.util.List, ) -> JArray(JByte, 1): ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def check(arg0: javawrappers.java.security.cert.X509Certificate, arg1: javawrappers.java.security.cert.X509Certificate, arg2: javawrappers.java.net.URI, arg3: javawrappers.java.security.cert.X509Certificate, arg4: javawrappers.java.util.Date, ) -> javawrappers.sun.security.provider.certpath.OCSP.RevocationStatus: ...
	@overload
	@staticmethod
	def check(arg0: javawrappers.java.security.cert.X509Certificate, arg1: javawrappers.java.security.cert.X509Certificate, arg2: javawrappers.java.net.URI, arg3: javawrappers.java.security.cert.X509Certificate, arg4: javawrappers.java.util.Date, arg5: javawrappers.java.util.List, arg6: javawrappers.java.lang.String, ) -> javawrappers.sun.security.provider.certpath.OCSP.RevocationStatus: ...
	@overload
	@staticmethod
	def check(arg0: javawrappers.java.security.cert.X509Certificate, arg1: javawrappers.java.net.URI, arg2: javawrappers.java.security.cert.TrustAnchor, arg3: javawrappers.java.security.cert.X509Certificate, arg4: javawrappers.java.security.cert.X509Certificate, arg5: javawrappers.java.util.Date, arg6: javawrappers.java.util.List, arg7: javawrappers.java.lang.String, ) -> javawrappers.sun.security.provider.certpath.OCSP.RevocationStatus: ...
	def getRevocationReason(self, ) -> javawrappers.java.security.cert.CRLReason: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def getResponderURI(arg0: javawrappers.java.security.cert.X509Certificate, ) -> javawrappers.java.net.URI: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def getSingleExtensions(self, ) -> javawrappers.java.util.Map: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCertStatus(self, ) -> javawrappers.sun.security.provider.certpath.OCSP.RevocationStatus.CertStatus: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class BuildStep:
	def __init__(self, arg0: javawrappers.sun.security.provider.certpath.Vertex, arg1: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def fullToString(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getVertex(self, ) -> javawrappers.sun.security.provider.certpath.Vertex: ...
	def notify(self, ) -> None: ...
	def getCertificate(self, ) -> javawrappers.java.security.cert.X509Certificate: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getResult(self, ) -> Union[int, JInt]: ...
	@overload
	def getIssuerName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def getIssuerName(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def verboseToString(self, ) -> javawrappers.java.lang.String: ...
	def resultToString(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.String: ...
	@overload
	def getSubjectName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def getSubjectName(self, ) -> javawrappers.java.lang.String: ...
	def getThrowable(self, ) -> javawrappers.java.lang.Throwable: ...


class ResponderId:
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.security.PublicKey, ): ...
	@overload
	def __init__(self, arg0: javawrappers.javax.security.auth.x500.X500Principal, ): ...
	class Type:
		BY_NAME: ResponderId.Type = ...
		BY_KEY: ResponderId.Type = ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.provider.certpath.ResponderId.Type: ...
		def notifyAll(self, ) -> None: ...
		@staticmethod
		def values() -> JArray(javawrappers.sun.security.provider.certpath.ResponderId.Type, 1): ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def name(self, ) -> javawrappers.java.lang.String: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def value(self, ) -> Union[int, JInt]: ...
		def ordinal(self, ) -> Union[int, JInt]: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.provider.certpath.ResponderId.Type: ...
	def getEncoded(self, ) -> JArray(JByte, 1): ...
	@staticmethod
	def values() -> JArray(javawrappers.sun.security.provider.certpath.ResponderId.Type, 1): ...
	def notifyAll(self, ) -> None: ...
	def length(self, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def getType(self, ) -> javawrappers.sun.security.provider.certpath.ResponderId.Type: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def getResponderName(self, ) -> javawrappers.javax.security.auth.x500.X500Principal: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def value(self, ) -> Union[int, JInt]: ...
	def getKeyIdentifier(self, ) -> javawrappers.sun.security.x509.KeyIdentifier: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class Builder:
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class X509CertPath:
	@overload
	def __init__(self, arg0: javawrappers.java.util.List, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.InputStream, arg1: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.InputStream, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def getEncoded(self, ) -> JArray(JByte, 1): ...
	@overload
	def getEncoded(self, arg0: javawrappers.java.lang.String, ) -> JArray(JByte, 1): ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getCertificates(self, ) -> javawrappers.java.util.List: ...
	def getEncodings(self, ) -> javawrappers.java.util.Iterator: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def getEncodingsStatic() -> javawrappers.java.util.Iterator: ...


class SunCertPathBuilder:
	def __init__(self, ): ...
	def engineBuild(self, arg0: javawrappers.java.security.cert.CertPathParameters, ) -> javawrappers.java.security.cert.CertPathBuilderResult: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def engineGetRevocationChecker(self, ) -> javawrappers.java.security.cert.CertPathChecker: ...
	def notify(self, ) -> None: ...


class AdjacencyList:
	def __init__(self, arg0: javawrappers.java.util.List, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class AlgorithmChecker:
	@overload
	def __init__(self, arg0: javawrappers.java.security.cert.TrustAnchor, arg1: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.security.cert.TrustAnchor, arg1: javawrappers.java.security.AlgorithmConstraints, arg2: javawrappers.java.util.Date, arg3: javawrappers.java.security.Timestamp, arg4: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.security.cert.TrustAnchor, arg1: javawrappers.java.util.Date, arg2: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.security.AlgorithmConstraints, arg1: javawrappers.java.security.Timestamp, arg2: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def init(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def isForwardCheckingSupported(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def check(self, arg0: javawrappers.java.security.cert.Certificate, ) -> None: ...
	@overload
	def check(self, arg0: javawrappers.java.security.cert.Certificate, arg1: javawrappers.java.util.Collection, ) -> None: ...
	def notify(self, ) -> None: ...
	def getSupportedExtensions(self, ) -> javawrappers.java.util.Set: ...


class UntrustedChecker:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def init(self, arg0: Union[int, JBoolean], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def isForwardCheckingSupported(self, ) -> Union[int, JBoolean]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def check(self, arg0: javawrappers.java.security.cert.Certificate, ) -> None: ...
	@overload
	def check(self, arg0: javawrappers.java.security.cert.Certificate, arg1: javawrappers.java.util.Collection, ) -> None: ...
	def notify(self, ) -> None: ...
	def getSupportedExtensions(self, ) -> javawrappers.java.util.Set: ...


class OCSPResponse:
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	class IssuerInfo:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	class SingleResponse:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def getRevocationTime(self, ) -> javawrappers.java.util.Date: ...
		def getNextUpdate(self, ) -> javawrappers.java.util.Date: ...
		def notifyAll(self, ) -> None: ...
		def notify(self, ) -> None: ...
		def getRevocationReason(self, ) -> javawrappers.java.security.cert.CRLReason: ...
		def getSingleExtensions(self, ) -> javawrappers.java.util.Map: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getCertStatus(self, ) -> javawrappers.sun.security.provider.certpath.OCSP.RevocationStatus.CertStatus: ...
		def getCertId(self, ) -> javawrappers.sun.security.provider.certpath.CertId: ...
		def getThisUpdate(self, ) -> javawrappers.java.util.Date: ...


	class ResponseStatus:
		SUCCESSFUL: OCSPResponse.ResponseStatus = ...
		MALFORMED_REQUEST: OCSPResponse.ResponseStatus = ...
		INTERNAL_ERROR: OCSPResponse.ResponseStatus = ...
		TRY_LATER: OCSPResponse.ResponseStatus = ...
		UNUSED: OCSPResponse.ResponseStatus = ...
		SIG_REQUIRED: OCSPResponse.ResponseStatus = ...
		UNAUTHORIZED: OCSPResponse.ResponseStatus = ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
		@overload
		@staticmethod
		def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.provider.certpath.OCSPResponse.ResponseStatus: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@staticmethod
		def values() -> JArray(javawrappers.sun.security.provider.certpath.OCSPResponse.ResponseStatus, 1): ...
		def name(self, ) -> javawrappers.java.lang.String: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...
		def ordinal(self, ) -> Union[int, JInt]: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getSingleResponse(self, arg0: javawrappers.sun.security.provider.certpath.CertId, ) -> javawrappers.sun.security.provider.certpath.OCSPResponse.SingleResponse: ...
	def getRevocationTime(self, ) -> javawrappers.java.util.Date: ...
	def getResponderId(self, ) -> javawrappers.sun.security.provider.certpath.ResponderId: ...
	def getNextUpdate(self, ) -> javawrappers.java.util.Date: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.provider.certpath.OCSPResponse.ResponseStatus: ...
	@staticmethod
	def values() -> JArray(javawrappers.sun.security.provider.certpath.OCSPResponse.ResponseStatus, 1): ...
	def notifyAll(self, ) -> None: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def getRevocationReason(self, ) -> javawrappers.java.security.cert.CRLReason: ...
	def notify(self, ) -> None: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	def getSingleExtensions(self, ) -> javawrappers.java.util.Map: ...
	def getCertIds(self, ) -> javawrappers.java.util.Set: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCertStatus(self, ) -> javawrappers.sun.security.provider.certpath.OCSP.RevocationStatus.CertStatus: ...
	def getCertId(self, ) -> javawrappers.sun.security.provider.certpath.CertId: ...
	def getResponseStatus(self, ) -> javawrappers.sun.security.provider.certpath.OCSPResponse.ResponseStatus: ...
	def getThisUpdate(self, ) -> javawrappers.java.util.Date: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class CertId:
	@overload
	def __init__(self, arg0: javawrappers.java.security.cert.X509Certificate, arg1: javawrappers.sun.security.x509.SerialNumber, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	@overload
	def __init__(self, arg0: javawrappers.javax.security.auth.x500.X500Principal, arg1: javawrappers.java.security.PublicKey, arg2: javawrappers.sun.security.x509.SerialNumber, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getSerialNumber(self, ) -> javawrappers.java.math.BigInteger: ...
	def getIssuerNameHash(self, ) -> JArray(JByte, 1): ...
	def getHashAlgorithm(self, ) -> javawrappers.sun.security.x509.AlgorithmId: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getIssuerKeyHash(self, ) -> JArray(JByte, 1): ...
	def notify(self, ) -> None: ...


