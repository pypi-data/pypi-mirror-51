################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.security
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.java.net
import javawrappers.javax.net.ssl
import javawrappers.java.security.cert

from jpype.types import *
from typing import Union

from typing import overload

class SSLServerCertStore:
	class CS:
		def getCertStoreParameters(self, ) -> javawrappers.java.security.cert.CertStoreParameters: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def getCertificates(self, arg0: javawrappers.java.security.cert.CertSelector, ) -> javawrappers.java.util.Collection: ...
		def notify(self, ) -> None: ...
		@staticmethod
		def getDefaultType() -> javawrappers.java.lang.String: ...
		def getCRLs(self, arg0: javawrappers.java.security.cert.CRLSelector, ) -> javawrappers.java.util.Collection: ...
		def getType(self, ) -> javawrappers.java.lang.String: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def getProvider(self, ) -> javawrappers.java.security.Provider: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@overload
		@staticmethod
		def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.cert.CertStoreParameters, arg2: javawrappers.java.lang.String, ) -> javawrappers.java.security.cert.CertStore: ...
		@overload
		@staticmethod
		def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.cert.CertStoreParameters, ) -> javawrappers.java.security.cert.CertStore: ...
		@overload
		@staticmethod
		def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.cert.CertStoreParameters, arg2: javawrappers.java.security.Provider, ) -> javawrappers.java.security.cert.CertStore: ...


	class GetChainTrustManager:
		@overload
		def checkClientTrusted(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.lang.String, arg2: javawrappers.java.net.Socket, ) -> None: ...
		@overload
		def checkClientTrusted(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.lang.String, ) -> None: ...
		@overload
		def checkClientTrusted(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.net.ssl.SSLEngine, ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		@overload
		def checkServerTrusted(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.lang.String, arg2: javawrappers.java.net.Socket, ) -> None: ...
		@overload
		def checkServerTrusted(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.lang.String, ) -> None: ...
		@overload
		def checkServerTrusted(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.net.ssl.SSLEngine, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def getAcceptedIssuers(self, ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...
		def notify(self, ) -> None: ...


	def getCertStoreParameters(self, ) -> javawrappers.java.security.cert.CertStoreParameters: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def checkServerTrusted(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.lang.String, arg2: javawrappers.java.net.Socket, ) -> None: ...
	@overload
	def checkServerTrusted(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def checkServerTrusted(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.net.ssl.SSLEngine, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getCertificates(self, arg0: javawrappers.java.security.cert.CertSelector, ) -> javawrappers.java.util.Collection: ...
	@staticmethod
	def getDefaultType() -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def engineGetCertificates(self, arg0: javawrappers.java.security.cert.CertSelector, ) -> javawrappers.java.util.Collection: ...
	@overload
	def checkClientTrusted(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.lang.String, arg2: javawrappers.java.net.Socket, ) -> None: ...
	@overload
	def checkClientTrusted(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def checkClientTrusted(self, arg0: JArray(javawrappers.java.security.cert.X509Certificate, 1), arg1: javawrappers.java.lang.String, arg2: javawrappers.javax.net.ssl.SSLEngine, ) -> None: ...
	def getCRLs(self, arg0: javawrappers.java.security.cert.CRLSelector, ) -> javawrappers.java.util.Collection: ...
	def engineGetCRLs(self, arg0: javawrappers.java.security.cert.CRLSelector, ) -> javawrappers.java.util.Collection: ...
	def getType(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getProvider(self, ) -> javawrappers.java.security.Provider: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getAcceptedIssuers(self, ) -> JArray(javawrappers.java.security.cert.X509Certificate, 1): ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.net.URI, ) -> javawrappers.java.security.cert.CertStore: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.cert.CertStoreParameters, arg2: javawrappers.java.lang.String, ) -> javawrappers.java.security.cert.CertStore: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.cert.CertStoreParameters, ) -> javawrappers.java.security.cert.CertStore: ...
	@overload
	@staticmethod
	def getInstance(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.cert.CertStoreParameters, arg2: javawrappers.java.security.Provider, ) -> javawrappers.java.security.cert.CertStore: ...


