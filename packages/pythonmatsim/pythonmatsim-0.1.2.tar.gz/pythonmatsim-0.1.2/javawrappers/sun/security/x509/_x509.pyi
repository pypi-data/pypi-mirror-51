################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.security
import javawrappers.java.util
import javawrappers.sun.security.x509
import javawrappers.javax.security.auth.x500
import javawrappers.java.util.stream
import javawrappers.java.security.cert
import javawrappers.java.security.spec
import javawrappers.java.lang
import javawrappers.java.net
import javawrappers.java.io
import javawrappers.javax.security.auth
import javawrappers.java.util.function
import javawrappers.java.math
import javawrappers.sun.security.util

from jpype.types import *
from typing import Union

from typing import overload

class CRLReasonCodeExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: Union[int, JBoolean], arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def getReasonCode(self, ) -> javawrappers.java.security.cert.CRLReason: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Integer: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class NetscapeCertTypeExtension:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: JArray(Union[int, JBoolean], 1), ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	class MapEntry:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getKeyUsageMappedBits(self, ) -> JArray(Union[int, JBoolean], 1): ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Boolean: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class RDN:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.AVA, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Map, ): ...
	@overload
	def __init__(self, arg0: JArray(javawrappers.sun.security.x509.AVA, 1), ): ...
	@overload
	def toRFC1779String(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toRFC1779String(self, arg0: javawrappers.java.util.Map, ) -> javawrappers.java.lang.String: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def size(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def avas(self, ) -> javawrappers.java.util.List: ...
	@overload
	def toRFC2253String(self, arg0: javawrappers.java.util.Map, ) -> javawrappers.java.lang.String: ...
	@overload
	def toRFC2253String(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toRFC2253String(self, arg0: Union[int, JBoolean], ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class X509CRLEntryImpl:
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.math.BigInteger, arg1: javawrappers.java.util.Date, arg2: javawrappers.sun.security.x509.CRLExtensions, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.math.BigInteger, arg1: javawrappers.java.util.Date, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getSerialNumber(self, ) -> javawrappers.java.math.BigInteger: ...
	def getExtension(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, ) -> javawrappers.sun.security.x509.Extension: ...
	def getEncoded(self, ) -> JArray(JByte, 1): ...
	def getCriticalExtensionOIDs(self, ) -> javawrappers.java.util.Set: ...
	def notifyAll(self, ) -> None: ...
	def hasUnsupportedCriticalExtension(self, ) -> Union[int, JBoolean]: ...
	def getNonCriticalExtensionOIDs(self, ) -> javawrappers.java.util.Set: ...
	@staticmethod
	def toImpl(arg0: javawrappers.java.security.cert.X509CRLEntry, ) -> javawrappers.sun.security.x509.X509CRLEntryImpl: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.sun.security.x509.X509CRLEntryImpl, ) -> Union[int, JInt]: ...
	def getReasonCode(self, ) -> javawrappers.java.lang.Integer: ...
	def getExtensions(self, ) -> javawrappers.java.util.Map: ...
	def notify(self, ) -> None: ...
	@overload
	@staticmethod
	def getRevocationReason(arg0: javawrappers.java.security.cert.X509CRLEntry, ) -> javawrappers.java.security.cert.CRLReason: ...
	@overload
	def getRevocationReason(self, ) -> javawrappers.java.security.cert.CRLReason: ...
	def hasExtensions(self, ) -> Union[int, JBoolean]: ...
	def getCertificateIssuer(self, ) -> javawrappers.javax.security.auth.x500.X500Principal: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getRevocationDate(self, ) -> javawrappers.java.util.Date: ...
	def getExtensionValue(self, arg0: javawrappers.java.lang.String, ) -> JArray(JByte, 1): ...


class AuthorityInfoAccessExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.util.List, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getAccessDescriptions(self, ) -> javawrappers.java.util.List: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class ExtendedKeyUsageExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.util.Vector, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Vector, ): ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def getExtendedKeyUsage(self, ) -> javawrappers.java.util.List: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Vector: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class ReasonFlags:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.BitArray, ): ...
	@overload
	def __init__(self, arg0: JArray(Union[int, JBoolean], 1), ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFlags(self, ) -> JArray(Union[int, JBoolean], 1): ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...


class CertificatePolicyMap:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.CertificatePolicyId, arg1: javawrappers.sun.security.x509.CertificatePolicyId, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getIssuerIdentifier(self, ) -> javawrappers.sun.security.x509.CertificatePolicyId: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getSubjectIdentifier(self, ) -> javawrappers.sun.security.x509.CertificatePolicyId: ...


class AccessDescription:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: javawrappers.sun.security.x509.GeneralName, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getAccessLocation(self, ) -> javawrappers.sun.security.x509.GeneralName: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAccessMethod(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class CRLExtensions:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	def encode(self, arg0: javawrappers.java.io.OutputStream, arg1: Union[int, JBoolean], ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def hasUnsupportedCriticalExtension(self, ) -> Union[int, JBoolean]: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getAllExtensions(self, ) -> javawrappers.java.util.Collection: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.x509.Extension: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class CertificateVersion:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.InputStream, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def compare(self, arg0: Union[int, JInt], ) -> Union[int, JInt]: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Integer: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class AlgorithmId:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: javawrappers.java.security.AlgorithmParameters, ): ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	@overload
	def encode(self, ) -> JArray(JByte, 1): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getDefaultSigAlgForKey(arg0: javawrappers.java.security.PrivateKey, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def parse(arg0: javawrappers.sun.security.util.DerValue, ) -> javawrappers.sun.security.x509.AlgorithmId: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def getEncAlgFromSigAlg(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def derEncode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.sun.security.x509.AlgorithmId, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def get(arg0: javawrappers.java.security.AlgorithmParameters, ) -> javawrappers.sun.security.x509.AlgorithmId: ...
	@overload
	@staticmethod
	def get(arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.x509.AlgorithmId: ...
	def getParameters(self, ) -> javawrappers.java.security.AlgorithmParameters: ...
	@staticmethod
	def checkKeyAndSigAlgMatch(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@staticmethod
	def makeSigAlg(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getOID(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	@staticmethod
	def getDigAlgFromSigAlg(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def getEncodedParams(self, ) -> JArray(JByte, 1): ...
	@staticmethod
	def getAlgorithmId(arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.x509.AlgorithmId: ...


class InhibitAnyPolicyExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Integer: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class CRLNumberExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.math.BigInteger, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.math.BigInteger: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class BasicConstraintsExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: Union[int, JBoolean], arg1: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: Union[int, JBoolean], arg2: Union[int, JInt], ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class SubjectAlternativeNameExtension:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.sun.security.x509.GeneralNames, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.GeneralNames, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.x509.GeneralNames: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class CRLDistributionPointsExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.List, ): ...
	@overload
	def __init__(self, arg0: Union[int, JBoolean], arg1: javawrappers.java.util.List, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class SubjectKeyIdentifierExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.x509.KeyIdentifier: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class IssuerAlternativeNameExtension:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.sun.security.x509.GeneralNames, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.GeneralNames, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.x509.GeneralNames: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class InvalidityDateExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: Union[int, JBoolean], arg1: javawrappers.java.util.Date, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Date, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def toImpl(arg0: javawrappers.java.security.cert.Extension, ) -> javawrappers.sun.security.x509.InvalidityDateExtension: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Date: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class PKIXExtensions:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class CertificateAlgorithmId:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.AlgorithmId, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.InputStream, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.x509.AlgorithmId: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...


class CertificateSubjectName:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.X500Name, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.InputStream, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...


class CertificateValidity:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Date, arg1: javawrappers.java.util.Date, ): ...
	@overload
	def __init__(self, ): ...
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	@overload
	def valid(self, ) -> None: ...
	@overload
	def valid(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Date: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class X509Key:
	def __init__(self, ): ...
	@overload
	def encode(self, ) -> JArray(JByte, 1): ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getEncodedInternal(self, ) -> JArray(JByte, 1): ...
	def getEncoded(self, ) -> JArray(JByte, 1): ...
	def notifyAll(self, ) -> None: ...
	def getAlgorithm(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def parse(arg0: javawrappers.sun.security.util.DerValue, ) -> javawrappers.java.security.PublicKey: ...
	@overload
	def decode(self, arg0: javawrappers.java.io.InputStream, ) -> None: ...
	@overload
	def decode(self, arg0: JArray(JByte, 1), ) -> None: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFormat(self, ) -> javawrappers.java.lang.String: ...
	def getAlgorithmId(self, ) -> javawrappers.sun.security.x509.AlgorithmId: ...


class CertificateSerialNumber:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.InputStream, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.math.BigInteger, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.x509.SerialNumber: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...


class KeyUsageExtension:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.BitArray, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: JArray(Union[int, JBoolean], 1), ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getBits(self, ) -> JArray(Union[int, JBoolean], 1): ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Boolean: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class GeneralSubtrees:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	def reduce(self, arg0: javawrappers.sun.security.x509.GeneralSubtrees, ) -> None: ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def add(self, arg0: javawrappers.sun.security.x509.GeneralSubtree, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def intersect(self, arg0: javawrappers.sun.security.x509.GeneralSubtrees, ) -> javawrappers.sun.security.x509.GeneralSubtrees: ...
	def notifyAll(self, ) -> None: ...
	def union(self, arg0: javawrappers.sun.security.x509.GeneralSubtrees, ) -> None: ...
	def trees(self, ) -> javawrappers.java.util.List: ...
	def notify(self, ) -> None: ...
	def remove(self, arg0: Union[int, JInt], ) -> None: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def contains(self, arg0: javawrappers.sun.security.x509.GeneralSubtree, ) -> Union[int, JBoolean]: ...
	def size(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def get(self, arg0: Union[int, JInt], ) -> javawrappers.sun.security.x509.GeneralSubtree: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class SubjectInfoAccessExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.util.List, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getAccessDescriptions(self, ) -> javawrappers.java.util.List: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class SerialNumber:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.InputStream, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.math.BigInteger, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getNumber(self, ) -> javawrappers.java.math.BigInteger: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class OCSPNoCheckExtension:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class DNSName:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def subtreeDepth(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getType(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def constrains(self, arg0: javawrappers.sun.security.x509.GeneralNameInterface, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...


class PolicyMappingsExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.List, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class X509CertImpl:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.X509CertInfo, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.InputStream, ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def getSubjectX500Principal(self, ) -> javawrappers.javax.security.auth.x500.X500Principal: ...
	@overload
	@staticmethod
	def getSubjectX500Principal(arg0: javawrappers.java.security.cert.X509Certificate, ) -> javawrappers.javax.security.auth.x500.X500Principal: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getIssuerUniqueID(self, ) -> JArray(Union[int, JBoolean], 1): ...
	def getIssuerDN(self, ) -> javawrappers.java.security.Principal: ...
	@overload
	def sign(self, arg0: javawrappers.java.security.PrivateKey, arg1: javawrappers.java.security.spec.AlgorithmParameterSpec, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def sign(self, arg0: javawrappers.java.security.PrivateKey, arg1: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def sign(self, arg0: javawrappers.java.security.PrivateKey, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@staticmethod
	def toImpl(arg0: javawrappers.java.security.cert.X509Certificate, ) -> javawrappers.sun.security.x509.X509CertImpl: ...
	def getPrivateKeyUsageExtension(self, ) -> javawrappers.sun.security.x509.PrivateKeyUsageExtension: ...
	@overload
	def getIssuerX500Principal(self, ) -> javawrappers.javax.security.auth.x500.X500Principal: ...
	@overload
	@staticmethod
	def getIssuerX500Principal(arg0: javawrappers.java.security.cert.X509Certificate, ) -> javawrappers.javax.security.auth.x500.X500Principal: ...
	def getBasicConstraints(self, ) -> Union[int, JInt]: ...
	def derEncode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	@staticmethod
	def getIssuerAlternativeNames(arg0: javawrappers.java.security.cert.X509Certificate, ) -> javawrappers.java.util.Collection: ...
	@overload
	def getIssuerAlternativeNames(self, ) -> javawrappers.java.util.Collection: ...
	def getPolicyConstraintsExtension(self, ) -> javawrappers.sun.security.x509.PolicyConstraintsExtension: ...
	def getNotAfter(self, ) -> javawrappers.java.util.Date: ...
	def getExtendedKeyUsageExtension(self, ) -> javawrappers.sun.security.x509.ExtendedKeyUsageExtension: ...
	def getSerialNumber(self, ) -> javawrappers.java.math.BigInteger: ...
	def getEncoded(self, ) -> JArray(JByte, 1): ...
	def hasUnsupportedCriticalExtension(self, ) -> Union[int, JBoolean]: ...
	def getSubjectAlternativeNameExtension(self, ) -> javawrappers.sun.security.x509.SubjectAlternativeNameExtension: ...
	@overload
	@staticmethod
	def getExtendedKeyUsage(arg0: javawrappers.java.security.cert.X509Certificate, ) -> javawrappers.java.util.List: ...
	@overload
	def getExtendedKeyUsage(self, ) -> javawrappers.java.util.List: ...
	def getPublicKey(self, ) -> javawrappers.java.security.PublicKey: ...
	def getCertificatePoliciesExtension(self, ) -> javawrappers.sun.security.x509.CertificatePoliciesExtension: ...
	def getType(self, ) -> javawrappers.java.lang.String: ...
	def getSubjectUniqueID(self, ) -> JArray(Union[int, JBoolean], 1): ...
	def getNameConstraintsExtension(self, ) -> javawrappers.sun.security.x509.NameConstraintsExtension: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getUnparseableExtension(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, ) -> javawrappers.sun.security.x509.Extension: ...
	def getCRLDistributionPointsExtension(self, ) -> javawrappers.sun.security.x509.CRLDistributionPointsExtension: ...
	def getSigAlgOID(self, ) -> javawrappers.java.lang.String: ...
	def getAuthKeyId(self, ) -> javawrappers.sun.security.x509.KeyIdentifier: ...
	def getExtensionValue(self, arg0: javawrappers.java.lang.String, ) -> JArray(JByte, 1): ...
	def getAuthorityKeyIdentifierExtension(self, ) -> javawrappers.sun.security.x509.AuthorityKeyIdentifierExtension: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getPolicyMappingsExtension(self, ) -> javawrappers.sun.security.x509.PolicyMappingsExtension: ...
	def getCriticalExtensionOIDs(self, ) -> javawrappers.java.util.Set: ...
	def notifyAll(self, ) -> None: ...
	def getTBSCertificate(self, ) -> JArray(JByte, 1): ...
	def getNonCriticalExtensionOIDs(self, ) -> javawrappers.java.util.Set: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getSigAlgParams(self, ) -> JArray(JByte, 1): ...
	def notify(self, ) -> None: ...
	@overload
	def getSubjectAlternativeNames(self, ) -> javawrappers.java.util.Collection: ...
	@overload
	@staticmethod
	def getSubjectAlternativeNames(arg0: javawrappers.java.security.cert.X509Certificate, ) -> javawrappers.java.util.Collection: ...
	def getBasicConstraintsExtension(self, ) -> javawrappers.sun.security.x509.BasicConstraintsExtension: ...
	def getKeyUsage(self, ) -> JArray(Union[int, JBoolean], 1): ...
	def getSigAlgName(self, ) -> javawrappers.java.lang.String: ...
	def getNotBefore(self, ) -> javawrappers.java.util.Date: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getSubjectDN(self, ) -> javawrappers.java.security.Principal: ...
	def getAuthorityInfoAccessExtension(self, ) -> javawrappers.sun.security.x509.AuthorityInfoAccessExtension: ...
	@overload
	def verify(self, arg0: javawrappers.java.security.PublicKey, ) -> None: ...
	@overload
	def verify(self, arg0: javawrappers.java.security.PublicKey, arg1: javawrappers.java.security.Provider, ) -> None: ...
	@overload
	def verify(self, arg0: javawrappers.java.security.PublicKey, arg1: javawrappers.java.lang.String, ) -> None: ...
	@staticmethod
	def isSelfIssued(arg0: javawrappers.java.security.cert.X509Certificate, ) -> Union[int, JBoolean]: ...
	def getSubjectKeyId(self, ) -> javawrappers.sun.security.x509.KeyIdentifier: ...
	def getVersion(self, ) -> Union[int, JInt]: ...
	@overload
	def getEncodedInternal(self, ) -> JArray(JByte, 1): ...
	@overload
	@staticmethod
	def getEncodedInternal(arg0: javawrappers.java.security.cert.Certificate, ) -> JArray(JByte, 1): ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getExtension(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, ) -> javawrappers.sun.security.x509.Extension: ...
	def getSignature(self, ) -> JArray(JByte, 1): ...
	@overload
	def checkValidity(self, ) -> None: ...
	@overload
	def checkValidity(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	@staticmethod
	def isSelfSigned(arg0: javawrappers.java.security.cert.X509Certificate, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getIssuerAlternativeNameExtension(self, ) -> javawrappers.sun.security.x509.IssuerAlternativeNameExtension: ...
	def getSubjectKeyIdentifierExtension(self, ) -> javawrappers.sun.security.x509.SubjectKeyIdentifierExtension: ...
	@overload
	def getFingerprint(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	@staticmethod
	def getFingerprint(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.security.cert.X509Certificate, ) -> javawrappers.java.lang.String: ...
	def getSerialNumberObject(self, ) -> javawrappers.sun.security.x509.SerialNumber: ...


class X509CertInfo:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getEncodedInfo(self, ) -> JArray(JByte, 1): ...
	def notifyAll(self, ) -> None: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.sun.security.x509.X509CertInfo, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class X400Address:
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def subtreeDepth(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getType(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def constrains(self, arg0: javawrappers.sun.security.x509.GeneralNameInterface, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...


class UniqueIdentity:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.BitArray, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, arg1: JByte, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getId(self, ) -> JArray(Union[int, JBoolean], 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class CertificateX509Key:
	@overload
	def __init__(self, arg0: javawrappers.java.security.PublicKey, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.InputStream, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.security.PublicKey: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...


class AVA:
	def __init__(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: javawrappers.sun.security.util.DerValue, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getValueString(self, ) -> javawrappers.java.lang.String: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDerValue(self, ) -> javawrappers.sun.security.util.DerValue: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def toRFC2253String(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toRFC2253String(self, arg0: javawrappers.java.util.Map, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	@overload
	def toRFC1779String(self, arg0: javawrappers.java.util.Map, ) -> javawrappers.java.lang.String: ...
	@overload
	def toRFC1779String(self, ) -> javawrappers.java.lang.String: ...
	def derEncode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getObjectIdentifier(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toRFC2253CanonicalString(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class X509AttributeName:
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getSuffix(self, ) -> javawrappers.java.lang.String: ...
	def getPrefix(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class IPAddressName:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def subtreeDepth(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getType(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def constrains(self, arg0: javawrappers.sun.security.x509.GeneralNameInterface, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def getBytes(self, ) -> JArray(JByte, 1): ...


class CertificatePoliciesExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.util.List, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.List, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class AttributeNameEnumeration:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def firstElement(self, ) -> javawrappers.java.lang.Object: ...
	def replaceAll(self, arg0: javawrappers.java.util.function.UnaryOperator, ) -> None: ...
	def notify(self, ) -> None: ...
	@overload
	def remove(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	@overload
	def remove(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def capacity(self, ) -> Union[int, JInt]: ...
	def removeAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def setSize(self, arg0: Union[int, JInt], ) -> None: ...
	def stream(self, ) -> javawrappers.java.util.stream.Stream: ...
	def setElementAt(self, arg0: javawrappers.java.lang.Object, arg1: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def get(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	@overload
	def toArray(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def toArray(self, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	@overload
	def toArray(self, arg0: javawrappers.java.util.function.IntFunction, ) -> JArray(javawrappers.java.lang.Object, 1): ...
	def elementAt(self, arg0: Union[int, JInt], ) -> javawrappers.java.lang.Object: ...
	def removeElementAt(self, arg0: Union[int, JInt], ) -> None: ...
	def parallelStream(self, ) -> javawrappers.java.util.stream.Stream: ...
	@overload
	def indexOf(self, arg0: javawrappers.java.lang.Object, arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	@overload
	def indexOf(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def removeAllElements(self, ) -> None: ...
	@overload
	def add(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Object, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def subList(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> javawrappers.java.util.List: ...
	def trimToSize(self, ) -> None: ...
	def set(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.Object, ) -> javawrappers.java.lang.Object: ...
	def spliterator(self, ) -> javawrappers.java.util.Spliterator: ...
	def forEach(self, arg0: javawrappers.java.util.function.Consumer, ) -> None: ...
	def containsAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
	def copyInto(self, arg0: JArray(javawrappers.java.lang.Object, 1), ) -> None: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def clear(self, ) -> None: ...
	def sort(self, arg0: javawrappers.java.util.Comparator, ) -> None: ...
	def removeIf(self, arg0: javawrappers.java.util.function.Predicate, ) -> Union[int, JBoolean]: ...
	@overload
	def lastIndexOf(self, arg0: javawrappers.java.lang.Object, arg1: Union[int, JInt], ) -> Union[int, JInt]: ...
	@overload
	def lastIndexOf(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def contains(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def insertElementAt(self, arg0: javawrappers.java.lang.Object, arg1: Union[int, JInt], ) -> None: ...
	def size(self, ) -> Union[int, JInt]: ...
	@overload
	def addAll(self, arg0: Union[int, JInt], arg1: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
	@overload
	def addAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...
	def elements(self, ) -> javawrappers.java.util.Enumeration: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def lastElement(self, ) -> javawrappers.java.lang.Object: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def listIterator(self, ) -> javawrappers.java.util.ListIterator: ...
	@overload
	def listIterator(self, arg0: Union[int, JInt], ) -> javawrappers.java.util.ListIterator: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def ensureCapacity(self, arg0: Union[int, JInt], ) -> None: ...
	def addElement(self, arg0: javawrappers.java.lang.Object, ) -> None: ...
	def removeElement(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def retainAll(self, arg0: javawrappers.java.util.Collection, ) -> Union[int, JBoolean]: ...


class CertAttrSet:
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...


class CertificateIssuerExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.GeneralNames, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.x509.GeneralNames: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class PrivateKeyUsageExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.util.Date, arg1: javawrappers.java.util.Date, ): ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	@overload
	def valid(self, ) -> None: ...
	@overload
	def valid(self, arg0: javawrappers.java.util.Date, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Date: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class AlgIdDSA:
	@overload
	def __init__(self, arg0: JArray(JByte, 1), arg1: JArray(JByte, 1), arg2: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.math.BigInteger, arg1: javawrappers.java.math.BigInteger, arg2: javawrappers.java.math.BigInteger, ): ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	@overload
	def encode(self, ) -> JArray(JByte, 1): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getG(self, ) -> javawrappers.java.math.BigInteger: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def getDefaultSigAlgForKey(arg0: javawrappers.java.security.PrivateKey, ) -> javawrappers.java.lang.String: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getP(self, ) -> javawrappers.java.math.BigInteger: ...
	@staticmethod
	def parse(arg0: javawrappers.sun.security.util.DerValue, ) -> javawrappers.sun.security.x509.AlgorithmId: ...
	def getQ(self, ) -> javawrappers.java.math.BigInteger: ...
	def notify(self, ) -> None: ...
	@staticmethod
	def getEncAlgFromSigAlg(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def derEncode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.sun.security.x509.AlgorithmId, ) -> Union[int, JBoolean]: ...
	@overload
	@staticmethod
	def get(arg0: javawrappers.java.security.AlgorithmParameters, ) -> javawrappers.sun.security.x509.AlgorithmId: ...
	@overload
	@staticmethod
	def get(arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.x509.AlgorithmId: ...
	def getParameters(self, ) -> javawrappers.java.security.AlgorithmParameters: ...
	@staticmethod
	def checkKeyAndSigAlgMatch(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> None: ...
	@staticmethod
	def makeSigAlg(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getOID(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	@staticmethod
	def getDigAlgFromSigAlg(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def getEncodedParams(self, ) -> JArray(JByte, 1): ...
	@staticmethod
	def getAlgorithmId(arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.x509.AlgorithmId: ...


class DistributionPointName:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.GeneralNames, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.RDN, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getRelativeName(self, ) -> javawrappers.sun.security.x509.RDN: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getFullName(self, ) -> javawrappers.sun.security.x509.GeneralNames: ...
	def notify(self, ) -> None: ...


class CertificateExtensions:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, arg1: Union[int, JBoolean], ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def hasUnsupportedCriticalExtension(self, ) -> Union[int, JBoolean]: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getUnparseableExtensions(self, ) -> javawrappers.java.util.Map: ...
	def getNameByOid(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, ) -> javawrappers.java.lang.String: ...
	def getAllExtensions(self, ) -> javawrappers.java.util.Collection: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.x509.Extension: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class OtherName:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def subtreeDepth(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getNameValue(self, ) -> JArray(JByte, 1): ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getType(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def constrains(self, arg0: javawrappers.sun.security.x509.GeneralNameInterface, ) -> Union[int, JInt]: ...
	def getOID(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def notify(self, ) -> None: ...


class URIName:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	@staticmethod
	def nameConstraint(arg0: javawrappers.sun.security.util.DerValue, ) -> javawrappers.sun.security.x509.URIName: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getScheme(self, ) -> javawrappers.java.lang.String: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def subtreeDepth(self, ) -> Union[int, JInt]: ...
	def getType(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def constrains(self, arg0: javawrappers.sun.security.x509.GeneralNameInterface, ) -> Union[int, JInt]: ...
	def getHost(self, ) -> javawrappers.java.lang.String: ...
	def getURI(self, ) -> javawrappers.java.net.URI: ...
	def getHostObject(self, ) -> javawrappers.java.lang.Object: ...


class CertificatePolicyId:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifier(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class OIDName:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def subtreeDepth(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getType(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def constrains(self, arg0: javawrappers.sun.security.x509.GeneralNameInterface, ) -> Union[int, JInt]: ...
	def getOID(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def notify(self, ) -> None: ...


class KeyIdentifier:
	@overload
	def __init__(self, arg0: javawrappers.java.security.PublicKey, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getIdentifier(self, ) -> JArray(JByte, 1): ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class DistributionPoint:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.GeneralNames, arg1: JArray(Union[int, JBoolean], 1), arg2: javawrappers.sun.security.x509.GeneralNames, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.RDN, arg1: JArray(Union[int, JBoolean], 1), arg2: javawrappers.sun.security.x509.GeneralNames, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getRelativeName(self, ) -> javawrappers.sun.security.x509.RDN: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getCRLIssuer(self, ) -> javawrappers.sun.security.x509.GeneralNames: ...
	def getFullName(self, ) -> javawrappers.sun.security.x509.GeneralNames: ...
	def notify(self, ) -> None: ...
	def getReasonFlags(self, ) -> JArray(Union[int, JBoolean], 1): ...


class EDIPartyName:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def subtreeDepth(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAssignerName(self, ) -> javawrappers.java.lang.String: ...
	def getType(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def constrains(self, arg0: javawrappers.sun.security.x509.GeneralNameInterface, ) -> Union[int, JInt]: ...
	def getPartyName(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class Extension:
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.Extension, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class OIDMap:
	class OIDInfo:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...


	@overload
	@staticmethod
	def getClass(arg0: javawrappers.sun.security.util.ObjectIdentifier, ) -> javawrappers.java.lang.Class: ...
	@overload
	@staticmethod
	def getClass(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Class: ...
	@overload
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def getName(arg0: javawrappers.sun.security.util.ObjectIdentifier, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def addAttribute(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.Class, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getOID(arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def notify(self, ) -> None: ...


class GeneralName:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, arg1: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.GeneralNameInterface, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.sun.security.x509.GeneralNameInterface: ...
	def getType(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class GeneralSubtree:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.GeneralName, arg1: Union[int, JInt], arg2: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.sun.security.x509.GeneralName: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getMinimum(self, ) -> Union[int, JInt]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getMaximum(self, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...


class IssuingDistributionPointExtension:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.DistributionPointName, arg1: javawrappers.sun.security.x509.ReasonFlags, arg2: Union[int, JBoolean], arg3: Union[int, JBoolean], arg4: Union[int, JBoolean], arg5: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class GeneralNames:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def add(self, arg0: javawrappers.sun.security.x509.GeneralName, ) -> javawrappers.sun.security.x509.GeneralNames: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...
	def iterator(self, ) -> javawrappers.java.util.Iterator: ...
	def names(self, ) -> javawrappers.java.util.List: ...
	def size(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def get(self, arg0: Union[int, JInt], ) -> javawrappers.sun.security.x509.GeneralName: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class PolicyInformation:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.CertificatePolicyId, arg1: javawrappers.java.util.Set, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getPolicyQualifiers(self, ) -> javawrappers.java.util.Set: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getPolicyIdentifier(self, ) -> javawrappers.sun.security.x509.CertificatePolicyId: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...


class PolicyConstraintsExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: Union[int, JInt], arg2: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Integer: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class GeneralNameInterface:
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def subtreeDepth(self, ) -> Union[int, JInt]: ...
	def getType(self, ) -> Union[int, JInt]: ...
	def constrains(self, arg0: javawrappers.sun.security.x509.GeneralNameInterface, ) -> Union[int, JInt]: ...


class X500Name:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: JArray(javawrappers.sun.security.x509.RDN, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, arg3: javawrappers.java.lang.String, arg4: javawrappers.java.lang.String, arg5: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.util.Map, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	@overload
	def getRFC2253Name(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getRFC2253Name(self, arg0: javawrappers.java.util.Map, ) -> javawrappers.java.lang.String: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getOrganizationalUnit(self, ) -> javawrappers.java.lang.String: ...
	def getRFC2253CanonicalName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def rdns(self, ) -> javawrappers.java.util.List: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getCountry(self, ) -> javawrappers.java.lang.String: ...
	def getInitials(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def notify(self, ) -> None: ...
	def getGivenName(self, ) -> javawrappers.java.lang.String: ...
	def subtreeDepth(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def getCommonName(self, ) -> javawrappers.java.lang.String: ...
	def getOrganization(self, ) -> javawrappers.java.lang.String: ...
	def findMostSpecificAttribute(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, ) -> javawrappers.sun.security.util.DerValue: ...
	def getEncodedInternal(self, ) -> JArray(JByte, 1): ...
	def getEncoded(self, ) -> JArray(JByte, 1): ...
	def getIP(self, ) -> javawrappers.java.lang.String: ...
	def isEmpty(self, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def asX500Name(arg0: javawrappers.javax.security.auth.x500.X500Principal, ) -> javawrappers.sun.security.x509.X500Name: ...
	def getDomain(self, ) -> javawrappers.java.lang.String: ...
	def allAvas(self, ) -> javawrappers.java.util.List: ...
	def asX500Principal(self, ) -> javawrappers.javax.security.auth.x500.X500Principal: ...
	@overload
	def getRFC1779Name(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def getRFC1779Name(self, arg0: javawrappers.java.util.Map, ) -> javawrappers.java.lang.String: ...
	def getState(self, ) -> javawrappers.java.lang.String: ...
	def size(self, ) -> Union[int, JInt]: ...
	def getType(self, ) -> Union[int, JInt]: ...
	def getDNQualifier(self, ) -> javawrappers.java.lang.String: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getGeneration(self, ) -> javawrappers.java.lang.String: ...
	def commonAncestor(self, arg0: javawrappers.sun.security.x509.X500Name, ) -> javawrappers.sun.security.x509.X500Name: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def constrains(self, arg0: javawrappers.sun.security.x509.GeneralNameInterface, ) -> Union[int, JInt]: ...
	def avaSize(self, ) -> Union[int, JInt]: ...
	def implies(self, arg0: javawrappers.javax.security.auth.Subject, ) -> Union[int, JBoolean]: ...
	def emit(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getSurname(self, ) -> javawrappers.java.lang.String: ...
	def getLocality(self, ) -> javawrappers.java.lang.String: ...


class CertificateIssuerName:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.X500Name, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.InputStream, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...


class CertException:
	@overload
	def __init__(self, arg0: Union[int, JInt], arg1: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintStream, ) -> None: ...
	@overload
	def printStackTrace(self, ) -> None: ...
	@overload
	def printStackTrace(self, arg0: javawrappers.java.io.PrintWriter, ) -> None: ...
	def getLocalizedMessage(self, ) -> javawrappers.java.lang.String: ...
	def getVerfDescription(self, ) -> javawrappers.java.lang.String: ...
	def getVerfCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def initCause(self, arg0: javawrappers.java.lang.Throwable, ) -> javawrappers.java.lang.Throwable: ...
	def getMessage(self, ) -> javawrappers.java.lang.String: ...
	def getCause(self, ) -> javawrappers.java.lang.Throwable: ...
	def notify(self, ) -> None: ...
	def getMoreData(self, ) -> javawrappers.java.lang.String: ...
	def addSuppressed(self, arg0: javawrappers.java.lang.Throwable, ) -> None: ...
	def setStackTrace(self, arg0: JArray(javawrappers.java.lang.StackTraceElement, 1), ) -> None: ...
	def getStackTrace(self, ) -> JArray(javawrappers.java.lang.StackTraceElement, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getSuppressed(self, ) -> JArray(javawrappers.java.lang.Throwable, 1): ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def fillInStackTrace(self, ) -> javawrappers.java.lang.Throwable: ...


class DeltaCRLIndicatorExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.math.BigInteger, ): ...
	@overload
	def __init__(self, arg0: Union[int, JInt], ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.math.BigInteger: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class X509CRLImpl:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.X500Name, arg1: javawrappers.java.util.Date, arg2: javawrappers.java.util.Date, arg3: JArray(javawrappers.java.security.cert.X509CRLEntry, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.io.InputStream, ): ...
	@overload
	def __init__(self, arg0: JArray(JByte, 1), ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.X500Name, arg1: javawrappers.java.util.Date, arg2: javawrappers.java.util.Date, arg3: JArray(javawrappers.java.security.cert.X509CRLEntry, 1), arg4: javawrappers.sun.security.x509.CRLExtensions, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.X500Name, arg1: javawrappers.java.util.Date, arg2: javawrappers.java.util.Date, ): ...
	class X509IssuerSerial:
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@overload
		def compareTo(self, arg0: javawrappers.sun.security.x509.X509CRLImpl.X509IssuerSerial, ) -> Union[int, JInt]: ...
		@overload
		def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
		def notify(self, ) -> None: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def encodeInfo(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getSigAlgId(self, ) -> javawrappers.sun.security.x509.AlgorithmId: ...
	def getCriticalExtensionOIDs(self, ) -> javawrappers.java.util.Set: ...
	def getIssuerDN(self, ) -> javawrappers.java.security.Principal: ...
	@overload
	def getRevokedCertificate(self, arg0: javawrappers.java.math.BigInteger, ) -> javawrappers.java.security.cert.X509CRLEntry: ...
	@overload
	def getRevokedCertificate(self, arg0: javawrappers.java.security.cert.X509Certificate, ) -> javawrappers.java.security.cert.X509CRLEntry: ...
	def getNextUpdate(self, ) -> javawrappers.java.util.Date: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def sign(self, arg0: javawrappers.java.security.PrivateKey, arg1: javawrappers.java.lang.String, arg2: javawrappers.java.lang.String, ) -> None: ...
	@overload
	def sign(self, arg0: javawrappers.java.security.PrivateKey, arg1: javawrappers.java.lang.String, ) -> None: ...
	def getNonCriticalExtensionOIDs(self, ) -> javawrappers.java.util.Set: ...
	@staticmethod
	def toImpl(arg0: javawrappers.java.security.cert.X509CRL, ) -> javawrappers.sun.security.x509.X509CRLImpl: ...
	@overload
	def compareTo(self, arg0: javawrappers.sun.security.x509.X509CRLImpl.X509IssuerSerial, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	def getCRLNumber(self, ) -> javawrappers.java.math.BigInteger: ...
	def getSigAlgParams(self, ) -> JArray(JByte, 1): ...
	def notify(self, ) -> None: ...
	def isRevoked(self, arg0: javawrappers.java.security.cert.Certificate, ) -> Union[int, JBoolean]: ...
	def getBaseCRLNumber(self, ) -> javawrappers.java.math.BigInteger: ...
	def getCRLNumberExtension(self, ) -> javawrappers.sun.security.x509.CRLNumberExtension: ...
	@overload
	def getIssuerX500Principal(self, ) -> javawrappers.javax.security.auth.x500.X500Principal: ...
	@overload
	@staticmethod
	def getIssuerX500Principal(arg0: javawrappers.java.security.cert.X509CRL, ) -> javawrappers.javax.security.auth.x500.X500Principal: ...
	def derEncode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	def getSigAlgName(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def verify(self, arg0: javawrappers.java.security.PublicKey, ) -> None: ...
	@overload
	def verify(self, arg0: javawrappers.java.security.PublicKey, arg1: javawrappers.java.security.Provider, ) -> None: ...
	@overload
	def verify(self, arg0: javawrappers.java.security.PublicKey, arg1: javawrappers.java.lang.String, ) -> None: ...
	def getIssuerAltNameExtension(self, ) -> javawrappers.sun.security.x509.IssuerAlternativeNameExtension: ...
	def getVersion(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def getEncodedInternal(arg0: javawrappers.java.security.cert.X509CRL, ) -> JArray(JByte, 1): ...
	@overload
	def getEncodedInternal(self, ) -> JArray(JByte, 1): ...
	def getDeltaCRLIndicatorExtension(self, ) -> javawrappers.sun.security.x509.DeltaCRLIndicatorExtension: ...
	def getExtension(self, arg0: javawrappers.sun.security.util.ObjectIdentifier, ) -> javawrappers.java.lang.Object: ...
	def getIssuingDistributionPointExtension(self, ) -> javawrappers.sun.security.x509.IssuingDistributionPointExtension: ...
	def getRevokedCertificates(self, ) -> javawrappers.java.util.Set: ...
	def getEncoded(self, ) -> JArray(JByte, 1): ...
	def hasUnsupportedCriticalExtension(self, ) -> Union[int, JBoolean]: ...
	def getSignature(self, ) -> JArray(JByte, 1): ...
	def toStringWithAlgName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def getType(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getTBSCertList(self, ) -> JArray(JByte, 1): ...
	def getAuthKeyIdExtension(self, ) -> javawrappers.sun.security.x509.AuthorityKeyIdentifierExtension: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getSigAlgOID(self, ) -> javawrappers.java.lang.String: ...
	def getAuthKeyId(self, ) -> javawrappers.sun.security.x509.KeyIdentifier: ...
	def getExtensionValue(self, arg0: javawrappers.java.lang.String, ) -> JArray(JByte, 1): ...
	def getThisUpdate(self, ) -> javawrappers.java.util.Date: ...


class AuthorityKeyIdentifierExtension:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.KeyIdentifier, arg1: javawrappers.sun.security.x509.GeneralNames, arg2: javawrappers.sun.security.x509.SerialNumber, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getEncodedKeyIdentifier(self, ) -> JArray(JByte, 1): ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class CertificatePolicySet:
	@overload
	def __init__(self, arg0: javawrappers.java.util.Vector, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerInputStream, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getCertPolicyIds(self, ) -> javawrappers.java.util.List: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class NameConstraintsExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def __init__(self, arg0: javawrappers.sun.security.x509.GeneralSubtrees, arg1: javawrappers.sun.security.x509.GeneralSubtrees, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def merge(self, arg0: javawrappers.sun.security.x509.NameConstraintsExtension, ) -> None: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.sun.security.x509.GeneralSubtrees: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	@overload
	def verify(self, arg0: javawrappers.sun.security.x509.GeneralNameInterface, ) -> Union[int, JBoolean]: ...
	@overload
	def verify(self, arg0: javawrappers.java.security.cert.X509Certificate, ) -> Union[int, JBoolean]: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


class RFC822Name:
	@overload
	def __init__(self, arg0: javawrappers.sun.security.util.DerValue, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.String, ): ...
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def subtreeDepth(self, ) -> Union[int, JInt]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def parseName(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def getType(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def constrains(self, arg0: javawrappers.sun.security.x509.GeneralNameInterface, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...


class FreshestCRLExtension:
	@overload
	def __init__(self, arg0: javawrappers.java.util.List, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Boolean, arg1: javawrappers.java.lang.Object, ): ...
	@overload
	def encode(self, arg0: javawrappers.java.io.OutputStream, ) -> None: ...
	@overload
	def encode(self, arg0: javawrappers.sun.security.util.DerOutputStream, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def set(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.Object, ) -> None: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def notifyAll(self, ) -> None: ...
	def getId(self, ) -> javawrappers.java.lang.String: ...
	def delete(self, arg0: javawrappers.java.lang.String, ) -> None: ...
	def notify(self, ) -> None: ...
	def getValue(self, ) -> JArray(JByte, 1): ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	@overload
	def get(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Object: ...
	def getElements(self, ) -> javawrappers.java.util.Enumeration: ...
	def getExtensionId(self, ) -> javawrappers.sun.security.util.ObjectIdentifier: ...
	def isCritical(self, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def newExtension(arg0: javawrappers.sun.security.util.ObjectIdentifier, arg1: Union[int, JBoolean], arg2: JArray(JByte, 1), ) -> javawrappers.sun.security.x509.Extension: ...
	def getExtensionValue(self, ) -> JArray(JByte, 1): ...


