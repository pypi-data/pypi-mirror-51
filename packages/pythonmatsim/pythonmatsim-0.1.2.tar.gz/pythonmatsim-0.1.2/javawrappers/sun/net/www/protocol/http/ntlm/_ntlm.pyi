################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.sun.net.www.protocol.http.ntlm
import javawrappers.java.lang
import javawrappers.java.net
import javawrappers.sun.net.www.protocol.http
import javawrappers.sun.net.www

from jpype.types import *
from typing import Union

from typing import overload

class NTLMAuthenticationCallback:
	def __init__(self, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def setNTLMAuthenticationCallback(arg0: javawrappers.sun.net.www.protocol.http.ntlm.NTLMAuthenticationCallback, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def isTrustedSite(self, arg0: javawrappers.java.net.URL, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def getNTLMAuthenticationCallback() -> javawrappers.sun.net.www.protocol.http.ntlm.NTLMAuthenticationCallback: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class NTLMAuthentication:
	@overload
	def __init__(self, arg0: Union[int, JBoolean], arg1: javawrappers.java.net.URL, arg2: javawrappers.java.net.PasswordAuthentication, arg3: javawrappers.java.lang.String, ): ...
	@overload
	def __init__(self, arg0: Union[int, JBoolean], arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], arg3: javawrappers.java.net.PasswordAuthentication, arg4: javawrappers.java.lang.String, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getAuthType(self, ) -> javawrappers.sun.net.www.protocol.http.AuthCacheValue.Type: ...
	def setHeaders(self, arg0: javawrappers.sun.net.www.protocol.http.HttpURLConnection, arg1: javawrappers.sun.net.www.HeaderParser, arg2: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def getAuthenticatorKey(self, ) -> javawrappers.java.lang.String: ...
	def credentials(self, ) -> javawrappers.java.net.PasswordAuthentication: ...
	def notifyAll(self, ) -> None: ...
	@staticmethod
	def supportsTransparentAuth() -> Union[int, JBoolean]: ...
	def getProtocolScheme(self, ) -> javawrappers.java.lang.String: ...
	def getRealm(self, ) -> javawrappers.java.lang.String: ...
	def getHeaderValue(self, arg0: javawrappers.java.net.URL, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def getHeaderName(self, ) -> javawrappers.java.lang.String: ...
	def supportsPreemptiveAuthorization(self, ) -> Union[int, JBoolean]: ...
	def getPort(self, ) -> Union[int, JInt]: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def getPath(self, ) -> javawrappers.java.lang.String: ...
	def clone(self, ) -> javawrappers.java.lang.Object: ...
	@staticmethod
	def isTrustedSite(arg0: javawrappers.java.net.URL, ) -> Union[int, JBoolean]: ...
	def isAuthorizationStale(self, arg0: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def setAuthCache(arg0: javawrappers.sun.net.www.protocol.http.AuthCache, ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getHost(self, ) -> javawrappers.java.lang.String: ...


