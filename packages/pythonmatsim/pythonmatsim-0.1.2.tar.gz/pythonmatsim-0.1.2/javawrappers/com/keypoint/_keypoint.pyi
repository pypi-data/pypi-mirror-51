################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.awt
import javawrappers.java.lang

from jpype.types import *
from typing import Union

from typing import overload

class PngEncoder:
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Image, ): ...
	@overload
	def __init__(self, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JBoolean], arg2: Union[int, JInt], ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.awt.Image, arg1: Union[int, JBoolean], arg2: Union[int, JInt], arg3: Union[int, JInt], ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def setEncodeAlpha(self, arg0: Union[int, JBoolean], ) -> None: ...
	def notify(self, ) -> None: ...
	def getCompressionLevel(self, ) -> Union[int, JInt]: ...
	def setFilter(self, arg0: Union[int, JInt], ) -> None: ...
	def getFilter(self, ) -> Union[int, JInt]: ...
	@overload
	def pngEncode(self, ) -> JArray(JByte, 1): ...
	@overload
	def pngEncode(self, arg0: Union[int, JBoolean], ) -> JArray(JByte, 1): ...
	def setYDpi(self, arg0: Union[int, JInt], ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def setXDpi(self, arg0: Union[int, JInt], ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def setCompressionLevel(self, arg0: Union[int, JInt], ) -> None: ...
	def setDpi(self, arg0: Union[int, JInt], arg1: Union[int, JInt], ) -> None: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def getEncodeAlpha(self, ) -> Union[int, JBoolean]: ...
	def getXDpi(self, ) -> Union[int, JInt]: ...
	def getYDpi(self, ) -> Union[int, JInt]: ...
	def getImage(self, ) -> javawrappers.java.awt.Image: ...
	def setImage(self, arg0: javawrappers.java.awt.Image, ) -> None: ...


