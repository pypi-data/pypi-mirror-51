################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.com.sun.xml.txw2.output
import javawrappers.java.lang
import javawrappers.javax.xml.namespace
import javawrappers.com.sun.xml.bind.api
import javawrappers.com.sun.xml.bind.v2.schemagen.xmlschema
import javawrappers.com.sun.xml.bind.v2.model.core
import javawrappers.javax.xml.bind

from jpype.types import *
from typing import Union

from typing import overload

class XmlSchemaGenerator:
	def __init__(self, arg0: javawrappers.com.sun.xml.bind.v2.model.nav.Navigator, arg1: javawrappers.com.sun.xml.bind.v2.model.core.TypeInfoSet, ): ...
	class Namespace:
		def __init__(self, arg0: javawrappers.com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator, arg1: javawrappers.java.lang.String, ): ...
		class ElementWithType:
			def __init__(self, arg0: javawrappers.com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator.Namespace, arg1: Union[int, JBoolean], arg2: javawrappers.com.sun.xml.bind.v2.model.core.NonElement, ): ...
			def getClass(self, ) -> javawrappers.java.lang.Class: ...
			def writeTo(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.com.sun.xml.bind.v2.schemagen.xmlschema.Schema, ) -> None: ...
			@overload
			def wait(self, arg0: Union[long, JLong], ) -> None: ...
			@overload
			def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
			@overload
			def wait(self, ) -> None: ...
			def hashCode(self, ) -> Union[int, JInt]: ...
			def notifyAll(self, ) -> None: ...
			def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
			def toString(self, ) -> javawrappers.java.lang.String: ...
			def notify(self, ) -> None: ...


		class ElementDeclaration:
			def getClass(self, ) -> javawrappers.java.lang.Class: ...
			def writeTo(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.com.sun.xml.bind.v2.schemagen.xmlschema.Schema, ) -> None: ...
			@overload
			def wait(self, arg0: Union[long, JLong], ) -> None: ...
			@overload
			def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
			@overload
			def wait(self, ) -> None: ...
			def hashCode(self, ) -> Union[int, JInt]: ...
			def notifyAll(self, ) -> None: ...
			def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
			def toString(self, ) -> javawrappers.java.lang.String: ...
			def notify(self, ) -> None: ...


		@overload
		def writeTo(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.com.sun.xml.bind.v2.schemagen.xmlschema.Schema, ) -> None: ...
		@overload
		def writeTo(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.com.sun.xml.bind.v2.schemagen.xmlschema.Schema, ) -> None: ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		@overload
		def hashCode(self, ) -> Union[int, JInt]: ...
		@overload
		def hashCode(self, ) -> Union[int, JInt]: ...
		@overload
		def hashCode(self, ) -> Union[int, JInt]: ...
		def notifyAll(self, ) -> None: ...
		@overload
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@overload
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@overload
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		@overload
		def toString(self, ) -> javawrappers.java.lang.String: ...
		@overload
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def addGlobalElement(self, arg0: javawrappers.com.sun.xml.bind.v2.model.core.TypeRef, ) -> None: ...
		def addGlobalAttribute(self, arg0: javawrappers.com.sun.xml.bind.v2.model.core.AttributePropertyInfo, ) -> None: ...
		def notify(self, ) -> None: ...


	@overload
	def add(self, arg0: javawrappers.com.sun.xml.bind.v2.model.core.ClassInfo, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.com.sun.xml.bind.v2.model.core.ElementInfo, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.com.sun.xml.bind.v2.model.core.ArrayInfo, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.com.sun.xml.bind.v2.model.core.EnumLeafInfo, ) -> None: ...
	@overload
	def add(self, arg0: javawrappers.javax.xml.namespace.QName, arg1: Union[int, JBoolean], arg2: javawrappers.com.sun.xml.bind.v2.model.core.NonElement, ) -> None: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	def addGlobalElement(self, arg0: javawrappers.com.sun.xml.bind.v2.model.core.TypeRef, ) -> None: ...
	def addGlobalAttribute(self, arg0: javawrappers.com.sun.xml.bind.v2.model.core.AttributePropertyInfo, ) -> None: ...
	def notify(self, ) -> None: ...
	def writeEpisodeFile(self, arg0: javawrappers.com.sun.xml.txw2.output.XmlSerializer, ) -> None: ...
	@overload
	def writeTo(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.com.sun.xml.bind.v2.schemagen.xmlschema.Schema, ) -> None: ...
	@overload
	def writeTo(self, arg0: javawrappers.java.lang.String, arg1: javawrappers.com.sun.xml.bind.v2.schemagen.xmlschema.Schema, ) -> None: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def write(self, arg0: javawrappers.javax.xml.bind.SchemaOutputResolver, arg1: javawrappers.com.sun.xml.bind.api.ErrorListener, ) -> None: ...


class Util:
	@staticmethod
	def equal(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	@staticmethod
	def escapeURI(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def normalizeUriPath(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def getParentUriPath(arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def equalsIgnoreCase(arg0: javawrappers.java.lang.String, arg1: javawrappers.java.lang.String, ) -> Union[int, JBoolean]: ...
	def notify(self, ) -> None: ...


