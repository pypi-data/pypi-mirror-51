################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.java.lang
import javawrappers.java.util

from jpype.types import *
from typing import Union

from typing import overload

class NameConverter:
	class Standard:
		def __init__(self, ): ...
		def getClass(self, ) -> javawrappers.java.lang.Class: ...
		@overload
		def wait(self, arg0: Union[long, JLong], ) -> None: ...
		@overload
		def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
		@overload
		def wait(self, ) -> None: ...
		def notifyAll(self, ) -> None: ...
		def toPropertyName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
		def notify(self, ) -> None: ...
		@overload
		def toConstantName(self, arg0: javawrappers.java.util.List, ) -> javawrappers.java.lang.String: ...
		@overload
		def toConstantName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
		def capitalize(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
		def toPackageName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
		def hashCode(self, ) -> Union[int, JInt]: ...
		def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
		def toWordList(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
		def toString(self, ) -> javawrappers.java.lang.String: ...
		def toClassName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
		def toVariableName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
		@staticmethod
		def escape(arg0: javawrappers.java.lang.StringBuilder, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], ) -> None: ...
		def toInterfaceName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...


	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def notifyAll(self, ) -> None: ...
	@overload
	def toPropertyName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def toPropertyName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...
	def capitalize(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def toConstantName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def toConstantName(self, arg0: javawrappers.java.util.List, ) -> javawrappers.java.lang.String: ...
	@overload
	def toConstantName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def toPackageName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def toPackageName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toWordList(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.List: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def toClassName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def toClassName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def toVariableName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def toVariableName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@staticmethod
	def escape(arg0: javawrappers.java.lang.StringBuilder, arg1: javawrappers.java.lang.String, arg2: Union[int, JInt], ) -> None: ...
	@overload
	def toInterfaceName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...
	@overload
	def toInterfaceName(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.lang.String: ...


