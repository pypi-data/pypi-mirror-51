################################################################################
#          This file was automatically generated. Please do not edit.          #
################################################################################

import javawrappers.javax.xml.bind.annotation
import javawrappers.java.lang
import javawrappers.java.util
import javawrappers.javax.xml.namespace
import javawrappers.com.sun.xml.bind.v2.model.nav
import javawrappers.java.lang.annotation
import javawrappers.com.sun.xml.bind.v2.runtime
import javawrappers.com.sun.xml.bind.v2.model.core
import javawrappers.com.sun.xml.bind.v2.model.annotation
import javawrappers.javax.xml.transform
import javawrappers.javax.activation

from jpype.types import *
from typing import Union

from typing import overload

class PropertyKind:
	VALUE: PropertyKind = ...
	ATTRIBUTE: PropertyKind = ...
	ELEMENT: PropertyKind = ...
	REFERENCE: PropertyKind = ...
	MAP: PropertyKind = ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def values() -> JArray(javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind, 1): ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class LeafInfo:
	def isSimpleType(self, ) -> Union[int, JBoolean]: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def isElement(self, ) -> Union[int, JBoolean]: ...
	def asElement(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Element: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def getTypeName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getElementName(self, ) -> javawrappers.javax.xml.namespace.QName: ...


class WildcardTypeInfo:
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...


class ElementInfo:
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getProperty(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ElementPropertyInfo: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	@overload
	def getSubstitutionHead(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Element: ...
	@overload
	def getSubstitutionHead(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ElementInfo: ...
	def getContentType(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	def getSubstitutionMembers(self, ) -> javawrappers.java.util.Collection: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def getContentInMemoryType(self, ) -> javawrappers.java.lang.Object: ...
	def getScope(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ClassInfo: ...
	def getElementName(self, ) -> javawrappers.javax.xml.namespace.QName: ...


class NonElementRef:
	def getTarget(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	def getSource(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyInfo: ...


class NonElement:
	def isSimpleType(self, ) -> Union[int, JBoolean]: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def getTypeName(self, ) -> javawrappers.javax.xml.namespace.QName: ...


class WildcardMode:
	STRICT: WildcardMode = ...
	SKIP: WildcardMode = ...
	LAX: WildcardMode = ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.com.sun.xml.bind.v2.model.core.WildcardMode: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def values() -> JArray(javawrappers.com.sun.xml.bind.v2.model.core.WildcardMode, 1): ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class TypeInfoSet:
	def getClassInfo(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	def getElementInfo(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.javax.xml.namespace.QName, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ElementInfo: ...
	def getAttributeFormDefault(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.xml.bind.annotation.XmlNsForm: ...
	def getXmlNs(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.java.util.Map: ...
	def getNavigator(self, ) -> javawrappers.com.sun.xml.bind.v2.model.nav.Navigator: ...
	def getAllElements(self, ) -> javawrappers.java.lang.Iterable: ...
	def builtins(self, ) -> javawrappers.java.util.Map: ...
	def enums(self, ) -> javawrappers.java.util.Map: ...
	def getAnyTypeInfo(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	def getSchemaLocations(self, ) -> javawrappers.java.util.Map: ...
	def getElementFormDefault(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.javax.xml.bind.annotation.XmlNsForm: ...
	def beans(self, ) -> javawrappers.java.util.Map: ...
	@overload
	def getTypeInfo(self, arg0: javawrappers.com.sun.xml.bind.v2.model.core.Ref, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	@overload
	def getTypeInfo(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	def arrays(self, ) -> javawrappers.java.util.Map: ...
	def dump(self, arg0: javawrappers.javax.xml.transform.Result, ) -> None: ...
	def getElementMappings(self, arg0: javawrappers.java.lang.Object, ) -> javawrappers.java.util.Map: ...


class Element:
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def getSubstitutionHead(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Element: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def getScope(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ClassInfo: ...
	def getElementName(self, ) -> javawrappers.javax.xml.namespace.QName: ...


class MapPropertyInfo:
	def getAdapter(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Adapter: ...
	def hasAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def parent(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.TypeInfo: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def displayName(self, ) -> javawrappers.java.lang.String: ...
	def kind(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def isCollection(self, ) -> Union[int, JBoolean]: ...
	def inlineBinaryData(self, ) -> Union[int, JBoolean]: ...
	def getKeyType(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	def ref(self, ) -> javawrappers.java.util.Collection: ...
	def getSchemaType(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def readAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def isCollectionNillable(self, ) -> Union[int, JBoolean]: ...
	def id(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ID: ...
	def getXmlName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getValueType(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	def getExpectedMimeType(self, ) -> javawrappers.javax.activation.MimeType: ...


class EnumConstant:
	def getLexicalValue(self, ) -> javawrappers.java.lang.String: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getEnclosingClass(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.EnumLeafInfo: ...


class BuiltinLeafInfo:
	def isSimpleType(self, ) -> Union[int, JBoolean]: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def isElement(self, ) -> Union[int, JBoolean]: ...
	def asElement(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Element: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def getTypeName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getElementName(self, ) -> javawrappers.javax.xml.namespace.QName: ...


class EnumLeafInfo:
	def isSimpleType(self, ) -> Union[int, JBoolean]: ...
	def getClazz(self, ) -> javawrappers.java.lang.Object: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def isElement(self, ) -> Union[int, JBoolean]: ...
	def asElement(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Element: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def getConstants(self, ) -> javawrappers.java.lang.Iterable: ...
	def getTypeName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getElementName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getBaseType(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...


class ID:
	ID: ID = ...
	IDREF: ID = ...
	NONE: ID = ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	def getDeclaringClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.Class, arg1: javawrappers.java.lang.String, ) -> javawrappers.java.lang.Enum: ...
	@overload
	@staticmethod
	def valueOf(arg0: javawrappers.java.lang.String, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ID: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	@staticmethod
	def values() -> JArray(javawrappers.com.sun.xml.bind.v2.model.core.ID, 1): ...
	def name(self, ) -> javawrappers.java.lang.String: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JInt]: ...
	@overload
	def compareTo(self, arg0: javawrappers.java.lang.Enum, ) -> Union[int, JInt]: ...
	def notify(self, ) -> None: ...
	def ordinal(self, ) -> Union[int, JInt]: ...


class RegistryInfo:
	def getClazz(self, ) -> javawrappers.java.lang.Object: ...
	def getReferences(self, ) -> javawrappers.java.util.Set: ...


class ReferencePropertyInfo:
	def getAdapter(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Adapter: ...
	def hasAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def parent(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.TypeInfo: ...
	def isRequired(self, ) -> Union[int, JBoolean]: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def displayName(self, ) -> javawrappers.java.lang.String: ...
	def kind(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def isCollection(self, ) -> Union[int, JBoolean]: ...
	def isMixed(self, ) -> Union[int, JBoolean]: ...
	def inlineBinaryData(self, ) -> Union[int, JBoolean]: ...
	def ref(self, ) -> javawrappers.java.util.Collection: ...
	def getDOMHandler(self, ) -> javawrappers.java.lang.Object: ...
	def getSchemaType(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getElements(self, ) -> javawrappers.java.util.Set: ...
	def readAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def isCollectionRequired(self, ) -> Union[int, JBoolean]: ...
	def isCollectionNillable(self, ) -> Union[int, JBoolean]: ...
	def id(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ID: ...
	def getXmlName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getExpectedMimeType(self, ) -> javawrappers.javax.activation.MimeType: ...
	def getWildcard(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.WildcardMode: ...


class ValuePropertyInfo:
	def getAdapter(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Adapter: ...
	def hasAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def parent(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.TypeInfo: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def displayName(self, ) -> javawrappers.java.lang.String: ...
	def kind(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def isCollection(self, ) -> Union[int, JBoolean]: ...
	def inlineBinaryData(self, ) -> Union[int, JBoolean]: ...
	def getTarget(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	def ref(self, ) -> javawrappers.java.util.Collection: ...
	def getSchemaType(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getSource(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyInfo: ...
	def readAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def id(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ID: ...
	def getExpectedMimeType(self, ) -> javawrappers.javax.activation.MimeType: ...


class Adapter:
	@overload
	def __init__(self, arg0: javawrappers.javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter, arg1: javawrappers.com.sun.xml.bind.v2.model.annotation.AnnotationReader, arg2: javawrappers.com.sun.xml.bind.v2.model.nav.Navigator, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.model.nav.Navigator, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ArrayInfo:
	def isSimpleType(self, ) -> Union[int, JBoolean]: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def getItemType(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def getTypeName(self, ) -> javawrappers.javax.xml.namespace.QName: ...


class MaybeElement:
	def isSimpleType(self, ) -> Union[int, JBoolean]: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def isElement(self, ) -> Union[int, JBoolean]: ...
	def asElement(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Element: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def getTypeName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getElementName(self, ) -> javawrappers.javax.xml.namespace.QName: ...


class TypeRef:
	def getTarget(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	def getSource(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyInfo: ...
	def getTagName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def isNillable(self, ) -> Union[int, JBoolean]: ...
	def getDefaultValue(self, ) -> javawrappers.java.lang.String: ...


class TypeInfo:
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...


class PropertyInfo:
	def getAdapter(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Adapter: ...
	def hasAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def parent(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.TypeInfo: ...
	def ref(self, ) -> javawrappers.java.util.Collection: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getSchemaType(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def displayName(self, ) -> javawrappers.java.lang.String: ...
	def kind(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def isCollection(self, ) -> Union[int, JBoolean]: ...
	def readAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def id(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ID: ...
	def getExpectedMimeType(self, ) -> javawrappers.javax.activation.MimeType: ...
	def inlineBinaryData(self, ) -> Union[int, JBoolean]: ...


class AttributePropertyInfo:
	def getAdapter(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Adapter: ...
	def hasAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def parent(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.TypeInfo: ...
	def isRequired(self, ) -> Union[int, JBoolean]: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def displayName(self, ) -> javawrappers.java.lang.String: ...
	def kind(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def isCollection(self, ) -> Union[int, JBoolean]: ...
	def inlineBinaryData(self, ) -> Union[int, JBoolean]: ...
	def ref(self, ) -> javawrappers.java.util.Collection: ...
	def getTarget(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.NonElement: ...
	def getSchemaType(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getSource(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyInfo: ...
	def readAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def id(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ID: ...
	def getXmlName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getExpectedMimeType(self, ) -> javawrappers.javax.activation.MimeType: ...


class ElementPropertyInfo:
	def getAdapter(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Adapter: ...
	def hasAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> Union[int, JBoolean]: ...
	def parent(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.TypeInfo: ...
	def isRequired(self, ) -> Union[int, JBoolean]: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def displayName(self, ) -> javawrappers.java.lang.String: ...
	def kind(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyKind: ...
	def isCollection(self, ) -> Union[int, JBoolean]: ...
	def inlineBinaryData(self, ) -> Union[int, JBoolean]: ...
	def isValueList(self, ) -> Union[int, JBoolean]: ...
	def ref(self, ) -> javawrappers.java.util.Collection: ...
	def getSchemaType(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def readAnnotation(self, arg0: javawrappers.java.lang.Class, ) -> javawrappers.java.lang.annotation.Annotation: ...
	def isCollectionRequired(self, ) -> Union[int, JBoolean]: ...
	def isCollectionNillable(self, ) -> Union[int, JBoolean]: ...
	def id(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ID: ...
	def getTypes(self, ) -> javawrappers.java.util.List: ...
	def getXmlName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getExpectedMimeType(self, ) -> javawrappers.javax.activation.MimeType: ...


class ClassInfo:
	def isSimpleType(self, ) -> Union[int, JBoolean]: ...
	def getClazz(self, ) -> javawrappers.java.lang.Object: ...
	def getLocation(self, ) -> javawrappers.com.sun.xml.bind.v2.runtime.Location: ...
	def hasValueProperty(self, ) -> Union[int, JBoolean]: ...
	def getUpstream(self, ) -> javawrappers.com.sun.xml.bind.v2.model.annotation.Locatable: ...
	def getName(self, ) -> javawrappers.java.lang.String: ...
	def getProperty(self, arg0: javawrappers.java.lang.String, ) -> javawrappers.com.sun.xml.bind.v2.model.core.PropertyInfo: ...
	def isElement(self, ) -> Union[int, JBoolean]: ...
	def getProperties(self, ) -> javawrappers.java.util.List: ...
	def hasAttributeWildcard(self, ) -> Union[int, JBoolean]: ...
	def hasSubClasses(self, ) -> Union[int, JBoolean]: ...
	def canBeReferencedByIDREF(self, ) -> Union[int, JBoolean]: ...
	def hasProperties(self, ) -> Union[int, JBoolean]: ...
	def getBaseClass(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.ClassInfo: ...
	def declaresAttributeWildcard(self, ) -> Union[int, JBoolean]: ...
	def isAbstract(self, ) -> Union[int, JBoolean]: ...
	def getElementName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def getType(self, ) -> javawrappers.java.lang.Object: ...
	def asElement(self, ) -> javawrappers.com.sun.xml.bind.v2.model.core.Element: ...
	def inheritsAttributeWildcard(self, ) -> Union[int, JBoolean]: ...
	def isFinal(self, ) -> Union[int, JBoolean]: ...
	def getTypeName(self, ) -> javawrappers.javax.xml.namespace.QName: ...
	def isOrdered(self, ) -> Union[int, JBoolean]: ...


class Ref:
	@overload
	def __init__(self, arg0: javawrappers.com.sun.xml.bind.v2.model.annotation.AnnotationReader, arg1: javawrappers.com.sun.xml.bind.v2.model.nav.Navigator, arg2: javawrappers.java.lang.Object, arg3: javawrappers.javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter, arg4: javawrappers.javax.xml.bind.annotation.XmlList, ): ...
	@overload
	def __init__(self, arg0: javawrappers.com.sun.xml.bind.v2.model.impl.ModelBuilderI, arg1: javawrappers.java.lang.Object, arg2: javawrappers.javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter, arg3: javawrappers.javax.xml.bind.annotation.XmlList, ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Object, arg1: javawrappers.com.sun.xml.bind.v2.model.core.Adapter, arg2: Union[int, JBoolean], ): ...
	@overload
	def __init__(self, arg0: javawrappers.java.lang.Object, ): ...
	def getClass(self, ) -> javawrappers.java.lang.Class: ...
	@overload
	def wait(self, arg0: Union[long, JLong], ) -> None: ...
	@overload
	def wait(self, arg0: Union[long, JLong], arg1: Union[int, JInt], ) -> None: ...
	@overload
	def wait(self, ) -> None: ...
	def hashCode(self, ) -> Union[int, JInt]: ...
	def notifyAll(self, ) -> None: ...
	def equals(self, arg0: javawrappers.java.lang.Object, ) -> Union[int, JBoolean]: ...
	def toString(self, ) -> javawrappers.java.lang.String: ...
	def notify(self, ) -> None: ...


class ErrorHandler:
	def error(self, arg0: javawrappers.com.sun.xml.bind.v2.runtime.IllegalAnnotationException, ) -> None: ...


