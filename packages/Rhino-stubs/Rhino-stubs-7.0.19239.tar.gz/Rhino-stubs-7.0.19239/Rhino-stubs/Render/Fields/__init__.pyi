from typing import Tuple, Set, Iterable, List

class FieldDictionary:
    def Set (self, key : str, value : Set(Byte), changeContext : ChangeContexts) -> None: ...
    def SetTag (self, key : str, tag : Object) -> bool: ...
    def TryGetTag (self, key : str) -> Tuple[bool, Object]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, T]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, str]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, bool]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, int]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, float]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, Single]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, Color4f]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, Color]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, Vector2d]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, Vector3d]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, Point2d]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, Point3d]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, Point4d]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, Guid]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, Transform]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, DateTime]: ...
    def TryGetValue (self, key : str) -> Tuple[bool, Set(Byte)]: ...
    def GetEnumerator (self) -> IEnumerator: ...
    def ContainsField (self, fieldName : str) -> bool: ...
    def GetField (self, fieldName : str) -> Field: ...
    def RemoveField (self, fieldName : str) -> None: ...
    def Add (self, key : str, value : str) -> StringField: ...
    def Add (self, key : str, value : str, prompt : str) -> StringField: ...
    def AddTextured (self, key : str, value : str, prompt : str) -> StringField: ...
    def Add (self, key : str, value : bool) -> BoolField: ...
    def Add (self, key : str, value : bool, prompt : str) -> BoolField: ...
    def AddTextured (self, key : str, value : bool, prompt : str) -> BoolField: ...
    def Add (self, key : str, value : int) -> IntField: ...
    def Add (self, key : str, value : int, prompt : str) -> IntField: ...
    def AddTextured (self, key : str, value : int, prompt : str) -> IntField: ...
    def Add (self, key : str, value : Single) -> FloatField: ...
    def Add (self, key : str, value : Single, prompt : str) -> FloatField: ...
    def AddTextured (self, key : str, value : Single, prompt : str) -> FloatField: ...
    def Add (self, key : str, value : float) -> DoubleField: ...
    def Add (self, key : str, value : float, prompt : str) -> DoubleField: ...
    def AddTextured (self, key : str, value : float, prompt : str) -> DoubleField: ...
    def Add (self, key : str, value : Color4f) -> Color4fField: ...
    def Add (self, key : str, value : Color4f, prompt : str) -> Color4fField: ...
    def AddTextured (self, key : str, value : Color4f, prompt : str) -> Color4fField: ...
    def Add (self, key : str, value : Color) -> Color4fField: ...
    def Add (self, key : str, value : Color, prompt : str) -> Color4fField: ...
    def AddTextured (self, key : str, value : Color, prompt : str) -> Color4fField: ...
    def Add (self, key : str, value : Vector2d) -> Vector2dField: ...
    def Add (self, key : str, value : Vector2d, prompt : str) -> Vector2dField: ...
    def AddTextured (self, key : str, value : Vector2d, prompt : str) -> Vector2dField: ...
    def Add (self, key : str, value : Vector3d) -> Vector3dField: ...
    def Add (self, key : str, value : Vector3d, prompt : str) -> Vector3dField: ...
    def AddTextured (self, key : str, value : Vector3d, prompt : str) -> Vector3dField: ...
    def Add (self, key : str, value : Point2d) -> Point2dField: ...
    def Add (self, key : str, value : Point2d, prompt : str) -> Point2dField: ...
    def AddTextured (self, key : str, value : Point2d, prompt : str) -> Point2dField: ...
    def Add (self, key : str, value : Point3d) -> Point3dField: ...
    def Add (self, key : str, value : Point3d, prompt : str) -> Point3dField: ...
    def AddTextured (self, key : str, value : Point3d, prompt : str) -> Point3dField: ...
    def Add (self, key : str, value : Point4d) -> Point4dField: ...
    def Add (self, key : str, value : Point4d, prompt : str) -> Point4dField: ...
    def AddTextured (self, key : str, value : Point4d, prompt : str) -> Point4dField: ...
    def Add (self, key : str, value : Guid) -> GuidField: ...
    def Add (self, key : str, value : Guid, prompt : str) -> GuidField: ...
    def AddTextured (self, key : str, value : Guid, prompt : str) -> GuidField: ...
    def Add (self, key : str, value : Transform) -> TransformField: ...
    def Add (self, key : str, value : Transform, prompt : str) -> TransformField: ...
    def AddTextured (self, key : str, value : Transform, prompt : str) -> TransformField: ...
    def Add (self, key : str, value : DateTime) -> DateTimeField: ...
    def Add (self, key : str, value : DateTime, prompt : str) -> DateTimeField: ...
    def AddTextured (self, key : str, value : DateTime, prompt : str) -> DateTimeField: ...
    def Add (self, key : str, value : Set(Byte)) -> ByteArrayField: ...
    def Set (self, key : str, value : str) -> None: ...
    def Set (self, key : str, value : str, changeContext : ChangeContexts) -> None: ...
    def Set (self, key : str, value : bool) -> None: ...
    def Set (self, key : str, value : bool, changeContext : ChangeContexts) -> None: ...
    def Set (self, key : str, value : int) -> None: ...
    def Set (self, key : str, value : int, changeContext : ChangeContexts) -> None: ...
    def Set (self, key : str, value : Single) -> None: ...
    def Set (self, key : str, value : Single, changeContext : ChangeContexts) -> None: ...
    def Set (self, key : str, value : float) -> None: ...
    def Set (self, key : str, value : float, changeContext : ChangeContexts) -> None: ...
    def Set (self, key : str, value : Color4f) -> None: ...
    def Set (self, key : str, value : Color4f, changeContext : ChangeContexts) -> None: ...
    def Set (self, key : str, value : Color) -> None: ...
    def Set (self, key : str, value : Color, changeContext : ChangeContexts) -> None: ...
    def Set (self, key : str, value : Vector2d) -> None: ...
    def Set (self, key : str, value : Vector2d, changeContext : ChangeContexts) -> None: ...
    def Set (self, key : str, value : Vector3d) -> None: ...
    def Set (self, key : str, value : Vector3d, changeContext : ChangeContexts) -> None: ...
    def Set (self, key : str, value : Point2d) -> None: ...
    def Set (self, key : str, value : Point2d, changeContext : ChangeContexts) -> None: ...
    def Set (self, key : str, value : Point3d) -> None: ...
    def Set (self, key : str, value : Point3d, changeContext : ChangeContexts) -> None: ...
    def Set (self, key : str, value : Point4d) -> None: ...
    def Set (self, key : str, value : Point4d, changeContext : ChangeContexts) -> None: ...
    def Set (self, key : str, value : Guid) -> None: ...
    def Set (self, key : str, value : Guid, changeContext : ChangeContexts) -> None: ...
    def Set (self, key : str, value : Transform) -> None: ...
    def Set (self, key : str, value : Transform, changeContext : ChangeContexts) -> None: ...
    def Set (self, key : str, value : DateTime) -> None: ...
    def Set (self, key : str, value : DateTime, changeContext : ChangeContexts) -> None: ...
    def Set (self, key : str, value : Set(Byte)) -> None: ...
class Field:
    @property
    def Name (self) -> str: ...
    @property
    def Key (self) -> str: ...
    @property
    def Tag (self) -> Object: ...
    @Tag.setter
    def Tag (self, value : Object) -> None: ...
    def ValueAsObject (self) -> Object: ...
    def GetValue (self) -> T: ...
class StringField(Field):
    @property
    def Value (self) -> str: ...
    @Value.setter
    def Value (self, value : str) -> None: ...
    def ValueAsObject (self) -> Object: ...
class BoolField(Field):
    @property
    def Value (self) -> bool: ...
    @Value.setter
    def Value (self, value : bool) -> None: ...
    def ValueAsObject (self) -> Object: ...
class IntField(Field):
    @property
    def Value (self) -> int: ...
    @Value.setter
    def Value (self, value : int) -> None: ...
    def ValueAsObject (self) -> Object: ...
class FloatField(Field):
    @property
    def Value (self) -> Single: ...
    @Value.setter
    def Value (self, value : Single) -> None: ...
    def ValueAsObject (self) -> Object: ...
class DoubleField(Field):
    @property
    def Value (self) -> float: ...
    @Value.setter
    def Value (self, value : float) -> None: ...
    def ValueAsObject (self) -> Object: ...
class Color4fField(Field):
    @property
    def Value (self) -> Color4f: ...
    @Value.setter
    def Value (self, value : Color4f) -> None: ...
    def ValueAsObject (self) -> Object: ...
    @property
    def SystemColorValue (self) -> Color: ...
    @SystemColorValue.setter
    def SystemColorValue (self, value : Color) -> None: ...
class Vector2dField(Field):
    @property
    def Value (self) -> Vector2d: ...
    @Value.setter
    def Value (self, value : Vector2d) -> None: ...
    def ValueAsObject (self) -> Object: ...
class Vector3dField(Field):
    @property
    def Value (self) -> Vector3d: ...
    @Value.setter
    def Value (self, value : Vector3d) -> None: ...
    def ValueAsObject (self) -> Object: ...
class Point2dField(Field):
    @property
    def Value (self) -> Point2d: ...
    @Value.setter
    def Value (self, value : Point2d) -> None: ...
    def ValueAsObject (self) -> Object: ...
class Point3dField(Field):
    @property
    def Value (self) -> Point3d: ...
    @Value.setter
    def Value (self, value : Point3d) -> None: ...
    def ValueAsObject (self) -> Object: ...
class Point4dField(Field):
    @property
    def Value (self) -> Point4d: ...
    @Value.setter
    def Value (self, value : Point4d) -> None: ...
    def ValueAsObject (self) -> Object: ...
class GuidField(Field):
    @property
    def Value (self) -> Guid: ...
    @Value.setter
    def Value (self, value : Guid) -> None: ...
    def ValueAsObject (self) -> Object: ...
class TransformField(Field):
    @property
    def Value (self) -> Transform: ...
    @Value.setter
    def Value (self, value : Transform) -> None: ...
    def ValueAsObject (self) -> Object: ...
class DateTimeField(Field):
    @property
    def Value (self) -> DateTime: ...
    @Value.setter
    def Value (self, value : DateTime) -> None: ...
    def ValueAsObject (self) -> Object: ...
class ByteArrayField(Field):
    @property
    def Value (self) -> Set(Byte): ...
    @Value.setter
    def Value (self, value : Set(Byte)) -> None: ...
    def ValueAsObject (self) -> Object: ...
