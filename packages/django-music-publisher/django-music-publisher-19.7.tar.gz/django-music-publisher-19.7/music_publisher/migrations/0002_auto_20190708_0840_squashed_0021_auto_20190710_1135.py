# Generated by Django 2.1.7 on 2019-07-11 12:20

from django.db import migrations, models
import django.db.models.deletion
import music_publisher.base
from django.conf import settings


def add_tracks(apps, schema_edito):
    """Create Label objects and link to """
    Track = apps.get_model('music_publisher', 'Track')
    Release = apps.get_model('music_publisher', 'Release')
    Recording = apps.get_model('music_publisher', 'Recording')
    for id, release_id in Recording.objects.all().values_list('id', 'album_cd_id'):
        if not release_id:
            continue
        track = Track.objects.get_or_create(
            release_id = release_id, recording_id=id)


def move_key_to_work(apps, schema_editor):
    """Move FK to LibraryRelease to the work."""
    Recording = apps.get_model('music_publisher', 'Recording')
    for recording in Recording.objects.filter(album_cd__cd_identifier__isnull = False):
        release = recording.album_cd
        recording.work.library_release = release
        recording.work.save()
        recording.album_cd = None
        recording.save()


def import_library_from_settings(apps, schema_edito):
    """Create Library objects and link"""
    LibraryRelease = apps.get_model('music_publisher', 'LibraryRelease')
    Library = apps.get_model('music_publisher', 'Library')
    library_name = settings.MUSIC_PUBLISHER_SETTINGS.get('library')
    if not library_name:
        return
    library, created = Library.objects.get_or_create(name=library_name)
    for release in LibraryRelease.objects.all():
        release.library = library
        release.save()


def release_labels_to_table(apps, schema_edito):
    """Create Label objects and link to """
    Label = apps.get_model('music_publisher', 'Label')
    LibraryRelease = apps.get_model('music_publisher', 'LibraryRelease')
    for id, release_label in LibraryRelease.objects.all().values_list('id', 'release_label'):
        if not release_label:
            continue
        label, created = Label.objects.get_or_create(
            name=release_label)
        LibraryRelease.objects.filter(id=id).update(_release_label_id=label.id)


class Migration(migrations.Migration):

    dependencies = [
        ('music_publisher', '0001_squashed_0023_auto_20190212_0907'),
    ]

    operations = [
        migrations.RenameModel(
            old_name='FirstRecording',
            new_name='Recording',
        ),
        migrations.RenameModel(
            old_name='AlbumCD',
            new_name='Release',
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('cut_number',
                 models.PositiveSmallIntegerField(blank=True, null=True,
                                                  validators=[
                                                      django.core.validators.MinValueValidator(
                                                          1),
                                                      django.core.validators.MaxValueValidator(
                                                          9999)])),
            ],
        ),
        migrations.AlterField(
            model_name='recording',
            name='work',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='music_publisher.Work'),
        ),
        migrations.AlterField(
            model_name='workacknowledgement',
            name='society_code',
            field=models.CharField(
                choices=[('55', 'SABAM, Belgium'), ('101', 'SOCAN, Canada'),
                         ('88', 'CMRRA, Canada'), ('40', 'KODA, Denmark'),
                         ('89', 'TEOSTO, Finland'), ('58', 'SACEM, France'),
                         ('35', 'GEMA, Germany'), ('74', 'SIAE, Italy'),
                         ('23', 'BUMA, Netherlands'),
                         ('78', 'STEMRA, Netherlands'), ('90', 'TONO, Norway'),
                         ('79', 'STIM, Sweden'), ('52', 'PRS, United Kingdom'),
                         ('44', 'MCPS, United Kingdom'),
                         ('10', 'ASCAP, United States'),
                         ('21', 'BMI, United States'),
                         ('71', 'SESAC Inc., United States'),
                         ('34', 'HFA, United States'),
                         ('319', 'ICE Services, Administrative Agency'),
                         ('707', 'Musicmark, Administrative Agency')],
                max_length=3, verbose_name='Society'),
        ),
        migrations.AlterField(
            model_name='writer',
            name='pr_society',
            field=models.CharField(blank=True,
                                   choices=[('55', 'SABAM, Belgium'),
                                            ('101', 'SOCAN, Canada'),
                                            ('88', 'CMRRA, Canada'),
                                            ('40', 'KODA, Denmark'),
                                            ('89', 'TEOSTO, Finland'),
                                            ('58', 'SACEM, France'),
                                            ('35', 'GEMA, Germany'),
                                            ('74', 'SIAE, Italy'),
                                            ('23', 'BUMA, Netherlands'),
                                            ('78', 'STEMRA, Netherlands'),
                                            ('90', 'TONO, Norway'),
                                            ('79', 'STIM, Sweden'),
                                            ('52', 'PRS, United Kingdom'),
                                            ('44', 'MCPS, United Kingdom'),
                                            ('10', 'ASCAP, United States'),
                                            ('21', 'BMI, United States'), (
                                            '71', 'SESAC Inc., United States'),
                                            ('34', 'HFA, United States'), (
                                            '319',
                                            'ICE Services, Administrative Agency'),
                                            ('707',
                                             'Musicmark, Administrative Agency')],
                                   max_length=3, null=True, validators=[
                    music_publisher.base.CWRFieldValidator(
                        'writer_pr_society')],
                                   verbose_name='Performing rights society'),
        ),
        migrations.AddField(
            model_name='track',
            name='recording',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to='music_publisher.Recording'),
        ),
        migrations.AddField(
            model_name='track',
            name='release',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to='music_publisher.Release'),
        ),
        migrations.AlterUniqueTogether(
            name='track',
            unique_together={('recording', 'release')},
        ),
        migrations.RunPython(
            code=add_tracks,
        ),


        migrations.CreateModel(
            name='LibraryRelease',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('music_publisher.release',),
        ),
        migrations.AddField(
            model_name='work',
            name='library_release',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='music_publisher.Release', verbose_name='Library Release'),
        ),
        migrations.RunPython(
            code=move_key_to_work,
        ),
        migrations.AlterField(
            model_name='work',
            name='library_release',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='music_publisher.LibraryRelease', verbose_name='Library Release'),
        ),
        migrations.AlterField(
            model_name='recording',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recordings', to='music_publisher.Work'),
        ),
        migrations.AlterField(
            model_name='release',
            name='album_label',
            field=models.CharField(blank=True, default='FOO BAR MUSIC', max_length=60, validators=[music_publisher.base.CWRFieldValidator('first_album_label')], verbose_name='Release (album) label'),
        ),
        migrations.AlterField(
            model_name='release',
            name='album_title',
            field=models.CharField(blank=True, max_length=60, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('first_album_title')], verbose_name='Release (album) title '),
        ),
        migrations.AlterField(
            model_name='release',
            name='cd_identifier',
            field=models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('cd_identifier')], verbose_name='Release (CD) identifier'),
        ),
        migrations.AlterModelOptions(
            name='release',
            options={'ordering': ('release_title', 'cd_identifier', '-id'), 'verbose_name': 'Album and/or Library CD', 'verbose_name_plural': ' Albums and Library CDs'},
        ),
        migrations.RenameField(
            model_name='release',
            old_name='album_label',
            new_name='release_label',
        ),
        migrations.RenameField(
            model_name='release',
            old_name='album_title',
            new_name='release_title',
        ),
        migrations.AlterField(
            model_name='release',
            name='ean',
            field=models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('ean')], verbose_name='Release (album) EAN'),
        ),
        migrations.AlterField(
            model_name='release',
            name='cd_identifier',
            field=models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('cd_identifier')], verbose_name='CD identifier'),
        ),
        migrations.CreateModel(
            name='CommercialRelease',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('music_publisher.release',),
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True, validators=[music_publisher.base.CWRFieldValidator('label')])),
            ],
            options={
                'ordering': ('-id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True, validators=[music_publisher.base.CWRFieldValidator('library')])),
            ],
            options={
                'ordering': ('-id',),
                'abstract': False,
            },
        ),
        migrations.AlterModelOptions(
            name='artistinwork',
            options={'verbose_name': 'Performing artist', 'verbose_name_plural': 'Performing artists (not mentioned in recordings section)'},
        ),
        migrations.AlterModelOptions(
            name='recording',
            options={'ordering': ('-id',)},
        ),
        migrations.AlterField(
            model_name='recording',
            name='record_label',
            field=models.CharField(blank=True, max_length=60, validators=[music_publisher.base.CWRFieldValidator('first_album_label')]),
        ),
        migrations.AlterField(
            model_name='release',
            name='release_label',
            field=models.CharField(blank=True, max_length=60, validators=[music_publisher.base.CWRFieldValidator('first_album_label')], verbose_name='Release (album) label'),
        ),
        migrations.AddField(
            model_name='release',
            name='library',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='music_publisher.Library'),
        ),
        migrations.RunPython(
            code=import_library_from_settings,
        ),
        migrations.AddField(
            model_name='release',
            name='_release_label',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='music_publisher.Label', verbose_name='Release (album) label'),
        ),
        migrations.AlterField(
            model_name='release',
            name='release_title',
            field=models.CharField(blank=True, max_length=60, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('release_title')], verbose_name='Release (album) title '),
        ),
        migrations.RunPython(
            code=release_labels_to_table,
        ),
        migrations.RemoveField(
            model_name='release',
            name='release_label',
        ),
        migrations.RenameField(
            model_name='release',
            old_name='_release_label',
            new_name='release_label',
        ),
        migrations.AlterModelOptions(
            name='label',
            options={'verbose_name_plural': 'Music Labels'},
        ),
        migrations.AlterModelOptions(
            name='library',
            options={'verbose_name_plural': 'Music Libraries'},
        ),
        migrations.AlterModelOptions(
            name='recording',
            options={'verbose_name_plural': '  Recordings'},
        ),
        migrations.AlterField(
            model_name='work',
            name='library_release',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='works', to='music_publisher.LibraryRelease', verbose_name='Library Release'),
        ),
        migrations.AlterModelOptions(
            name='release',
            options={'ordering': ('release_title', 'cd_identifier', '-id')},
        ),
        migrations.AlterModelOptions(
            name='work',
            options={'verbose_name_plural': '   Works'},
        ),
        migrations.AddField(
            model_name='recording',
            name='recording_title_suffix',
            field=models.BooleanField(default=False, help_text='A suffix to the WORK title.'),
        ),
        migrations.AddField(
            model_name='recording',
            name='recording_title',
            field=models.CharField(blank=True, max_length=60, validators=[music_publisher.base.CWRFieldValidator('work_title')]),
        ),
        migrations.AddField(
            model_name='recording',
            name='version_title',
            field=models.CharField(blank=True, max_length=60, validators=[music_publisher.base.CWRFieldValidator('work_title')]),
        ),
        migrations.AddField(
            model_name='recording',
            name='version_title_suffix',
            field=models.BooleanField(default=False, help_text='A suffix to the RECORDING title.'),
        ),
        migrations.AlterField(
            model_name='alternatetitle',
            name='suffix',
            field=models.BooleanField(default=False, help_text='Select if this title is only a suffix to the main title.'),
        ),
        migrations.AddField(
            model_name='recording',
            name='_record_label',
            field=models.ForeignKey(blank=True, null=True,
                                    on_delete=django.db.models.deletion.PROTECT,
                                    to='music_publisher.Label',
                                    verbose_name='Record label'),
        ),
        migrations.RemoveField(
            model_name='recording',
            name='album_cd',
        ),
    ]
