# Generated by Django 2.1.7 on 2019-07-08 08:38

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import music_publisher.base


class Migration(migrations.Migration):

    replaces = [('music_publisher', '0001_initial'), ('music_publisher', '0002_auto_20180725_1719'), ('music_publisher', '0003_auto_20180725_2051'), ('music_publisher', '0004_ackimport'), ('music_publisher', '0005_workacknowledgement'), ('music_publisher', '0006_auto_20180801_2130'), ('music_publisher', '0007_auto_20180911_1017'), ('music_publisher', '0008_auto_20180911_1055'), ('music_publisher', '0009_auto_20180912_1217'), ('music_publisher', '0010_auto_20181114_1548'), ('music_publisher', '0011_auto_20181114_1649'), ('music_publisher', '0012_auto_20181117_1745'), ('music_publisher', '0013_cwrexport__work_count'), ('music_publisher', '0014_auto_20181118_1854'), ('music_publisher', '0015_auto_20181201_1315'), ('music_publisher', '0016_work_original_title'), ('music_publisher', '0017_auto_20181223_1300'), ('music_publisher', '0018_auto_20181226_0007'), ('music_publisher', '0019_auto_20181227_1504'), ('music_publisher', '0020_auto_20190121_1711'), ('music_publisher', '0021_remove_cwrexport__work_count'), ('music_publisher', '0022_cwrexport_description'), ('music_publisher', '0023_auto_20190212_0907')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlbumCD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cd_identifier', models.CharField(blank=True, help_text='This will set the purpose to Library.', max_length=15, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('cd_identifier')], verbose_name='CD Identifier')),
                ('release_date', models.DateField(blank=True, help_text='Can be overridden by recording data.', null=True)),
                ('album_title', models.CharField(blank=True, help_text='This will set the label.', max_length=60, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('first_album_title')])),
                ('ean', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('ean')], verbose_name='EAN')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'Albums and Library CDs',
                'verbose_name': 'Album and/or Library CD',
            },
        ),
        migrations.CreateModel(
            name='AlternateTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=60, validators=[music_publisher.base.CWRFieldValidator('work_title')])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=30, validators=[music_publisher.base.CWRFieldValidator('artist_first_name')])),
                ('last_name', models.CharField(db_index=True, max_length=45, validators=[music_publisher.base.CWRFieldValidator('artist_last_name')])),
            ],
            options={
                'verbose_name_plural': 'Performing Artists',
                'verbose_name': 'Performing Artist',
            },
        ),
        migrations.CreateModel(
            name='ArtistInWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='music_publisher.Artist')),
            ],
            options={
                'verbose_name_plural': 'Artists Performing Work',
                'verbose_name': 'Artist Performing Work',
            },
        ),
        migrations.CreateModel(
            name='FirstRecording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isrc', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('isrc')], verbose_name='ISRC')),
                ('release_date', models.DateField(blank=True, null=True)),
                ('duration', models.TimeField(blank=True, null=True)),
                ('catalog_number', models.CharField(blank=True, max_length=18, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('first_release_catalog_number')])),
                ('album_cd', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='music_publisher.AlbumCD', verbose_name='Album / Library CD')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'First recording of the work',
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=60, validators=[music_publisher.base.CWRFieldValidator('work_title')])),
                ('iswc', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('iswc')], verbose_name='ISWC')),
                ('last_change', models.DateTimeField(editable=False, null=True)),
                ('artists', models.ManyToManyField(through='music_publisher.ArtistInWork', to='music_publisher.Artist')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Writer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=30, validators=[music_publisher.base.CWRFieldValidator('artist_first_name')])),
                ('last_name', models.CharField(db_index=True, max_length=45, validators=[music_publisher.base.CWRFieldValidator('artist_last_name')])),
                ('ipi_name', models.CharField(blank=True, max_length=11, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('writer_ipi_name')], verbose_name='IPI Name #')),
                ('ipi_base', models.CharField(blank=True, max_length=15, null=True, validators=[music_publisher.base.CWRFieldValidator('writer_ipi_base')], verbose_name='IPI Base #')),
                ('pr_society', models.CharField(blank=True, choices=[('101', 'SOCAN, Canada'), ('088', 'CMRRA, Canada'), ('058', 'SACEM, France'), ('068', 'SDRM, France'), ('035', 'GEMA, Germany'), ('074', 'SIAE, Italy'), ('052', 'PRS, United Kingdom'), ('044', 'MCPS, United Kingdom'), ('010', 'ASCAP, United States'), ('021', 'BMI, United States'), ('071', 'SESAC Inc., United States'), ('034', 'HFA, United States')], max_length=3, null=True, validators=[music_publisher.base.CWRFieldValidator('writer_pr_society')], verbose_name='Performing Rights Society')),
                ('saan', models.CharField(blank=True, help_text='Use this field for general agreements only.', max_length=14, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('saan')], verbose_name='Society-assigned agreement number')),
                ('_can_be_controlled', models.BooleanField(default=False, editable=False)),
                ('generally_controlled', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
                'ordering': ('last_name', 'first_name', 'ipi_name'),
            },
        ),
        migrations.CreateModel(
            name='WriterInWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saan', models.CharField(blank=True, help_text='Use this field for specific agreements only.', max_length=14, null=True, validators=[music_publisher.base.CWRFieldValidator('saan')], verbose_name='Society-assigned agreement number')),
                ('controlled', models.BooleanField(default=False)),
                ('relative_share', models.DecimalField(decimal_places=2, max_digits=5)),
                ('capacity', models.CharField(blank=True, choices=[('C ', 'Composer'), ('A ', 'Lyricist'), ('CA', 'Composer&Lyricist')], max_length=2)),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music_publisher.Work')),
                ('writer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='music_publisher.Writer')),
            ],
            options={
                'verbose_name_plural': 'Writers in Work',
            },
        ),
        migrations.AddField(
            model_name='work',
            name='writers',
            field=models.ManyToManyField(through='music_publisher.WriterInWork', to='music_publisher.Writer'),
        ),
        migrations.AddField(
            model_name='firstrecording',
            name='work',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='music_publisher.Work'),
        ),
        migrations.AddField(
            model_name='artistinwork',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music_publisher.Work'),
        ),
        migrations.AddField(
            model_name='alternatetitle',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music_publisher.Work'),
        ),
        migrations.CreateModel(
            name='CWRExport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nwr_rev', models.CharField(choices=[('NWR', 'New work registration'), ('REV', 'Revision of registered work')], db_index=True, default='NWR', max_length=3, verbose_name='NWR/REV')),
                ('cwr', models.TextField(blank=True, editable=False)),
            ],
            options={
                'verbose_name': 'CWR Export',
            },
        ),
        migrations.AddField(
            model_name='albumcd',
            name='_cwr',
            field=models.BooleanField(default=False, editable=False, verbose_name='CWR-Compliance'),
        ),
        migrations.AddField(
            model_name='artist',
            name='_cwr',
            field=models.BooleanField(default=False, editable=False, verbose_name='CWR-Compliance'),
        ),
        migrations.AddField(
            model_name='work',
            name='_cwr',
            field=models.BooleanField(default=False, editable=False, verbose_name='CWR-Compliance'),
        ),
        migrations.AddField(
            model_name='writer',
            name='_cwr',
            field=models.BooleanField(default=False, editable=False, verbose_name='CWR-Compliance'),
        ),
        migrations.AddField(
            model_name='cwrexport',
            name='works',
            field=models.ManyToManyField(to='music_publisher.Work'),
        ),
        migrations.AddField(
            model_name='cwrexport',
            name='num_in_year',
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='cwrexport',
            name='year',
            field=models.CharField(blank=True, db_index=True, editable=False, max_length=2),
        ),
        migrations.CreateModel(
            name='ACKImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(editable=False, max_length=60)),
                ('society_code', models.CharField(editable=False, max_length=3)),
                ('society_name', models.CharField(editable=False, max_length=45)),
                ('date', models.DateField(editable=False)),
                ('report', models.TextField(editable=False)),
            ],
            options={
                'verbose_name': 'CWR ACK Import',
            },
        ),
        migrations.CreateModel(
            name='WorkAcknowledgement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('society_code', models.CharField(choices=[('055', 'SABAM, Belgium'), ('101', 'SOCAN, Canada'), ('088', 'CMRRA, Canada'), ('040', 'KODA, Denmark'), ('089', 'TEOSTO, Finland'), ('058', 'SACEM, France'), ('035', 'GEMA, Germany'), ('074', 'SIAE, Italy'), ('023', 'BUMA, Netherlands'), ('078', 'STEMRA, Netherlands'), ('090', 'TONO, Norway'), ('079', 'STIM, Sweden'), ('052', 'PRS, United Kingdom'), ('044', 'MCPS, United Kingdom'), ('010', 'ASCAP, United States'), ('021', 'BMI, United States'), ('071', 'SESAC Inc., United States'), ('034', 'HFA, United States'), ('319', 'ICE Services, Administrative Agency'), ('707', 'Musicmark, Administrative Agency')], max_length=3, verbose_name='Society')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('CO', 'Conflict'), ('DU', 'Duplicate'), ('RA', 'Transaction Accepted'), ('AS', 'Registration Accepted'), ('AC', 'Registration Accepted with Changes'), ('RJ', 'Rejected'), ('NP', 'No Participation'), ('RC', 'Claim rejected')], max_length=2)),
                ('remote_work_id', models.CharField(blank=True, max_length=20)),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='music_publisher.Work')),
            ],
            options={
                'verbose_name': 'Registration Acknowledgement',
            },
        ),
        migrations.AddField(
            model_name='alternatetitle',
            name='suffix',
            field=models.BooleanField(default=False, help_text='Use this field if it is to be added to the title'),
        ),
        migrations.AlterUniqueTogether(
            name='alternatetitle',
            unique_together={('work', 'title')},
        ),
        migrations.AlterUniqueTogether(
            name='artistinwork',
            unique_together={('work', 'artist')},
        ),
        migrations.AlterUniqueTogether(
            name='writerinwork',
            unique_together={('work', 'writer')},
        ),
        migrations.AlterModelOptions(
            name='albumcd',
            options={'ordering': ('album_title', 'cd_identifier'), 'verbose_name': 'Album and/or Library CD', 'verbose_name_plural': ' Albums and Library CDs'},
        ),
        migrations.AlterModelOptions(
            name='artist',
            options={'verbose_name': 'Performing Artist', 'verbose_name_plural': ' Performing Artists'},
        ),
        migrations.AlterModelOptions(
            name='cwrexport',
            options={'ordering': ('-id',), 'verbose_name': 'CWR Export', 'verbose_name_plural': 'CWR Exports'},
        ),
        migrations.AlterModelOptions(
            name='work',
            options={'verbose_name_plural': '  Works'},
        ),
        migrations.AlterModelOptions(
            name='writer',
            options={'ordering': ('last_name', 'first_name', 'ipi_name'), 'verbose_name_plural': ' Writers'},
        ),
        migrations.AlterModelOptions(
            name='writerinwork',
            options={'ordering': ('-controlled', 'writer__last_name', 'writer__first_name'), 'verbose_name_plural': 'Writers in Work'},
        ),
        migrations.AlterField(
            model_name='work',
            name='last_change',
            field=models.DateTimeField(editable=False, null=True, verbose_name='Last Edited'),
        ),
        migrations.AlterField(
            model_name='writer',
            name='ipi_name',
            field=models.CharField(blank=True, help_text='Required for a controlled writer', max_length=11, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('writer_ipi_name')], verbose_name='IPI Name #'),
        ),
        migrations.AlterField(
            model_name='writer',
            name='pr_society',
            field=models.CharField(blank=True, choices=[('101', 'SOCAN, Canada'), ('088', 'CMRRA, Canada'), ('058', 'SACEM, France'), ('068', 'SDRM, France'), ('035', 'GEMA, Germany'), ('074', 'SIAE, Italy'), ('052', 'PRS, United Kingdom'), ('044', 'MCPS, United Kingdom'), ('010', 'ASCAP, United States'), ('021', 'BMI, United States'), ('071', 'SESAC Inc., United States'), ('034', 'HFA, United States')], help_text='Required for a controlled writer', max_length=3, null=True, validators=[music_publisher.base.CWRFieldValidator('writer_pr_society')], verbose_name='Performing Rights Society'),
        ),
        migrations.AddField(
            model_name='writer',
            name='publisher_fee',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Percentage of royalties kept by the publisher', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='writerinwork',
            name='publisher_fee',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Percentage of royalties kept by the publisher', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AlterField(
            model_name='writer',
            name='generally_controlled',
            field=models.BooleanField(default=False, verbose_name='General Agreement'),
        ),
        migrations.AddField(
            model_name='albumcd',
            name='album_label',
            field=models.CharField(blank=True, default='FOO BAR MUSIC', max_length=60, validators=[music_publisher.base.CWRFieldValidator('first_album_label')]),
        ),
        migrations.AlterField(
            model_name='albumcd',
            name='album_title',
            field=models.CharField(blank=True, default='', max_length=60, unique=True, validators=[music_publisher.base.CWRFieldValidator('first_album_title')]),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='writer',
            name='pr_society',
            field=models.CharField(blank=True, choices=[('055', 'SABAM, Belgium'), ('101', 'SOCAN, Canada'), ('088', 'CMRRA, Canada'), ('040', 'KODA, Denmark'), ('089', 'TEOSTO, Finland'), ('058', 'SACEM, France'), ('035', 'GEMA, Germany'), ('074', 'SIAE, Italy'), ('023', 'BUMA, Netherlands'), ('078', 'STEMRA, Netherlands'), ('090', 'TONO, Norway'), ('079', 'STIM, Sweden'), ('052', 'PRS, United Kingdom'), ('044', 'MCPS, United Kingdom'), ('010', 'ASCAP, United States'), ('021', 'BMI, United States'), ('071', 'SESAC Inc., United States'), ('034', 'HFA, United States')], help_text='Required for a controlled writer', max_length=3, null=True, validators=[music_publisher.base.CWRFieldValidator('writer_pr_society')], verbose_name='Performing Rights Society'),
        ),
        migrations.AlterUniqueTogether(
            name='albumcd',
            unique_together={('album_title', 'album_label')},
        ),
        migrations.AddField(
            model_name='artist',
            name='isni',
            field=models.CharField(blank=True, max_length=16, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('isni')], verbose_name='ISNI'),
        ),
        migrations.AlterField(
            model_name='writer',
            name='ipi_name',
            field=models.CharField(blank=True, max_length=11, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('writer_ipi_name')], verbose_name='IPI Name #'),
        ),
        migrations.AlterField(
            model_name='writer',
            name='pr_society',
            field=models.CharField(blank=True, choices=[('055', 'SABAM, Belgium'), ('101', 'SOCAN, Canada'), ('088', 'CMRRA, Canada'), ('040', 'KODA, Denmark'), ('089', 'TEOSTO, Finland'), ('058', 'SACEM, France'), ('035', 'GEMA, Germany'), ('074', 'SIAE, Italy'), ('023', 'BUMA, Netherlands'), ('078', 'STEMRA, Netherlands'), ('090', 'TONO, Norway'), ('079', 'STIM, Sweden'), ('052', 'PRS, United Kingdom'), ('044', 'MCPS, United Kingdom'), ('010', 'ASCAP, United States'), ('021', 'BMI, United States'), ('071', 'SESAC Inc., United States'), ('034', 'HFA, United States'), ('319', 'ICE Services, Administrative Agency'), ('707', 'Musicmark, Administrative Agency')], max_length=3, null=True, validators=[music_publisher.base.CWRFieldValidator('writer_pr_society')], verbose_name='Performing Rights Society'),
        ),
        migrations.RemoveField(
            model_name='firstrecording',
            name='catalog_number',
        ),
        migrations.AddField(
            model_name='firstrecording',
            name='artist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='music_publisher.Artist', verbose_name='Recording Artist'),
        ),
        migrations.AddField(
            model_name='firstrecording',
            name='record_label',
            field=models.CharField(blank=True, default='FOO BAR MUSIC', max_length=60, validators=[music_publisher.base.CWRFieldValidator('first_album_label')]),
        ),
        migrations.AlterModelOptions(
            name='artistinwork',
            options={'verbose_name': 'Artist performing work', 'verbose_name_plural': 'Artists performing works'},
        ),
        migrations.AlterField(
            model_name='cwrexport',
            name='nwr_rev',
            field=models.CharField(choices=[('NWR', 'CWR 2.1: New work registration'), ('REV', 'CWR 2.1: Revision of registered work'), ('WRK', 'CWR 3.0: Work registration (alpha)')], db_index=True, default='NWR', max_length=3, verbose_name='NWR/REV'),
        ),
        migrations.AlterField(
            model_name='albumcd',
            name='album_title',
            field=models.CharField(blank=True, max_length=60, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('first_album_title')]),
        ),
        migrations.AlterField(
            model_name='cwrexport',
            name='works',
            field=models.ManyToManyField(related_name='cwr_exports', to='music_publisher.Work'),
        ),
        migrations.AlterField(
            model_name='albumcd',
            name='_cwr',
            field=models.BooleanField(default=False, editable=False, verbose_name='CWR-Ready'),
        ),
        migrations.RemoveField(
            model_name='artist',
            name='_cwr',
        ),
        migrations.RemoveField(
            model_name='work',
            name='_cwr',
        ),
        migrations.AlterUniqueTogether(
            name='albumcd',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='work',
            name='original_title',
            field=models.CharField(blank=True, db_index=True, help_text='Use only for modification of existing works.', max_length=60, validators=[music_publisher.base.CWRFieldValidator('work_title')]),
        ),
        migrations.RemoveField(
            model_name='albumcd',
            name='_cwr',
        ),
        migrations.RemoveField(
            model_name='writer',
            name='_cwr',
        ),
        migrations.AlterField(
            model_name='albumcd',
            name='cd_identifier',
            field=models.CharField(blank=True, help_text='This will set the purpose to Library.', max_length=15, null=True, unique=True, validators=[music_publisher.base.CWRFieldValidator('cd_identifier')], verbose_name='CD identifier'),
        ),
        migrations.AlterField(
            model_name='writer',
            name='generally_controlled',
            field=models.BooleanField(default=False, verbose_name='General agreement'),
        ),
        migrations.AlterField(
            model_name='writer',
            name='pr_society',
            field=models.CharField(blank=True, choices=[('055', 'SABAM, Belgium'), ('101', 'SOCAN, Canada'), ('088', 'CMRRA, Canada'), ('040', 'KODA, Denmark'), ('089', 'TEOSTO, Finland'), ('058', 'SACEM, France'), ('035', 'GEMA, Germany'), ('074', 'SIAE, Italy'), ('023', 'BUMA, Netherlands'), ('078', 'STEMRA, Netherlands'), ('090', 'TONO, Norway'), ('079', 'STIM, Sweden'), ('052', 'PRS, United Kingdom'), ('044', 'MCPS, United Kingdom'), ('010', 'ASCAP, United States'), ('021', 'BMI, United States'), ('071', 'SESAC Inc., United States'), ('034', 'HFA, United States'), ('319', 'ICE Services, Administrative Agency'), ('707', 'Musicmark, Administrative Agency')], max_length=3, null=True, validators=[music_publisher.base.CWRFieldValidator('writer_pr_society')], verbose_name='Performing rights society'),
        ),
        migrations.AlterField(
            model_name='cwrexport',
            name='nwr_rev',
            field=models.CharField(choices=[('NWR', 'CWR 2.1: New work registration'), ('REV', 'CWR 2.1: Revision of registered work')], db_index=True, default='NWR', max_length=3, verbose_name='CWR version/type'),
        ),
        migrations.AlterField(
            model_name='writerinwork',
            name='capacity',
            field=models.CharField(blank=True, choices=[('CA', 'Composer&Lyricist'), ('C ', 'Composer'), ('A ', 'Lyricist'), ('AR', 'Arranger'), ('AD', 'Adaptor'), ('TR', 'Translator')], max_length=2),
        ),
        migrations.AlterUniqueTogether(
            name='writerinwork',
            unique_together={('work', 'writer', 'controlled')},
        ),
        migrations.AlterModelOptions(
            name='albumcd',
            options={'ordering': ('album_title', 'cd_identifier', '-id'), 'verbose_name': 'Album and/or Library CD', 'verbose_name_plural': ' Albums and Library CDs'},
        ),
        migrations.AlterModelOptions(
            name='writer',
            options={'ordering': ('last_name', 'first_name', 'ipi_name', '-id'), 'verbose_name_plural': ' Writers'},
        ),
        migrations.AlterModelOptions(
            name='writerinwork',
            options={'ordering': ('-controlled', 'writer__last_name', 'writer__first_name', '-id'), 'verbose_name_plural': 'Writers in Work'},
        ),
        migrations.AddField(
            model_name='cwrexport',
            name='description',
            field=models.CharField(blank=True, max_length=60, verbose_name='Internal Note'),
        ),
    ]
