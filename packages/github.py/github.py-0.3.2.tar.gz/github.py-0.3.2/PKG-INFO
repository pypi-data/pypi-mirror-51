Metadata-Version: 2.1
Name: github.py
Version: 0.3.2
Summary: An asynchronous Python wrapper for the GitHub API, v4.
Home-page: https://github.com/ShineyDev/github.py
Author: ShineyDev
License: Apache Software License
Project-URL: Documentation, https://githubpy.readthedocs.io/en/latest/
Project-URL: Issue Tracker, https://github.com/ShineyDev/github.py/issues/
Project-URL: Source, https://github.com/ShineyDev/github.py/
Description: github.py
        =========
        
        .. image:: https://img.shields.io/github/contributors/ShineyDev/github.py.svg
           :target: https://github.com/ShineyDev/github.py/graphs/contributors
           :alt: GitHub contributors
        
        .. image:: https://readthedocs.org/projects/githubpy/badge/?version=latest
           :target: https://githubpy.readthedocs.io/en/latest/
           :alt: Documentation Status
        
        .. image:: https://img.shields.io/pypi/status/github.py.svg
           :target: https://pypi.python.org/pypi/github.py
           :alt: PyPI status information
        
        .. image:: https://img.shields.io/pypi/v/github.py.svg?color=blue
           :target: https://pypi.python.org/pypi/github.py
           :alt: PyPI version information
        
        .. image:: https://img.shields.io/pypi/pyversions/github.py.svg
           :target: https://pypi.python.org/pypi/github.py
           :alt: PyPI supported Python versions
        
        .. image:: https://img.shields.io/pypi/l/github.py.svg
           :target: https://pypi.python.org/pypi/github.py
           :alt: PyPI license information
        
        An asynchronous Python wrapper for the GitHub API, v4.
        
        Features
        --------
        
        #. Modern, asynchronous, reliable, typed API.
        #. `Descriptive documentation <https://githubpy.readthedocs.io/en/latest/>`_.
        
        .. #. 100% coverage of the supported GitHub API. (soon)
        
        Installation
        ------------
        
        **Python 3.5.2 or higher is required.**
        
        To install a ``final`` version of the wrapper do one of the following:
        
        .. code:: sh
        
            # Windows (PyPI)
            py -3 -m pip install --upgrade github.py
        
            # Linux / OS X (PyPI)
            python3 -m pip install --upgrade github.py
        
        To install the development version of the wrapper do one of the following:
        
        .. code:: sh
        
            # Windows (Git)
            git clone https://github.com/ShineyDev/github.py
            cd github.py
            py -3 -m pip install --upgrade .
        
            # Windows (Git, shorthand)
            py -3 -m pip install --upgrade git+https://github.com/ShineyDev/github.py
            
            # Linux / OS X (Git)
            git clone https://github.com/ShineyDev/github.py
            cd github.py
            python3 -m pip install --upgrade .
        
            # Linux / OS X (Git, shorthand)
            python3 -m pip install --upgrade git+https://github.com/ShineyDev/github.py
        
        To install documentation dependencies do one of the following:
        
        .. code:: sh
        
            # Windows (Git)
            git clone https://github.com/ShineyDev/github.py
            cd github.py
            py -3 -m pip install --upgrade .[docs]
        
            # Windows (Git, shorthand)
            py -3 -m pip install --upgrade git+https://github.com/ShineyDev/github.py#egg=github.py[docs]
        
            # Linux / OS X (Git)
            git clone https://github.com/ShineyDev/github.py
            cd github.py
            python3 -m pip install --upgrade .[docs]
        
            # Linux / OS X (Git, shorthand)
            python3 -m pip install --upgrade git+https://github.com/ShineyDev/github.py#egg=github.py[docs]
        
        Examples
        --------
        
        Fetch a repository's license:
        
        .. code:: py
        
            import github
            g = github.GitHub("token")
            # you'll need a personal access token to use this library - you can
            # get one from https://github.com/settings/tokens. for this example,
            # your token will need the `public_repo` scope.
        
            repo = await g.fetch_repository("ShineyDev", "github.py")
            print(repo.license)
        
        Fetch the authenticated user's first 10 public gists with a custom query via HTTPClient.request:
        
        .. code:: py
        
            import github
            g = github.GitHub("token")
            # you'll need a personal access token to use this library - you can
            # get one from https://github.com/settings/tokens. for this example,
            # your token will need the `public_repo` scope.
        
            query = """
              query fetch_authenticated_user_gists ($privacy: GistPrivacy!) {
                viewer {
                  gists (privacy: $privacy, first: 10) {
                    nodes {
                      url
                    }
                  }
                }
              }
            """
        
            variables = {
                "privacy": "PUBLIC",
            }
        
            json = {
                "query": query,
                "variables": variables,
            }
        
            data = await g.http.request(json=json)
            gists = github.Gist.from_data(data["viewer"]["gists"]["nodes"], g.http)
        
        You can find more examples in the ``examples/`` directory.
        
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Classifier: Typing :: Typed
Requires-Python: >=3.5.2
Description-Content-Type: text/x-rst
Provides-Extra: docs
