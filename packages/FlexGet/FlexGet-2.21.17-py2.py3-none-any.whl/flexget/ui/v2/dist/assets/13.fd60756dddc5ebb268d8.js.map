{"version":3,"sources":["webpack:///./src/common/TextField/index.jsx","webpack:///./src/common/SecondaryNav/styles.js","webpack:///./src/common/SecondaryNav/index.jsx","webpack:///./src/utils/hooks.ts","webpack:///./src/plugins/pendingList/AddListDialog/AddListDialog.jsx","webpack:///./src/plugins/pendingList/AddListDialog/index.js","webpack:///./src/plugins/pendingList/TabList/index.tsx","webpack:///./src/plugins/pendingList/SortList/styles.js","webpack:///./src/plugins/pendingList/SortList/index.jsx","webpack:///./src/common/TaskSelector/TaskSelector.jsx","webpack:///./src/common/TaskSelector/index.js","webpack:///./src/plugins/pendingList/Entry/styles.js","webpack:///./src/plugins/pendingList/Entry/EntryHeader.jsx","webpack:///./src/plugins/pendingList/Entry/Entry.jsx","webpack:///./src/plugins/pendingList/Entry/index.js","webpack:///./src/plugins/pendingList/EntryList/styles.js","webpack:///./src/plugins/pendingList/EntryList/EntryList.jsx","webpack:///./src/plugins/pendingList/EntryList/index.js","webpack:///./src/common/Pagination/styles.js","webpack:///./src/common/Pagination/index.jsx","webpack:///./src/plugins/pendingList/Pagination/styles.js","webpack:///./src/plugins/pendingList/Pagination/Pagination.jsx","webpack:///./src/plugins/pendingList/Pagination/index.js","webpack:///./src/plugins/pendingList/PendingList/styles.js","webpack:///./src/plugins/pendingList/PendingList/index.jsx"],"names":["CustomTextField","_ref","input","_ref$meta","meta","touched","error","custom","_objectWithoutProperties","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_3__","_extends","SecondaryAppBar","styled_base_browser_esm","AppBar","target","name","styles","SecondaryToolbar","Toolbar","theme","palette","secondary","getContrastText","SecondaryTabs","Tabs","SecondaryNav","children","tabs","tabProps","core_browser_esm","MuiThemeProvider","darkTheme","indicatorColor","defaultProps","AddListDialog","open","onClose","handleSubmit","Dialog","onRequestClose","DialogTitle","onSubmit","DialogContent","Field","autoFocus","id","label","fullWidth","component","TextField","DialogActions","Button","onClick","type","variant","color","reduxForm","form","connect","ALD","dispatch","data","Promise","resolve","reject","request","ADD_LIST","onSubmitSuccess","reset","TabList","defaultState","_React$useState2","isOpen","setOpen","addDialog","_slicedToArray","React","openOverlay","closeOverlay","_usePendingList","openDialog","useDispatch","GET_LISTS","handleChange","_","selected","action","SELECT_LIST","_useSelector","useSelector","pendingList","lists","list","listId","shallowEqual","usePendingList","value","scrollButtons","onChange","map","_ref2","Tab","key","icon","react_fontawesome_default","a","ButtonWrapper","SortList","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","event","_this$props","props","onSortUpdate","sortBy","sortOrder","perPage","PureComponent","_this$props2","FormControl","Select","inputProps","MenuItem","TaskSelector","TaskSelector_classCallCheck","TaskSelector_possibleConstructorReturn","TaskSelector_getPrototypeOf","handleClick","recentTask","tasks","taskName","getAttribute","task","reduce","accum","t","_this2","recent","anchorEl","handleClose","Menu","Boolean","transition","Fade","length","ListSubheader","Divider","configs","RECENT_TASK","EntryCard","Card","Poster","EntryInfo","Chips","GenreChip","Chip","QualityChip","primary","EntryPlot","ActionIcon","FontAwesomeIcon","typography","pxToRem","spacing","StarIcon","header","EntryHeader","EntryHeader_classCallCheck","EntryHeader_possibleConstructorReturn","EntryHeader_getPrototypeOf","state","handlePopoverOpen","setState","handlePopoverClose","_this$props$entry$rat","entry","ratings","onMouseOver","onFocus","onMouseOut","onBlur","Typography","alt","site","rating","votes","Popover","anchorOrigin","vertical","horizontal","transformOrigin","_this$props$entry","_this$props$entry$gen","genres","_this$props$entry$qua","quality","g","concat","q","_this$props$entry2","title","_this$props$entry2$ti","titleFormatted","className","Tooltip","enterDelay","chips","Entry","Entry_classCallCheck","Entry_possibleConstructorReturn","Entry_getPrototypeOf","taskMenuEl","handleInjectOpen","currentTarget","handleInjectClose","handleInjectClick","injectEntry","links","entries","Entry_slicedToArray","plugin","link","aria-label","href","approveEntry","rejectEntry","removeEntry","approved","posters","_this$props$entry$des","descriptions","description","es_default","src","p","Entry_EntryHeader","CardActions","common_TaskSelector","APPROVE_ENTRY","REMOVE_ENTRY","REJECT_ENTRY","INJECT_ENTRY","ListWrapper","EntryWrapper","breakpoints","up","EntryList","getTasks","updateEntries","prevProps","page","_this$props$entries$i","items","_prevProps$entries$it","preItems","timer","clearTimeout","setTimeout","getEntries","order","_this$props3","_this$props3$entries$","pendingList_Entry","GET_TASKS","params","GET_ENTRIES","css","active","firstLink","lastLink","Pagination","isActive","isDisabled","join","disabled","makeLink","text","button","_toConsumableArray","createUltimatePagination","itemTypeToComponent","PAGE","ELLIPSIS","FIRST_PAGE_LINK","PREVIOUS_PAGE_LINK","NEXT_PAGE_LINK","LAST_PAGE_LINK","WrapperComponent","_ref3","PaginationWrapper","ListPagination","Pagination_classCallCheck","Pagination_possibleConstructorReturn","Pagination_getPrototypeOf","onPageUpdate","Number","_this$props$entries","totalCount","totalPages","Math","ceil","common_Pagination","currentPage","Content","PendingList","PendingList_classCallCheck","PendingList_possibleConstructorReturn","PendingList_getPrototypeOf","selectList","handleNewPage","handleSortUpdate","_this$state","common_styles","pendingList_TabList","SortList_SortList","pendingList_EntryList","pendingList_Pagination"],"mappings":"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","file":"13.fd60756dddc5ebb268d8.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nconst CustomTextField = ({ input, meta: { touched, error }, ...custom }) => (<TextField error={touched && error} {...input} {...custom}/>);\nCustomTextField.propTypes = {\n    input: PropTypes.object.isRequired,\n    meta: PropTypes.object.isRequired,\n};\nexport default CustomTextField;\n","import styled from '@emotion/styled';\nimport theme from 'theme';\nimport { Toolbar, AppBar, Tabs } from '@material-ui/core';\nexport const SecondaryAppBar = styled(AppBar) `\n  position: static;\n`;\nexport const SecondaryToolbar = styled(Toolbar) `\n  background-color: ${theme.palette.secondary[700]};\n  min-height: 5rem;\n  color: ${theme.palette.getContrastText(theme.palette.secondary[700])};\n`;\nexport const SecondaryTabs = styled(Tabs) `\n  background-color: ${theme.palette.secondary[700]};\n  min-height: 5rem;\n  color: ${theme.palette.getContrastText(theme.palette.secondary[700])};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { darkTheme } from 'theme';\nimport { SecondaryAppBar, SecondaryToolbar, SecondaryTabs } from './styles';\nconst SecondaryNav = ({ children, tabs, ...tabProps }) => (<MuiThemeProvider theme={darkTheme}>\n    <SecondaryAppBar>\n      {tabs ? (<SecondaryTabs indicatorColor=\"primary\" {...tabProps}>\n          {children}\n        </SecondaryTabs>) : (<SecondaryToolbar>{children}</SecondaryToolbar>)}\n    </SecondaryAppBar>\n  </MuiThemeProvider>);\nSecondaryNav.propTypes = {\n    children: PropTypes.node.isRequired,\n    tabs: PropTypes.bool,\n};\nSecondaryNav.defaultProps = {\n    tabs: false,\n};\nexport default SecondaryNav;\n","import * as React from 'react';\nexport const useOverlayState = (defaultState) => {\n    const [isOpen, setOpen] = React.useState(defaultState);\n    const openOverlay = React.useCallback(() => setOpen(true), [setOpen]);\n    const closeOverlay = React.useCallback(() => setOpen(false), [setOpen]);\n    return { isOpen, openOverlay, closeOverlay };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from 'common/TextField';\nconst AddListDialog = ({ open, onClose, handleSubmit }) => (<Dialog open={open} onRequestClose={onClose}>\n    <DialogTitle>Add New Pending List</DialogTitle>\n    <form onSubmit={handleSubmit}>\n      <DialogContent>\n        <Field autoFocus id=\"name\" label=\"List Name\" fullWidth name=\"name\" component={TextField}/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} type=\"button\">\n          Cancel\n        </Button>\n        <Button variant=\"submit\" color=\"primary\">\n          Add\n        </Button>\n      </DialogActions>\n    </form>\n  </Dialog>);\nAddListDialog.propTypes = {\n    open: PropTypes.bool,\n    onClose: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func,\n};\nAddListDialog.defaultProps = {\n    open: false,\n    handleSubmit: () => { },\n};\nexport default reduxForm({\n    form: 'addPendingList',\n})(AddListDialog);\n","import { connect } from 'react-redux';\nimport { reset } from 'redux-form';\nimport { request } from 'utils/actions';\nimport { ADD_LIST } from '../state/actions';\nimport AddListDialog from './AddListDialog';\nfunction mapDispatchToProps(dispatch, { onClose }) {\n    return {\n        onSubmit: data => new Promise((resolve, reject) => dispatch(request(ADD_LIST, { data, resolve, reject }))),\n        onSubmitSuccess: () => {\n            onClose();\n            dispatch(reset('addPendingList'));\n        },\n        onClose: () => {\n            onClose();\n            dispatch(reset('addPendingList'));\n        },\n    };\n}\nexport default connect(null, mapDispatchToProps)(AddListDialog);\n","import * as React from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { request, action } from 'utils/actions';\nimport Tab from '@material-ui/core/Tab';\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport SecondaryNav from 'common/SecondaryNav';\nimport { useOverlayState } from 'utils/hooks';\nimport AddListDialog from '../AddListDialog';\nimport { GET_LISTS, SELECT_LIST } from '../state/actions';\nconst ALD = AddListDialog; // eslint-disable-line @typescript-eslint/no-explicit-any\nconst usePendingList = openDialog => {\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        dispatch(request(GET_LISTS));\n    }, [dispatch]);\n    const handleChange = React.useCallback((_, selected) => {\n        if (selected !== 'add') {\n            return dispatch(action(SELECT_LIST, { selected }));\n        }\n        return openDialog();\n    }, [dispatch, openDialog]);\n    const { lists, listId } = useSelector(({ pendingList }) => ({\n        lists: pendingList.list,\n        listId: pendingList.selected,\n    }), shallowEqual);\n    return { handleChange, lists, listId };\n};\nconst TabList = () => {\n    const addDialog = useOverlayState(false);\n    const { handleChange, lists, listId } = usePendingList(addDialog.openOverlay);\n    return (<div>\n      <SecondaryNav value={listId} variant=\"scrollable\" scrollButtons=\"on\" onChange={handleChange} tabs>\n        {lists.map(({ name, id }) => (<Tab label={name} value={id} key={id}/>))}\n        <Tab icon={<FontAwesomeIcon icon=\"plus-circle\"/>} value=\"add\"/>\n      </SecondaryNav>\n      <ALD open={addDialog.isOpen} onClose={addDialog.closeOverlay}/>\n    </div>);\n};\nexport default TabList;\n","import styled from '@emotion/styled';\nexport const ButtonWrapper = styled.div `\n  display: flex;\n  justify-content: center;\n  > div {\n    margin-left: 2em;\n    margin-right: 2em;\n  }\n`;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport { ButtonWrapper } from './styles';\nexport default class SortList extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.handleChange = event => {\n            const { onSortUpdate, sortBy, sortOrder, perPage } = this.props;\n            const data = {\n                sortBy,\n                sortOrder,\n                perPage,\n                [event.target.name]: event.target.value,\n            };\n            onSortUpdate(data.sortBy, data.sortOrder, data.perPage);\n        };\n    }\n    render() {\n        const { sortBy, sortOrder, perPage } = this.props;\n        return (<ButtonWrapper>\n        <FormControl>\n          <Select value={sortBy} onChange={this.handleChange} inputProps={{\n            name: 'sortBy',\n            id: 'sortBy',\n        }}>\n            <MenuItem value=\"added\">Date Added</MenuItem>\n            <MenuItem value=\"title\">Title</MenuItem>\n            <MenuItem value=\"original_url\">URL</MenuItem>\n            <MenuItem value=\"approved\">Approved</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl>\n          <Select value={sortOrder} onChange={this.handleChange} inputProps={{\n            name: 'sortOrder',\n            id: 'sortOrder',\n        }}>\n            <MenuItem value=\"desc\">Desc</MenuItem>\n            <MenuItem value=\"asc\">Asc</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl>\n          <Select value={perPage} onChange={this.handleChange} inputProps={{\n            name: 'perPage',\n            id: 'perPage',\n        }}>\n            <MenuItem value={25}>25</MenuItem>\n            <MenuItem value={50}>50</MenuItem>\n            <MenuItem value={100}>100</MenuItem>\n          </Select>\n        </FormControl>\n      </ButtonWrapper>);\n    }\n}\nSortList.propTypes = {\n    onSortUpdate: PropTypes.func.isRequired,\n    sortBy: PropTypes.string.isRequired,\n    sortOrder: PropTypes.string.isRequired,\n    perPage: PropTypes.number.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Divider from '@material-ui/core/Divider';\nimport Fade from '@material-ui/core/Fade';\nclass TaskSelector extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.handleClick = event => {\n            const { handleClick, recentTask, tasks } = this.props;\n            const taskName = event.target.getAttribute('value');\n            const task = tasks.reduce((accum, t) => {\n                if (t.name === taskName)\n                    return t;\n                return accum;\n            }, null);\n            if (task)\n                recentTask(task);\n            handleClick(task);\n        };\n    }\n    render() {\n        const { tasks, recent, anchorEl, handleClose } = this.props;\n        return (<Menu id=\"fade-menu\" anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose} transition={Fade}>\n        {recent.length > 0 && (<div>\n            <ListSubheader>Recent</ListSubheader>\n            {recent.map(t => (<MenuItem onClick={this.handleClick} value={t.name} key={t.name}>\n                {t.name}\n              </MenuItem>))}\n            <Divider />\n          </div>)}\n        <span>Recent</span>\n        {tasks.map(t => (<MenuItem onClick={this.handleClick} value={t.name} key={t.name}>\n            {t.name}\n          </MenuItem>))}\n      </Menu>);\n    }\n}\nTaskSelector.propTypes = {\n    handleClose: PropTypes.func.isRequired,\n    handleClick: PropTypes.func.isRequired,\n    recentTask: PropTypes.func.isRequired,\n    tasks: PropTypes.array.isRequired,\n    recent: PropTypes.array.isRequired,\n    anchorEl: PropTypes.object,\n};\nTaskSelector.defaultProps = {\n    anchorEl: null,\n};\nexport default TaskSelector;\n","import { connect } from 'react-redux';\nimport TaskSelector from 'common/TaskSelector/TaskSelector';\nimport { action } from 'utils/actions';\nimport { RECENT_TASK } from 'core/tasks/state/actions';\nexport function mapStateToProps({ tasks }) {\n    return {\n        tasks: tasks.configs,\n        recent: tasks.recent,\n    };\n}\nexport function mapDispatchToProps(dispatch) {\n    return {\n        recentTask: task => dispatch(action(RECENT_TASK, { task })),\n    };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskSelector);\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport theme from 'theme';\nimport { Card, Chip } from '@material-ui/core';\nexport const EntryCard = styled(Card) `\n  height: 300px;\n  padding: 2rem;\n  display: flex;\n  flex-direction: row;\n`;\nexport const Poster = styled.div `\n  margin-right: 20px;\n  height: 100%;\n  img {\n    max-height: 100%;\n    width: auto;\n  }\n`;\nexport const EntryInfo = styled.div `\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nexport const Chips = styled.div `\n  margin-right: 4;\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 2;\n  div {\n    margin: 0.2rem;\n    font-weight: bold;\n    font-size: 1.3rem;\n    height: 2rem;\n  }\n`;\nexport const GenreChip = styled(Chip) `\n  background-color: ${theme.palette.secondary[100]};\n`;\nexport const QualityChip = styled(Chip) `\n  background-color: ${theme.palette.primary[100]};\n`;\n// thanks to https://codepen.io/martinwolf/pen/qlFdp\nexport const EntryPlot = styled.p `\n  display: block; /* Fallback for non-webkit */\n  display: -webkit-box;\n  height: 8.4rem;\n  font-size: 1.5rem;\n  line-height: 1.4;\n  -webkit-line-clamp: 4;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nexport const ActionIcon = styled(FontAwesomeIcon) `\n  margin-right: ${theme.typography.pxToRem(theme.spacing(1))};\n  font-size: 1.6rem;\n`;\nexport const StarIcon = styled(FontAwesomeIcon) `\n  color: gold;\n`;\nexport const header = css `\n  display: flex;\n  flex-direction: row;\n  div:first-child {\n    flex-grow: 1;\n  }\n  h2 {\n    word-wrap: break-word;\n  }\n`;\nexport const rating = css `\n  flex-direction: row;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FlexGetEntry from 'common/FlexGetEntry';\nimport Divider from '@material-ui/core/Divider';\nimport { Chips, GenreChip, QualityChip, StarIcon, header } from './styles';\nclass EntryHeader extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = { anchorEl: null };\n        this.handlePopoverOpen = event => {\n            this.setState({ anchorEl: event.target });\n        };\n        this.handlePopoverClose = () => {\n            this.setState({ anchorEl: null });\n        };\n    }\n    ratings() {\n        const { anchorEl } = this.state;\n        const { entry: { ratings = [] }, } = this.props;\n        const open = !!anchorEl;\n        return (<div>\n        <div onMouseOver={this.handlePopoverOpen} onFocus={this.handlePopoverOpen} onMouseOut={this.handlePopoverClose} onBlur={this.handlePopoverClose}>\n          <Typography variant=\"h6\">\n            {ratings.length > 0 && (<span>\n                <StarIcon icon=\"star\" alt={ratings[0].site}/>\n                {ratings[0].rating}\n                {ratings[0].votes > 0 && <span> ({ratings[0].votes})</span>}\n              </span>)}\n          </Typography>\n        </div>\n        <Popover open={open} anchorEl={anchorEl} anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n        }} transformOrigin={{\n            vertical: 'top',\n            horizontal: 'left',\n        }} onClose={this.handlePopoverClose}>\n          <Typography>I use Popover. test</Typography>\n        </Popover>\n      </div>);\n    }\n    chips() {\n        const { entry: { genres = [], quality = [] }, } = this.props;\n        return (<Chips>\n        {genres.map(g => (<GenreChip label={g} key={`${g}-genre`}/>))}\n        {quality.map(q => (<QualityChip label={q} key={`${q}-quality`}/>))}\n      </Chips>);\n    }\n    render() {\n        const { entry: { title, titleFormatted = [] }, } = this.props;\n        return (<div>\n        <div className={header}>\n          <Tooltip enterDelay={200} title={title}>\n            <Typography variant=\"h6\">{titleFormatted}</Typography>\n          </Tooltip>\n          {this.ratings()}\n        </div>\n        {this.chips()}\n        <Divider />\n      </div>);\n    }\n}\nEntryHeader.propTypes = {\n    entry: PropTypes.instanceOf(FlexGetEntry).isRequired,\n};\nexport default EntryHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Img from 'react-image';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport FlexGetEntry from 'common/FlexGetEntry';\nimport TaskSelector from 'common/TaskSelector';\nimport EntryHeader from './EntryHeader';\nimport { ActionIcon, EntryCard, Poster, EntryInfo, EntryPlot } from './styles';\n/* eslint-disable camelcase */\nclass Entry extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            taskMenuEl: null,\n        };\n        this.handleInjectOpen = event => this.setState({ taskMenuEl: event.currentTarget });\n        this.handleInjectClose = () => this.setState({ taskMenuEl: null });\n        this.handleInjectClick = task => {\n            const { injectEntry } = this.props;\n            injectEntry(task);\n            this.handleInjectClose();\n        };\n    }\n    links() {\n        const { entry: { links }, } = this.props;\n        return Object.entries(links).map(([plugin, link]) => (<Button key={`${plugin}-link`} color=\"primary\" aria-label=\"add\" href={link} target=\"_blank\">\n        {plugin}\n      </Button>));\n    }\n    render() {\n        const { entry, approveEntry, rejectEntry, removeEntry } = this.props;\n        const { approved, titleFormatted, posters } = entry;\n        const { taskMenuEl } = this.state;\n        const { entry: { descriptions = [] }, } = this.props;\n        const description = descriptions.length > 0 ? descriptions[0] : '';\n        return (<EntryCard>\n        <Poster>\n          <Img src={posters.map(p => `api/cached/?url=${p}`)} alt={titleFormatted}/>\n        </Poster>\n        <EntryInfo>\n          <EntryHeader entry={entry}/>\n          <EntryPlot>{description}</EntryPlot>\n          <CardActions>\n            {approved ? (<Button onClick={rejectEntry}>\n                <ActionIcon icon=\"times\"/>\n                Reject\n              </Button>) : (<Button onClick={approveEntry}>\n                <ActionIcon icon=\"check\"/>\n                Approve\n              </Button>)}\n            <Button onClick={removeEntry}>\n              <ActionIcon icon=\"trash-alt\"/>\n              Remove\n            </Button>\n            <Button onClick={this.handleInjectOpen}>\n              <ActionIcon icon=\"arrows-alt\"/>\n              Inject\n            </Button>\n            <TaskSelector anchorEl={taskMenuEl} handleClick={this.handleInjectClick} handleClose={this.handleInjectClose}/>\n            {this.links()}\n          </CardActions>\n        </EntryInfo>\n      </EntryCard>);\n    }\n}\nEntry.propTypes = {\n    entry: PropTypes.instanceOf(FlexGetEntry).isRequired,\n    approveEntry: PropTypes.func.isRequired,\n    rejectEntry: PropTypes.func.isRequired,\n    removeEntry: PropTypes.func.isRequired,\n    injectEntry: PropTypes.func.isRequired,\n};\nexport default Entry;\n","import { connect } from 'react-redux';\nimport { APPROVE_ENTRY, REJECT_ENTRY, REMOVE_ENTRY, INJECT_ENTRY, } from 'plugins/pendingList/state/actions';\nimport { request } from 'utils/actions';\nimport Entry from './Entry';\nfunction mapDispatchToProps(dispatch, { entry }) {\n    return {\n        approveEntry: () => dispatch(request(APPROVE_ENTRY, { entry })),\n        removeEntry: () => dispatch(request(REMOVE_ENTRY, { entry })),\n        rejectEntry: () => dispatch(request(REJECT_ENTRY, { entry })),\n        injectEntry: task => dispatch(request(INJECT_ENTRY, { entry, task })),\n    };\n}\nexport default connect(null, mapDispatchToProps)(Entry);\n","import styled from '@emotion/styled';\nimport theme from 'theme';\nexport const ListWrapper = styled.div `\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n`;\nexport const EntryWrapper = styled.div `\n  width: 100%;\n  padding: ${theme.typography.pxToRem(theme.spacing(2))};\n\n  ${theme.breakpoints.up('sm')} {\n    width: 100%;\n  }\n\n  ${theme.breakpoints.up('md')} {\n    width: 50%;\n  }\n`;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport FlexGetEntry from 'common/FlexGetEntry';\nimport Entry from '../Entry';\nimport { EntryWrapper, ListWrapper } from './styles';\nexport default class EntryList extends PureComponent {\n    componentDidMount() {\n        const { getTasks } = this.props;\n        // Load tasks for TaskSelector\n        getTasks();\n        this.updateEntries();\n    }\n    componentDidUpdate(prevProps) {\n        const { listId, sortBy, sortOrder, page, perPage, entries: { items = [] }, } = this.props;\n        const { entries: { items: preItems = [] }, } = prevProps;\n        // If list of sort options have changes\n        if (listId !== prevProps.listId ||\n            page !== prevProps.page ||\n            sortBy !== prevProps.sortBy ||\n            sortOrder !== prevProps.sortOrder ||\n            perPage !== prevProps.perPage) {\n            this.updateEntries();\n        }\n        // Check if entries were removed, probably due to an action such as remove\n        // Delay the update for 100ms\n        if (preItems.length > items.length) {\n            if (this.timer)\n                clearTimeout(this.timer);\n            this.timer = setTimeout(() => this.updateEntries(), 1000);\n        }\n    }\n    updateEntries() {\n        const { sortBy, sortOrder, page, perPage, getEntries } = this.props;\n        getEntries({\n            sortBy,\n            order: sortOrder,\n            perPage,\n            page,\n        });\n    }\n    render() {\n        const { entries: { items = [] }, listId, } = this.props;\n        return (<div>\n        <ListWrapper>\n          {listId === null && <div>Please Select List</div>}\n          {items &&\n            items.map(entry => (<EntryWrapper key={entry.id}>\n                <Entry entry={entry}/>\n              </EntryWrapper>))}\n        </ListWrapper>\n      </div>);\n    }\n}\nEntryList.propTypes = {\n    listId: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    entries: PropTypes.shape({\n        page: PropTypes.number,\n        totalCount: PropTypes.number,\n        items: PropTypes.arrayOf(PropTypes.instanceOf(FlexGetEntry)),\n    }).isRequired,\n    getEntries: PropTypes.func.isRequired,\n    getTasks: PropTypes.func.isRequired,\n    sortBy: PropTypes.string.isRequired,\n    sortOrder: PropTypes.string.isRequired,\n    perPage: PropTypes.number.isRequired,\n    page: PropTypes.number.isRequired,\n};\nEntryList.defaultProps = {\n    listId: false,\n};\n","import { connect } from 'react-redux';\nimport { GET_TASKS } from 'core/tasks/state/actions';\nimport { GET_ENTRIES } from 'plugins/pendingList/state/actions';\nimport { request } from 'utils/actions';\nimport EntryList from './EntryList';\nfunction mapStateToProps({ pendingList }) {\n    return {\n        entries: pendingList.entries,\n    };\n}\nfunction mapDispatchToProps(dispatch, { listId }) {\n    return {\n        getTasks: () => dispatch(request(GET_TASKS)),\n        getEntries: params => listId && dispatch(request(GET_ENTRIES, { listId, params })),\n    };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(EntryList);\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport theme from 'theme';\nexport const link = css `\n  font-size: 16px;\n  margin: 0 0 5px;\n  padding: 2px 12px;\n  background-color: ${theme.palette.primary[600]};\n  min-width: 50px;\n  max-width: 50px;\n  border-radius: 0;\n  border-right: 1px solid rgba(0, 0, 0, 0.25);\n  &:hover {\n    background-color: ${theme.palette.primary[300]};\n  }\n`;\nexport const active = css `\n  background-color: ${theme.palette.primary[300]};\n`;\nexport const firstLink = css `\n  border-radius: 10px 0 0 10px;\n`;\nexport const lastLink = css `\n  border-radius: 0 10px 10px 0;\n  border-right: none;\n`;\nexport const Pagination = styled.div `\n  justify-content: center;\n  display: flex;\n  flex-direction: row;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { createUltimatePagination } from 'react-ultimate-pagination';\nimport { Pagination, firstLink, lastLink, link, active } from './styles';\nconst page = ({ isActive, value, isDisabled, onClick }) => (<Button className={isActive ? [active, link].join(' ') : link} onClick={onClick} disabled={isDisabled}>\n    {value}\n  </Button>);\npage.propTypes = {\n    value: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    isActive: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n};\npage.defaultProps = { isDisabled: false, isActive: false };\nfunction makeLink(styles, text) {\n    const button = ({ isActive, onClick, isDisabled }) => (<Button className={isActive ? [active, ...styles].join(' ') : styles.join(' ')} onClick={onClick} disabled={isActive ? true : isDisabled}>\n      {text}\n    </Button>);\n    button.propTypes = {\n        isActive: PropTypes.bool,\n        isDisabled: PropTypes.bool,\n        onClick: PropTypes.func.isRequired,\n    };\n    button.defaultProps = { isDisabled: false, isActive: false };\n    return button;\n}\nfunction wrapper({ children }) {\n    return <Pagination>{children}</Pagination>;\n}\nwrapper.propTypes = { children: PropTypes.node.isRequired };\nexport default createUltimatePagination({\n    itemTypeToComponent: {\n        PAGE: page,\n        ELLIPSIS: makeLink([link], '...'),\n        FIRST_PAGE_LINK: makeLink([firstLink, link], '<<'),\n        PREVIOUS_PAGE_LINK: makeLink([link], '<'),\n        NEXT_PAGE_LINK: makeLink([link], '>'),\n        LAST_PAGE_LINK: makeLink([lastLink, link], '>>'),\n    },\n    WrapperComponent: wrapper,\n});\n","import styled from '@emotion/styled';\nexport const PaginationWrapper = styled.div `\n  margin-top: -41px;\n`;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Pagination from 'common/Pagination';\nimport FlexgetEntry from 'common/FlexGetEntry';\nimport { PaginationWrapper } from './styles';\nexport default class ListPagination extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.onPageUpdate = page => this.props.onPageUpdate(Number(page));\n    }\n    render() {\n        const { entries: { totalCount, page }, perPage, } = this.props;\n        if (!totalCount) {\n            return null;\n        }\n        const totalPages = Math.ceil(totalCount / perPage);\n        return (<PaginationWrapper>\n        {totalPages > 1 && (<Pagination currentPage={page} totalPages={totalPages} onChange={this.onPageUpdate}/>)}\n      </PaginationWrapper>);\n    }\n}\nListPagination.propTypes = {\n    entries: PropTypes.shape({\n        page: PropTypes.number,\n        totalCount: PropTypes.number,\n        items: PropTypes.arrayOf(PropTypes.instanceOf(FlexgetEntry)),\n    }).isRequired,\n    onPageUpdate: PropTypes.func.isRequired,\n    perPage: PropTypes.number.isRequired,\n};\n","import { connect } from 'react-redux';\nimport Pagination from './Pagination';\nfunction mapStateToProps({ pendingList }) {\n    return {\n        entries: pendingList.entries,\n    };\n}\nexport default connect(mapStateToProps, null)(Pagination);\n","import styled from '@emotion/styled';\nimport theme from 'theme';\nexport const Content = styled.div `\n  flex: 1;\n  overflow-y: auto;\n  padding: ${theme.typography.pxToRem(theme.spacing(1))};\n\n  ${theme.breakpoints.up('sm')} {\n    padding: ${theme.typography.pxToRem(theme.spacing(2))};\n  }\n`;\n","import React, { PureComponent } from 'react';\nimport { NoPaddingWrapper } from 'common/styles';\nimport TabList from '../TabList';\nimport SortList from '../SortList';\nimport EntryList from '../EntryList';\nimport Pagination from '../Pagination';\nimport { Content } from './styles';\nclass PendingList extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            listId: false,\n            page: 1,\n            perPage: 50,\n            sortBy: 'added',\n            sortOrder: 'desc',\n        };\n        this.selectList = listId => this.setState({ listId, page: 1 });\n        this.handleNewPage = page => this.setState({ page });\n        this.handleSortUpdate = (sortBy, sortOrder, perPage) => this.setState({ sortBy, sortOrder, perPage });\n    }\n    render() {\n        const { listId, sortBy, sortOrder, perPage, page } = this.state;\n        return (<NoPaddingWrapper>\n        <TabList listId={listId} selectList={this.selectList}/>\n        <Content>\n          <SortList onSortUpdate={this.handleSortUpdate} sortBy={sortBy} sortOrder={sortOrder} perPage={perPage}/>\n          <EntryList listId={listId} sortBy={sortBy} sortOrder={sortOrder} page={page} perPage={perPage}/>\n        </Content>\n        <Pagination listId={listId} onPageUpdate={this.handleNewPage} perPage={perPage}/>\n      </NoPaddingWrapper>);\n    }\n}\nexport default PendingList;\n"],"sourceRoot":""}