- slug: workflow-bbduk-salmon-qc-single
  name: "BBDuk - Salmon - QC (single-end)"
  data_name: "{{ reads|sample_name|default('?') }}"
  requirements:
    expression-engine: jinja
  version: 1.0.0
  type: data:workflow:rnaseq:salmon
  category: Pipeline
  description: |
    Alignment-free RNA-seq pipeline. Salmon tool and tximport package
    are used in quantification step to produce gene-level abundance
    estimates.

    rRNA and globin-sequence contamination rate in the sample is
    determined using STAR aligner. Quality-trimmed reads are down-sampled
    (using Seqtk tool) and aligned to the genome, rRNA and globin
    reference sequences. The rRNA and globin-sequence alignment rates
    indicate the percentage of the reads in the sample that are of
    rRNA and globin origin, respectively. Alignment of down-sampled data
    to a whole genome reference sequence is used to produce an alignment
    file suitable for Samtools and QoRTs QC analysis.

    Per-sample analysis results and QC data is summarized by the MultiQC
    tool.
  input:
      - name: reads
        label: Select sample(s)
        type: data:reads:fastq:single
      - name: salmon_index
        label: Salmon index
        type: data:index:salmon
      - name: annotation
        label: Annotation
        type: data:annotation
      - name: genome
        label: Indexed reference genome
        type: data:genomeindex:star
        description: |
          Genome index prepared by STAR aligner indexing tool.
      - name: rrna_reference
        label: Indexed rRNA reference sequence
        type: data:genomeindex:star
        description: |
          Reference sequence index prepared by STAR aligner indexing tool.
      - name: globin_reference
        label: Indexed Globin reference sequence
        type: data:genomeindex:star
        description: |
          Reference sequence index prepared by STAR aligner indexing tool.
      - name: show_advanced
        label: Show advanced parameters
        type: basic:boolean
        default: false
      - name: preprocessing
        label: Preprocessing (BBDuk)
        hidden: '!show_advanced'
        group:
          - name: adapters
            label: Adapters
            type: list:data:seq:nucleotide
            required: false
          - name: custom_adapter_sequences
            label: Custom adapter sequences [literal]
            type: list:basic:string
            required: false
            default: []
            description: |
              Custom adapter sequences can be specified by inputting them one by one and pressing Enter
              after each sequence.
          - name: kmer_length
            label: K-mer length
            type: basic:integer
            default: 23
            description: K-mer length must be smaller or equal to the length of adapters.
          - name: min_k
            label: Minimum k-mer length at right end of reads used for trimming
            type: basic:integer
            default: 11
            disabled: "preprocessing.adapters.length === 0 && preprocessing.custom_adapter_sequences.length === 0"
          - name: hamming_distance
            label: Maximum Hamming distance for k-mers
            type: basic:integer
            default: 1
          - name: maxns
            label: Max Ns after trimming [maxns=-1]
            type: basic:integer
            default: -1
            description: |
              If non-negative, reads with more Ns than this (after trimming) will be discarded.
          - name: trim_quality
            label: Quality below which to trim reads from the right end
            type: basic:integer
            default: 10
            description: Phred algorithm is used, which is more accurate than naive trimming.
          - name: min_length
            label: Minimum read length
            type: basic:integer
            default: 20
            description: Reads shorter than minimum read length after trimming are discarded.
      - name: quantification
        label: Quantification (Salmon)
        hidden: '!show_advanced'
        group:
          - name: seq_bias
            label: Perform sequence-specific bias correction
            type: basic:boolean
            default: false
          - name: gc_bias
            label: Perform fragment GC bias correction.
            type: basic:boolean
            default: false
          - name: validate_mappings
            label: Validate mappings using alignment-based verification.
            type: basic:boolean
            default: true
          - name: consensus_slack
            label: Validate mappings using alignment-based verification.
            type: basic:decimal
            description: |
                The amount of slack allowed in the quasi-mapping
                consensus mechanism.  Normally, a transcript must
                cover all hits to be considered for mapping.
                If this is set to a fraction, X, greater than 0
                (and in [0,1)), then a transcript can fail
                to cover up to (100 * X)% of the hits before it
                is discounted as a mapping candidate. The default
                value of this option is 0.2 if --validateMappings
                is given and 0 otherwise".
          - name: min_score_fraction
            label: Minimum alignment score fraction
            type: basic:decimal
            default: 0.65
            description: |
                The fraction of the optimal possible alignment
                score that a mapping must achieve in order to be
                considered valid - should be in (0,1].
          - name: range_factorization_bins
            label: Range factorization bins
            type: basic:integer
            default: 0
            description: |
                Factorizes the likelihood used in
                quantification by adopting a new notion
                of equivalence classes based on the
                conditional probabilities with which
                fragments are generated from different
                transcripts.  This is a more
                fine-grained factorization than the
                normal rich equivalence classes.  The
                default value (0) corresponds to the
                standard rich equivalence classes, and
                larger values imply a more fine-grained
                factorization.  If range factorization
                is enabled, a common value to select
                for this parameter is 4.
          - name: min_assigned_frag
            label: Minimum number of assigned fragments
            type: basic:integer
            default: 10
      - name: downsampling
        label: Downsampling (Seqtk)
        hidden: '!show_advanced'
        group:
          - name: n_reads
            label: Number of reads
            type: basic:integer
            default: 10000000
          - name: seed
            label: Seed
            type: basic:integer
            default: 11
          - name: fraction
            label: Fraction
            type: basic:decimal
            required: false
            range: [0, 1.0]
            description: |
              Use the fraction of reads [0 - 1.0] from the orignal input file instead
              of the absolute number of reads. If set, this will override the
              "Number of reads" input parameter.
          - name: two_pass
            label: 2-pass mode
            type: basic:boolean
            default: false
            description: |
              Enable two-pass mode when down-sampling. Two-pass mode is twice
              as slow but with much reduced memory.
  run:
    language: workflow
    program:
      - id: preprocessing
        run: bbduk-single
        input:
          show_advanced: true
          reads: '{{ input.reads }}'
          min_length: '{{ input.preprocessing.min_length }}'
          reference:
            sequences: '{{ input.preprocessing.adapters or [] }}'
            literal_sequences: '{{ input.preprocessing.custom_adapter_sequences }}'
          processing:
            kmer_length: '{{ input.preprocessing.kmer_length }}'
            hamming_distance: '{{ input.preprocessing.hamming_distance }}'
          operations:
            k_trim: "{{ 'r' if input.preprocessing.adapters or input.preprocessing.custom_adapter_sequences else 'f' }}"
            min_k: '{{ input.preprocessing.min_k if input.preprocessing.adapters or input.preprocessing.custom_adapter_sequences else -1 }}'
            quality_trim: r
            trim_quality: '{{ input.preprocessing.trim_quality }}'
            maxns: '{{ input.preprocessing.maxns }}'
      - id: quantification
        run: feature_counts
        input:
          reads: '{{ steps.preprocessing }}'
          salmon_index: '{{ input.salmon_index }}'
          annotation: '{{ input.annotation }}'
          options:
            seq_bias: '{{ input.quantification.seq_bias }}'
            gc_bias: '{{ input.quantification.gc_bias }}'
            validate_mappings: '{{ input.quantification.validate_mappings }}'
            consensus_slack: '{{ input.quantification.consensus_slack }}'
            min_score_fraction: '{{ input.quantification.min_score_fraction }}'
            range_factorization_bins: '{{ input.quantification.range_factorization_bins }}'
            min_assigned_frag: '{{ input.quantification.min_assigned_frag }}'
      - id: downsampling
        run: seqtk-sample-single
        input:
          reads: '{{ steps.preprocessing }}'
          n_reads: '{{ input.downsampling.n_reads }}'
          advanced:
            seed: '{{ input.downsampling.seed }}'
            fraction: '{{ input.downsampling.fraction }}'
            two_pass: '{{ input.downsampling.two_pass }}'
      - id: alignment_qc
        run: alignment-star
        input:
          reads: '{{ steps.downsampling }}'
          genome: '{{ input.genome }}'
      - id: alignment_qc_rrna
        run: alignment-star
        input:
          reads: '{{ steps.downsampling }}'
          genome: '{{ input.rrna_reference }}'
      - id: alignment_qc_globin
        run: alignment-star
        input:
          reads: '{{ steps.downsampling }}'
          genome: '{{ input.globin_reference }}'
      - id: qorts
        run: qorts-qc
        input:
          alignment: '{{ steps.alignment_qc }}'
          annotation: '{{ input.annotation }}'
          options:
            stranded: 'auto'
            cdna_index: '{{ input.salmon_index }}'
            n_reads: 5000000
      - id: idxstats
        run: samtools-idxstats
        input:
          alignment: '{{ steps.alignment_qc }}'
      - id: multiqc
        run: multiqc
        input:
          data: '{{ [
            input.reads,
            steps.preprocessing,
            steps.quantification,
            steps.downsampling,
            steps.alignment_qc
            steps.alignment_qc_rrna,
            steps.alignment_qc_globin,
            steps.qorts,
            steps.idxstats
            ] }}'


- slug: workflow-bbduk-salmon-qc-paired
  name: "BBDuk - Salmon - QC (paired-end)"
  data_name: "{{ reads|sample_name|default('?') }}"
  requirements:
    expression-engine: jinja
  version: 1.4.0
  type: data:workflow:rnaseq:featurecounts:qc
  category: Pipeline
  description: |
    This RNA-seq pipeline is comprised of three steps preprocessing, alignment,
    and quantification.

    First, reads are preprocessed by __BBDuk__ which removes adapters, trims
    reads for quality from the 3'-end, and discards reads that are too short
    after trimming. Compared to similar tools, BBDuk is regarded for its
    computational efficiency.  Next, preprocessed reads are aligned by __STAR__
    aligner. At the time of implementation, STAR is considered a
    state-of-the-art tool that consistently produces accurate results from
    diverse sets of reads, and performs well even with default settings. For
    more information see [this comparison of RNA-seq
    aligners](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5792058/). Finally,
    aligned reads are summarized to genes by __featureCounts__. Gaining wide
    adoption among the bioinformatics community, featureCounts yields
    expressions in a computationally efficient manner. All three tools in
    this workflow support parallelization to accelerate the analysis.

    rRNA contamination rate in the sample is determined using the STAR aligner.
    Quality-trimmed reads are down-sampled (using Seqtk tool) and aligned to the
    rRNA reference sequences. The alignment rate indicates the percentage of the
    reads in the sample that are derived from the rRNA sequences.
  input:
    - name: preprocessing
      label: Preprocessing (BBDuk)
      group:
        - name: reads
          label: Reads
          type: data:reads:fastq:paired
        - name: adapters
          label: Adapters
          type: list:data:seq:nucleotide
          required: false
        - name: show_advanced
          label: Show advanced parameters
          type: basic:boolean
          default: false
        - name: custom_adapter_sequences
          label: Custom adapter sequences [literal]
          type: list:basic:string
          hidden: '!preprocessing.show_advanced'
          default: []
          required: false
          description: |
            Custom adapter sequences can be specified by inputting them one by one and pressing Enter
            after each sequence.
        - name: kmer_length
          label: K-mer length
          type: basic:integer
          default: 23
          description: K-mer length must be smaller or equal to the length of adapters.
          hidden: '!preprocessing.show_advanced'
        - name: min_k
          label: Minimum k-mer length at right end of reads used for trimming
          type: basic:integer
          default: 11
          hidden: "!preprocessing.show_advanced"
          disabled: "preprocessing.adapters.length === 0 && preprocessing.custom_adapter_sequences.length === 0"
        - name: hamming_distance
          label: Maximum Hamming distance for k-mers
          type: basic:integer
          default: 1
          hidden: '!preprocessing.show_advanced'
        - name: maxns
          label: Max Ns after trimming [maxns=-1]
          type: basic:integer
          default: -1
          description: |
            If non-negative, reads with more Ns than this (after trimming) will be discarded.
          hidden: '!preprocessing.show_advanced'
        - name: trim_quality
          label: Quality below which to trim reads from the right end
          type: basic:integer
          default: 10
          description: Phred algorithm is used, which is more accurate than naive trimming.
          hidden: '!preprocessing.show_advanced'
        - name: min_length
          label: Minimum read length
          type: basic:integer
          default: 20
          description: Reads shorter than minimum read length after trimming are discarded.
          hidden: '!preprocessing.show_advanced'
    - name: alignment
      label: Alignment (STAR)
      group:
        - name: genome
          label: Indexed reference genome
          type: data:genomeindex:star
          description: |
            Genome index prepared by STAR aligner indexing tool.
        - name: show_advanced
          label: Show advanced parameters
          type: basic:boolean
          default: false
        - name: unstranded
          label: The data is unstranded
          type: basic:boolean
          default: false
          hidden: '!alignment.show_advanced'
          description: |
            For unstranded RNA-seq data, Cufflinks/Cuffdiff require spliced
            alignments with XS strand attribute, which STAR will generate with
            --outSAMstrandField intronMotif option. As required, the XS strand
            attribute will be generated for all alignments that contain splice
            junctions. The spliced alignments that have undefined strand
            (i.e. containing only non-canonical unannotated junctions) will be
            suppressed. If you have stranded RNA-seq data, you do not need to
            use any specific STAR options. Instead, you need to run Cufflinks with
            the library option --library-type options. For example, c
            ufflinks --library-type fr-firststrand should be used for the standard
            dUTP protocol, including Illumina's stranded Tru-Seq.
            This option has to be used only for Cufflinks runs and not for STAR runs.
        - name: noncannonical
          label: Remove non-cannonical junctions (Cufflinks compatibility)
          type: basic:boolean
          default: false
          hidden: '!alignment.show_advanced'
          description: |
            It is recommended to remove the non-canonical junctions for Cufflinks
            runs using --outFilterIntronMotifs RemoveNoncanonical.
        - name: detect_chimeric
          label: Detect chimeric and circular alignments
          hidden: '!alignment.show_advanced'
          group:
            - name: chimeric
              label: Detect chimeric and circular alignments
              type: basic:boolean
              default: false
              description: |
                To switch on detection of chimeric (fusion) alignments (in addition to normal mapping),
                --chimSegmentMin should be set to a positive value. Each chimeric alignment consists
                of two "segments". Each segment is non-chimeric on its own, but the segments are
                chimeric to each other (i.e. the segments belong to different chromosomes, or different
                strands, or are far from each other). Both segments may contain splice junctions, and one
                of the segments may contain portions of both mates. --chimSegmentMin parameter controls
                the minimum mapped length of the two segments that is allowed. For example, if you have
                2x75 reads and used --chimSegmentMin 20, a chimeric alignment with 130b on one chromosome
                and 20b on the other will be output, while 135 + 15 won't be.
            - name: chimSegmentMin
              label: --chimSegmentMin
              type: basic:integer
              default: 20
              disabled: "detect_chimeric.chimeric != true"
        - name: t_coordinates
          label: Output in transcript coordinates
          hidden: '!alignment.show_advanced'
          group:
            - name: quantmode
              label: Output in transcript coordinates
              type: basic:boolean
              default: false
              description: |
                With --quantMode TranscriptomeSAM option STAR will output alignments translated into
                transcript coordinates in the Aligned.toTranscriptome.out.bam file (in addition to alignments
                in genomic coordinates in Aligned.*.sam/bam files). These transcriptomic alignments can be used
                with various transcript quantification software that require reads to be mapped to transcriptome,
                such as RSEM or eXpress.
            - name: singleend
              label: Allow soft-clipping and indels
              type: basic:boolean
              default: false
              disabled: "t_coordinates.quantmode != true"
              description: |
                By default, the output satisfies RSEM requirements: soft-clipping or indels are not allowed.
                Use --quantTranscriptomeBan Singleend to allow insertions, deletions ans soft-clips in the
                transcriptomic alignments, which can be used by some expression quantification software (e.g. eXpress).
            - name: gene_counts
              label: Count reads
              type: basic:boolean
              default: false
              disabled: "t_coordinates.quantmode != true"
              description: |
                With --quantMode GeneCounts option STAR will count number reads per gene while mapping.
                A read is counted if it overlaps (1nt or more) one and only one gene. Both ends of the
                paired-end read are checked for overlaps. The counts coincide with those produced by
                htseq-count with default parameters. ReadsPerGene.out.tab file with 4 columns which
                correspond to different strandedness options: column 1: gene ID; column 2: counts for
                unstranded RNA-seq; column 3: counts for the 1st read strand aligned with RNA
                (htseq-count option -s yes); column 4: counts for the 2nd read strand aligned with
                RNA (htseq-count option -s reverse).
        - name: filtering
          label: Output Filtering
          hidden: '!alignment.show_advanced'
          group:
            - name: outFilterType
              label: Type of filtering
              type: basic:string
              default: Normal
              description: |
                Normal: standard filtering using only current alignment; BySJout: keep only those
                reads that contain junctions that passed filtering into SJ.out.tab
              choices:
                - label: Normal
                  value: Normal
                - label: BySJout
                  value: BySJout
            - name: outFilterMultimapNmax
              label: --outFilterMultimapNmax
              type: basic:integer
              required: false
              description: |
                Read alignments will be output only if the read maps fewer than this value,
                otherwise no alignments will be output (default: 10).
            - name: outFilterMismatchNmax
              label: --outFilterMismatchNmax
              type: basic:integer
              required: false
              description: |
                Alignment will be output only if it has fewer mismatches than this value (default: 10).
            - name: outFilterMismatchNoverLmax
              label: --outFilterMismatchNoverLmax
              type: basic:decimal
              required: false
              description: |
                Max number of mismatches per pair relative to read length: for 2x100b,
                max number of mismatches is 0.06*200=8 for the paired read.
            - name: outFilterScoreMin
              label: --outFilterScoreMin
              type: basic:integer
              required: false
              description: |
                Alignment will be output only if its score is higher than or equal to this value (default: 0).
        - name: alignment
          label: Alignment and Seeding
          hidden: '!alignment.show_advanced'
          group:
            - name: alignSJoverhangMin
              label: --alignSJoverhangMin
              type: basic:integer
              required: false
              description: |
                Minimum overhang (i.e. block size) for spliced alignments (default: 5).
            - name: alignSJDBoverhangMin
              label: --alignSJDBoverhangMin
              type: basic:integer
              required: false
              description: |
                Minimum overhang (i.e. block size) for annotated (sjdb) spliced alignments (default: 3).
            - name: alignIntronMin
              label: --alignIntronMin
              type: basic:integer
              required: false
              description: |
                Minimum intron size: genomic gap is considered intron if its length >= alignIntronMin,
                otherwise it is considered Deletion (default: 21).
            - name: alignIntronMax
              label: --alignIntronMax
              type: basic:integer
              required: false
              description: |
                Maximum intron size, if 0, max intron size will be determined by (2pow(winBinNbits)*winAnchorDistNbins)
                (default: 0).
            - name: alignMatesGapMax
              label: --alignMatesGapMax
              type: basic:integer
              required: false
              description: |
                Maximum gap between two mates, if 0, max intron gap will be determined by
                (2pow(winBinNbits)*winAnchorDistNbins) (default: 0).
            - name: alignEndsType
              label: --alignEndsType
              type: basic:string
              required: false
              description: |
                Type of read ends alignment (default: Local).
              default: Local
              choices:
                - label: Local
                  value: Local
                - label: EndToEnd
                  value: EndToEnd
                - label: Extend5pOfRead1
                  value: Extend5pOfRead1
                - label: Extend5pOfReads12
                  value: Extend5pOfReads12
        - name: output_sam_bam
          label: Output SAM and BAM
          hidden: '!alignment.show_advanced'
          group:
            - name: outSAMunmapped
              label: --outSAMunmapped
              type: basic:string
              description: |
                Output of unmapped reads in the SAM format.
              required: false
              default: None
              choices:
                - label: None
                  value: None
                - label: Within
                  value: Within
            - name: outSAMattributes
              label: --outSAMattributes
              type: basic:string
              description: |
                 a string of desired SAM attributes, in the order desired for the output SAM.
              required: false
              default: Standard
              choices:
                - label: None
                  value: None
                - label: Standard
                  value: Standard
                - label: All
                  value: All
            - name: outSAMattrRGline
              label: --outSAMattrRGline
              type: basic:string
              description: |
                SAM/BAM read group line. The first word contains the read group identifier
                and must start with "ID:", e.g. --outSAMattrRGline ID:xxx CN:yy "DS:z z z"
              required: false
    - name: quantification
      label: Quantification (featureCounts)
      group:
        - name: annotation
          label: Annotation
          type: data:annotation
        - name: show_advanced
          label: Show advanced parameters
          type: basic:boolean
          default: false
        - name: assay_type
          label: Assay type
          type: basic:string
          default: non_specific
          hidden: '!quantification.show_advanced'
          choices:
            - label: Strand non-specific
              value: non_specific
            - label: Strand-specific forward
              value: forward
            - label: Strand-specific reverse
              value: reverse
            - label: Detect automatically
              value: auto
          description: |
            In strand non-specific assay a read is considered overlapping with a
            feature regardless of whether it is mapped to the same or the opposite
            strand as the feature. In strand-specific forward assay and single
            reads, the read has to be mapped to the same strand as the feature.
            For paired-end reads, the first read has to be on the same strand and
            the second read on the opposite strand. In strand-specific reverse
            assay these rules are reversed.
        - name: cdna_index
          label: cDNA index file
          type: data:index:salmon
          required: false
          hidden: "quantification.assay_type != 'auto'"
          description: |
            Transcriptome index file created using the Salmon indexing tool.
            cDNA (transcriptome) sequences used for index file creation must be
            derived from the same species as the input sequencing reads to
            obtain the reliable analysis results.
        - name: n_reads
          label: Number of reads in subsampled alignment file
          type: basic:integer
          default: 5000000
          hidden: "quantification.assay_type != 'auto'"
          description: |
            Alignment (.bam) file subsample size. Increase the number of reads
            to make automatic detection more reliable. Decrease the number of
            reads to make automatic detection run faster.
        - name: feature_class
          label: Feature class
          type: basic:string
          default: exon
          hidden: '!quantification.show_advanced'
          description: |
            Feature class (3rd column in GTF/GFF3 file) to be used. All other
            features will be ignored.
        - name: feature_type
          label: Feature type
          type: basic:string
          default: gene
          hidden: '!quantification.show_advanced'
          choices:
            - label: gene
              value: gene
            - label: transcript
              value: transcript
          description: |
            The type of feature the quantification program summarizes over
            (e.g. gene or transcript-level analysis). The value of this
            parameter needs to be chosen in line with 'ID attribute' below.
        - name: id_attribute
          label: ID attribute
          type: basic:string
          default: gene_id
          allow_custom_choice: true
          hidden: '!quantification.show_advanced'
          choices:
            - label: gene_id
              value: gene_id
            - label: transcript_id
              value: transcript_id
            - label: ID
              value: ID
            - label: geneid
              value: geneid
          description: |
            GTF/GFF3 attribute to be used as feature ID. Several GTF/GFF3 lines
            with the same feature ID are considered as parts of the same
            feature. The feature ID is used to identify the counts in the
            output table. In GTF files this is usually 'gene_id', in GFF3 files
            this is often 'ID', and 'transcript_id' is frequently a valid
            choice for both annotation formats.
    - name: downsampling
      label: Downsampling (Seqtk)
      group:
        - name: n_reads
          label: Number of reads
          type: basic:integer
          default: 1000000
        - name: advanced
          label: Advanced options
          group:
            - name: seed
              label: Seed
              type: basic:integer
              default: 11
            - name: fraction
              label: Fraction
              type: basic:decimal
              required: false
              range: [0, 1.0]
              description: |
                Use the fraction of reads [0 - 1.0] from the orignal input file instead
                of the absolute number of reads. If set, this will override the
                "Number of reads" input parameter.
            - name: two_pass
              label: 2-pass mode
              type: basic:boolean
              default: false
              description: |
                Enable two-pass mode when down-sampling. Two-pass mode is twice
                as slow but with much reduced memory.
    - name: qc
      label: Quality control
      group:
        - name: rrna_reference
          label: Indexed rRNA reference sequence
          type: data:genomeindex:star
          description: |
            Reference sequence index prepared by STAR aligner indexing tool.
        - name: globin_reference
          label: Indexed Globin reference sequence
          type: data:genomeindex:star
          description: |
            Reference sequence index prepared by STAR aligner indexing tool.
  run:
    language: workflow
    program:
      - id: preprocessing
        run: bbduk-paired
        input:
          show_advanced: true
          reads: '{{ input.preprocessing.reads }}'
          min_length: '{{ input.preprocessing.min_length }}'
          reference:
            sequences: '{{ input.preprocessing.adapters or [] }}'
            literal_sequences: '{{ input.preprocessing.custom_adapter_sequences }}'
          processing:
            kmer_length: '{{ input.preprocessing.kmer_length }}'
            hamming_distance: '{{ input.preprocessing.hamming_distance }}'
          operations:
            k_trim: "{{ 'r' if input.preprocessing.adapters or input.preprocessing.custom_adapter_sequences else 'f' }}"
            min_k: '{{ input.preprocessing.min_k if input.preprocessing.adapters or input.preprocessing.custom_adapter_sequences else -1 }}'
            quality_trim: r
            trim_quality: '{{ input.preprocessing.trim_quality }}'
            maxns: '{{ input.preprocessing.maxns }}'
            trim_pairs_evenly: true
            trim_by_overlap: true
      - id: alignment
        run: alignment-star
        input:
          reads: '{{ steps.preprocessing }}'
          genome: '{{ input.alignment.genome }}'
          unstranded: '{{ input.alignment.unstranded }}'
          noncannonical: '{{ input.alignment.noncannonical }}'
          detect_chimeric:
            chimeric: '{{ input.alignment.detect_chimeric.chimeric }}'
            chimSegmentMin: '{{ input.alignment.detect_chimeric.chimSegmentMin }}'
          t_coordinates:
            quantmode: '{{ input.alignment.t_coordinates.quantmode }}'
            singleend: '{{ input.alignment.t_coordinates.singleend }}'
            gene_counts: '{{ input.alignment.t_coordinates.gene_counts }}'
          filtering:
            outFilterType: '{{ input.alignment.filtering.outFilterType }}'
            outFilterMultimapNmax: '{{ input.alignment.filtering.outFilterMultimapNmax }}'
            outFilterMismatchNmax: '{{ input.alignment.filtering.outFilterMismatchNmax }}'
            outFilterMismatchNoverLmax: '{{ input.alignment.filtering.outFilterMismatchNoverLmax }}'
            outFilterScoreMin: '{{ input.alignment.filtering.outFilterScoreMin }}'
          alignment:
            alignSJoverhangMin: '{{ input.alignment.alignment.alignSJoverhangMin }}'
            alignSJDBoverhangMin: '{{ input.alignment.alignment.alignSJDBoverhangMin }}'
            alignIntronMin: '{{ input.alignment.alignment.alignIntronMin }}'
            alignIntronMax: '{{ input.alignment.alignment.alignIntronMax }}'
            alignMatesGapMax: '{{ input.alignment.alignment.alignMatesGapMax }}'
            alignEndsType: '{{ input.alignment.alignment.alignEndsType }}'
          output_sam_bam:
            outSAMunmapped: '{{ input.alignment.output_sam_bam.outSAMunmapped }}'
            outSAMattributes: '{{ input.alignment.output_sam_bam.outSAMattributes }}'
            outSAMattrRGline: '{{ input.alignment.output_sam_bam.outSAMattrRGline }}'
      - id: quantification
        run: feature_counts
        input:
          alignment:
            aligned_reads: '{{ steps.alignment }}'
            assay_type: '{{ input.quantification.assay_type }}'
            cdna_index: '{{ input.quantification.cdna_index }}'
            n_reads: '{{ input.quantification.n_reads }}'
          annotation:
            annotation: '{{ input.quantification.annotation }}'
            feature_class: '{{ input.quantification.feature_class }}'
            feature_type: '{{ input.quantification.feature_type }}'
            id_attribute: '{{ input.quantification.id_attribute }}'
      - id: downsampling
        run: seqtk-sample-paired
        input:
          reads: '{{ steps.preprocessing }}'
          n_reads: '{{ input.downsampling.n_reads }}'
          advanced:
            seed: '{{ input.downsampling.advanced.seed }}'
            fraction: '{{ input.downsampling.advanced.fraction }}'
            two_pass: '{{ input.downsampling.advanced.two_pass }}'
      - id: alignment_qc_rrna
        run: alignment-star
        input:
          reads: '{{ steps.downsampling }}'
          genome: '{{ input.qc.rrna_reference }}'
      - id: alignment_qc_globin
        run: alignment-star
        input:
          reads: '{{ steps.downsampling }}'
          genome: '{{ input.qc.globin_reference }}'
      - id: idxstats
        run: samtools-idxstats
        input:
          alignment: '{{ steps.alignment }}'
      - id: multiqc
        run: multiqc
        input:
          data: '{{ [
            input.preprocessing.reads,
            steps.preprocessing,
            steps.alignment,
            steps.quantification,
            steps.downsampling,
            steps.alignment_qc_rrna,
            steps.alignment_qc_globin,
            steps.idxstats
            ] }}'
          advanced:
            dirs: true
            config: true
