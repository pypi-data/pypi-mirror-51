# Copyright (c) 2018 HarryR
# License: LGPL-3.0+

import unittest
from hashlib import sha256
from binascii import unhexlify

from ethsnarks.utils import bytes_to_field_elements


def _fill_inputs(refstr, n):
    return b''.join([sha256(refstr.encode('ascii')).digest()
                     for _ in range(0, n)])


class BitsToFieldsTests(unittest.TestCase):
    def test_bits_to_fields(self):
        inputs = unhexlify('D294F6E585874FE640BE4CE636E6EF9E3ADC27620AA3221FDCF5C0A7C11C6F67')
        outputs = [3148911523101545054735209199478325155464765444384556179543606818372573931851, 7]
        check = bytes_to_field_elements(inputs)
        self.assertEqual(check, outputs)

    def test_pack_refstr1(self):
        inputs = _fill_inputs("test1", 1)
        outputs = [3643975455434453609807585658478234095358500615880110310301135314775476073176, 1]
        check = bytes_to_field_elements(inputs)
        self.assertEqual(check, outputs)

    def test_pack_refstr2(self):
        inputs = _fill_inputs("test2", 2)
        outputs = [4925142746083631591139372247064434013546145516121654587421428196413504490502,
                   10453119659340003873222231724343495145051667962563095689507029569329753514034,
                   18]
        check = bytes_to_field_elements(inputs)
        self.assertEqual(check, outputs)

    def test_pack_refstr20(self):
        inputs = _fill_inputs("test20", 20)      
        outputs = [
            803262907995963344746616632441276499535724959171004080291855088204432750121,
            6426103263967706757972933059530211996285799673368032642334840705635462000973,
            7986792647748080779944345097983730525310153137329049623882131642116272392808,
            5998296563326548527769268279525890275846232765812114971328261132973614322499,
            4564339042618814938315026857949156761793617876881708255829495060821490965020,
            7566690031621470650627468611421277131031446848643525036771564484593645310179,
            2637475634313667493234256387026263121616582456327918274443723872792597661466,
            6625793919844815517927677970124116491273911567418275690617592981351640086740,
            9584317894764950859582304382734966485215048289730994010144149847845697078945,
            4304487384796984736926569431449789473426645901822599556492208777819870606603,
            5487876769046829039519809199426338824095671048170655442073274220580682442845,
            480980688381059032319354217152745147789124135750032021789599761678035927786,
            3847845507048472258554833737221961182312993086000256174316798093424287422291,
            1834741747058729212545923645603712495186448521591908384669988745416016968344,
            203922821805309272421016038743711479832840089530196572427711962338994541762,
            1631382574442474179368128309949691838662720716241572579421695698711956334097,
            13051060595539793434945026479597534709301765729932580635373565589695650672776,
            3090406681666676483935599954178358302802889257025151548463138710641216947264,
            10249242298668887443538426507340877940764365972996141882772911684140594373127,
            9623882616028477408575546428297081117821187367943782537522303468179048960057,
            728573888137036237]
        check = bytes_to_field_elements(inputs)
        self.assertEqual(check, outputs)


if __name__ == "__main__":
    unittest.main()
