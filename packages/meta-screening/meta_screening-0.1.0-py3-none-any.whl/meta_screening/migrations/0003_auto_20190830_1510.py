# Generated by Django 2.2.3 on 2019-08-30 12:10

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [("meta_screening", "0002_auto_20190830_1008")]

    operations = [
        migrations.AlterModelOptions(
            name="historicalsubjectscreening",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Subject Screening",
            },
        ),
        migrations.AlterModelOptions(
            name="subjectscreening",
            options={
                "verbose_name": "Subject Screening",
                "verbose_name_plural": "Subject Screening",
            },
        ),
        migrations.RenameField(
            model_name="historicalsubjectscreening",
            old_name="pregnancy",
            new_name="pregnant",
        ),
        migrations.RenameField(
            model_name="subjectscreening", old_name="pregnancy", new_name="pregnant"
        ),
        migrations.RemoveField(model_name="historicalsubjectscreening", name="bmi"),
        migrations.RemoveField(
            model_name="historicalsubjectscreening", name="glucose_2hr"
        ),
        migrations.RemoveField(
            model_name="historicalsubjectscreening", name="glucose_fast"
        ),
        migrations.RemoveField(model_name="subjectscreening", name="bmi"),
        migrations.RemoveField(model_name="subjectscreening", name="glucose_2hr"),
        migrations.RemoveField(model_name="subjectscreening", name="glucose_fast"),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="calculated_bmi",
            field=models.DecimalField(
                blank=True,
                decimal_places=1,
                help_text="calculated",
                max_digits=4,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="calculated_egfr",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="mL/min per 1.73m2",
                max_digits=4,
                null=True,
                verbose_name="eGFR",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="creatinine",
            field=models.DecimalField(
                blank=True,
                decimal_places=1,
                max_digits=4,
                null=True,
                verbose_name="Serum creatinine levels",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="creatinine_units",
            field=models.CharField(
                blank=True,
                choices=[("mg/dL", "mg/dL"), ("mmol/L", "mmol/L")],
                max_length=15,
                null=True,
                verbose_name="Units (creatinine)",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="ethnicity",
            field=models.CharField(
                choices=[("black", "Black"), ("OTHER", "Other")],
                help_text="Used for eGFR calculation",
                max_length=15,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="fasted",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("No", "No")],
                max_length=15,
                null=True,
                verbose_name="Has the participant fasted?",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="fasted_duration",
            field=models.CharField(
                blank=True,
                help_text="format HH:MM",
                max_length=8,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^([0-9]{1,3}:[0-5][0-9])$",
                        message="Enter a valid time in hour:minutes format",
                    )
                ],
                verbose_name="How long have they fasted?",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="fasting_glucose",
            field=models.DecimalField(
                blank=True,
                decimal_places=1,
                help_text="mmol/L",
                max_digits=3,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(50),
                ],
                verbose_name="Fasting glucose levels",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="fasting_glucose_datetime",
            field=models.DateTimeField(
                blank=True,
                null=True,
                verbose_name="Time fasting glucose level measured",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="hba1c",
            field=models.DecimalField(
                blank=True,
                decimal_places=1,
                help_text="in %",
                max_digits=3,
                null=True,
                verbose_name="HbA1c",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="height",
            field=models.IntegerField(
                blank=True, help_text="in centimeters", null=True
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="ogtt_performed_datetime",
            field=models.DateTimeField(
                blank=True,
                help_text="(glucose solution given)",
                null=True,
                verbose_name="Time oral glucose tolerance test was performed",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="ogtt_two_hr",
            field=models.DecimalField(
                blank=True,
                decimal_places=1,
                help_text="mmol/L",
                max_digits=3,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(50),
                ],
                verbose_name="Blood glucose levels 2-hours after glucose solution given",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="ogtt_two_hr_datetime",
            field=models.DateTimeField(
                blank=True,
                null=True,
                verbose_name="Time blood glucose levels tested after glucose solution given",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="ogtt_two_hr_duration",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("No", "No")],
                help_text="Duration will be calculated when you click SAVE.",
                max_length=15,
                null=True,
                verbose_name="Is the duration within range (110-130min)?",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="ogtt_two_hr_units",
            field=models.CharField(
                blank=True,
                choices=[("mg/dL", "mg/dL"), ("mmol/L", "mmol/L")],
                max_length=15,
                null=True,
                verbose_name="Units (Blood glucose)",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="second_stage_datetime",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="Second stage report date and time"
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="urine_bhcg",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("No", "No"), ("N/A", "Not applicable")],
                help_text="(Pregnancy test)",
                max_length=15,
                null=True,
                verbose_name="Urine BHCG",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="weight",
            field=models.DecimalField(
                blank=True,
                decimal_places=1,
                help_text="in kgs",
                max_digits=4,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="calculated_bmi",
            field=models.DecimalField(
                blank=True,
                decimal_places=1,
                help_text="calculated",
                max_digits=4,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="calculated_egfr",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="mL/min per 1.73m2",
                max_digits=4,
                null=True,
                verbose_name="eGFR",
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="creatinine",
            field=models.DecimalField(
                blank=True,
                decimal_places=1,
                max_digits=4,
                null=True,
                verbose_name="Serum creatinine levels",
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="creatinine_units",
            field=models.CharField(
                blank=True,
                choices=[("mg/dL", "mg/dL"), ("mmol/L", "mmol/L")],
                max_length=15,
                null=True,
                verbose_name="Units (creatinine)",
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="ethnicity",
            field=models.CharField(
                choices=[("black", "Black"), ("OTHER", "Other")],
                help_text="Used for eGFR calculation",
                max_length=15,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="fasted",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("No", "No")],
                max_length=15,
                null=True,
                verbose_name="Has the participant fasted?",
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="fasted_duration",
            field=models.CharField(
                blank=True,
                help_text="format HH:MM",
                max_length=8,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^([0-9]{1,3}:[0-5][0-9])$",
                        message="Enter a valid time in hour:minutes format",
                    )
                ],
                verbose_name="How long have they fasted?",
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="fasting_glucose",
            field=models.DecimalField(
                blank=True,
                decimal_places=1,
                help_text="mmol/L",
                max_digits=3,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(50),
                ],
                verbose_name="Fasting glucose levels",
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="fasting_glucose_datetime",
            field=models.DateTimeField(
                blank=True,
                null=True,
                verbose_name="Time fasting glucose level measured",
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="hba1c",
            field=models.DecimalField(
                blank=True,
                decimal_places=1,
                help_text="in %",
                max_digits=3,
                null=True,
                verbose_name="HbA1c",
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="height",
            field=models.IntegerField(
                blank=True, help_text="in centimeters", null=True
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="ogtt_performed_datetime",
            field=models.DateTimeField(
                blank=True,
                help_text="(glucose solution given)",
                null=True,
                verbose_name="Time oral glucose tolerance test was performed",
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="ogtt_two_hr",
            field=models.DecimalField(
                blank=True,
                decimal_places=1,
                help_text="mmol/L",
                max_digits=3,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(50),
                ],
                verbose_name="Blood glucose levels 2-hours after glucose solution given",
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="ogtt_two_hr_datetime",
            field=models.DateTimeField(
                blank=True,
                null=True,
                verbose_name="Time blood glucose levels tested after glucose solution given",
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="ogtt_two_hr_duration",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("No", "No")],
                help_text="Duration will be calculated when you click SAVE.",
                max_length=15,
                null=True,
                verbose_name="Is the duration within range (110-130min)?",
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="ogtt_two_hr_units",
            field=models.CharField(
                blank=True,
                choices=[("mg/dL", "mg/dL"), ("mmol/L", "mmol/L")],
                max_length=15,
                null=True,
                verbose_name="Units (Blood glucose)",
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="second_stage_datetime",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="Second stage report date and time"
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="urine_bhcg",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("No", "No"), ("N/A", "Not applicable")],
                help_text="(Pregnancy test)",
                max_length=15,
                null=True,
                verbose_name="Urine BHCG",
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="weight",
            field=models.DecimalField(
                blank=True,
                decimal_places=1,
                help_text="in kgs",
                max_digits=4,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="historicalsubjectscreening",
            name="advised_to_fast",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("No", "No")],
                max_length=15,
                null=True,
                verbose_name="If YES, has the patient been advised to return fasted for the second stage of the screening?",
            ),
        ),
        migrations.AlterField(
            model_name="historicalsubjectscreening",
            name="patient_eligible",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("No", "No")],
                help_text="Hint: You may click SAVE below to automatically verify potential eligibility based on answers to the inclusion and exclusion criteria above.",
                max_length=15,
                null=True,
                verbose_name="Is the patient potentially eligible for the study? ",
            ),
        ),
        migrations.AlterField(
            model_name="subjectscreening",
            name="advised_to_fast",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("No", "No")],
                max_length=15,
                null=True,
                verbose_name="If YES, has the patient been advised to return fasted for the second stage of the screening?",
            ),
        ),
        migrations.AlterField(
            model_name="subjectscreening",
            name="patient_eligible",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("No", "No")],
                help_text="Hint: You may click SAVE below to automatically verify potential eligibility based on answers to the inclusion and exclusion criteria above.",
                max_length=15,
                null=True,
                verbose_name="Is the patient potentially eligible for the study? ",
            ),
        ),
    ]
