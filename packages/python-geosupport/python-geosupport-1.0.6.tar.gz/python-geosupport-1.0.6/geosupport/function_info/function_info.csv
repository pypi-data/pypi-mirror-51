function,input,output,description,alt_names,regular,extended,long,long+tpad,links
1,Address or Non-Addressable Place name (NAP),"Block face-level data - Standardized Street Name and Street Code, Address Range, List of Cross Streets, ZIP Code, Community District, Health Area, Health Center District, 1990 Census Tract, 2010 Census Tract and block, Fire Engine or Ladder Company, School District, Police Precinct, Police Patrol Borough, XY Coordinates (based on the State Plane Coordinate System), Hurricane Evacuation Zone. 
Extended: USPS Preferred City Name, Latitude, Longitude","Function 1 processes an input address or input Non-Addressable Place name (NAP) (see Chapter III.6).  When called using two work areas, Function 1 returns information about the blockface containing the input address or NAP.  This information includes the cross streets at the two intersections delimiting the blockface, and a set of geographic district identifiers including ZIP code, census tract and community district.  Function 1 may be called with the Extended Mode Switch.",,300,1500,,,"https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#function-1
https://nycplanning.github.io/Geosupport-UPG/appendices/appendix13/#work-area-2-cow-functions-1-1e"
1B,Address or NAP,Same as for Function 1E + Property Level Information from Function 1A + Street Names for Cross Streets and Address Lists,"Function 1B processes an input address or input Non-Addressable Place name (NAP) (see Chapter III.6).  Function 1B returns information about the blockface as well as information about the tax lot and the building (if any) identified by the input address or NAP. The information that is returned includes the cross streets at the two intersections delimiting the blockface, and a set of geographic district identifiers including ZIP code, census tract and community district. Information about the tax lot and the building (if any) identified by the input address or NAP is also returned. This information includes the Borough, Block, and, Lot (BBL), which is the Department of Finance's (DOF) identifier for the tax lot; the DOF building class code; the number of buildings on the lot; the number of street frontages of the lot; a flag indicating whether the lot is a condominium; and the Building Identification Number (BIN) (see Chapter VI.3) of the building identified by the input address",address,4300,,,,"https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#function-1b
https://nycplanning.github.io/Geosupport-UPG/appendices/appendix13/#work-area-2-cow-function-1b"
1E,Address or NAP,"Same as for Function 1 + Political Geography (Election District, Assembly District, Congressional District, City Council District, Municipal Court District and State Senatorial District)","Function 1E processes an input address or input NAP. It returns the same WA2 information that is returned by Function 1, and additionally, it returns a set of political districts, including Election, State Assembly and Senate, City Council and Congressional Districts.",,300,1500,,,"https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#function-1e
https://nycplanning.github.io/Geosupport-UPG/appendices/appendix13/#work-area-2-cow-functions-1-1e"
1A,Address,"Tax lot - and building-level data - Standardized Street Name and Street Code, Tax Block and Lot, Alternative Addresses for Lot, Building Identification Number (BIN), RPAD Building Class, Interior Lot Flag, Vacant Lot Flag, Irregularly-Shaped Lot Flag, Corner Code, Business Improvement District (BID), Latitude, Longitude.","Function 1A processes an input address or input NAP.  When successfully called using two work areas, it returns information about the tax lot and the building (if any) identified by the input address or NAP. See Chapter VI and particularly Chapters VI.6.

The information that is returned consists of information about the tax lot and the building (if any) identified by the input address or NAP. This information includes the Borough, Block, and, Lot (BBL), which is the Department of Finance's (DOF) identifier for the tax lot; the DOF building class code; the number of buildings on the lot; the number of street frontages of the lot; a flag indicating whether the lot is a condominium; the Building Identification Number (BIN) (see Chapter VI.3) of the building identified by the input address, if any; and the Business Improvement District (BID) if the property is in such a district. Function 1A can be called with the long option. The regular mode includes a List of Geographic Identifiers (LGI) for the tax lot, including address ranges, BINs and street frontages. The long mode includes, instead of the LGI, a List of BINs for all the buildings in the tax lot.

Function 1A normally returns information that is updated on a quarterly basis. Users may request more up-to-date information on new buildings and demolitions using the TPAD Request Switch. The TPAD information will include the status of new building construction and/or demolition. See Chapter VI.11.

The regular, long, and extended modes for Function 1A are identical to those for Function BL. Function 1A enables the user to retrieve this information by address, while Function BL enables retrieval by BBL.",,1363,2800,17750,17750,"https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#function-1a
https://nycplanning.github.io/Geosupport-UPG/appendices/appendix13/#work-area-2-cow-functions-1a-bl-bn"
1N,Street Name,Standardized Street Name and Street Code,"Function 1N is used to normalize a street name and obtain its street code.  Functions 1, 1A and 1E can do this also, but those functions require an input house number. The purpose of Function 1N is to provide a way to process a street name alone, without a house number. Note that since the input to Function 1N is not a specific location along a street, Function 1N does not perform local street name validation.","street_name_to_street_code, get_street_code",,,,,https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#function-1n
2,"Pair of Intersecting Streets, Named Intersection, or Node Number","Intersection-Level data - Standardized Street Name and Street Codes, List of Additional Cross Streets, ZIP Code, Community District, Health Area, 1990 and 2000 Census Tract, Fire Districts, School District, Police Precinct, XY Coordinates (based on State Plane Coordinate System), Sanitation District, Health Center District, some Political Geography COW: 2W: Latitude, Longitude, Node IDs and Cross Streets","Function 2 processes an input intersection specified either in terms of an intersection name, or in terms of two streets (and, when necessary, a compass direction), or in terms of a node ID.  If two input streets intersect exactly once, the user should not specify an input compass direction. If the two input streets intersect at two distinct locations, a compass direction must be specified; it serves to identify which of the two intersections the user wishes Geosupport to process. Geosupport has the ability to process a pair of input streets that intersect more than twice, only if the user can identify the intersection by its node ID. If the user does not know the node ID, the user may issue Function 2W to find the node ID. Function 2W is basically identical to Function 2 except when streets intersect more than twice, Function 2W will reject the call and return the node IDs and street codes/street names for all the intersections at the various nodes. Function 2 and Function 2W are discussed in detail in Chapter VII.2.

When successfully called Function 2 returns information about the input intersection.  If there are more than two streets at an intersection, Function 2 accepts any pair of those streets as user input for that intersection. An intersection that lies on a borough boundary can be specified in terms of one street from each borough, by using the input field Borough Code 2, as described in Chapter VII.7.

The information that Function 2 returns ncludes a list of street codes for all streets at the intersection (including the input streets), spatial coordinates for the intersection, and a set of geographic area identifiers including community district, census tract, police precinct and others. If the intersection lies on the boundary of two or more areas of a given type, the information for one of those areas is returned.

Note: If either Street 1 or Street 2 contains an intersection name, then the other input street field may either be left blank or it may contain any street that exists at the given intersection.",intersection,200,,,,"https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#function-2-and-2w
https://nycplanning.github.io/Geosupport-UPG/appendices/appendix13/#work-area-2-cow-function-2"
2W,"Pair of Intersecting Streets, Named Intersection, or Node Number","Intersection-Level data - Standardized Street Name and Street Codes, List of Additional Cross Streets, ZIP Code, Community District, Health Area, 1990 and 2000 Census Tract, Fire Districts, School District, Police Precinct, XY Coordinates (based on State Plane Coordinate System), Sanitation District, Health Center District, some Political Geography, Latitude, Longitude, Node IDs and Cross Streets","Function 2 processes an input intersection specified either in terms of an intersection name, or in terms of two streets (and, when necessary, a compass direction), or in terms of a node ID.  If two input streets intersect exactly once, the user should not specify an input compass direction. If the two input streets intersect at two distinct locations, a compass direction must be specified; it serves to identify which of the two intersections the user wishes Geosupport to process. Geosupport has the ability to process a pair of input streets that intersect more than twice, only if the user can identify the intersection by its node ID. If the user does not know the node ID, the user may issue Function 2W to find the node ID. Function 2W is basically identical to Function 2 except when streets intersect more than twice, Function 2W will reject the call and return the node IDs and street codes/street names for all the intersections at the various nodes. Function 2 and Function 2W are discussed in detail in Chapter VII.2.

When successfully called Function 2 returns information about the input intersection.  If there are more than two streets at an intersection, Function 2 accepts any pair of those streets as user input for that intersection. An intersection that lies on a borough boundary can be specified in terms of one street from each borough, by using the input field Borough Code 2, as described in Chapter VII.7.

The information that Function 2 returns ncludes a list of street codes for all streets at the intersection (including the input streets), spatial coordinates for the intersection, and a set of geographic area identifiers including community district, census tract, police precinct and others. If the intersection lies on the boundary of two or more areas of a given type, the information for one of those areas is returned.

Note: If either Street 1 or Street 2 contains an intersection name, then the other input street field may either be left blank or it may contain any street that exists at the given intersection.","intersections, intersection_wide",4000,,,,"https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#function-2-and-2w
https://nycplanning.github.io/Geosupport-UPG/appendices/appendix13/#work-area-2-cow-function-2"
3,On Street and a pair of Consecutive Cross Streets,"Segment-level data - Standardized Street Names and Street Codes, Lists of Cross Streets at both ends, and information about both sides of the street, (including ZIP Codes, Community Districts, Health Areas, 1990, 2000 and 2010 Census Tracts, Fire Districts, School Districts, Police Precincts), 'From' and 'To' Nodes, Election District, Assembly District
Extended: Latitude, Longitude, Blockface ID","Function 3 processes street segments and closely related three-street configurations. A street segment is a part of a street (called the 'on' street) between two consecutive cross streets.  For example, Madison Avenue (in Manhattan) between East 51st Street and East 52nd Street is a street segment.  Madison Avenue between East 51st Street and East 53rd Street is not a street segment, because there is an intervening street, East 52nd Street, between the given cross streets. An exception to the requirement that the input cross streets be consecutive along the 'on' street is the case of a T-intersection: Function 3 accepts as input a street configuration that defines the long blockface of a T-intersection.  (For precise definitions of the terms 'three-street configuration', 'street segment', and 'T-intersection', see Chapter VII.3.) A street segment intersecting with or lying on a borough boundary can be specified in terms of streets from both boroughs, by using the input fields Borough Code 2 and Borough Code 3, as described in Chapter VII.7.

The information returned by a successful Function 3 call includes two lists of street codes for all cross streets at the two intersections defined by the input streets;  and geographic area codes for the left and right sides of the street, such as the left and right community districts, ZIP codes, census tracts, etc.  'Left' and 'right' are defined relative to the 'on' street's 'logical direction', which in general is the direction of increasing address. The information also includes two items called the Segment Azimuth and the Segment Orientation that indicate how the street segment is oriented with respect to the points of the compass.  Applications can use either of these items to determine compass direction descriptors for the left and right sides of the street.  Another item, the Cross Street Reversal Flag, can be used to determine left and right relative to the order in which the input cross streets were specified.

For a detailed discussion of Function 3, see Chapter VII.4.",street_segment,450,1000,,,"https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#function-3
https://nycplanning.github.io/Geosupport-UPG/appendices/appendix13/#work-area-2-cow-function-3"
3C,On Street and a Pair of Consecutive Cross Streets & a Compass Direction (Side of Street),Same as Function 3 but for one side of the street only (Blockface information),"Function 3C processes blockfaces specified in terms of an input 'on' street, two cross streets and a compass direction designating the side of the street, such as 'the west side of Madison Avenue between East 53rd Street and East 54th Street'.  A blockface intersecting with or lying on a borough boundary can be specified in terms of streets from both boroughs, by using the input fields Borough Code 2 and Borough Code 3, as described in Chapter VII.7.

Function 3C returns blockface related information. This information is a subset of the set of items returned by Function 3, consisting of those items that are related to the specified side of the street. 

Function 3C has the Auxiliary Segment Option (see Chapter II.6).

Function 3C is discussed in detail in Chapter VII.5.",blockface,300,850,,,"https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#function-3c
https://nycplanning.github.io/Geosupport-UPG/appendices/appendix13/#work-area-2-cow-function-3c"
3S,On Street and an Optional pair of any Intersecting Streets along the On Street,"Stretch-level data - Street Stretch information: List of intersecting streets in order along 'on' street, the distance between them and node IDs","Function 3S processes input street stretches. A street stretch is a portion of a street between any two cross streets.  If an input cross street intersects with the 'on' street twice, an input compass direction is required to identify which of the two intersections is intended. If the user application does not specify input cross streets, Function 3S returns information about the full length of the 'on' street.  Note that, in a Function 3S call, the input cross streets need not be consecutive along the 'on' street.

When successfully called Function 3S returns a list of all intersections in sequence along the 'on' street between (and including) the two intersections defined by the input 'on' and two cross streets, if any.  If the user has not specified input cross streets, the list contains all intersections in sequence from the beginning to the end of the 'on' street.  The sequence in which the intersections are listed accords with the direction of increasing addresses along the 'on' street.  Each intersection in the list is specified as a pair of street codes for two of the streets at that intersection. One of the street codes listed for an intersection may or not be the street code of the 'on' street. 

If the user requests Real Street Only output, only real street intersections are returned; Bends and Non-Street Features are not included in the list of intersections.

For each entry in the list of intersections of the street stretch, there are fields for a distance and a gap flag.  The distance is the approximate distance in feet between the given intersection and its predecessor in the list; the gap flag indicates whether the intersection and its predecessor are connected by the 'on' street. The gap flag also indicates the nature of the gap.  The first entry within a list will always have a zero in the distance field and a blank in the gap flag.

Function 3S is discussed in detail in Chapter VII.6.",street_stretch,19274,,,,"https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#function-3s
https://nycplanning.github.io/Geosupport-UPG/appendices/appendix13/#work-area-2-cow-function-3s"
AP,Address,"Address Point ID, Spatial Coordinates of CSCL Address Point, BBL, BIN","Function AP processes an input address.  When successfully called using two work areas, it returns information about the CSCL Address Point identified by the input address. See Chapter VI and particularly Chapter VI.10.

The information that is returned consists of information about the address point and the tax lot and the building (if any) identified by the input address. This information includes the CSCL Address Point ID, the spatial coordinates of the Address Point, the Building Identification Number (BIN) and the Borough, Block, and, Lot (BBL), which is the Department of Finance's (DOF) identifier for the tax lot. By geocoding to a CSCL Address Point, the user application will presumably geocode to a 'real' posted address - not an address that might be part of an administrative range.

Function AP is also available in an Extended Mode. It includes the Principal Street Name.",address_point,1363,2800,,,https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#function-ap
BF,Character String,List of up to 10 street names in alphabetic order - supports street name browsing,"Function BB (""browse backward"") and BF (""browse forward"") enable applications to develop street name browse capability, in order to assist user data entry staff to determine valid spellings of street names that have been rejected.  Functions BB and BF can only be called using one work area.

A sequence of repeated calls to Functions BB and/or BF will browse backwards and/or forwards in alphabetical order through the set of all valid normalized street names in a given borough. When issuing a Function BB or BF call, the user may request that only Primary or Principal street names be returned. This is done by setting the Browse Flag to 'P' or 'F' respectively. 

Each call to one of these functions returns up to ten such names in alphabetical order (or fewer, if there are not ten names remaining in the given borough in the given browse direction).  The names are returned in the field List of Street Names. The number of street names returned in the list is returned in the field Number of Street Names in List. Corresponding B7SCs are also returned.

To start a browse sequence, the user application calls either of the browse functions , passing a borough code and character string in the WA1 input fields called Borough Code 1 and Street Name 1, respectively.  The input character string can be from one to 32 bytes long.  When the last set of ten or fewer names in the given borough is reached, a warning is issued.

For a detailed discussion of Functions BB and BF, see Chapter III.7.",browse_forward,,,,,https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#functions-bb-and-bf
BB,Character String,List of up to 10 street names in alphabetic order - supports street name browsing,"Function BB (""browse backward"") and BF (""browse forward"") enable applications to develop street name browse capability, in order to assist user data entry staff to determine valid spellings of street names that have been rejected.  Functions BB and BF can only be called using one work area.

A sequence of repeated calls to Functions BB and/or BF will browse backwards and/or forwards in alphabetical order through the set of all valid normalized street names in a given borough. When issuing a Function BB or BF call, the user may request that only Primary or Principal street names be returned. This is done by setting the Browse Flag to 'P' or 'F' respectively. 

Each call to one of these functions returns up to ten such names in alphabetical order (or fewer, if there are not ten names remaining in the given borough in the given browse direction).  The names are returned in the field List of Street Names. The number of street names returned in the list is returned in the field Number of Street Names in List. Corresponding B7SCs are also returned.

To start a browse sequence, the user application calls either of the browse functions , passing a borough code and character string in the WA1 input fields called Borough Code 1 and Street Name 1, respectively.  The input character string can be from one to 32 bytes long.  When the last set of ten or fewer names in the given borough is reached, a warning is issued.

For a detailed discussion of Functions BB and BF, see Chapter III.7.",browse_back,,,,,https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#functions-bb-and-bf
BL,"Borough, Tax Block and Lot","Tax lot- and building- level data - List of Addresses for Lot, List of Building Identification Numbers (BINs), RPAD Building Class, Interior Lot Flag, Vacant Log Flag, Flag, Corner Code, etc.","Function BL processes a parcel of real property, or tax lot, specified in terms of a standard Department of Finance set of tax lot identifiers, consisting of a combination of a borough code, a tax block number and a tax lot number, collectively called the BBL. When successfully called, Function BL returns information about the tax lot. Function 1A enables the user to retrieve this information by address, while Function BL enables retrieval by BBL.

For a detailed discussion of Function BL, see Chapter VI and particularly Chapter VI.7.","bbl, tax_lot, lot",1363,2800,17750,17750,"https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#function-bl
https://nycplanning.github.io/Geosupport-UPG/appendices/appendix13/#work-area-2-cow-functions-1a-bl-bn"
BN,Building Identification Number,"Tax lot- and building-level data - List of Address Ranges for Building, Tax Block and Lot, RPAD Building Class, Interior Lot Flag, Vacant Lot Flag, Irregularly Shaped Lot Flag, Corner Code etc.","Function BN processes a building specified by an input Building Identification Number (BIN).  For a discussion of BINs, see Chapter VI.3.

A successful Function BN call returns information about the building.  This includes the building's borough, tax block, tax lot (BBL); a list of geographic identifiers associated with the building (in contrast to Functions 1A and BL, which return geographic identifiers for the entire tax lot, subject to the list's space limitation); a building status flag and date [not implemented]; and a condominium flag.  Condominiums have unique characteristics discussed in Chapter VI.4.

Function BN is discussed in detail in Chapter VI and particularly in Chapter VI.9.","bin, building",1363,2800,17750,17750,"https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#function-bn
https://nycplanning.github.io/Geosupport-UPG/appendices/appendix13/#work-area-2-cow-functions-1a-bl-bn"
D,Street Code and/or House Number,Street Name and/or House Number in Displayable,"Functions D, DG and DN are the 'display' functions.  They do not actually display anything themselves, but can be used to obtain data items that applications can use to format geographic locations for display on reports, screens, mailing labels etc.

Each of them can process any combination of up to two input House Numbers in Sort format (HNS) and up to three input street codes.  For each successfully processed input HNS, the corresponding House Number in Display format (HND) is returned. (House number processing by the display functions is discussed in detail in Chapter V.2.) For each successfully processed input street code, a corresponding street name is returned. (Street code processing by the display functions is discussed in Chapter IV.6.) For each unsuccessfully processed input street code, the corresponding output field is returned containing all question marks. If one input HNS is supplied, it may be passed in either input HNI/HNS field. Input street codes may not 'skip' any input street code fields.

The display functions process each input item independently of the others, and the input data are not treated as collectively forming a geographic location. In particular, a successful call to a display function does not imply the validation of a geographic location. For example, if there is an input house number and an input street code, these are not treated or validated as forming an address, but are independently processed for conversion to display format.  If the input consists of two street codes, these are not treated or validated as forming an intersection, etc.

Functions D, DG and DN differ in the type of street code each processes and in the street name each returns:

* Function D processes input borough-code-and-five-digit street codes, specified in the form of B5SCs. For each successfully processed input B5SC, Function D returns the corresponding 'primary' name for the street (a name from among all of the street's aliases that GSS has designated as 'best' representing the street as a whole).

* Function DG processes input borough-code-and-seven-digit street codes (B7SCs).  For each input B7SC, Function DG returns a street name that GSS has designated as the 'principal' street name of the local group of names represented by the given B7SC.  Function DG can be used in conjunction with a geographic location-processing function to obtain the 'preferred street name' customized for a particular geographic location. (For a discussion of seven-digit street codes and local groups, see Chapter IV.5.)

*Function DN processes input borough-code-and-ten-digit street codes (B10SCs).  For each input B10SC, Function DN returns the unique street name spelling corresponding to it.",get_street_name,,,,,https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#functions-d-dg-and-dn
DG,Street Code and/or House Number,Street Name and/or House Number in Displayable,"Functions D, DG and DN are the 'display' functions.  They do not actually display anything themselves, but can be used to obtain data items that applications can use to format geographic locations for display on reports, screens, mailing labels etc.

Each of them can process any combination of up to two input House Numbers in Sort format (HNS) and up to three input street codes.  For each successfully processed input HNS, the corresponding House Number in Display format (HND) is returned. (House number processing by the display functions is discussed in detail in Chapter V.2.) For each successfully processed input street code, a corresponding street name is returned. (Street code processing by the display functions is discussed in Chapter IV.6.) For each unsuccessfully processed input street code, the corresponding output field is returned containing all question marks. If one input HNS is supplied, it may be passed in either input HNI/HNS field. Input street codes may not 'skip' any input street code fields.

The display functions process each input item independently of the others, and the input data are not treated as collectively forming a geographic location. In particular, a successful call to a display function does not imply the validation of a geographic location. For example, if there is an input house number and an input street code, these are not treated or validated as forming an address, but are independently processed for conversion to display format.  If the input consists of two street codes, these are not treated or validated as forming an intersection, etc.

Functions D, DG and DN differ in the type of street code each processes and in the street name each returns:

* Function D processes input borough-code-and-five-digit street codes, specified in the form of B5SCs. For each successfully processed input B5SC, Function D returns the corresponding 'primary' name for the street (a name from among all of the street's aliases that GSS has designated as 'best' representing the street as a whole).

* Function DG processes input borough-code-and-seven-digit street codes (B7SCs).  For each input B7SC, Function DG returns a street name that GSS has designated as the 'principal' street name of the local group of names represented by the given B7SC.  Function DG can be used in conjunction with a geographic location-processing function to obtain the 'preferred street name' customized for a particular geographic location. (For a discussion of seven-digit street codes and local groups, see Chapter IV.5.)

*Function DN processes input borough-code-and-ten-digit street codes (B10SCs).  For each input B10SC, Function DN returns the unique street name spelling corresponding to it.",,,,,,https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#functions-d-dg-and-dn
DN,Street Code and/or House Number,Street Name and/or House Number in Displayable,"Functions D, DG and DN are the 'display' functions.  They do not actually display anything themselves, but can be used to obtain data items that applications can use to format geographic locations for display on reports, screens, mailing labels etc.

Each of them can process any combination of up to two input House Numbers in Sort format (HNS) and up to three input street codes.  For each successfully processed input HNS, the corresponding House Number in Display format (HND) is returned. (House number processing by the display functions is discussed in detail in Chapter V.2.) For each successfully processed input street code, a corresponding street name is returned. (Street code processing by the display functions is discussed in Chapter IV.6.) For each unsuccessfully processed input street code, the corresponding output field is returned containing all question marks. If one input HNS is supplied, it may be passed in either input HNI/HNS field. Input street codes may not 'skip' any input street code fields.

The display functions process each input item independently of the others, and the input data are not treated as collectively forming a geographic location. In particular, a successful call to a display function does not imply the validation of a geographic location. For example, if there is an input house number and an input street code, these are not treated or validated as forming an address, but are independently processed for conversion to display format.  If the input consists of two street codes, these are not treated or validated as forming an intersection, etc.

Functions D, DG and DN differ in the type of street code each processes and in the street name each returns:

* Function D processes input borough-code-and-five-digit street codes, specified in the form of B5SCs. For each successfully processed input B5SC, Function D returns the corresponding 'primary' name for the street (a name from among all of the street's aliases that GSS has designated as 'best' representing the street as a whole).

* Function DG processes input borough-code-and-seven-digit street codes (B7SCs).  For each input B7SC, Function DG returns a street name that GSS has designated as the 'principal' street name of the local group of names represented by the given B7SC.  Function DG can be used in conjunction with a geographic location-processing function to obtain the 'preferred street name' customized for a particular geographic location. (For a discussion of seven-digit street codes and local groups, see Chapter IV.5.)

*Function DN processes input borough-code-and-ten-digit street codes (B10SCs).  For each input B10SC, Function DN returns the unique street name spelling corresponding to it.",,,,,,https://nycplanning.github.io/Geosupport-UPG/appendices/appendix01/#functions-d-dg-and-dn
N*,Street Name,"Normalized street name (w/o a borough, so no consideration of validity)","Normalized street name (w/o a borough, so no consideration of validity)",normalize_street_name,,,,,
