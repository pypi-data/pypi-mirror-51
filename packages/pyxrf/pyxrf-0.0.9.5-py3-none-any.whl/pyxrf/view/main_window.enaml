# ######################################################################
# Copyright (c) 2014, Brookhaven Science Associates, Brookhaven        #
# National Laboratory. All rights reserved.                            #
#                                                                      #
# Redistribution and use in source and binary forms, with or without   #
# modification, are permitted provided that the following conditions   #
# are met:                                                             #
#                                                                      #
# * Redistributions of source code must retain the above copyright     #
#   notice, this list of conditions and the following disclaimer.      #
#                                                                      #
# * Redistributions in binary form must reproduce the above copyright  #
#   notice this list of conditions and the following disclaimer in     #
#   the documentation and/or other materials provided with the         #
#   distribution.                                                      #
#                                                                      #
# * Neither the name of the Brookhaven Science Associates, Brookhaven  #
#   National Laboratory nor the names of its contributors may be used  #
#   to endorse or promote products derived from this software without  #
#   specific prior written permission.                                 #
#                                                                      #
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  #
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT    #
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS    #
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE       #
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,           #
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES   #
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR   #
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)   #
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  #
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OTHERWISE) ARISING   #
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   #
# POSSIBILITY OF SUCH DAMAGE.                                          #
########################################################################
from __future__ import absolute_import
__author__ = 'Li Li'

from enaml.widgets.api import (MainWindow, Container, DockArea)
from enaml.layout.api import hbox, vbox, HSplitLayout, VSplitLayout, TabLayout

from .fileio import FileView, MaskView
from .guessparam import GuessParamView
from .lineplot import PlotMain, AdjustEmissionLine
from .image2D import ImageMain, ChooseElementAdvanced
from .rgb_image import ImageRGB
from .fit import (FitView, ElementEdit, ParameterEdit,
                  OtherSettingEdit, EditPileupPeak,
                  AutoFindElements, OutputSetup)
from .setting import SettingView


enamldef XRFGui(MainWindow): main_window:
    #always_on_top = True
    title = 'PyXRF: X-ray Fluorescence Analysis Tool'
    attr io_model
    attr param_model
    attr plot_model
    attr img_model_adv
    attr img_model_rgb
    attr fit_model
    attr setting_model
    attr Param
    attr logmodel   # to output log information at GUI level

    Container:
        DockArea:
            layout = HSplitLayout(
                TabLayout('file_view', 'fitting_view', 'setting_view'),
                TabLayout('lineplot_view', 'image_view', 'image_rgb'),
                )
            FileView:
                closable = False
                title = 'File IO'
                io_model = main_window.io_model
                param_model = main_window.param_model
                plot_model = main_window.plot_model
                # img_model_adv = main_window.img_model_adv
                fit_model = main_window.fit_model
                setting_model = main_window.setting_model

                mask_edit = MaskView(
                    visible=False,
                    destroy_on_close=False,
                    parent=main_window,
                    io_model = main_window.io_model)

                name = 'file_view'
            #GuessParamView:
            #    closable = False
            #    title = 'Initial Parameter Guess '
            #    name = 'param_guess_view'
            #    param_model = main_window.param_model
            #    # io_model = main_window.io_model
            #    plot_model = main_window.plot_model
            #    fit_model = main_window.fit_model
            #    edit_pileup = EditPileupPeak(
            #        visible=False,
            #        destroy_on_close=False,
            #        parent=main_window,
            #        param_model=main_window.param_model)
            FitView:
                closable = False
                title = 'Fit     '
                plot_model = main_window.plot_model
                param_model = main_window.param_model
                fit_model = main_window.fit_model
                img_model_adv = main_window.img_model_adv
                img_model_rgb = main_window.img_model_rgb
                setting_model = main_window.setting_model

                element_edit = ElementEdit(
                    visible=False,
                    destroy_on_close=False,
                    parent=main_window,
                    fit_model=main_window.fit_model,
                    param_model=main_window.param_model,
                    plot_model=main_window.plot_model,
                    setting_model = main_window.setting_model)
                parameter_edit = ParameterEdit(
                    visible=False,
                    destroy_on_close=False,
                    parent=main_window,
                    fit_model=main_window.fit_model,
                    param_model=main_window.param_model,
                    plot_model=main_window.plot_model,
                    setting_model = main_window.setting_model)
                autofind_edit = AutoFindElements(
                    visible=False,
                    destroy_on_close=False,
                    parent=main_window,
                    parameter_model=main_window.param_model,
                    plot_model=main_window.plot_model)
                pileup_edit = EditPileupPeak(
                    visible=False,
                    destroy_on_close=False,
                    parent=main_window,
                    param_model=main_window.param_model,
                    plot_model=main_window.plot_model)
                othersetting_edit = OtherSettingEdit(
                    visible=False,
                    destroy_on_close=False,
                    #parent=main_window,
                    fit_model=main_window.fit_model,
                    param_model=main_window.param_model,
                    plot_model=main_window.plot_model,
                    setting_model = main_window.setting_model)
                output_edit = OutputSetup(
                    visible=False,
                    destroy_on_close=False,
                    parent=main_window,
                    fit_model=main_window.fit_model)
                name = 'fitting_view'
            SettingView:
                closable = False
                title = 'ROI Setting'
                io_model = main_window.io_model
                plot_model = main_window.plot_model
                img_model_adv = main_window.img_model_adv
                img_model_rgb = main_window.img_model_rgb
                setting_model = main_window.setting_model
                name = 'setting_view'
            PlotMain:
                closable = False
                title = 'Spectrum View'
                # io_model = io_model
                plot_model = main_window.plot_model
                fit_model=main_window.fit_model
                param_model = main_window.param_model
                adjust_emission_line = AdjustEmissionLine(
                    visible=False,
                    destroy_on_close=False,
                    parent=main_window,
                    plot_model=main_window.plot_model)
                name = 'lineplot_view'
            ImageMain:
                closable = False
                title = 'Element Map'
                #img_model = main_window.img_model
                img_model_adv = main_window.img_model_adv
                choose_element = ChooseElementAdvanced(
                    visible=False, destroy_on_close=False,
                    always_on_top=True,
                    parent=main_window,
                    img_model=main_window.img_model_adv)
                fit_model = main_window.fit_model
                name = 'image_view'
            ImageRGB:
                closable = False
                title = 'Element RGB '
                img_model_adv = main_window.img_model_rgb
                #plot_model = main_window.plot_model
                name = 'image_rgb'
