Metadata-Version: 2.1
Name: django-permalinks
Version: 0.0.2
Summary: A Django App to make sure old URLs work with new URLs.
Home-page: https://github.com/aekanshd/django-permalinks
Author: Aekansh Dixit
Author-email: aekanshdixit@gmail.com
License: MIT License
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.8
Classifier: Framework :: Django :: 1.9
Classifier: Framework :: Django :: 1.10
Classifier: Framework :: Django :: 1.11
Classifier: Framework :: Django :: 2.0
Classifier: Framework :: Django :: 2.1
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Description-Content-Type: text/markdown
Requires-Dist: django (>=1.8)

# Django Permalinks

This Django App makes sures that all your old URLs work in case you have migrated your old Primary Key URL slugs, or for whatever reason your data for the views are inconsistent.

# Installation

Install from PyPI:
```terminal
pip install django-permalinks
```

# Configurations

1. Add `permalinks` to your list of `INSTALLED_APPS` in settings.py:

    ```python
    INSTALLED_APPS = [
        ...
        'permalinks',
        ...
    ]
    ```

 2. Add the permalinks middleware to `settings.py` **on the top of the list**:

    ```python
    MIDDLEWARE = [
    'permalinks.middleware.main.PermalinksMiddleware',
    ...
    ]
    ```

3. Run `manage.py migrate` to create the required table for the permalinks model.
4. Create your `permalinks` objects in your Django admin interface.
5. Test your OLD URLs and their responses by visiting them.
6. Enjoy a smooth URL migration!

