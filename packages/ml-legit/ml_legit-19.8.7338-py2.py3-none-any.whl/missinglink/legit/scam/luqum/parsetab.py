
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOR_OPleftAND_OPnonassocMINUSnonassocPLUSnonassocAPPROXnonassocBOOSTnonassocLPARENRPARENnonassocLBRACKETTORBRACKETnonassocPHRASEnonassocTERMAND_OP APPROX BOOST COLUMN LBRACKET LPAREN MINUS NOT OR_OP PHRASE PLUS RBRACKET RPAREN SEPARATOR TERM TOexpression : expression OR_OP expressionexpression : expression AND_OP expressionexpression : expression expressionunary_expression : PLUS unary_expressionunary_expression : MINUS unary_expressionunary_expression : NOT unary_expressionexpression : unary_expressionunary_expression : LPAREN expression RPARENunary_expression : LBRACKET phrase_or_term TO phrase_or_term RBRACKETunary_expression : TERM COLUMN unary_expressionunary_expression : PHRASEunary_expression : PHRASE APPROXexpression : expression BOOSTunary_expression : TERMunary_expression : TERM APPROXunary_expression : TOphrase_or_term : TERM\n                      | PHRASE'
    
_lr_action_items = {'TERM':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,29,31,],[1,-14,-7,-16,1,17,1,1,-11,1,1,1,-15,1,1,1,-13,-4,1,-12,-6,-5,-10,1,1,17,-8,-9,]),'RPAREN':([1,2,3,8,12,13,16,20,21,22,23,24,25,26,27,29,31,],[-14,-7,-16,-11,-15,-3,-13,-4,29,-12,-6,-5,-10,-1,-2,-8,-9,]),'AND_OP':([1,2,3,4,8,12,13,16,20,21,22,23,24,25,26,27,29,31,],[-14,-7,-16,15,-11,-15,15,-13,-4,15,-12,-6,-5,-10,15,-2,-8,-9,]),'COLUMN':([1,],[11,]),'APPROX':([1,8,],[12,22,]),'OR_OP':([1,2,3,4,8,12,13,16,20,21,22,23,24,25,26,27,29,31,],[-14,-7,-16,14,-11,-15,14,-13,-4,14,-12,-6,-5,-10,-1,-2,-8,-9,]),'LBRACKET':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24,25,26,27,29,31,],[5,-14,-7,-16,5,5,5,-11,5,5,5,-15,5,5,5,-13,-4,5,-12,-6,-5,-10,5,5,-8,-9,]),'TO':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,],[3,-14,-7,-16,3,3,3,-11,3,3,3,-15,3,3,3,-13,-17,-18,28,-4,3,-12,-6,-5,-10,3,3,-8,-9,]),'PLUS':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24,25,26,27,29,31,],[6,-14,-7,-16,6,6,6,-11,6,6,6,-15,6,6,6,-13,-4,6,-12,-6,-5,-10,6,6,-8,-9,]),'LPAREN':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24,25,26,27,29,31,],[7,-14,-7,-16,7,7,7,-11,7,7,7,-15,7,7,7,-13,-4,7,-12,-6,-5,-10,7,7,-8,-9,]),'NOT':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24,25,26,27,29,31,],[9,-14,-7,-16,9,9,9,-11,9,9,9,-15,9,9,9,-13,-4,9,-12,-6,-5,-10,-1,-2,-8,-9,]),'PHRASE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,29,31,],[8,-14,-7,-16,8,18,8,8,-11,8,8,8,-15,8,8,8,-13,-4,8,-12,-6,-5,-10,8,8,18,-8,-9,]),'RBRACKET':([17,18,30,],[-17,-18,31,]),'BOOST':([1,2,3,4,8,12,13,16,20,21,22,23,24,25,26,27,29,31,],[-14,-7,-16,16,-11,-15,16,-13,-4,16,-12,-6,-5,-10,16,16,-8,-9,]),'MINUS':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24,25,26,27,29,31,],[10,-14,-7,-16,10,10,10,-11,10,10,10,-15,10,10,10,-13,-4,10,-12,-6,-5,-10,10,10,-8,-9,]),'$end':([1,2,3,4,8,12,13,16,20,22,23,24,25,26,27,29,31,],[-14,-7,-16,0,-11,-15,-3,-13,-4,-12,-6,-5,-10,-1,-2,-8,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'phrase_or_term':([5,28,],[19,30,]),'expression':([0,4,7,13,14,15,21,26,27,],[4,13,21,13,26,27,13,13,13,]),'unary_expression':([0,4,6,7,9,10,11,13,14,15,21,26,27,],[2,2,20,2,23,24,25,2,2,2,2,2,2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression OR_OP expression','expression',3,'p_expression_or','parser.py',153),
  ('expression -> expression AND_OP expression','expression',3,'p_expression_and','parser.py',158),
  ('expression -> expression expression','expression',2,'p_expression_implicit','parser.py',163),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_expression_plus','parser.py',168),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_expression_minus','parser.py',173),
  ('unary_expression -> NOT unary_expression','unary_expression',2,'p_expression_not','parser.py',178),
  ('expression -> unary_expression','expression',1,'p_expression_unary','parser.py',183),
  ('unary_expression -> LPAREN expression RPAREN','unary_expression',3,'p_grouping','parser.py',188),
  ('unary_expression -> LBRACKET phrase_or_term TO phrase_or_term RBRACKET','unary_expression',5,'p_range','parser.py',193),
  ('unary_expression -> TERM COLUMN unary_expression','unary_expression',3,'p_field_search','parser.py',200),
  ('unary_expression -> PHRASE','unary_expression',1,'p_quoting','parser.py',208),
  ('unary_expression -> PHRASE APPROX','unary_expression',2,'p_proximity','parser.py',213),
  ('expression -> expression BOOST','expression',2,'p_boosting','parser.py',218),
  ('unary_expression -> TERM','unary_expression',1,'p_terms','parser.py',223),
  ('unary_expression -> TERM APPROX','unary_expression',2,'p_fuzzy','parser.py',228),
  ('unary_expression -> TO','unary_expression',1,'p_to_as_term','parser.py',234),
  ('phrase_or_term -> TERM','phrase_or_term',1,'p_phrase_or_term','parser.py',239),
  ('phrase_or_term -> PHRASE','phrase_or_term',1,'p_phrase_or_term','parser.py',240),
]
