# coding: utf-8

"""

    No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 2.1.1+01d50e5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

import os
import sys
import unittest

import graylog
from graylog.rest import ApiException
from graylog.apis.streams_api import StreamsApi


class TestStreamsApi(unittest.TestCase):
    """ StreamsApi unit test stubs """

    def setUp(self):
        self.api = graylog.apis.streams_api.StreamsApi()

    def tearDown(self):
        pass

    def test_clone_stream(self):
        """
        Test case for clone_stream

        Clone a stream
        """
        pass

    def test_create(self):
        """
        Test case for create

        Create a stream
        """
        pass

    def test_delete(self):
        """
        Test case for delete

        Delete a stream
        """
        pass

    def test_get(self):
        """
        Test case for get

        Get a list of all streams
        """
        pass

    def test_get_0(self):
        """
        Test case for get_0

        Get a single stream
        """
        pass

    def test_get_enabled(self):
        """
        Test case for get_enabled

        Get a list of all enabled streams
        """
        pass

    def test_pause(self):
        """
        Test case for pause

        Pause a stream
        """
        pass

    def test_resume(self):
        """
        Test case for resume

        Resume a stream
        """
        pass

    def test_test_match(self):
        """
        Test case for test_match

        Test matching of a stream against a supplied message
        """
        pass

    def test_update(self):
        """
        Test case for update

        Update a stream
        """
        pass


if __name__ == '__main__':
    unittest.main()
