# coding: utf-8

"""

    No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 2.1.1+01d50e5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

import os
import sys
import unittest

import graylog
from graylog.rest import ApiException
from graylog.apis.pluginsorggraylogpluginscollector_api import PluginsorggraylogpluginscollectorApi


class TestPluginsorggraylogpluginscollectorApi(unittest.TestCase):
    """ PluginsorggraylogpluginscollectorApi unit test stubs """

    def setUp(self):
        self.api = graylog.apis.pluginsorggraylogpluginscollector_api.PluginsorggraylogpluginscollectorApi()

    def tearDown(self):
        pass

    def test_copy_configuration(self):
        """
        Test case for copy_configuration

        Copy a configuration
        """
        pass

    def test_copy_input(self):
        """
        Test case for copy_input

        Copy a configuration input
        """
        pass

    def test_copy_output(self):
        """
        Test case for copy_output

        Copy a configuration output
        """
        pass

    def test_copy_snippet(self):
        """
        Test case for copy_snippet

        Copy a configuration snippet
        """
        pass

    def test_create_configuration(self):
        """
        Test case for create_configuration

        Create new collector configuration
        """
        pass

    def test_create_input(self):
        """
        Test case for create_input

        Create a configuration input
        """
        pass

    def test_create_output(self):
        """
        Test case for create_output

        Create a configuration output
        """
        pass

    def test_create_snippet(self):
        """
        Test case for create_snippet

        Create a configuration snippet
        """
        pass

    def test_delete_configuration(self):
        """
        Test case for delete_configuration

        Delete a collector configuration
        """
        pass

    def test_delete_input(self):
        """
        Test case for delete_input

        Delete input form configuration
        """
        pass

    def test_delete_output(self):
        """
        Test case for delete_output

        Delete output from configuration
        """
        pass

    def test_delete_snippet(self):
        """
        Test case for delete_snippet

        Delete snippet from configuration
        """
        pass

    def test_get_configuration(self):
        """
        Test case for get_configuration

        Get a single collector configuration
        """
        pass

    def test_get_configurations(self):
        """
        Test case for get_configurations

        Show collector configuration details
        """
        pass

    def test_get_tags(self):
        """
        Test case for get_tags

        List all used tags
        """
        pass

    def test_list_configurations(self):
        """
        Test case for list_configurations

        List all collector configurations
        """
        pass

    def test_update_configuration_name(self):
        """
        Test case for update_configuration_name

        Updates a collector configuration name
        """
        pass

    def test_update_input(self):
        """
        Test case for update_input

        Update a configuration input
        """
        pass

    def test_update_output(self):
        """
        Test case for update_output

        Update a configuration output
        """
        pass

    def test_update_snippet(self):
        """
        Test case for update_snippet

        Update a configuration snippet
        """
        pass


if __name__ == '__main__':
    unittest.main()
